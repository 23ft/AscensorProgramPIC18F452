

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Sun Nov 14 07:36:43 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	text1,global,reloc=2,class=CODE,delta=1
    15                           	psect	text2,global,reloc=2,class=CODE,delta=1
    16                           	psect	text3,global,reloc=2,class=CODE,delta=1
    17                           	psect	text4,global,reloc=2,class=CODE,delta=1
    18                           	psect	text5,global,reloc=2,class=CODE,delta=1
    19                           	psect	text6,global,reloc=2,class=CODE,delta=1
    20                           	psect	text7,global,reloc=2,class=CODE,delta=1
    21                           	psect	text8,global,reloc=2,class=CODE,delta=1
    22                           	psect	text9,global,reloc=2,class=CODE,delta=1
    23                           	psect	text10,global,reloc=2,class=CODE,delta=1
    24                           	psect	text11,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    26                           	psect	text13,global,reloc=2,class=CODE,delta=1
    27                           	psect	text14,global,reloc=2,class=CODE,delta=1
    28                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    29                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    30                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    31                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    32                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    33  0000                     
    34                           ; Version 2.20
    35                           ; Generated 12/02/2020 GMT
    36                           ; 
    37                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    38                           ; All rights reserved.
    39                           ; 
    40                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    41                           ; 
    42                           ; Redistribution and use in source and binary forms, with or without modification, are
    43                           ; permitted provided that the following conditions are met:
    44                           ; 
    45                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    46                           ;        conditions and the following disclaimer.
    47                           ; 
    48                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    49                           ;        of conditions and the following disclaimer in the documentation and/or other
    50                           ;        materials provided with the distribution.
    51                           ; 
    52                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    53                           ;        software without specific prior written permission.
    54                           ; 
    55                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    56                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    57                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    58                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    59                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    60                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    61                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    62                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    63                           ; 
    64                           ; 
    65                           ; Code-generator required, PIC18F452 Definitions
    66                           ; 
    67                           ; SFR Addresses
    68  0000                     _PORTB	set	3969
    69  0000                     _PORTBbits	set	3969
    70  0000                     _PORTD	set	3971
    71  0000                     _LATDbits	set	3980
    72  0000                     _PORTAbits	set	3968
    73  0000                     _PORTDbits	set	3971
    74  0000                     _LATCbits	set	3979
    75  0000                     _INTCONbits	set	4082
    76  0000                     _RCONbits	set	4048
    77  0000                     _TRISC	set	3988
    78  0000                     _TRISA	set	3986
    79  0000                     _TRISD	set	3989
    80  0000                     _TRISB	set	3987
    81  0000                     _ADCON1	set	4033
    82                           
    83                           ; #config settings
    84                           
    85                           	psect	cinit
    86  00162E                     __pcinit:
    87                           	callstack 0
    88  00162E                     start_initialization:
    89                           	callstack 0
    90  00162E                     __initialization:
    91                           	callstack 0
    92                           
    93                           ; Clear objects allocated to BANK5 (200 bytes)
    94  00162E  EE05  F000         	lfsr	0,__pbssBANK5
    95  001632  0EC8               	movlw	200
    96  001634                     clear_0:
    97  001634  6AEE               	clrf	postinc0,c
    98  001636  06E8               	decf	wreg,f,c
    99  001638  E1FD               	bnz	clear_0
   100                           
   101                           ; Clear objects allocated to BANK4 (200 bytes)
   102  00163A  EE04  F000         	lfsr	0,__pbssBANK4
   103  00163E  0EC8               	movlw	200
   104  001640                     clear_1:
   105  001640  6AEE               	clrf	postinc0,c
   106  001642  06E8               	decf	wreg,f,c
   107  001644  E1FD               	bnz	clear_1
   108                           
   109                           ; Clear objects allocated to BANK3 (200 bytes)
   110  001646  EE03  F000         	lfsr	0,__pbssBANK3
   111  00164A  0EC8               	movlw	200
   112  00164C                     clear_2:
   113  00164C  6AEE               	clrf	postinc0,c
   114  00164E  06E8               	decf	wreg,f,c
   115  001650  E1FD               	bnz	clear_2
   116                           
   117                           ; Clear objects allocated to COMRAM (22 bytes)
   118  001652  EE00  F04B         	lfsr	0,__pbssCOMRAM
   119  001656  0E16               	movlw	22
   120  001658                     clear_3:
   121  001658  6AEE               	clrf	postinc0,c
   122  00165A  06E8               	decf	wreg,f,c
   123  00165C  E1FD               	bnz	clear_3
   124  00165E                     end_of_initialization:
   125                           	callstack 0
   126  00165E                     __end_of__initialization:
   127                           	callstack 0
   128  00165E  9061               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   129  001660  9261               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   130  001662  0E00               	movlw	low (__Lmediumconst shr (0+16))
   131  001664  6EF8               	movwf	tblptru,c
   132  001666  0100               	movlb	0
   133  001668  EF09  F00A         	goto	_main	;jump to C main() function
   134                           
   135                           	psect	bssCOMRAM
   136  00004B                     __pbssCOMRAM:
   137                           	callstack 0
   138  00004B                     _from_down_change:
   139                           	callstack 0
   140  00004B                     	ds	2
   141  00004D                     _from_up_change:
   142                           	callstack 0
   143  00004D                     	ds	2
   144  00004F                     _modeDown_F:
   145                           	callstack 0
   146  00004F                     	ds	2
   147  000051                     _modeUp_F:
   148                           	callstack 0
   149  000051                     	ds	2
   150  000053                     _prevFL:
   151                           	callstack 0
   152  000053                     	ds	2
   153  000055                     _nowFL:
   154                           	callstack 0
   155  000055                     	ds	2
   156  000057                     _call_init:
   157                           	callstack 0
   158  000057                     	ds	2
   159  000059                     _callsD:
   160                           	callstack 0
   161  000059                     	ds	2
   162  00005B                     _callsU:
   163                           	callstack 0
   164  00005B                     	ds	2
   165  00005D                     _tasksUp:
   166                           	callstack 0
   167  00005D                     	ds	2
   168  00005F                     _tasksDown:
   169                           	callstack 0
   170  00005F                     	ds	2
   171                           
   172                           	psect	bssBANK3
   173  000300                     __pbssBANK3:
   174                           	callstack 0
   175  000300                     _queueUp:
   176                           	callstack 0
   177  000300                     	ds	200
   178                           
   179                           	psect	bssBANK4
   180  000400                     __pbssBANK4:
   181                           	callstack 0
   182  000400                     _queueDown:
   183                           	callstack 0
   184  000400                     	ds	200
   185                           
   186                           	psect	bssBANK5
   187  000500                     __pbssBANK5:
   188                           	callstack 0
   189  000500                     _callsInUp:
   190                           	callstack 0
   191  000500                     	ds	200
   192                           
   193                           	psect	cstackBANK2
   194  000200                     __pcstackBANK2:
   195                           	callstack 0
   196  000200                     sort@result:
   197                           	callstack 0
   198                           
   199                           ; 200 bytes @ 0x0
   200  000200                     	ds	200
   201  0002C8                     sort@pos:
   202                           	callstack 0
   203                           
   204                           ; 2 bytes @ 0xC8
   205  0002C8                     	ds	2
   206  0002CA                     sort@nums:
   207                           	callstack 0
   208                           
   209                           ; 2 bytes @ 0xCA
   210  0002CA                     	ds	2
   211  0002CC                     sort@sizesMod:
   212                           	callstack 0
   213                           
   214                           ; 2 bytes @ 0xCC
   215  0002CC                     	ds	2
   216  0002CE                     sort@k:
   217                           	callstack 0
   218                           
   219                           ; 2 bytes @ 0xCE
   220  0002CE                     	ds	2
   221  0002D0                     sort@j:
   222                           	callstack 0
   223                           
   224                           ; 2 bytes @ 0xD0
   225  0002D0                     	ds	2
   226  0002D2                     sort@temp:
   227                           	callstack 0
   228                           
   229                           ; 2 bytes @ 0xD2
   230  0002D2                     	ds	2
   231  0002D4                     sort@h:
   232                           	callstack 0
   233                           
   234                           ; 2 bytes @ 0xD4
   235  0002D4                     	ds	2
   236                           
   237                           	psect	cstackBANK1
   238  000100                     __pcstackBANK1:
   239                           	callstack 0
   240  000100                     i2sort@result:
   241                           	callstack 0
   242                           
   243                           ; 200 bytes @ 0x0
   244  000100                     	ds	200
   245  0001C8                     i2sort@pos:
   246                           	callstack 0
   247                           
   248                           ; 2 bytes @ 0xC8
   249  0001C8                     	ds	2
   250  0001CA                     i2sort@nums:
   251                           	callstack 0
   252                           
   253                           ; 2 bytes @ 0xCA
   254  0001CA                     	ds	2
   255  0001CC                     i2sort@sizesMod:
   256                           	callstack 0
   257                           
   258                           ; 2 bytes @ 0xCC
   259  0001CC                     	ds	2
   260  0001CE                     i2sort@k:
   261                           	callstack 0
   262                           
   263                           ; 2 bytes @ 0xCE
   264  0001CE                     	ds	2
   265  0001D0                     i2sort@j:
   266                           	callstack 0
   267                           
   268                           ; 2 bytes @ 0xD0
   269  0001D0                     	ds	2
   270  0001D2                     i2sort@temp:
   271                           	callstack 0
   272                           
   273                           ; 2 bytes @ 0xD2
   274  0001D2                     	ds	2
   275  0001D4                     i2sort@h:
   276                           	callstack 0
   277                           
   278                           ; 2 bytes @ 0xD4
   279  0001D4                     	ds	2
   280                           
   281                           	psect	cstackCOMRAM
   282  000001                     __pcstackCOMRAM:
   283                           	callstack 0
   284  000001                     ?i2_noRepeat:
   285                           	callstack 0
   286  000001                     i2noRepeat@po:
   287                           	callstack 0
   288  000001                     i2sort@p:
   289                           	callstack 0
   290                           
   291                           ; 2 bytes @ 0x0
   292  000001                     	ds	2
   293  000003                     i2noRepeat@sixes:
   294                           	callstack 0
   295  000003                     i2sort@sizes:
   296                           	callstack 0
   297                           
   298                           ; 2 bytes @ 0x2
   299  000003                     	ds	2
   300  000005                     ??i2_noRepeat:
   301  000005                     ??i2_sort:
   302                           
   303                           ; 1 bytes @ 0x4
   304  000005                     	ds	4
   305  000009                     i2noRepeat@t:
   306                           	callstack 0
   307                           
   308                           ; 2 bytes @ 0x8
   309  000009                     	ds	2
   310  00000B                     i2noRepeat@shift:
   311                           	callstack 0
   312                           
   313                           ; 2 bytes @ 0xA
   314  00000B                     	ds	2
   315  00000D                     i2noRepeat@temp:
   316                           	callstack 0
   317                           
   318                           ; 2 bytes @ 0xC
   319  00000D                     	ds	2
   320  00000F                     i2noRepeat@size:
   321                           	callstack 0
   322                           
   323                           ; 2 bytes @ 0xE
   324  00000F                     	ds	2
   325  000011                     i2noRepeat@comp:
   326                           	callstack 0
   327                           
   328                           ; 2 bytes @ 0x10
   329  000011                     	ds	2
   330  000013                     ??_ISR:
   331                           
   332                           ; 1 bytes @ 0x12
   333  000013                     	ds	6
   334  000019                     ISR@si:
   335                           	callstack 0
   336                           
   337                           ; 2 bytes @ 0x18
   338  000019                     	ds	2
   339  00001B                     ISR@si_533:
   340                           	callstack 0
   341                           
   342                           ; 2 bytes @ 0x1A
   343  00001B                     	ds	2
   344  00001D                     ISR@si_534:
   345                           	callstack 0
   346                           
   347                           ; 2 bytes @ 0x1C
   348  00001D                     	ds	2
   349  00001F                     ?_noRepeat:
   350                           	callstack 0
   351  00001F                     ?_rutine_down:
   352                           	callstack 0
   353  00001F                     noRepeat@po:
   354                           	callstack 0
   355  00001F                     sort@p:
   356                           	callstack 0
   357                           
   358                           ; 2 bytes @ 0x1E
   359  00001F                     	ds	2
   360  000021                     noRepeat@sixes:
   361                           	callstack 0
   362  000021                     sort@sizes:
   363                           	callstack 0
   364                           
   365                           ; 2 bytes @ 0x20
   366  000021                     	ds	2
   367  000023                     ??_noRepeat:
   368  000023                     ??_sort:
   369                           
   370                           ; 1 bytes @ 0x22
   371  000023                     	ds	4
   372  000027                     noRepeat@t:
   373                           	callstack 0
   374                           
   375                           ; 2 bytes @ 0x26
   376  000027                     	ds	2
   377  000029                     noRepeat@shift:
   378                           	callstack 0
   379                           
   380                           ; 2 bytes @ 0x28
   381  000029                     	ds	2
   382  00002B                     noRepeat@temp:
   383                           	callstack 0
   384                           
   385                           ; 2 bytes @ 0x2A
   386  00002B                     	ds	2
   387  00002D                     noRepeat@size:
   388                           	callstack 0
   389                           
   390                           ; 2 bytes @ 0x2C
   391  00002D                     	ds	2
   392  00002F                     noRepeat@comp:
   393                           	callstack 0
   394                           
   395                           ; 2 bytes @ 0x2E
   396  00002F                     	ds	2
   397  000031                     dataPanelUp@new_size:
   398                           	callstack 0
   399                           
   400                           ; 2 bytes @ 0x30
   401  000031                     	ds	2
   402  000033                     ??_controlCalls:
   403                           
   404                           ; 1 bytes @ 0x32
   405  000033                     	ds	2
   406  000035                     controlCalls@i:
   407                           	callstack 0
   408                           
   409                           ; 2 bytes @ 0x34
   410  000035                     	ds	2
   411  000037                     controlCalls@i_495:
   412                           	callstack 0
   413                           
   414                           ; 2 bytes @ 0x36
   415  000037                     	ds	2
   416  000039                     controlCalls@i_496:
   417                           	callstack 0
   418                           
   419                           ; 2 bytes @ 0x38
   420  000039                     	ds	2
   421  00003B                     controlCalls@i_497:
   422                           	callstack 0
   423                           
   424                           ; 2 bytes @ 0x3A
   425  00003B                     	ds	2
   426  00003D                     ?_rutine_up:
   427                           	callstack 0
   428                           
   429                           ; 2 bytes @ 0x3C
   430  00003D                     	ds	2
   431  00003F                     ??_rutine_up:
   432                           
   433                           ; 1 bytes @ 0x3E
   434  00003F                     	ds	2
   435  000041                     rutine_up@i:
   436                           	callstack 0
   437                           
   438                           ; 2 bytes @ 0x40
   439  000041                     	ds	2
   440  000043                     rutine_up@re:
   441                           	callstack 0
   442                           
   443                           ; 2 bytes @ 0x42
   444  000043                     	ds	2
   445  000045                     selectionMode@mode_s:
   446                           	callstack 0
   447                           
   448                           ; 2 bytes @ 0x44
   449  000045                     	ds	2
   450  000047                     modeControl@select_mode:
   451                           	callstack 0
   452                           
   453                           ; 2 bytes @ 0x46
   454  000047                     	ds	2
   455  000049                     ??_modeControl:
   456                           
   457                           ; 1 bytes @ 0x48
   458  000049                     	ds	2
   459  00004B                     
   460                           ; 1 bytes @ 0x4A
   461 ;;
   462 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   463 ;;
   464 ;; *************** function _main *****************
   465 ;; Defined at:
   466 ;;		line 667 in file "main.c"
   467 ;; Parameters:    Size  Location     Type
   468 ;;		None
   469 ;; Auto vars:     Size  Location     Type
   470 ;;		None
   471 ;; Return value:  Size  Location     Type
   472 ;;                  1    wreg      void 
   473 ;; Registers used:
   474 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   475 ;; Tracked objects:
   476 ;;		On entry : 0/0
   477 ;;		On exit  : 0/0
   478 ;;		Unchanged: 0/0
   479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   480 ;;      Params:         0       0       0       0       0       0       0
   481 ;;      Locals:         0       0       0       0       0       0       0
   482 ;;      Temps:          0       0       0       0       0       0       0
   483 ;;      Totals:         0       0       0       0       0       0       0
   484 ;;Total ram usage:        0 bytes
   485 ;; Hardware stack levels required when called: 8
   486 ;; This function calls:
   487 ;;		_boot
   488 ;;		_bootAscensor
   489 ;;		_interruptsInit
   490 ;;		_modeControl
   491 ;; This function is called by:
   492 ;;		Startup code after reset
   493 ;; This function uses a non-reentrant model
   494 ;;
   495                           
   496                           	psect	text0
   497  001412                     __ptext0:
   498                           	callstack 0
   499  001412                     _main:
   500                           	callstack 23
   501  001412  FFFF               	dw	65535	; assembler added errata NOP
   502                           
   503                           ;main.c: 668:     boot();
   504  001414  ECBB  F00A         	call	_boot	;wreg free
   505  001418                     
   506                           ;main.c: 669:     interruptsInit();
   507  001418  EC3D  F00B         	call	_interruptsInit	;wreg free
   508  00141C                     
   509                           ;main.c: 670:     bootAscensor();
   510  00141C  ECF2  F00A         	call	_bootAscensor	;wreg free
   511  001420                     l2132:
   512  001420  FFFF               	dw	65535	; assembler added errata NOP
   513                           
   514                           ;main.c: 674:         if (from_up_change){
   515  001422  504D               	movf	_from_up_change^0,w,c
   516  001424  104E               	iorwf	(_from_up_change+1)^0,w,c
   517  001426  B4D8               	btfsc	status,2,c
   518  001428  EF18  F00A         	goto	u1411
   519  00142C  EF1B  F00A         	goto	u1410
   520  001430                     u1411:
   521  001430  FFFF               	dw	65535	; assembler added errata NOP
   522  001432  EF28  F00A         	goto	l221
   523  001436                     u1410:
   524  001436  FFFF               	dw	65535	; assembler added errata NOP
   525  001438                     
   526                           ;main.c: 675:             from_up_change = 0;
   527  001438  0E00               	movlw	0
   528  00143A  6E4E               	movwf	(_from_up_change+1)^0,c
   529  00143C  0E00               	movlw	0
   530  00143E  6E4D               	movwf	_from_up_change^0,c
   531  001440                     
   532                           ;main.c: 676:             modeControl(0);
   533  001440  0E00               	movlw	0
   534  001442  6E48               	movwf	(modeControl@select_mode+1)^0,c
   535  001444  0E00               	movlw	0
   536  001446  6E47               	movwf	modeControl@select_mode^0,c
   537  001448  EC16  F003         	call	_modeControl	;wreg free
   538                           
   539                           ;main.c: 677:             continue;
   540  00144C  EF10  F00A         	goto	l2132
   541  001450                     l221:
   542  001450  FFFF               	dw	65535	; assembler added errata NOP
   543                           
   544                           ;main.c: 680:         if (PORTBbits.RB0) {
   545  001452  A081               	btfss	129,0,c	;volatile
   546  001454  EF2E  F00A         	goto	u1421
   547  001458  EF31  F00A         	goto	u1420
   548  00145C                     u1421:
   549  00145C  FFFF               	dw	65535	; assembler added errata NOP
   550  00145E  EF43  F00A         	goto	l223
   551  001462                     u1420:
   552  001462  FFFF               	dw	65535	; assembler added errata NOP
   553  001464                     
   554                           ;main.c: 681:             nowFL = 1;
   555  001464  0E00               	movlw	0
   556  001466  6E56               	movwf	(_nowFL+1)^0,c
   557  001468  0E01               	movlw	1
   558  00146A  6E55               	movwf	_nowFL^0,c
   559                           
   560                           ;main.c: 682:             call_init = 1;
   561  00146C  0E00               	movlw	0
   562  00146E  6E58               	movwf	(_call_init+1)^0,c
   563  001470  0E01               	movlw	1
   564  001472  6E57               	movwf	_call_init^0,c
   565  001474                     l2140:
   566  001474  FFFF               	dw	65535	; assembler added errata NOP
   567                           
   568                           ;main.c: 683:             modeControl(1);
   569  001476  0E00               	movlw	0
   570  001478  6E48               	movwf	(modeControl@select_mode+1)^0,c
   571  00147A  0E01               	movlw	1
   572  00147C  6E47               	movwf	modeControl@select_mode^0,c
   573  00147E  EC16  F003         	call	_modeControl	;wreg free
   574                           
   575                           ;main.c: 684:             continue;
   576  001482  EF10  F00A         	goto	l2132
   577  001486                     l223:
   578  001486  FFFF               	dw	65535	; assembler added errata NOP
   579  001488  A281               	btfss	129,1,c	;volatile
   580  00148A  EF49  F00A         	goto	u1431
   581  00148E  EF4C  F00A         	goto	u1430
   582  001492                     u1431:
   583  001492  FFFF               	dw	65535	; assembler added errata NOP
   584  001494  EF57  F00A         	goto	l225
   585  001498                     u1430:
   586  001498  FFFF               	dw	65535	; assembler added errata NOP
   587  00149A                     
   588                           ;main.c: 687:             nowFL = 2;
   589  00149A  0E00               	movlw	0
   590  00149C  6E56               	movwf	(_nowFL+1)^0,c
   591  00149E  0E02               	movlw	2
   592  0014A0  6E55               	movwf	_nowFL^0,c
   593                           
   594                           ;main.c: 688:             call_init = 2;
   595  0014A2  0E00               	movlw	0
   596  0014A4  6E58               	movwf	(_call_init+1)^0,c
   597  0014A6  0E02               	movlw	2
   598  0014A8  6E57               	movwf	_call_init^0,c
   599  0014AA  EF3A  F00A         	goto	l2140
   600  0014AE                     l225:
   601  0014AE  FFFF               	dw	65535	; assembler added errata NOP
   602  0014B0  A881               	btfss	129,4,c	;volatile
   603  0014B2  EF5D  F00A         	goto	u1441
   604  0014B6  EF60  F00A         	goto	u1440
   605  0014BA                     u1441:
   606  0014BA  FFFF               	dw	65535	; assembler added errata NOP
   607  0014BC  EF6B  F00A         	goto	l224
   608  0014C0                     u1440:
   609  0014C0  FFFF               	dw	65535	; assembler added errata NOP
   610  0014C2                     
   611                           ;main.c: 693:             nowFL = 3;
   612  0014C2  0E00               	movlw	0
   613  0014C4  6E56               	movwf	(_nowFL+1)^0,c
   614  0014C6  0E03               	movlw	3
   615  0014C8  6E55               	movwf	_nowFL^0,c
   616                           
   617                           ;main.c: 694:             call_init = 3;
   618  0014CA  0E00               	movlw	0
   619  0014CC  6E58               	movwf	(_call_init+1)^0,c
   620  0014CE  0E03               	movlw	3
   621  0014D0  6E57               	movwf	_call_init^0,c
   622  0014D2  EF3A  F00A         	goto	l2140
   623  0014D6                     l224:
   624  0014D6  FFFF               	dw	65535	; assembler added errata NOP
   625                           
   626                           ;main.c: 699:         if(PORTBbits.RB2){
   627  0014D8  A481               	btfss	129,2,c	;volatile
   628  0014DA  EF71  F00A         	goto	u1451
   629  0014DE  EF74  F00A         	goto	u1450
   630  0014E2                     u1451:
   631  0014E2  FFFF               	dw	65535	; assembler added errata NOP
   632  0014E4  EF10  F00A         	goto	l2132
   633  0014E8                     u1450:
   634  0014E8  FFFF               	dw	65535	; assembler added errata NOP
   635  0014EA                     
   636                           ;main.c: 700:             nowFL = 2;
   637  0014EA  0E00               	movlw	0
   638  0014EC  6E56               	movwf	(_nowFL+1)^0,c
   639  0014EE  0E02               	movlw	2
   640  0014F0  6E55               	movwf	_nowFL^0,c
   641                           
   642                           ;main.c: 701:             call_init = 1;
   643  0014F2  0E00               	movlw	0
   644  0014F4  6E58               	movwf	(_call_init+1)^0,c
   645  0014F6  0E01               	movlw	1
   646  0014F8  6E57               	movwf	_call_init^0,c
   647  0014FA  EF3A  F00A         	goto	l2140
   648  0014FE  EF79  F001         	goto	start
   649  001502                     __end_of_main:
   650                           	callstack 0
   651                           
   652 ;; *************** function _modeControl *****************
   653 ;; Defined at:
   654 ;;		line 490 in file "main.c"
   655 ;; Parameters:    Size  Location     Type
   656 ;;  select_mode     2   70[COMRAM] unsigned int 
   657 ;; Auto vars:     Size  Location     Type
   658 ;;		None
   659 ;; Return value:  Size  Location     Type
   660 ;;                  1    wreg      void 
   661 ;; Registers used:
   662 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   663 ;; Tracked objects:
   664 ;;		On entry : 0/0
   665 ;;		On exit  : 0/0
   666 ;;		Unchanged: 0/0
   667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   668 ;;      Params:         2       0       0       0       0       0       0
   669 ;;      Locals:         0       0       0       0       0       0       0
   670 ;;      Temps:          2       0       0       0       0       0       0
   671 ;;      Totals:         4       0       0       0       0       0       0
   672 ;;Total ram usage:        4 bytes
   673 ;; Hardware stack levels used: 1
   674 ;; Hardware stack levels required when called: 7
   675 ;; This function calls:
   676 ;;		_dataPanelUp
   677 ;;		_selectionMode
   678 ;; This function is called by:
   679 ;;		_main
   680 ;; This function uses a non-reentrant model
   681 ;;
   682                           
   683                           	psect	text1
   684  00062C                     __ptext1:
   685                           	callstack 0
   686  00062C                     _modeControl:
   687                           	callstack 0
   688  00062C  FFFF               	dw	65535	; assembler added errata NOP
   689  00062E                     
   690                           ;main.c: 491:     if (select_mode == 1){
   691  00062E  0447               	decf	modeControl@select_mode^0,w,c
   692  000630  1048               	iorwf	(modeControl@select_mode+1)^0,w,c
   693  000632  A4D8               	btfss	status,2,c
   694  000634  EF1E  F003         	goto	u1151
   695  000638  EF21  F003         	goto	u1150
   696  00063C                     u1151:
   697  00063C  FFFF               	dw	65535	; assembler added errata NOP
   698  00063E  EF38  F003         	goto	l1932
   699  000642                     u1150:
   700  000642  FFFF               	dw	65535	; assembler added errata NOP
   701  000644                     
   702                           ;main.c: 492:         modeDown_F = 0;
   703  000644  0E00               	movlw	0
   704  000646  6E50               	movwf	(_modeDown_F+1)^0,c
   705  000648  0E00               	movlw	0
   706  00064A  6E4F               	movwf	_modeDown_F^0,c
   707                           
   708                           ;main.c: 493:         modeUp_F = 1;
   709  00064C  0E00               	movlw	0
   710  00064E  6E52               	movwf	(_modeUp_F+1)^0,c
   711  000650  0E01               	movlw	1
   712  000652  6E51               	movwf	_modeUp_F^0,c
   713                           
   714                           ;main.c: 496:         callsD = 0;
   715  000654  0E00               	movlw	0
   716  000656  6E5A               	movwf	(_callsD+1)^0,c
   717  000658  0E00               	movlw	0
   718  00065A  6E59               	movwf	_callsD^0,c
   719                           
   720                           ;main.c: 497:         callsU = 0;
   721  00065C  0E00               	movlw	0
   722  00065E  6E5C               	movwf	(_callsU+1)^0,c
   723  000660  0E00               	movlw	0
   724  000662  6E5B               	movwf	_callsU^0,c
   725                           
   726                           ;main.c: 501:         tasksDown = 0;
   727  000664  0E00               	movlw	0
   728  000666  6E60               	movwf	(_tasksDown+1)^0,c
   729  000668  0E00               	movlw	0
   730  00066A  6E5F               	movwf	_tasksDown^0,c
   731                           
   732                           ;main.c: 502:     }
   733  00066C  EF69  F004         	goto	l2048
   734  000670                     l1932:
   735  000670  FFFF               	dw	65535	; assembler added errata NOP
   736  000672  5047               	movf	modeControl@select_mode^0,w,c
   737  000674  1048               	iorwf	(modeControl@select_mode+1)^0,w,c
   738  000676  A4D8               	btfss	status,2,c
   739  000678  EF40  F003         	goto	u1161
   740  00067C  EF43  F003         	goto	u1160
   741  000680                     u1161:
   742  000680  FFFF               	dw	65535	; assembler added errata NOP
   743  000682  EF69  F004         	goto	l2048
   744  000686                     u1160:
   745  000686  FFFF               	dw	65535	; assembler added errata NOP
   746  000688                     
   747                           ;main.c: 504:         modeUp_F = 0;
   748  000688  0E00               	movlw	0
   749  00068A  6E52               	movwf	(_modeUp_F+1)^0,c
   750  00068C  0E00               	movlw	0
   751  00068E  6E51               	movwf	_modeUp_F^0,c
   752                           
   753                           ;main.c: 505:         modeDown_F = 1;
   754  000690  0E00               	movlw	0
   755  000692  6E50               	movwf	(_modeDown_F+1)^0,c
   756  000694  0E01               	movlw	1
   757  000696  6E4F               	movwf	_modeDown_F^0,c
   758                           
   759                           ;main.c: 507:         callsD = 0;
   760  000698  0E00               	movlw	0
   761  00069A  6E5A               	movwf	(_callsD+1)^0,c
   762  00069C  0E00               	movlw	0
   763  00069E  6E59               	movwf	_callsD^0,c
   764                           
   765                           ;main.c: 508:         callsU = 0;
   766  0006A0  0E00               	movlw	0
   767  0006A2  6E5C               	movwf	(_callsU+1)^0,c
   768  0006A4  0E00               	movlw	0
   769  0006A6  6E5B               	movwf	_callsU^0,c
   770                           
   771                           ;main.c: 511:         tasksUp = 0;
   772  0006A8  0E00               	movlw	0
   773  0006AA  6E5E               	movwf	(_tasksUp+1)^0,c
   774  0006AC  0E00               	movlw	0
   775  0006AE  6E5D               	movwf	_tasksUp^0,c
   776  0006B0  EF69  F004         	goto	l2048
   777  0006B4                     l1936:
   778  0006B4  FFFF               	dw	65535	; assembler added errata NOP
   779                           
   780                           ;main.c: 516:             if (prevFL == 1) {
   781  0006B6  0453               	decf	_prevFL^0,w,c
   782  0006B8  1054               	iorwf	(_prevFL+1)^0,w,c
   783  0006BA  A4D8               	btfss	status,2,c
   784  0006BC  EF62  F003         	goto	u1171
   785  0006C0  EF65  F003         	goto	u1170
   786  0006C4                     u1171:
   787  0006C4  FFFF               	dw	65535	; assembler added errata NOP
   788  0006C6  EF7F  F003         	goto	l185
   789  0006CA                     u1170:
   790  0006CA  FFFF               	dw	65535	; assembler added errata NOP
   791  0006CC                     
   792                           ;main.c: 518:                 LATDbits.LD0 = 1;
   793  0006CC  808C               	bsf	140,0,c	;volatile
   794  0006CE                     
   795                           ;main.c: 519:                 dataPanelUp();
   796  0006CE  ECBE  F006         	call	_dataPanelUp	;wreg free
   797  0006D2                     
   798                           ;main.c: 520:                 LATDbits.LD0 = 0;
   799  0006D2  908C               	bcf	140,0,c	;volatile
   800  0006D4                     l1944:
   801  0006D4  FFFF               	dw	65535	; assembler added errata NOP
   802                           
   803                           ;main.c: 521:                 _delay((unsigned long)((300)*(20000000/4000.0)));
   804  0006D6  0E06               	movlw	6
   805  0006D8  6E4A               	movwf	(??_modeControl+1)^0,c
   806  0006DA  0EB6               	movlw	182
   807  0006DC  6E49               	movwf	??_modeControl^0,c
   808  0006DE  0EF9               	movlw	249
   809  0006E0                     u1557:
   810  0006E0  FFFF               	dw	65535	; errata NOP
   811  0006E2  2EE8               	decfsz	wreg,f,c
   812  0006E4  D7FD               	bra	u1557
   813  0006E6  2E49               	decfsz	??_modeControl^0,f,c
   814  0006E8  D7FB               	bra	u1557
   815  0006EA  2E4A               	decfsz	(??_modeControl+1)^0,f,c
   816  0006EC  D7F9               	bra	u1557
   817  0006EE                     
   818                           ;main.c: 523:                 selectionMode(select_mode);
   819  0006EE  C047  F045         	movff	modeControl@select_mode,selectionMode@mode_s
   820  0006F2  C048  F046         	movff	modeControl@select_mode+1,selectionMode@mode_s+1
   821  0006F6  EC81  F00A         	call	_selectionMode	;wreg free
   822                           
   823                           ;main.c: 525:             } else {
   824  0006FA  EF89  F004         	goto	l215
   825  0006FE                     l185:
   826  0006FE  FFFF               	dw	65535	; assembler added errata NOP
   827                           
   828                           ;main.c: 527:                     LATCbits.LC0 = 0;
   829  000700  908B               	bcf	139,0,c	;volatile
   830                           
   831                           ;main.c: 528:                 } while (!PORTDbits.RD4);
   832  000702  A883               	btfss	131,4,c	;volatile
   833  000704  EF86  F003         	goto	u1181
   834  000708  EF89  F003         	goto	u1180
   835  00070C                     u1181:
   836  00070C  FFFF               	dw	65535	; assembler added errata NOP
   837  00070E  EF7F  F003         	goto	l185
   838  000712                     u1180:
   839  000712  FFFF               	dw	65535	; assembler added errata NOP
   840  000714                     
   841                           ;main.c: 529:                 LATCbits.LC0 = 1;
   842  000714  808B               	bsf	139,0,c	;volatile
   843                           
   844                           ;main.c: 531:                 LATDbits.LD0 = 1;
   845  000716  808C               	bsf	140,0,c	;volatile
   846  000718                     
   847                           ;main.c: 532:                 dataPanelUp();
   848  000718  ECBE  F006         	call	_dataPanelUp	;wreg free
   849  00071C                     
   850                           ;main.c: 533:                 LATDbits.LD0 = 0;
   851  00071C  908C               	bcf	140,0,c	;volatile
   852  00071E  EF6A  F003         	goto	l1944
   853  000722                     l1956:
   854  000722  FFFF               	dw	65535	; assembler added errata NOP
   855                           
   856                           ;main.c: 541:             if (prevFL == 2) {
   857  000724  0E02               	movlw	2
   858  000726  1853               	xorwf	_prevFL^0,w,c
   859  000728  1054               	iorwf	(_prevFL+1)^0,w,c
   860  00072A  A4D8               	btfss	status,2,c
   861  00072C  EF9A  F003         	goto	u1191
   862  000730  EF9D  F003         	goto	u1190
   863  000734                     u1191:
   864  000734  FFFF               	dw	65535	; assembler added errata NOP
   865  000736  EFA4  F003         	goto	l1968
   866  00073A                     u1190:
   867  00073A  FFFF               	dw	65535	; assembler added errata NOP
   868  00073C                     
   869                           ;main.c: 543:                 LATDbits.LD1 = 1;
   870  00073C  828C               	bsf	140,1,c	;volatile
   871  00073E                     
   872                           ;main.c: 544:                 dataPanelUp();
   873  00073E  ECBE  F006         	call	_dataPanelUp	;wreg free
   874  000742                     
   875                           ;main.c: 545:                 LATDbits.LD1 = 0;
   876  000742  928C               	bcf	140,1,c	;volatile
   877  000744  EF6A  F003         	goto	l1944
   878  000748                     l1968:
   879  000748  FFFF               	dw	65535	; assembler added errata NOP
   880                           
   881                           ;main.c: 553:                 if (prevFL < 2){
   882  00074A  BE54               	btfsc	(_prevFL+1)^0,7,c
   883  00074C  EFB4  F003         	goto	u1200
   884  000750  5054               	movf	(_prevFL+1)^0,w,c
   885  000752  E107               	bnz	u1201
   886  000754  0E02               	movlw	2
   887  000756  5C53               	subwf	_prevFL^0,w,c
   888  000758  B0D8               	btfsc	status,0,c
   889  00075A  EFB1  F003         	goto	u1201
   890  00075E  EFB4  F003         	goto	u1200
   891  000762                     u1201:
   892  000762  FFFF               	dw	65535	; assembler added errata NOP
   893  000764  EFC7  F003         	goto	l195
   894  000768                     u1200:
   895  000768  FFFF               	dw	65535	; assembler added errata NOP
   896  00076A                     l192:
   897  00076A  FFFF               	dw	65535	; assembler added errata NOP
   898                           
   899                           ;main.c: 555:                         LATCbits.LC1 = 0;
   900  00076C  928B               	bcf	139,1,c	;volatile
   901                           
   902                           ;main.c: 557:                     }while(!PORTDbits.RD5);
   903  00076E  AA83               	btfss	131,5,c	;volatile
   904  000770  EFBC  F003         	goto	u1211
   905  000774  EFBF  F003         	goto	u1210
   906  000778                     u1211:
   907  000778  FFFF               	dw	65535	; assembler added errata NOP
   908  00077A  EFB5  F003         	goto	l192
   909  00077E                     u1210:
   910  00077E  FFFF               	dw	65535	; assembler added errata NOP
   911  000780                     
   912                           ;main.c: 558:                     LATCbits.LC1 = 1;
   913  000780  828B               	bsf	139,1,c	;volatile
   914                           
   915                           ;main.c: 560:                     LATDbits.LD1 = 1;
   916  000782  828C               	bsf	140,1,c	;volatile
   917  000784                     
   918                           ;main.c: 561:                     dataPanelUp();
   919  000784  ECBE  F006         	call	_dataPanelUp	;wreg free
   920  000788                     
   921                           ;main.c: 562:                     LATDbits.LD1 = 0;
   922  000788  928C               	bcf	140,1,c	;volatile
   923  00078A  EF6A  F003         	goto	l1944
   924  00078E                     l195:
   925  00078E  FFFF               	dw	65535	; assembler added errata NOP
   926                           
   927                           ;main.c: 569:                         LATCbits.LC0 = 0;
   928  000790  908B               	bcf	139,0,c	;volatile
   929                           
   930                           ;main.c: 570:                     }while(!PORTDbits.RD5);
   931  000792  AA83               	btfss	131,5,c	;volatile
   932  000794  EFCE  F003         	goto	u1221
   933  000798  EFD1  F003         	goto	u1220
   934  00079C                     u1221:
   935  00079C  FFFF               	dw	65535	; assembler added errata NOP
   936  00079E  EFC7  F003         	goto	l195
   937  0007A2                     u1220:
   938  0007A2  FFFF               	dw	65535	; assembler added errata NOP
   939  0007A4                     
   940                           ;main.c: 571:                     LATCbits.LC0 = 1;
   941  0007A4  808B               	bsf	139,0,c	;volatile
   942                           
   943                           ;main.c: 573:                     LATDbits.LD1 = 1;
   944  0007A6  828C               	bsf	140,1,c	;volatile
   945  0007A8                     
   946                           ;main.c: 574:                     dataPanelUp();
   947  0007A8  ECBE  F006         	call	_dataPanelUp	;wreg free
   948  0007AC                     
   949                           ;main.c: 575:                     LATDbits.LD1 = 0;
   950  0007AC  928C               	bcf	140,1,c	;volatile
   951  0007AE  EF6A  F003         	goto	l1944
   952  0007B2                     l1986:
   953  0007B2  FFFF               	dw	65535	; assembler added errata NOP
   954                           
   955                           ;main.c: 585:             if (prevFL == 3) {
   956  0007B4  0E03               	movlw	3
   957  0007B6  1853               	xorwf	_prevFL^0,w,c
   958  0007B8  1054               	iorwf	(_prevFL+1)^0,w,c
   959  0007BA  A4D8               	btfss	status,2,c
   960  0007BC  EFE2  F003         	goto	u1231
   961  0007C0  EFE5  F003         	goto	u1230
   962  0007C4                     u1231:
   963  0007C4  FFFF               	dw	65535	; assembler added errata NOP
   964  0007C6  EFEC  F003         	goto	l1998
   965  0007CA                     u1230:
   966  0007CA  FFFF               	dw	65535	; assembler added errata NOP
   967  0007CC                     
   968                           ;main.c: 587:                 LATDbits.LD2 = 1;
   969  0007CC  848C               	bsf	140,2,c	;volatile
   970  0007CE                     
   971                           ;main.c: 588:                 dataPanelUp();
   972  0007CE  ECBE  F006         	call	_dataPanelUp	;wreg free
   973  0007D2                     
   974                           ;main.c: 589:                 LATDbits.LD2 = 0;
   975  0007D2  948C               	bcf	140,2,c	;volatile
   976  0007D4  EF6A  F003         	goto	l1944
   977  0007D8                     l1998:
   978  0007D8  FFFF               	dw	65535	; assembler added errata NOP
   979                           
   980                           ;main.c: 595:                 if (prevFL < 3){
   981  0007DA  BE54               	btfsc	(_prevFL+1)^0,7,c
   982  0007DC  EFFC  F003         	goto	u1240
   983  0007E0  5054               	movf	(_prevFL+1)^0,w,c
   984  0007E2  E107               	bnz	u1241
   985  0007E4  0E03               	movlw	3
   986  0007E6  5C53               	subwf	_prevFL^0,w,c
   987  0007E8  B0D8               	btfsc	status,0,c
   988  0007EA  EFF9  F003         	goto	u1241
   989  0007EE  EFFC  F003         	goto	u1240
   990  0007F2                     u1241:
   991  0007F2  FFFF               	dw	65535	; assembler added errata NOP
   992  0007F4  EF0F  F004         	goto	l204
   993  0007F8                     u1240:
   994  0007F8  FFFF               	dw	65535	; assembler added errata NOP
   995  0007FA                     l201:
   996  0007FA  FFFF               	dw	65535	; assembler added errata NOP
   997                           
   998                           ;main.c: 597:                         LATCbits.LC1 = 0;
   999  0007FC  928B               	bcf	139,1,c	;volatile
  1000                           
  1001                           ;main.c: 598:                     }while(!PORTDbits.RD6);
  1002  0007FE  AC83               	btfss	131,6,c	;volatile
  1003  000800  EF04  F004         	goto	u1251
  1004  000804  EF07  F004         	goto	u1250
  1005  000808                     u1251:
  1006  000808  FFFF               	dw	65535	; assembler added errata NOP
  1007  00080A  EFFD  F003         	goto	l201
  1008  00080E                     u1250:
  1009  00080E  FFFF               	dw	65535	; assembler added errata NOP
  1010  000810                     
  1011                           ;main.c: 599:                     LATCbits.LC1 = 1;
  1012  000810  828B               	bsf	139,1,c	;volatile
  1013                           
  1014                           ;main.c: 601:                     LATDbits.LD2 = 1;
  1015  000812  848C               	bsf	140,2,c	;volatile
  1016  000814                     
  1017                           ;main.c: 602:                     dataPanelUp();
  1018  000814  ECBE  F006         	call	_dataPanelUp	;wreg free
  1019  000818                     
  1020                           ;main.c: 603:                     LATDbits.LD2 = 0;
  1021  000818  948C               	bcf	140,2,c	;volatile
  1022  00081A  EF6A  F003         	goto	l1944
  1023  00081E                     l204:
  1024  00081E  FFFF               	dw	65535	; assembler added errata NOP
  1025                           
  1026                           ;main.c: 610:                         LATCbits.LC0 = 0;
  1027  000820  908B               	bcf	139,0,c	;volatile
  1028                           
  1029                           ;main.c: 611:                     }while(!PORTDbits.RD6);
  1030  000822  AC83               	btfss	131,6,c	;volatile
  1031  000824  EF16  F004         	goto	u1261
  1032  000828  EF19  F004         	goto	u1260
  1033  00082C                     u1261:
  1034  00082C  FFFF               	dw	65535	; assembler added errata NOP
  1035  00082E  EF0F  F004         	goto	l204
  1036  000832                     u1260:
  1037  000832  FFFF               	dw	65535	; assembler added errata NOP
  1038  000834                     
  1039                           ;main.c: 612:                     LATCbits.LC0 = 1;
  1040  000834  808B               	bsf	139,0,c	;volatile
  1041                           
  1042                           ;main.c: 614:                     LATDbits.LD2 = 1;
  1043  000836  848C               	bsf	140,2,c	;volatile
  1044  000838                     
  1045                           ;main.c: 615:                     dataPanelUp();
  1046  000838  ECBE  F006         	call	_dataPanelUp	;wreg free
  1047  00083C                     
  1048                           ;main.c: 616:                     LATDbits.LD2 = 0;
  1049  00083C  948C               	bcf	140,2,c	;volatile
  1050  00083E  EF6A  F003         	goto	l1944
  1051  000842                     l2016:
  1052  000842  FFFF               	dw	65535	; assembler added errata NOP
  1053                           
  1054                           ;main.c: 625:             if (prevFL == 4) {
  1055  000844  0E04               	movlw	4
  1056  000846  1853               	xorwf	_prevFL^0,w,c
  1057  000848  1054               	iorwf	(_prevFL+1)^0,w,c
  1058  00084A  A4D8               	btfss	status,2,c
  1059  00084C  EF2A  F004         	goto	u1271
  1060  000850  EF2D  F004         	goto	u1270
  1061  000854                     u1271:
  1062  000854  FFFF               	dw	65535	; assembler added errata NOP
  1063  000856  EF34  F004         	goto	l2028
  1064  00085A                     u1270:
  1065  00085A  FFFF               	dw	65535	; assembler added errata NOP
  1066  00085C                     
  1067                           ;main.c: 627:                 LATDbits.LD3 = 1;
  1068  00085C  868C               	bsf	140,3,c	;volatile
  1069  00085E                     
  1070                           ;main.c: 628:                 dataPanelUp();
  1071  00085E  ECBE  F006         	call	_dataPanelUp	;wreg free
  1072  000862                     
  1073                           ;main.c: 629:                 LATDbits.LD3 = 0;
  1074  000862  968C               	bcf	140,3,c	;volatile
  1075  000864  EF6A  F003         	goto	l1944
  1076  000868                     l2028:
  1077  000868  FFFF               	dw	65535	; assembler added errata NOP
  1078                           
  1079                           ;main.c: 635:                 if (prevFL < 4){
  1080  00086A  BE54               	btfsc	(_prevFL+1)^0,7,c
  1081  00086C  EF44  F004         	goto	u1280
  1082  000870  5054               	movf	(_prevFL+1)^0,w,c
  1083  000872  E107               	bnz	u1281
  1084  000874  0E04               	movlw	4
  1085  000876  5C53               	subwf	_prevFL^0,w,c
  1086  000878  B0D8               	btfsc	status,0,c
  1087  00087A  EF41  F004         	goto	u1281
  1088  00087E  EF44  F004         	goto	u1280
  1089  000882                     u1281:
  1090  000882  FFFF               	dw	65535	; assembler added errata NOP
  1091  000884  EF57  F004         	goto	l213
  1092  000888                     u1280:
  1093  000888  FFFF               	dw	65535	; assembler added errata NOP
  1094  00088A                     l210:
  1095  00088A  FFFF               	dw	65535	; assembler added errata NOP
  1096                           
  1097                           ;main.c: 637:                         LATCbits.LC1 = 0;
  1098  00088C  928B               	bcf	139,1,c	;volatile
  1099                           
  1100                           ;main.c: 638:                     }while(!PORTDbits.RD7);
  1101  00088E  AE83               	btfss	131,7,c	;volatile
  1102  000890  EF4C  F004         	goto	u1291
  1103  000894  EF4F  F004         	goto	u1290
  1104  000898                     u1291:
  1105  000898  FFFF               	dw	65535	; assembler added errata NOP
  1106  00089A  EF45  F004         	goto	l210
  1107  00089E                     u1290:
  1108  00089E  FFFF               	dw	65535	; assembler added errata NOP
  1109  0008A0                     
  1110                           ;main.c: 639:                     LATCbits.LC1 = 1;
  1111  0008A0  828B               	bsf	139,1,c	;volatile
  1112                           
  1113                           ;main.c: 641:                     LATDbits.LD3 = 1;
  1114  0008A2  868C               	bsf	140,3,c	;volatile
  1115  0008A4                     
  1116                           ;main.c: 642:                     dataPanelUp();
  1117  0008A4  ECBE  F006         	call	_dataPanelUp	;wreg free
  1118  0008A8                     
  1119                           ;main.c: 643:                     LATDbits.LD3 = 0;
  1120  0008A8  968C               	bcf	140,3,c	;volatile
  1121  0008AA  EF6A  F003         	goto	l1944
  1122  0008AE                     l213:
  1123  0008AE  FFFF               	dw	65535	; assembler added errata NOP
  1124                           
  1125                           ;main.c: 650:                         LATCbits.LC0 = 0;
  1126  0008B0  908B               	bcf	139,0,c	;volatile
  1127                           
  1128                           ;main.c: 651:                     }while(!PORTDbits.RD7);
  1129  0008B2  AE83               	btfss	131,7,c	;volatile
  1130  0008B4  EF5E  F004         	goto	u1301
  1131  0008B8  EF61  F004         	goto	u1300
  1132  0008BC                     u1301:
  1133  0008BC  FFFF               	dw	65535	; assembler added errata NOP
  1134  0008BE  EF57  F004         	goto	l213
  1135  0008C2                     u1300:
  1136  0008C2  FFFF               	dw	65535	; assembler added errata NOP
  1137  0008C4                     
  1138                           ;main.c: 652:                     LATCbits.LC0 = 1;
  1139  0008C4  808B               	bsf	139,0,c	;volatile
  1140                           
  1141                           ;main.c: 654:                     LATDbits.LD3 = 1;
  1142  0008C6  868C               	bsf	140,3,c	;volatile
  1143  0008C8                     
  1144                           ;main.c: 655:                     dataPanelUp();
  1145  0008C8  ECBE  F006         	call	_dataPanelUp	;wreg free
  1146  0008CC                     
  1147                           ;main.c: 656:                     LATDbits.LD3 = 0;
  1148  0008CC  968C               	bcf	140,3,c	;volatile
  1149  0008CE  EF6A  F003         	goto	l1944
  1150  0008D2                     l2048:
  1151  0008D2  FFFF               	dw	65535	; assembler added errata NOP
  1152  0008D4  C057  F049         	movff	_call_init,??_modeControl
  1153  0008D8  C058  F04A         	movff	_call_init+1,??_modeControl+1
  1154                           
  1155                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1156                           ; Switch size 1, requested type "simple"
  1157                           ; Number of cases is 1, Range of values is 0 to 0
  1158                           ; switch strategies available:
  1159                           ; Name         Instructions Cycles
  1160                           ; simple_byte            4     3 (average)
  1161                           ;	Chosen strategy is simple_byte
  1162  0008DC  504A               	movf	(??_modeControl+1)^0,w,c
  1163  0008DE  0A00               	xorlw	0	; case 0
  1164  0008E0  B4D8               	btfsc	status,2,c
  1165  0008E2  EF75  F004         	goto	l2298
  1166  0008E6  EF89  F004         	goto	l215
  1167  0008EA                     l2298:
  1168  0008EA  FFFF               	dw	65535	; assembler added errata NOP
  1169                           
  1170                           ; Switch size 1, requested type "simple"
  1171                           ; Number of cases is 4, Range of values is 1 to 4
  1172                           ; switch strategies available:
  1173                           ; Name         Instructions Cycles
  1174                           ; simple_byte           13     7 (average)
  1175                           ;	Chosen strategy is simple_byte
  1176  0008EC  5049               	movf	??_modeControl^0,w,c
  1177  0008EE  0A01               	xorlw	1	; case 1
  1178  0008F0  B4D8               	btfsc	status,2,c
  1179  0008F2  EF5A  F003         	goto	l1936
  1180  0008F6  0A03               	xorlw	3	; case 2
  1181  0008F8  B4D8               	btfsc	status,2,c
  1182  0008FA  EF91  F003         	goto	l1956
  1183  0008FE  0A01               	xorlw	1	; case 3
  1184  000900  B4D8               	btfsc	status,2,c
  1185  000902  EFD9  F003         	goto	l1986
  1186  000906  0A07               	xorlw	7	; case 4
  1187  000908  B4D8               	btfsc	status,2,c
  1188  00090A  EF21  F004         	goto	l2016
  1189  00090E  EF89  F004         	goto	l215
  1190  000912                     l215:
  1191  000912  FFFF               	dw	65535	; assembler added errata NOP
  1192  000914  0012               	return		;funcret
  1193  000916  FFFF               	dw	65535	; errata NOP
  1194  000918                     __end_of_modeControl:
  1195                           	callstack 0
  1196                           
  1197 ;; *************** function _selectionMode *****************
  1198 ;; Defined at:
  1199 ;;		line 465 in file "main.c"
  1200 ;; Parameters:    Size  Location     Type
  1201 ;;  mode_s          2   68[COMRAM] unsigned int 
  1202 ;; Auto vars:     Size  Location     Type
  1203 ;;		None
  1204 ;; Return value:  Size  Location     Type
  1205 ;;                  1    wreg      void 
  1206 ;; Registers used:
  1207 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1208 ;; Tracked objects:
  1209 ;;		On entry : 0/0
  1210 ;;		On exit  : 0/0
  1211 ;;		Unchanged: 0/0
  1212 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1213 ;;      Params:         2       0       0       0       0       0       0
  1214 ;;      Locals:         0       0       0       0       0       0       0
  1215 ;;      Temps:          0       0       0       0       0       0       0
  1216 ;;      Totals:         2       0       0       0       0       0       0
  1217 ;;Total ram usage:        2 bytes
  1218 ;; Hardware stack levels used: 1
  1219 ;; Hardware stack levels required when called: 6
  1220 ;; This function calls:
  1221 ;;		_rutine_down
  1222 ;;		_rutine_up
  1223 ;; This function is called by:
  1224 ;;		_modeControl
  1225 ;; This function uses a non-reentrant model
  1226 ;;
  1227                           
  1228                           	psect	text2
  1229  001502                     __ptext2:
  1230                           	callstack 0
  1231  001502                     _selectionMode:
  1232                           	callstack 0
  1233  001502  FFFF               	dw	65535	; assembler added errata NOP
  1234  001504                     
  1235                           ;main.c: 466:     if (mode_s == 1){
  1236  001504  0445               	decf	selectionMode@mode_s^0,w,c
  1237  001506  1046               	iorwf	(selectionMode@mode_s+1)^0,w,c
  1238  001508  A4D8               	btfss	status,2,c
  1239  00150A  EF89  F00A         	goto	u1111
  1240  00150E  EF8C  F00A         	goto	u1110
  1241  001512                     u1111:
  1242  001512  FFFF               	dw	65535	; assembler added errata NOP
  1243  001514  EF9E  F00A         	goto	l1920
  1244  001518                     u1110:
  1245  001518  FFFF               	dw	65535	; assembler added errata NOP
  1246  00151A                     
  1247                           ;main.c: 468:         LATCbits.LC1 = 0;
  1248  00151A  928B               	bcf	139,1,c	;volatile
  1249  00151C                     l1916:
  1250  00151C  FFFF               	dw	65535	; assembler added errata NOP
  1251                           
  1252                           ;main.c: 471:             if(rutine_up()){
  1253  00151E  ECD2  F007         	call	_rutine_up	;wreg free
  1254  001522  503D               	movf	?_rutine_up^0,w,c
  1255  001524  103E               	iorwf	(?_rutine_up+1)^0,w,c
  1256  001526  B4D8               	btfsc	status,2,c
  1257  001528  EF98  F00A         	goto	u1121
  1258  00152C  EF9B  F00A         	goto	u1120
  1259  001530                     u1121:
  1260  001530  FFFF               	dw	65535	; assembler added errata NOP
  1261  001532  EF8E  F00A         	goto	l1916
  1262  001536                     u1120:
  1263  001536  FFFF               	dw	65535	; assembler added errata NOP
  1264  001538  EFB8  F00A         	goto	l175
  1265  00153C                     l1920:
  1266  00153C  FFFF               	dw	65535	; assembler added errata NOP
  1267  00153E  5045               	movf	selectionMode@mode_s^0,w,c
  1268  001540  1046               	iorwf	(selectionMode@mode_s+1)^0,w,c
  1269  001542  A4D8               	btfss	status,2,c
  1270  001544  EFA6  F00A         	goto	u1131
  1271  001548  EFA9  F00A         	goto	u1130
  1272  00154C                     u1131:
  1273  00154C  FFFF               	dw	65535	; assembler added errata NOP
  1274  00154E  EFB8  F00A         	goto	l175
  1275  001552                     u1130:
  1276  001552  FFFF               	dw	65535	; assembler added errata NOP
  1277  001554                     
  1278                           ;main.c: 479:         LATCbits.LC0 = 0;
  1279  001554  908B               	bcf	139,0,c	;volatile
  1280  001556                     l1924:
  1281  001556  FFFF               	dw	65535	; assembler added errata NOP
  1282                           
  1283                           ;main.c: 482:             if(rutine_down()){
  1284  001558  EC36  F00B         	call	_rutine_down	;wreg free
  1285  00155C  501F               	movf	?_rutine_down^0,w,c
  1286  00155E  1020               	iorwf	(?_rutine_down+1)^0,w,c
  1287  001560  B4D8               	btfsc	status,2,c
  1288  001562  EFB5  F00A         	goto	u1141
  1289  001566  EFB8  F00A         	goto	u1140
  1290  00156A                     u1141:
  1291  00156A  FFFF               	dw	65535	; assembler added errata NOP
  1292  00156C  EFAB  F00A         	goto	l1924
  1293  001570                     u1140:
  1294  001570                     l175:
  1295  001570  FFFF               	dw	65535	; assembler added errata NOP
  1296  001572  0012               	return		;funcret
  1297  001574  FFFF               	dw	65535	; errata NOP
  1298  001576                     __end_of_selectionMode:
  1299                           	callstack 0
  1300                           
  1301 ;; *************** function _rutine_up *****************
  1302 ;; Defined at:
  1303 ;;		line 429 in file "main.c"
  1304 ;; Parameters:    Size  Location     Type
  1305 ;;		None
  1306 ;; Auto vars:     Size  Location     Type
  1307 ;;  re              2   66[COMRAM] int 
  1308 ;;  i               2   64[COMRAM] int 
  1309 ;; Return value:  Size  Location     Type
  1310 ;;                  2   60[COMRAM] int 
  1311 ;; Registers used:
  1312 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1313 ;; Tracked objects:
  1314 ;;		On entry : 0/0
  1315 ;;		On exit  : 0/0
  1316 ;;		Unchanged: 0/0
  1317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1318 ;;      Params:         2       0       0       0       0       0       0
  1319 ;;      Locals:         4       0       0       0       0       0       0
  1320 ;;      Temps:          2       0       0       0       0       0       0
  1321 ;;      Totals:         8       0       0       0       0       0       0
  1322 ;;Total ram usage:        8 bytes
  1323 ;; Hardware stack levels used: 1
  1324 ;; Hardware stack levels required when called: 5
  1325 ;; This function calls:
  1326 ;;		_controlCalls
  1327 ;;		_noRepeat
  1328 ;;		_sort
  1329 ;; This function is called by:
  1330 ;;		_selectionMode
  1331 ;; This function uses a non-reentrant model
  1332 ;;
  1333                           
  1334                           	psect	text3
  1335  000FA4                     __ptext3:
  1336                           	callstack 0
  1337  000FA4                     _rutine_up:
  1338                           	callstack 0
  1339  000FA4  FFFF               	dw	65535	; assembler added errata NOP
  1340  000FA6                     
  1341                           ;main.c: 431:     controlCalls();
  1342  000FA6  EC7B  F001         	call	_controlCalls	;wreg free
  1343  000FAA                     
  1344                           ;main.c: 432:     if (tasksUp == 0){
  1345  000FAA  505D               	movf	_tasksUp^0,w,c
  1346  000FAC  105E               	iorwf	(_tasksUp+1)^0,w,c
  1347  000FAE  A4D8               	btfss	status,2,c
  1348  000FB0  EFDC  F007         	goto	u1061
  1349  000FB4  EFDF  F007         	goto	u1060
  1350  000FB8                     u1061:
  1351  000FB8  FFFF               	dw	65535	; assembler added errata NOP
  1352  000FBA  EFA6  F008         	goto	l1908
  1353  000FBE                     u1060:
  1354  000FBE  FFFF               	dw	65535	; assembler added errata NOP
  1355  000FC0                     
  1356                           ;main.c: 433:         if((tasksDown > 0) || callsD > 0){
  1357  000FC0  BE60               	btfsc	(_tasksDown+1)^0,7,c
  1358  000FC2  EFEE  F007         	goto	u1070
  1359  000FC6  5060               	movf	(_tasksDown+1)^0,w,c
  1360  000FC8  E106               	bnz	u1071
  1361  000FCA  045F               	decf	_tasksDown^0,w,c
  1362  000FCC  B0D8               	btfsc	status,0,c
  1363  000FCE  EFEB  F007         	goto	u1071
  1364  000FD2  EFEE  F007         	goto	u1070
  1365  000FD6                     u1071:
  1366  000FD6  FFFF               	dw	65535	; assembler added errata NOP
  1367  000FD8  EFFD  F007         	goto	l1874
  1368  000FDC                     u1070:
  1369  000FDC  FFFF               	dw	65535	; assembler added errata NOP
  1370  000FDE  BE5A               	btfsc	(_callsD+1)^0,7,c
  1371  000FE0  EFFA  F007         	goto	u1081
  1372  000FE4  505A               	movf	(_callsD+1)^0,w,c
  1373  000FE6  E109               	bnz	u1080
  1374  000FE8  0459               	decf	_callsD^0,w,c
  1375  000FEA  A0D8               	btfss	status,0,c
  1376  000FEC  EFFA  F007         	goto	u1081
  1377  000FF0  EFFD  F007         	goto	u1080
  1378  000FF4                     u1081:
  1379  000FF4  FFFF               	dw	65535	; assembler added errata NOP
  1380  000FF6  EF93  F008         	goto	l1904
  1381  000FFA                     u1080:
  1382  000FFA                     l1874:
  1383  000FFA  FFFF               	dw	65535	; assembler added errata NOP
  1384                           
  1385                           ;main.c: 434:             for(int i = 0; i < callsD; i++){
  1386  000FFC  0E00               	movlw	0
  1387  000FFE  6E42               	movwf	(rutine_up@i+1)^0,c
  1388  001000  0E00               	movlw	0
  1389  001002  6E41               	movwf	rutine_up@i^0,c
  1390  001004  EF23  F008         	goto	l1880
  1391  001008                     l1876:
  1392  001008  FFFF               	dw	65535	; assembler added errata NOP
  1393                           
  1394                           ;main.c: 435:                 queueDown[tasksDown + i] = callsInUp[i];
  1395  00100A  90D8               	bcf	status,0,c
  1396  00100C  3441               	rlcf	rutine_up@i^0,w,c
  1397  00100E  6ED9               	movwf	fsr2l,c
  1398  001010  3442               	rlcf	(rutine_up@i+1)^0,w,c
  1399  001012  6EDA               	movwf	fsr2h,c
  1400  001014  0E00               	movlw	low _callsInUp
  1401  001016  26D9               	addwf	fsr2l,f,c
  1402  001018  0E05               	movlw	high _callsInUp
  1403  00101A  22DA               	addwfc	fsr2h,f,c
  1404  00101C  5041               	movf	rutine_up@i^0,w,c
  1405  00101E  245F               	addwf	_tasksDown^0,w,c
  1406  001020  6E3F               	movwf	??_rutine_up^0,c
  1407  001022  5042               	movf	(rutine_up@i+1)^0,w,c
  1408  001024  2060               	addwfc	(_tasksDown+1)^0,w,c
  1409  001026  6E40               	movwf	(??_rutine_up+1)^0,c
  1410  001028  90D8               	bcf	status,0,c
  1411  00102A  363F               	rlcf	??_rutine_up^0,f,c
  1412  00102C  3640               	rlcf	(??_rutine_up+1)^0,f,c
  1413  00102E  0E00               	movlw	low _queueDown
  1414  001030  243F               	addwf	??_rutine_up^0,w,c
  1415  001032  6EE1               	movwf	fsr1l,c
  1416  001034  0E04               	movlw	high _queueDown
  1417  001036  2040               	addwfc	(??_rutine_up+1)^0,w,c
  1418  001038  6EE2               	movwf	fsr1h,c
  1419  00103A  CFDE FFE6          	movff	postinc2,postinc1
  1420  00103E  CFDD FFE5          	movff	postdec2,postdec1
  1421  001042                     
  1422                           ;main.c: 436:             }
  1423  001042  4A41               	infsnz	rutine_up@i^0,f,c
  1424  001044  2A42               	incf	(rutine_up@i+1)^0,f,c
  1425  001046                     l1880:
  1426  001046  FFFF               	dw	65535	; assembler added errata NOP
  1427  001048  5059               	movf	_callsD^0,w,c
  1428  00104A  5C41               	subwf	rutine_up@i^0,w,c
  1429  00104C  5042               	movf	(rutine_up@i+1)^0,w,c
  1430  00104E  0A80               	xorlw	128
  1431  001050  6E3F               	movwf	??_rutine_up^0,c
  1432  001052  505A               	movf	(_callsD+1)^0,w,c
  1433  001054  0A80               	xorlw	128
  1434  001056  583F               	subwfb	??_rutine_up^0,w,c
  1435  001058  A0D8               	btfss	status,0,c
  1436  00105A  EF31  F008         	goto	u1091
  1437  00105E  EF34  F008         	goto	u1090
  1438  001062                     u1091:
  1439  001062  FFFF               	dw	65535	; assembler added errata NOP
  1440  001064  EF04  F008         	goto	l1876
  1441  001068                     u1090:
  1442  001068  FFFF               	dw	65535	; assembler added errata NOP
  1443  00106A                     
  1444                           ;main.c: 438:             sort(&queueDown[0], tasksDown + callsD);
  1445  00106A  0E00               	movlw	low _queueDown
  1446  00106C  6E1F               	movwf	sort@p^0,c
  1447  00106E  0E04               	movlw	high _queueDown
  1448  001070  6E20               	movwf	(sort@p+1)^0,c
  1449  001072  5059               	movf	_callsD^0,w,c
  1450  001074  245F               	addwf	_tasksDown^0,w,c
  1451  001076  6E21               	movwf	sort@sizes^0,c
  1452  001078  505A               	movf	(_callsD+1)^0,w,c
  1453  00107A  2060               	addwfc	(_tasksDown+1)^0,w,c
  1454  00107C  6E22               	movwf	(sort@sizes+1)^0,c
  1455  00107E  EC8C  F004         	call	_sort	;wreg free
  1456                           
  1457                           ;main.c: 439:             tasksDown = noRepeat(&queueDown[0], tasksDown + callsD);
  1458  001082  0E00               	movlw	low _queueDown
  1459  001084  6E1F               	movwf	noRepeat@po^0,c
  1460  001086  0E04               	movlw	high _queueDown
  1461  001088  6E20               	movwf	(noRepeat@po+1)^0,c
  1462  00108A  5059               	movf	_callsD^0,w,c
  1463  00108C  245F               	addwf	_tasksDown^0,w,c
  1464  00108E  6E21               	movwf	noRepeat@sixes^0,c
  1465  001090  505A               	movf	(_callsD+1)^0,w,c
  1466  001092  2060               	addwfc	(_tasksDown+1)^0,w,c
  1467  001094  6E22               	movwf	(noRepeat@sixes+1)^0,c
  1468  001096  EC5C  F009         	call	_noRepeat	;wreg free
  1469  00109A  C01F  F05F         	movff	?_noRepeat,_tasksDown
  1470  00109E  C020  F060         	movff	?_noRepeat+1,_tasksDown+1
  1471  0010A2                     
  1472                           ;main.c: 441:             call_init = queueDown[0];
  1473  0010A2  C400  F057         	movff	_queueDown,_call_init
  1474  0010A6  C401  F058         	movff	_queueDown+1,_call_init+1
  1475  0010AA                     
  1476                           ;main.c: 442:             for (int re = 0; re < tasksDown; re++){
  1477  0010AA  0E00               	movlw	0
  1478  0010AC  6E44               	movwf	(rutine_up@re+1)^0,c
  1479  0010AE  0E00               	movlw	0
  1480  0010B0  6E43               	movwf	rutine_up@re^0,c
  1481  0010B2  EF74  F008         	goto	l1892
  1482  0010B6                     l1888:
  1483  0010B6  FFFF               	dw	65535	; assembler added errata NOP
  1484                           
  1485                           ;main.c: 443:                 queueDown[re] = queueDown[re + 1];
  1486  0010B8  90D8               	bcf	status,0,c
  1487  0010BA  3443               	rlcf	rutine_up@re^0,w,c
  1488  0010BC  6ED9               	movwf	fsr2l,c
  1489  0010BE  3444               	rlcf	(rutine_up@re+1)^0,w,c
  1490  0010C0  6EDA               	movwf	fsr2h,c
  1491  0010C2  0E02               	movlw	low (_queueDown+2)
  1492  0010C4  26D9               	addwf	fsr2l,f,c
  1493  0010C6  0E04               	movlw	high (_queueDown+2)
  1494  0010C8  22DA               	addwfc	fsr2h,f,c
  1495  0010CA  90D8               	bcf	status,0,c
  1496  0010CC  3443               	rlcf	rutine_up@re^0,w,c
  1497  0010CE  6EE1               	movwf	fsr1l,c
  1498  0010D0  3444               	rlcf	(rutine_up@re+1)^0,w,c
  1499  0010D2  6EE2               	movwf	fsr1h,c
  1500  0010D4  0E00               	movlw	low _queueDown
  1501  0010D6  26E1               	addwf	fsr1l,f,c
  1502  0010D8  0E04               	movlw	high _queueDown
  1503  0010DA  22E2               	addwfc	fsr1h,f,c
  1504  0010DC  CFDE FFE6          	movff	postinc2,postinc1
  1505  0010E0  CFDD FFE5          	movff	postdec2,postdec1
  1506  0010E4                     
  1507                           ;main.c: 444:             }
  1508  0010E4  4A43               	infsnz	rutine_up@re^0,f,c
  1509  0010E6  2A44               	incf	(rutine_up@re+1)^0,f,c
  1510  0010E8                     l1892:
  1511  0010E8  FFFF               	dw	65535	; assembler added errata NOP
  1512  0010EA  505F               	movf	_tasksDown^0,w,c
  1513  0010EC  5C43               	subwf	rutine_up@re^0,w,c
  1514  0010EE  5044               	movf	(rutine_up@re+1)^0,w,c
  1515  0010F0  0A80               	xorlw	128
  1516  0010F2  6E3F               	movwf	??_rutine_up^0,c
  1517  0010F4  5060               	movf	(_tasksDown+1)^0,w,c
  1518  0010F6  0A80               	xorlw	128
  1519  0010F8  583F               	subwfb	??_rutine_up^0,w,c
  1520  0010FA  A0D8               	btfss	status,0,c
  1521  0010FC  EF82  F008         	goto	u1101
  1522  001100  EF85  F008         	goto	u1100
  1523  001104                     u1101:
  1524  001104  FFFF               	dw	65535	; assembler added errata NOP
  1525  001106  EF5B  F008         	goto	l1888
  1526  00110A                     u1100:
  1527  00110A  FFFF               	dw	65535	; assembler added errata NOP
  1528  00110C                     
  1529                           ;main.c: 445:             tasksDown--;
  1530  00110C  065F               	decf	_tasksDown^0,f,c
  1531  00110E  A0D8               	btfss	status,0,c
  1532  001110  0660               	decf	(_tasksDown+1)^0,f,c
  1533  001112                     
  1534                           ;main.c: 448:             from_up_change = 1;
  1535  001112  0E00               	movlw	0
  1536  001114  6E4E               	movwf	(_from_up_change+1)^0,c
  1537  001116  0E01               	movlw	1
  1538  001118  6E4D               	movwf	_from_up_change^0,c
  1539  00111A                     
  1540                           ;main.c: 450:             return 1;
  1541  00111A  0E00               	movlw	0
  1542  00111C  6E3E               	movwf	(?_rutine_up+1)^0,c
  1543  00111E  0E01               	movlw	1
  1544  001120  6E3D               	movwf	?_rutine_up^0,c
  1545  001122  EFAB  F008         	goto	l160
  1546  001126                     l1904:
  1547  001126  FFFF               	dw	65535	; assembler added errata NOP
  1548                           
  1549                           ;main.c: 454:             call_init = 0;
  1550  001128  0E00               	movlw	0
  1551  00112A  6E58               	movwf	(_call_init+1)^0,c
  1552  00112C  0E00               	movlw	0
  1553  00112E  6E57               	movwf	_call_init^0,c
  1554                           
  1555                           ;main.c: 455:             modeUp_F = 0;
  1556  001130  0E00               	movlw	0
  1557  001132  6E52               	movwf	(_modeUp_F+1)^0,c
  1558  001134  0E00               	movlw	0
  1559  001136  6E51               	movwf	_modeUp_F^0,c
  1560                           
  1561                           ;main.c: 456:             tasksUp = 0;
  1562  001138  0E00               	movlw	0
  1563  00113A  6E5E               	movwf	(_tasksUp+1)^0,c
  1564  00113C  0E00               	movlw	0
  1565  00113E  6E5D               	movwf	_tasksUp^0,c
  1566                           
  1567                           ;main.c: 458:             return 1;
  1568  001140  0E00               	movlw	0
  1569  001142  6E3E               	movwf	(?_rutine_up+1)^0,c
  1570  001144  0E01               	movlw	1
  1571  001146  6E3D               	movwf	?_rutine_up^0,c
  1572  001148  EFAB  F008         	goto	l160
  1573  00114C                     l1908:
  1574  00114C  FFFF               	dw	65535	; assembler added errata NOP
  1575                           
  1576                           ;main.c: 461:     return 0;
  1577  00114E  0E00               	movlw	0
  1578  001150  6E3E               	movwf	(?_rutine_up+1)^0,c
  1579  001152  0E00               	movlw	0
  1580  001154  6E3D               	movwf	?_rutine_up^0,c
  1581  001156                     l160:
  1582  001156  FFFF               	dw	65535	; assembler added errata NOP
  1583  001158  0012               	return		;funcret
  1584  00115A  FFFF               	dw	65535	; errata NOP
  1585  00115C                     __end_of_rutine_up:
  1586                           	callstack 0
  1587                           
  1588 ;; *************** function _controlCalls *****************
  1589 ;; Defined at:
  1590 ;;		line 337 in file "main.c"
  1591 ;; Parameters:    Size  Location     Type
  1592 ;;		None
  1593 ;; Auto vars:     Size  Location     Type
  1594 ;;  i               2   58[COMRAM] int 
  1595 ;;  i               2   56[COMRAM] int 
  1596 ;;  i               2   54[COMRAM] int 
  1597 ;;  i               2   52[COMRAM] int 
  1598 ;; Return value:  Size  Location     Type
  1599 ;;                  1    wreg      void 
  1600 ;; Registers used:
  1601 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1602 ;; Tracked objects:
  1603 ;;		On entry : 0/0
  1604 ;;		On exit  : 0/0
  1605 ;;		Unchanged: 0/0
  1606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1607 ;;      Params:         0       0       0       0       0       0       0
  1608 ;;      Locals:         8       0       0       0       0       0       0
  1609 ;;      Temps:          2       0       0       0       0       0       0
  1610 ;;      Totals:        10       0       0       0       0       0       0
  1611 ;;Total ram usage:       10 bytes
  1612 ;; Hardware stack levels used: 1
  1613 ;; Hardware stack levels required when called: 4
  1614 ;; This function calls:
  1615 ;;		_dataPanelUp
  1616 ;; This function is called by:
  1617 ;;		_rutine_up
  1618 ;; This function uses a non-reentrant model
  1619 ;;
  1620                           
  1621                           	psect	text4
  1622  0002F6                     __ptext4:
  1623                           	callstack 0
  1624  0002F6                     _controlCalls:
  1625                           	callstack 0
  1626  0002F6  FFFF               	dw	65535	; assembler added errata NOP
  1627  0002F8                     
  1628                           ;main.c: 338:     switch(PORTD){
  1629  0002F8  EFF4  F002         	goto	l1854
  1630  0002FC                     l1750:
  1631  0002FC  FFFF               	dw	65535	; assembler added errata NOP
  1632                           
  1633                           ;main.c: 340:             nowFL = 1;
  1634  0002FE  0E00               	movlw	0
  1635  000300  6E56               	movwf	(_nowFL+1)^0,c
  1636  000302  0E01               	movlw	1
  1637  000304  6E55               	movwf	_nowFL^0,c
  1638  000306                     
  1639                           ;main.c: 341:             if (queueUp[0] == 1) {
  1640  000306  0103               	movlb	3	; () banked
  1641  000308  0500               	decf	_queueUp& (0+255),w,b
  1642  00030A  1101               	iorwf	(_queueUp+1)& (0+255),w,b
  1643  00030C  A4D8               	btfss	status,2,c
  1644  00030E  EF8B  F001         	goto	u981
  1645  000312  EF8E  F001         	goto	u980
  1646  000316                     u981:
  1647  000316  FFFF               	dw	65535	; assembler added errata NOP
  1648  000318  EF13  F003         	goto	l144
  1649  00031C                     u980:
  1650  00031C  FFFF               	dw	65535	; assembler added errata NOP
  1651  00031E                     
  1652                           ; BSR set to: 3
  1653                           ;main.c: 343:                 prevFL = 1;
  1654  00031E  0E00               	movlw	0
  1655  000320  6E54               	movwf	(_prevFL+1)^0,c
  1656  000322  0E01               	movlw	1
  1657  000324  6E53               	movwf	_prevFL^0,c
  1658  000326                     
  1659                           ; BSR set to: 3
  1660                           ;main.c: 344:                 LATCbits.LC1 = 1;
  1661  000326  828B               	bsf	139,1,c	;volatile
  1662                           
  1663                           ;main.c: 347:                 for (int i = 0; i < tasksUp; i++) {
  1664  000328  0E00               	movlw	0
  1665  00032A  6E36               	movwf	(controlCalls@i+1)^0,c
  1666  00032C  0E00               	movlw	0
  1667  00032E  6E35               	movwf	controlCalls@i^0,c
  1668  000330  EFB3  F001         	goto	l1762
  1669  000334                     l1758:
  1670  000334  FFFF               	dw	65535	; assembler added errata NOP
  1671                           
  1672                           ;main.c: 348:                     queueUp[i] = queueUp[i + 1];
  1673  000336  90D8               	bcf	status,0,c
  1674  000338  3435               	rlcf	controlCalls@i^0,w,c
  1675  00033A  6ED9               	movwf	fsr2l,c
  1676  00033C  3436               	rlcf	(controlCalls@i+1)^0,w,c
  1677  00033E  6EDA               	movwf	fsr2h,c
  1678  000340  0E02               	movlw	low (_queueUp+2)
  1679  000342  26D9               	addwf	fsr2l,f,c
  1680  000344  0E03               	movlw	high (_queueUp+2)
  1681  000346  22DA               	addwfc	fsr2h,f,c
  1682  000348  90D8               	bcf	status,0,c
  1683  00034A  3435               	rlcf	controlCalls@i^0,w,c
  1684  00034C  6EE1               	movwf	fsr1l,c
  1685  00034E  3436               	rlcf	(controlCalls@i+1)^0,w,c
  1686  000350  6EE2               	movwf	fsr1h,c
  1687  000352  0E00               	movlw	low _queueUp
  1688  000354  26E1               	addwf	fsr1l,f,c
  1689  000356  0E03               	movlw	high _queueUp
  1690  000358  22E2               	addwfc	fsr1h,f,c
  1691  00035A  CFDE FFE6          	movff	postinc2,postinc1
  1692  00035E  CFDD FFE5          	movff	postdec2,postdec1
  1693  000362                     
  1694                           ;main.c: 349:                 }
  1695  000362  4A35               	infsnz	controlCalls@i^0,f,c
  1696  000364  2A36               	incf	(controlCalls@i+1)^0,f,c
  1697  000366                     l1762:
  1698  000366  FFFF               	dw	65535	; assembler added errata NOP
  1699  000368  505D               	movf	_tasksUp^0,w,c
  1700  00036A  5C35               	subwf	controlCalls@i^0,w,c
  1701  00036C  5036               	movf	(controlCalls@i+1)^0,w,c
  1702  00036E  0A80               	xorlw	128
  1703  000370  6E33               	movwf	??_controlCalls^0,c
  1704  000372  505E               	movf	(_tasksUp+1)^0,w,c
  1705  000374  0A80               	xorlw	128
  1706  000376  5833               	subwfb	??_controlCalls^0,w,c
  1707  000378  A0D8               	btfss	status,0,c
  1708  00037A  EFC1  F001         	goto	u991
  1709  00037E  EFC4  F001         	goto	u990
  1710  000382                     u991:
  1711  000382  FFFF               	dw	65535	; assembler added errata NOP
  1712  000384  EF9A  F001         	goto	l1758
  1713  000388                     u990:
  1714  000388  FFFF               	dw	65535	; assembler added errata NOP
  1715  00038A                     
  1716                           ;main.c: 350:                 tasksUp--;
  1717  00038A  065D               	decf	_tasksUp^0,f,c
  1718  00038C  A0D8               	btfss	status,0,c
  1719  00038E  065E               	decf	(_tasksUp+1)^0,f,c
  1720  000390                     
  1721                           ;main.c: 351:                 LATDbits.LD0 = 1;
  1722  000390  808C               	bsf	140,0,c	;volatile
  1723  000392                     
  1724                           ;main.c: 353:                 dataPanelUp();
  1725  000392  ECBE  F006         	call	_dataPanelUp	;wreg free
  1726  000396                     
  1727                           ;main.c: 355:                 LATDbits.LD0 = 0;
  1728  000396  908C               	bcf	140,0,c	;volatile
  1729  000398                     
  1730                           ;main.c: 356:                 _delay((unsigned long)((300)*(20000000/4000.0)));
  1731  000398  0E06               	movlw	6
  1732  00039A  6E34               	movwf	(??_controlCalls+1)^0,c
  1733  00039C  0EB6               	movlw	182
  1734  00039E  6E33               	movwf	??_controlCalls^0,c
  1735  0003A0  0EF9               	movlw	249
  1736  0003A2                     u1567:
  1737  0003A2  FFFF               	dw	65535	; errata NOP
  1738  0003A4  2EE8               	decfsz	wreg,f,c
  1739  0003A6  D7FD               	bra	u1567
  1740  0003A8  2E33               	decfsz	??_controlCalls^0,f,c
  1741  0003AA  D7FB               	bra	u1567
  1742  0003AC  2E34               	decfsz	(??_controlCalls+1)^0,f,c
  1743  0003AE  D7F9               	bra	u1567
  1744  0003B0                     
  1745                           ;main.c: 358:                 LATCbits.LC1 = 0;
  1746  0003B0  928B               	bcf	139,1,c	;volatile
  1747  0003B2  EF13  F003         	goto	l144
  1748  0003B6                     l1776:
  1749  0003B6  FFFF               	dw	65535	; assembler added errata NOP
  1750                           
  1751                           ;main.c: 363:             nowFL = 2;
  1752  0003B8  0E00               	movlw	0
  1753  0003BA  6E56               	movwf	(_nowFL+1)^0,c
  1754  0003BC  0E02               	movlw	2
  1755  0003BE  6E55               	movwf	_nowFL^0,c
  1756  0003C0                     
  1757                           ;main.c: 364:             if (queueUp[0] == 2) {
  1758  0003C0  0E02               	movlw	2
  1759  0003C2  0103               	movlb	3	; () banked
  1760  0003C4  1900               	xorwf	_queueUp& (0+255),w,b
  1761  0003C6  1101               	iorwf	(_queueUp+1)& (0+255),w,b
  1762  0003C8  A4D8               	btfss	status,2,c
  1763  0003CA  EFE9  F001         	goto	u1001
  1764  0003CE  EFEC  F001         	goto	u1000
  1765  0003D2                     u1001:
  1766  0003D2  FFFF               	dw	65535	; assembler added errata NOP
  1767  0003D4  EF13  F003         	goto	l144
  1768  0003D8                     u1000:
  1769  0003D8  FFFF               	dw	65535	; assembler added errata NOP
  1770  0003DA                     
  1771                           ; BSR set to: 3
  1772                           ;main.c: 366:                 prevFL = 2;
  1773  0003DA  0E00               	movlw	0
  1774  0003DC  6E54               	movwf	(_prevFL+1)^0,c
  1775  0003DE  0E02               	movlw	2
  1776  0003E0  6E53               	movwf	_prevFL^0,c
  1777  0003E2                     
  1778                           ; BSR set to: 3
  1779                           ;main.c: 367:                 LATCbits.LC1 = 1;
  1780  0003E2  828B               	bsf	139,1,c	;volatile
  1781                           
  1782                           ;main.c: 369:                 for (int i = 0; i < tasksUp; i++) {
  1783  0003E4  0E00               	movlw	0
  1784  0003E6  6E38               	movwf	(controlCalls@i_495+1)^0,c
  1785  0003E8  0E00               	movlw	0
  1786  0003EA  6E37               	movwf	controlCalls@i_495^0,c
  1787  0003EC  EF11  F002         	goto	l1788
  1788  0003F0                     l1784:
  1789  0003F0  FFFF               	dw	65535	; assembler added errata NOP
  1790                           
  1791                           ;main.c: 370:                     queueUp[i] = queueUp[i + 1];
  1792  0003F2  90D8               	bcf	status,0,c
  1793  0003F4  3437               	rlcf	controlCalls@i_495^0,w,c
  1794  0003F6  6ED9               	movwf	fsr2l,c
  1795  0003F8  3438               	rlcf	(controlCalls@i_495+1)^0,w,c
  1796  0003FA  6EDA               	movwf	fsr2h,c
  1797  0003FC  0E02               	movlw	low (_queueUp+2)
  1798  0003FE  26D9               	addwf	fsr2l,f,c
  1799  000400  0E03               	movlw	high (_queueUp+2)
  1800  000402  22DA               	addwfc	fsr2h,f,c
  1801  000404  90D8               	bcf	status,0,c
  1802  000406  3437               	rlcf	controlCalls@i_495^0,w,c
  1803  000408  6EE1               	movwf	fsr1l,c
  1804  00040A  3438               	rlcf	(controlCalls@i_495+1)^0,w,c
  1805  00040C  6EE2               	movwf	fsr1h,c
  1806  00040E  0E00               	movlw	low _queueUp
  1807  000410  26E1               	addwf	fsr1l,f,c
  1808  000412  0E03               	movlw	high _queueUp
  1809  000414  22E2               	addwfc	fsr1h,f,c
  1810  000416  CFDE FFE6          	movff	postinc2,postinc1
  1811  00041A  CFDD FFE5          	movff	postdec2,postdec1
  1812  00041E                     
  1813                           ;main.c: 371:                 }
  1814  00041E  4A37               	infsnz	controlCalls@i_495^0,f,c
  1815  000420  2A38               	incf	(controlCalls@i_495+1)^0,f,c
  1816  000422                     l1788:
  1817  000422  FFFF               	dw	65535	; assembler added errata NOP
  1818  000424  505D               	movf	_tasksUp^0,w,c
  1819  000426  5C37               	subwf	controlCalls@i_495^0,w,c
  1820  000428  5038               	movf	(controlCalls@i_495+1)^0,w,c
  1821  00042A  0A80               	xorlw	128
  1822  00042C  6E33               	movwf	??_controlCalls^0,c
  1823  00042E  505E               	movf	(_tasksUp+1)^0,w,c
  1824  000430  0A80               	xorlw	128
  1825  000432  5833               	subwfb	??_controlCalls^0,w,c
  1826  000434  A0D8               	btfss	status,0,c
  1827  000436  EF1F  F002         	goto	u1011
  1828  00043A  EF22  F002         	goto	u1010
  1829  00043E                     u1011:
  1830  00043E  FFFF               	dw	65535	; assembler added errata NOP
  1831  000440  EFF8  F001         	goto	l1784
  1832  000444                     u1010:
  1833  000444  FFFF               	dw	65535	; assembler added errata NOP
  1834  000446                     
  1835                           ;main.c: 372:                 tasksUp--;
  1836  000446  065D               	decf	_tasksUp^0,f,c
  1837  000448  A0D8               	btfss	status,0,c
  1838  00044A  065E               	decf	(_tasksUp+1)^0,f,c
  1839  00044C                     
  1840                           ;main.c: 374:                 LATDbits.LD1 = 1;
  1841  00044C  828C               	bsf	140,1,c	;volatile
  1842  00044E                     
  1843                           ;main.c: 375:                 dataPanelUp();
  1844  00044E  ECBE  F006         	call	_dataPanelUp	;wreg free
  1845  000452                     
  1846                           ;main.c: 376:                 LATDbits.LD1 = 0;
  1847  000452  928C               	bcf	140,1,c	;volatile
  1848  000454                     
  1849                           ;main.c: 377:                 _delay((unsigned long)((300)*(20000000/4000.0)));
  1850  000454  0E06               	movlw	6
  1851  000456  6E34               	movwf	(??_controlCalls+1)^0,c
  1852  000458  0EB6               	movlw	182
  1853  00045A  6E33               	movwf	??_controlCalls^0,c
  1854  00045C  0EF9               	movlw	249
  1855  00045E                     u1577:
  1856  00045E  FFFF               	dw	65535	; errata NOP
  1857  000460  2EE8               	decfsz	wreg,f,c
  1858  000462  D7FD               	bra	u1577
  1859  000464  2E33               	decfsz	??_controlCalls^0,f,c
  1860  000466  D7FB               	bra	u1577
  1861  000468  2E34               	decfsz	(??_controlCalls+1)^0,f,c
  1862  00046A  D7F9               	bra	u1577
  1863  00046C                     
  1864                           ;main.c: 379:                 LATCbits.LC1 = 0;
  1865  00046C  928B               	bcf	139,1,c	;volatile
  1866  00046E  EF13  F003         	goto	l144
  1867  000472                     l1802:
  1868  000472  FFFF               	dw	65535	; assembler added errata NOP
  1869                           
  1870                           ;main.c: 383:             nowFL = 3;
  1871  000474  0E00               	movlw	0
  1872  000476  6E56               	movwf	(_nowFL+1)^0,c
  1873  000478  0E03               	movlw	3
  1874  00047A  6E55               	movwf	_nowFL^0,c
  1875  00047C                     
  1876                           ;main.c: 384:             if (queueUp[0] == 3) {
  1877  00047C  0E03               	movlw	3
  1878  00047E  0103               	movlb	3	; () banked
  1879  000480  1900               	xorwf	_queueUp& (0+255),w,b
  1880  000482  1101               	iorwf	(_queueUp+1)& (0+255),w,b
  1881  000484  A4D8               	btfss	status,2,c
  1882  000486  EF47  F002         	goto	u1021
  1883  00048A  EF4A  F002         	goto	u1020
  1884  00048E                     u1021:
  1885  00048E  FFFF               	dw	65535	; assembler added errata NOP
  1886  000490  EF13  F003         	goto	l144
  1887  000494                     u1020:
  1888  000494  FFFF               	dw	65535	; assembler added errata NOP
  1889  000496                     
  1890                           ; BSR set to: 3
  1891                           ;main.c: 388:                 prevFL = 3;
  1892  000496  0E00               	movlw	0
  1893  000498  6E54               	movwf	(_prevFL+1)^0,c
  1894  00049A  0E03               	movlw	3
  1895  00049C  6E53               	movwf	_prevFL^0,c
  1896  00049E                     
  1897                           ; BSR set to: 3
  1898                           ;main.c: 389:                 LATCbits.LC1 = 1;
  1899  00049E  828B               	bsf	139,1,c	;volatile
  1900                           
  1901                           ;main.c: 391:                 for (int i = 0; i < tasksUp; i++) {
  1902  0004A0  0E00               	movlw	0
  1903  0004A2  6E3A               	movwf	(controlCalls@i_496+1)^0,c
  1904  0004A4  0E00               	movlw	0
  1905  0004A6  6E39               	movwf	controlCalls@i_496^0,c
  1906  0004A8  EF6F  F002         	goto	l1814
  1907  0004AC                     l1810:
  1908  0004AC  FFFF               	dw	65535	; assembler added errata NOP
  1909                           
  1910                           ;main.c: 392:                     queueUp[i] = queueUp[i + 1];
  1911  0004AE  90D8               	bcf	status,0,c
  1912  0004B0  3439               	rlcf	controlCalls@i_496^0,w,c
  1913  0004B2  6ED9               	movwf	fsr2l,c
  1914  0004B4  343A               	rlcf	(controlCalls@i_496+1)^0,w,c
  1915  0004B6  6EDA               	movwf	fsr2h,c
  1916  0004B8  0E02               	movlw	low (_queueUp+2)
  1917  0004BA  26D9               	addwf	fsr2l,f,c
  1918  0004BC  0E03               	movlw	high (_queueUp+2)
  1919  0004BE  22DA               	addwfc	fsr2h,f,c
  1920  0004C0  90D8               	bcf	status,0,c
  1921  0004C2  3439               	rlcf	controlCalls@i_496^0,w,c
  1922  0004C4  6EE1               	movwf	fsr1l,c
  1923  0004C6  343A               	rlcf	(controlCalls@i_496+1)^0,w,c
  1924  0004C8  6EE2               	movwf	fsr1h,c
  1925  0004CA  0E00               	movlw	low _queueUp
  1926  0004CC  26E1               	addwf	fsr1l,f,c
  1927  0004CE  0E03               	movlw	high _queueUp
  1928  0004D0  22E2               	addwfc	fsr1h,f,c
  1929  0004D2  CFDE FFE6          	movff	postinc2,postinc1
  1930  0004D6  CFDD FFE5          	movff	postdec2,postdec1
  1931  0004DA                     
  1932                           ;main.c: 393:                 }
  1933  0004DA  4A39               	infsnz	controlCalls@i_496^0,f,c
  1934  0004DC  2A3A               	incf	(controlCalls@i_496+1)^0,f,c
  1935  0004DE                     l1814:
  1936  0004DE  FFFF               	dw	65535	; assembler added errata NOP
  1937  0004E0  505D               	movf	_tasksUp^0,w,c
  1938  0004E2  5C39               	subwf	controlCalls@i_496^0,w,c
  1939  0004E4  503A               	movf	(controlCalls@i_496+1)^0,w,c
  1940  0004E6  0A80               	xorlw	128
  1941  0004E8  6E33               	movwf	??_controlCalls^0,c
  1942  0004EA  505E               	movf	(_tasksUp+1)^0,w,c
  1943  0004EC  0A80               	xorlw	128
  1944  0004EE  5833               	subwfb	??_controlCalls^0,w,c
  1945  0004F0  A0D8               	btfss	status,0,c
  1946  0004F2  EF7D  F002         	goto	u1031
  1947  0004F6  EF80  F002         	goto	u1030
  1948  0004FA                     u1031:
  1949  0004FA  FFFF               	dw	65535	; assembler added errata NOP
  1950  0004FC  EF56  F002         	goto	l1810
  1951  000500                     u1030:
  1952  000500  FFFF               	dw	65535	; assembler added errata NOP
  1953  000502                     
  1954                           ;main.c: 394:                 tasksUp--;
  1955  000502  065D               	decf	_tasksUp^0,f,c
  1956  000504  A0D8               	btfss	status,0,c
  1957  000506  065E               	decf	(_tasksUp+1)^0,f,c
  1958  000508                     
  1959                           ;main.c: 396:                 LATDbits.LD2 = 1;
  1960  000508  848C               	bsf	140,2,c	;volatile
  1961  00050A                     
  1962                           ;main.c: 397:                 dataPanelUp();
  1963  00050A  ECBE  F006         	call	_dataPanelUp	;wreg free
  1964  00050E                     
  1965                           ;main.c: 398:                 LATDbits.LD2 = 0;
  1966  00050E  948C               	bcf	140,2,c	;volatile
  1967  000510                     
  1968                           ;main.c: 399:                 _delay((unsigned long)((300)*(20000000/4000.0)));
  1969  000510  0E06               	movlw	6
  1970  000512  6E34               	movwf	(??_controlCalls+1)^0,c
  1971  000514  0EB6               	movlw	182
  1972  000516  6E33               	movwf	??_controlCalls^0,c
  1973  000518  0EF9               	movlw	249
  1974  00051A                     u1587:
  1975  00051A  FFFF               	dw	65535	; errata NOP
  1976  00051C  2EE8               	decfsz	wreg,f,c
  1977  00051E  D7FD               	bra	u1587
  1978  000520  2E33               	decfsz	??_controlCalls^0,f,c
  1979  000522  D7FB               	bra	u1587
  1980  000524  2E34               	decfsz	(??_controlCalls+1)^0,f,c
  1981  000526  D7F9               	bra	u1587
  1982  000528                     
  1983                           ;main.c: 401:                 LATCbits.LC1 = 0;
  1984  000528  928B               	bcf	139,1,c	;volatile
  1985  00052A  EF13  F003         	goto	l144
  1986  00052E                     l1828:
  1987  00052E  FFFF               	dw	65535	; assembler added errata NOP
  1988                           
  1989                           ;main.c: 405:             nowFL = 4;
  1990  000530  0E00               	movlw	0
  1991  000532  6E56               	movwf	(_nowFL+1)^0,c
  1992  000534  0E04               	movlw	4
  1993  000536  6E55               	movwf	_nowFL^0,c
  1994  000538                     
  1995                           ;main.c: 406:             if (queueUp[0] == 4) {
  1996  000538  0E04               	movlw	4
  1997  00053A  0103               	movlb	3	; () banked
  1998  00053C  1900               	xorwf	_queueUp& (0+255),w,b
  1999  00053E  1101               	iorwf	(_queueUp+1)& (0+255),w,b
  2000  000540  A4D8               	btfss	status,2,c
  2001  000542  EFA5  F002         	goto	u1041
  2002  000546  EFA8  F002         	goto	u1040
  2003  00054A                     u1041:
  2004  00054A  FFFF               	dw	65535	; assembler added errata NOP
  2005  00054C  EF13  F003         	goto	l144
  2006  000550                     u1040:
  2007  000550  FFFF               	dw	65535	; assembler added errata NOP
  2008  000552                     
  2009                           ; BSR set to: 3
  2010                           ;main.c: 408:                 prevFL = 4;
  2011  000552  0E00               	movlw	0
  2012  000554  6E54               	movwf	(_prevFL+1)^0,c
  2013  000556  0E04               	movlw	4
  2014  000558  6E53               	movwf	_prevFL^0,c
  2015  00055A                     
  2016                           ; BSR set to: 3
  2017                           ;main.c: 409:                 LATCbits.LC1 = 1;
  2018  00055A  828B               	bsf	139,1,c	;volatile
  2019                           
  2020                           ;main.c: 410:                 for (int i = 0; i < tasksUp; i++) {
  2021  00055C  0E00               	movlw	0
  2022  00055E  6E3C               	movwf	(controlCalls@i_497+1)^0,c
  2023  000560  0E00               	movlw	0
  2024  000562  6E3B               	movwf	controlCalls@i_497^0,c
  2025  000564  EFCD  F002         	goto	l1840
  2026  000568                     l1836:
  2027  000568  FFFF               	dw	65535	; assembler added errata NOP
  2028                           
  2029                           ;main.c: 411:                     queueUp[i] = queueUp[i + 1];
  2030  00056A  90D8               	bcf	status,0,c
  2031  00056C  343B               	rlcf	controlCalls@i_497^0,w,c
  2032  00056E  6ED9               	movwf	fsr2l,c
  2033  000570  343C               	rlcf	(controlCalls@i_497+1)^0,w,c
  2034  000572  6EDA               	movwf	fsr2h,c
  2035  000574  0E02               	movlw	low (_queueUp+2)
  2036  000576  26D9               	addwf	fsr2l,f,c
  2037  000578  0E03               	movlw	high (_queueUp+2)
  2038  00057A  22DA               	addwfc	fsr2h,f,c
  2039  00057C  90D8               	bcf	status,0,c
  2040  00057E  343B               	rlcf	controlCalls@i_497^0,w,c
  2041  000580  6EE1               	movwf	fsr1l,c
  2042  000582  343C               	rlcf	(controlCalls@i_497+1)^0,w,c
  2043  000584  6EE2               	movwf	fsr1h,c
  2044  000586  0E00               	movlw	low _queueUp
  2045  000588  26E1               	addwf	fsr1l,f,c
  2046  00058A  0E03               	movlw	high _queueUp
  2047  00058C  22E2               	addwfc	fsr1h,f,c
  2048  00058E  CFDE FFE6          	movff	postinc2,postinc1
  2049  000592  CFDD FFE5          	movff	postdec2,postdec1
  2050  000596                     
  2051                           ;main.c: 412:                 }
  2052  000596  4A3B               	infsnz	controlCalls@i_497^0,f,c
  2053  000598  2A3C               	incf	(controlCalls@i_497+1)^0,f,c
  2054  00059A                     l1840:
  2055  00059A  FFFF               	dw	65535	; assembler added errata NOP
  2056  00059C  505D               	movf	_tasksUp^0,w,c
  2057  00059E  5C3B               	subwf	controlCalls@i_497^0,w,c
  2058  0005A0  503C               	movf	(controlCalls@i_497+1)^0,w,c
  2059  0005A2  0A80               	xorlw	128
  2060  0005A4  6E33               	movwf	??_controlCalls^0,c
  2061  0005A6  505E               	movf	(_tasksUp+1)^0,w,c
  2062  0005A8  0A80               	xorlw	128
  2063  0005AA  5833               	subwfb	??_controlCalls^0,w,c
  2064  0005AC  A0D8               	btfss	status,0,c
  2065  0005AE  EFDB  F002         	goto	u1051
  2066  0005B2  EFDE  F002         	goto	u1050
  2067  0005B6                     u1051:
  2068  0005B6  FFFF               	dw	65535	; assembler added errata NOP
  2069  0005B8  EFB4  F002         	goto	l1836
  2070  0005BC                     u1050:
  2071  0005BC  FFFF               	dw	65535	; assembler added errata NOP
  2072  0005BE                     
  2073                           ;main.c: 413:                 tasksUp--;
  2074  0005BE  065D               	decf	_tasksUp^0,f,c
  2075  0005C0  A0D8               	btfss	status,0,c
  2076  0005C2  065E               	decf	(_tasksUp+1)^0,f,c
  2077  0005C4                     
  2078                           ;main.c: 414:                 LATDbits.LD3 = 1;
  2079  0005C4  868C               	bsf	140,3,c	;volatile
  2080  0005C6                     
  2081                           ;main.c: 415:                 dataPanelUp();
  2082  0005C6  ECBE  F006         	call	_dataPanelUp	;wreg free
  2083  0005CA                     
  2084                           ;main.c: 416:                 LATDbits.LD3 = 0;
  2085  0005CA  968C               	bcf	140,3,c	;volatile
  2086  0005CC                     
  2087                           ;main.c: 417:                 _delay((unsigned long)((300)*(20000000/4000.0)));
  2088  0005CC  0E06               	movlw	6
  2089  0005CE  6E34               	movwf	(??_controlCalls+1)^0,c
  2090  0005D0  0EB6               	movlw	182
  2091  0005D2  6E33               	movwf	??_controlCalls^0,c
  2092  0005D4  0EF9               	movlw	249
  2093  0005D6                     u1597:
  2094  0005D6  FFFF               	dw	65535	; errata NOP
  2095  0005D8  2EE8               	decfsz	wreg,f,c
  2096  0005DA  D7FD               	bra	u1597
  2097  0005DC  2E33               	decfsz	??_controlCalls^0,f,c
  2098  0005DE  D7FB               	bra	u1597
  2099  0005E0  2E34               	decfsz	(??_controlCalls+1)^0,f,c
  2100  0005E2  D7F9               	bra	u1597
  2101  0005E4  EF13  F003         	goto	l144
  2102  0005E8                     l1854:
  2103  0005E8  FFFF               	dw	65535	; assembler added errata NOP
  2104  0005EA  5083               	movf	131,w,c	;volatile
  2105  0005EC  6E33               	movwf	??_controlCalls^0,c
  2106  0005EE  6A34               	clrf	(??_controlCalls+1)^0,c
  2107                           
  2108                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2109                           ; Switch size 1, requested type "simple"
  2110                           ; Number of cases is 1, Range of values is 0 to 0
  2111                           ; switch strategies available:
  2112                           ; Name         Instructions Cycles
  2113                           ; simple_byte            4     3 (average)
  2114                           ;	Chosen strategy is simple_byte
  2115  0005F0  5034               	movf	(??_controlCalls+1)^0,w,c
  2116  0005F2  0A00               	xorlw	0	; case 0
  2117  0005F4  B4D8               	btfsc	status,2,c
  2118  0005F6  EFFF  F002         	goto	l2300
  2119  0005FA  EF13  F003         	goto	l144
  2120  0005FE                     l2300:
  2121  0005FE  FFFF               	dw	65535	; assembler added errata NOP
  2122                           
  2123                           ; Switch size 1, requested type "simple"
  2124                           ; Number of cases is 4, Range of values is 16 to 128
  2125                           ; switch strategies available:
  2126                           ; Name         Instructions Cycles
  2127                           ; simple_byte           13     7 (average)
  2128                           ;	Chosen strategy is simple_byte
  2129  000600  5033               	movf	??_controlCalls^0,w,c
  2130  000602  0A10               	xorlw	16	; case 16
  2131  000604  B4D8               	btfsc	status,2,c
  2132  000606  EF7E  F001         	goto	l1750
  2133  00060A  0A30               	xorlw	48	; case 32
  2134  00060C  B4D8               	btfsc	status,2,c
  2135  00060E  EFDB  F001         	goto	l1776
  2136  000612  0A60               	xorlw	96	; case 64
  2137  000614  B4D8               	btfsc	status,2,c
  2138  000616  EF39  F002         	goto	l1802
  2139  00061A  0AC0               	xorlw	192	; case 128
  2140  00061C  B4D8               	btfsc	status,2,c
  2141  00061E  EF97  F002         	goto	l1828
  2142  000622  EF13  F003         	goto	l144
  2143  000626                     l144:
  2144  000626  FFFF               	dw	65535	; assembler added errata NOP
  2145  000628  0012               	return		;funcret
  2146  00062A  FFFF               	dw	65535	; errata NOP
  2147  00062C                     __end_of_controlCalls:
  2148                           	callstack 0
  2149                           
  2150 ;; *************** function _dataPanelUp *****************
  2151 ;; Defined at:
  2152 ;;		line 280 in file "main.c"
  2153 ;; Parameters:    Size  Location     Type
  2154 ;;		None
  2155 ;; Auto vars:     Size  Location     Type
  2156 ;;  new_size        2   48[COMRAM] int 
  2157 ;; Return value:  Size  Location     Type
  2158 ;;                  1    wreg      void 
  2159 ;; Registers used:
  2160 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  2161 ;; Tracked objects:
  2162 ;;		On entry : 0/0
  2163 ;;		On exit  : 0/0
  2164 ;;		Unchanged: 0/0
  2165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2166 ;;      Params:         0       0       0       0       0       0       0
  2167 ;;      Locals:         2       0       0       0       0       0       0
  2168 ;;      Temps:          0       0       0       0       0       0       0
  2169 ;;      Totals:         2       0       0       0       0       0       0
  2170 ;;Total ram usage:        2 bytes
  2171 ;; Hardware stack levels used: 1
  2172 ;; Hardware stack levels required when called: 3
  2173 ;; This function calls:
  2174 ;;		_noRepeat
  2175 ;;		_sort
  2176 ;; This function is called by:
  2177 ;;		_controlCalls
  2178 ;;		_modeControl
  2179 ;; This function uses a non-reentrant model
  2180 ;;
  2181                           
  2182                           	psect	text5
  2183  000D7C                     __ptext5:
  2184                           	callstack 0
  2185  000D7C                     _dataPanelUp:
  2186                           	callstack 0
  2187  000D7C  FFFF               	dw	65535	; assembler added errata NOP
  2188  000D7E                     l105:
  2189  000D7E  FFFF               	dw	65535	; assembler added errata NOP
  2190                           
  2191                           ;main.c: 282:         if (PORTAbits.RA0) {
  2192  000D80  A080               	btfss	128,0,c	;volatile
  2193  000D82  EFC5  F006         	goto	u891
  2194  000D86  EFC8  F006         	goto	u890
  2195  000D8A                     u891:
  2196  000D8A  FFFF               	dw	65535	; assembler added errata NOP
  2197  000D8C  EFF9  F006         	goto	l1706
  2198  000D90                     u890:
  2199  000D90  FFFF               	dw	65535	; assembler added errata NOP
  2200  000D92                     
  2201                           ;main.c: 284:                 if (nowFL < 1) {
  2202  000D92  BE56               	btfsc	(_nowFL+1)^0,7,c
  2203  000D94  EFD7  F006         	goto	u900
  2204  000D98  5056               	movf	(_nowFL+1)^0,w,c
  2205  000D9A  E106               	bnz	u901
  2206  000D9C  0455               	decf	_nowFL^0,w,c
  2207  000D9E  B0D8               	btfsc	status,0,c
  2208  000DA0  EFD4  F006         	goto	u901
  2209  000DA4  EFD7  F006         	goto	u900
  2210  000DA8                     u901:
  2211  000DA8  FFFF               	dw	65535	; assembler added errata NOP
  2212  000DAA  EFE9  F006         	goto	l1702
  2213  000DAE                     u900:
  2214  000DAE  FFFF               	dw	65535	; assembler added errata NOP
  2215  000DB0                     
  2216                           ;main.c: 285:                     queueUp[tasksUp] = 1;
  2217  000DB0  90D8               	bcf	status,0,c
  2218  000DB2  345D               	rlcf	_tasksUp^0,w,c
  2219  000DB4  6ED9               	movwf	fsr2l,c
  2220  000DB6  345E               	rlcf	(_tasksUp+1)^0,w,c
  2221  000DB8  6EDA               	movwf	fsr2h,c
  2222  000DBA  0E00               	movlw	low _queueUp
  2223  000DBC  26D9               	addwf	fsr2l,f,c
  2224  000DBE  0E03               	movlw	high _queueUp
  2225  000DC0  22DA               	addwfc	fsr2h,f,c
  2226  000DC2  0E01               	movlw	1
  2227  000DC4  6EDE               	movwf	postinc2,c
  2228  000DC6  0E00               	movlw	0
  2229  000DC8  6EDD               	movwf	postdec2,c
  2230  000DCA                     
  2231                           ;main.c: 286:                     tasksUp++;
  2232  000DCA  4A5D               	infsnz	_tasksUp^0,f,c
  2233  000DCC  2A5E               	incf	(_tasksUp+1)^0,f,c
  2234                           
  2235                           ;main.c: 287:                 } else {
  2236  000DCE  EFF9  F006         	goto	l1706
  2237  000DD2                     l1702:
  2238  000DD2  FFFF               	dw	65535	; assembler added errata NOP
  2239                           
  2240                           ;main.c: 288:                     queueDown[tasksDown] = 1;
  2241  000DD4  90D8               	bcf	status,0,c
  2242  000DD6  345F               	rlcf	_tasksDown^0,w,c
  2243  000DD8  6ED9               	movwf	fsr2l,c
  2244  000DDA  3460               	rlcf	(_tasksDown+1)^0,w,c
  2245  000DDC  6EDA               	movwf	fsr2h,c
  2246  000DDE  0E00               	movlw	low _queueDown
  2247  000DE0  26D9               	addwf	fsr2l,f,c
  2248  000DE2  0E04               	movlw	high _queueDown
  2249  000DE4  22DA               	addwfc	fsr2h,f,c
  2250  000DE6  0E01               	movlw	1
  2251  000DE8  6EDE               	movwf	postinc2,c
  2252  000DEA  0E00               	movlw	0
  2253  000DEC  6EDD               	movwf	postdec2,c
  2254  000DEE                     
  2255                           ;main.c: 289:                     tasksDown++;
  2256  000DEE  4A5F               	infsnz	_tasksDown^0,f,c
  2257  000DF0  2A60               	incf	(_tasksDown+1)^0,f,c
  2258  000DF2                     l1706:
  2259  000DF2  FFFF               	dw	65535	; assembler added errata NOP
  2260                           
  2261                           ;main.c: 293:         if (PORTAbits.RA1) {
  2262  000DF4  A280               	btfss	128,1,c	;volatile
  2263  000DF6  EFFF  F006         	goto	u911
  2264  000DFA  EF02  F007         	goto	u910
  2265  000DFE                     u911:
  2266  000DFE  FFFF               	dw	65535	; assembler added errata NOP
  2267  000E00  EF34  F007         	goto	l1718
  2268  000E04                     u910:
  2269  000E04  FFFF               	dw	65535	; assembler added errata NOP
  2270  000E06                     
  2271                           ;main.c: 295:                 if (nowFL < 2) {
  2272  000E06  BE56               	btfsc	(_nowFL+1)^0,7,c
  2273  000E08  EF12  F007         	goto	u920
  2274  000E0C  5056               	movf	(_nowFL+1)^0,w,c
  2275  000E0E  E107               	bnz	u921
  2276  000E10  0E02               	movlw	2
  2277  000E12  5C55               	subwf	_nowFL^0,w,c
  2278  000E14  B0D8               	btfsc	status,0,c
  2279  000E16  EF0F  F007         	goto	u921
  2280  000E1A  EF12  F007         	goto	u920
  2281  000E1E                     u921:
  2282  000E1E  FFFF               	dw	65535	; assembler added errata NOP
  2283  000E20  EF24  F007         	goto	l1714
  2284  000E24                     u920:
  2285  000E24  FFFF               	dw	65535	; assembler added errata NOP
  2286  000E26                     
  2287                           ;main.c: 296:                     queueUp[tasksUp] = 2;
  2288  000E26  90D8               	bcf	status,0,c
  2289  000E28  345D               	rlcf	_tasksUp^0,w,c
  2290  000E2A  6ED9               	movwf	fsr2l,c
  2291  000E2C  345E               	rlcf	(_tasksUp+1)^0,w,c
  2292  000E2E  6EDA               	movwf	fsr2h,c
  2293  000E30  0E00               	movlw	low _queueUp
  2294  000E32  26D9               	addwf	fsr2l,f,c
  2295  000E34  0E03               	movlw	high _queueUp
  2296  000E36  22DA               	addwfc	fsr2h,f,c
  2297  000E38  0E02               	movlw	2
  2298  000E3A  6EDE               	movwf	postinc2,c
  2299  000E3C  0E00               	movlw	0
  2300  000E3E  6EDD               	movwf	postdec2,c
  2301  000E40                     
  2302                           ;main.c: 297:                     tasksUp++;
  2303  000E40  4A5D               	infsnz	_tasksUp^0,f,c
  2304  000E42  2A5E               	incf	(_tasksUp+1)^0,f,c
  2305                           
  2306                           ;main.c: 299:                 } else {
  2307  000E44  EF34  F007         	goto	l1718
  2308  000E48                     l1714:
  2309  000E48  FFFF               	dw	65535	; assembler added errata NOP
  2310                           
  2311                           ;main.c: 300:                     queueDown[tasksDown] = 2;
  2312  000E4A  90D8               	bcf	status,0,c
  2313  000E4C  345F               	rlcf	_tasksDown^0,w,c
  2314  000E4E  6ED9               	movwf	fsr2l,c
  2315  000E50  3460               	rlcf	(_tasksDown+1)^0,w,c
  2316  000E52  6EDA               	movwf	fsr2h,c
  2317  000E54  0E00               	movlw	low _queueDown
  2318  000E56  26D9               	addwf	fsr2l,f,c
  2319  000E58  0E04               	movlw	high _queueDown
  2320  000E5A  22DA               	addwfc	fsr2h,f,c
  2321  000E5C  0E02               	movlw	2
  2322  000E5E  6EDE               	movwf	postinc2,c
  2323  000E60  0E00               	movlw	0
  2324  000E62  6EDD               	movwf	postdec2,c
  2325  000E64                     
  2326                           ;main.c: 301:                     tasksDown++;
  2327  000E64  4A5F               	infsnz	_tasksDown^0,f,c
  2328  000E66  2A60               	incf	(_tasksDown+1)^0,f,c
  2329  000E68                     l1718:
  2330  000E68  FFFF               	dw	65535	; assembler added errata NOP
  2331                           
  2332                           ;main.c: 305:         if (PORTAbits.RA2) {
  2333  000E6A  A480               	btfss	128,2,c	;volatile
  2334  000E6C  EF3A  F007         	goto	u931
  2335  000E70  EF3D  F007         	goto	u930
  2336  000E74                     u931:
  2337  000E74  FFFF               	dw	65535	; assembler added errata NOP
  2338  000E76  EF6F  F007         	goto	l1730
  2339  000E7A                     u930:
  2340  000E7A  FFFF               	dw	65535	; assembler added errata NOP
  2341  000E7C                     
  2342                           ;main.c: 307:                 if (nowFL < 3) {
  2343  000E7C  BE56               	btfsc	(_nowFL+1)^0,7,c
  2344  000E7E  EF4D  F007         	goto	u940
  2345  000E82  5056               	movf	(_nowFL+1)^0,w,c
  2346  000E84  E107               	bnz	u941
  2347  000E86  0E03               	movlw	3
  2348  000E88  5C55               	subwf	_nowFL^0,w,c
  2349  000E8A  B0D8               	btfsc	status,0,c
  2350  000E8C  EF4A  F007         	goto	u941
  2351  000E90  EF4D  F007         	goto	u940
  2352  000E94                     u941:
  2353  000E94  FFFF               	dw	65535	; assembler added errata NOP
  2354  000E96  EF5F  F007         	goto	l1726
  2355  000E9A                     u940:
  2356  000E9A  FFFF               	dw	65535	; assembler added errata NOP
  2357  000E9C                     
  2358                           ;main.c: 308:                     queueUp[tasksUp] = 3;
  2359  000E9C  90D8               	bcf	status,0,c
  2360  000E9E  345D               	rlcf	_tasksUp^0,w,c
  2361  000EA0  6ED9               	movwf	fsr2l,c
  2362  000EA2  345E               	rlcf	(_tasksUp+1)^0,w,c
  2363  000EA4  6EDA               	movwf	fsr2h,c
  2364  000EA6  0E00               	movlw	low _queueUp
  2365  000EA8  26D9               	addwf	fsr2l,f,c
  2366  000EAA  0E03               	movlw	high _queueUp
  2367  000EAC  22DA               	addwfc	fsr2h,f,c
  2368  000EAE  0E03               	movlw	3
  2369  000EB0  6EDE               	movwf	postinc2,c
  2370  000EB2  0E00               	movlw	0
  2371  000EB4  6EDD               	movwf	postdec2,c
  2372  000EB6                     
  2373                           ;main.c: 309:                     tasksUp++;
  2374  000EB6  4A5D               	infsnz	_tasksUp^0,f,c
  2375  000EB8  2A5E               	incf	(_tasksUp+1)^0,f,c
  2376                           
  2377                           ;main.c: 310:                 } else {
  2378  000EBA  EF6F  F007         	goto	l1730
  2379  000EBE                     l1726:
  2380  000EBE  FFFF               	dw	65535	; assembler added errata NOP
  2381                           
  2382                           ;main.c: 311:                     queueDown[tasksDown] = 3;
  2383  000EC0  90D8               	bcf	status,0,c
  2384  000EC2  345F               	rlcf	_tasksDown^0,w,c
  2385  000EC4  6ED9               	movwf	fsr2l,c
  2386  000EC6  3460               	rlcf	(_tasksDown+1)^0,w,c
  2387  000EC8  6EDA               	movwf	fsr2h,c
  2388  000ECA  0E00               	movlw	low _queueDown
  2389  000ECC  26D9               	addwf	fsr2l,f,c
  2390  000ECE  0E04               	movlw	high _queueDown
  2391  000ED0  22DA               	addwfc	fsr2h,f,c
  2392  000ED2  0E03               	movlw	3
  2393  000ED4  6EDE               	movwf	postinc2,c
  2394  000ED6  0E00               	movlw	0
  2395  000ED8  6EDD               	movwf	postdec2,c
  2396  000EDA                     
  2397                           ;main.c: 312:                     tasksDown++;
  2398  000EDA  4A5F               	infsnz	_tasksDown^0,f,c
  2399  000EDC  2A60               	incf	(_tasksDown+1)^0,f,c
  2400  000EDE                     l1730:
  2401  000EDE  FFFF               	dw	65535	; assembler added errata NOP
  2402                           
  2403                           ;main.c: 317:         if (PORTAbits.RA3) {
  2404  000EE0  A680               	btfss	128,3,c	;volatile
  2405  000EE2  EF75  F007         	goto	u951
  2406  000EE6  EF78  F007         	goto	u950
  2407  000EEA                     u951:
  2408  000EEA  FFFF               	dw	65535	; assembler added errata NOP
  2409  000EEC  EFAA  F007         	goto	l1742
  2410  000EF0                     u950:
  2411  000EF0  FFFF               	dw	65535	; assembler added errata NOP
  2412  000EF2                     
  2413                           ;main.c: 319:                 if (nowFL < 4) {
  2414  000EF2  BE56               	btfsc	(_nowFL+1)^0,7,c
  2415  000EF4  EF88  F007         	goto	u960
  2416  000EF8  5056               	movf	(_nowFL+1)^0,w,c
  2417  000EFA  E107               	bnz	u961
  2418  000EFC  0E04               	movlw	4
  2419  000EFE  5C55               	subwf	_nowFL^0,w,c
  2420  000F00  B0D8               	btfsc	status,0,c
  2421  000F02  EF85  F007         	goto	u961
  2422  000F06  EF88  F007         	goto	u960
  2423  000F0A                     u961:
  2424  000F0A  FFFF               	dw	65535	; assembler added errata NOP
  2425  000F0C  EF9A  F007         	goto	l1738
  2426  000F10                     u960:
  2427  000F10  FFFF               	dw	65535	; assembler added errata NOP
  2428  000F12                     
  2429                           ;main.c: 320:                     queueUp[tasksUp] = 4;
  2430  000F12  90D8               	bcf	status,0,c
  2431  000F14  345D               	rlcf	_tasksUp^0,w,c
  2432  000F16  6ED9               	movwf	fsr2l,c
  2433  000F18  345E               	rlcf	(_tasksUp+1)^0,w,c
  2434  000F1A  6EDA               	movwf	fsr2h,c
  2435  000F1C  0E00               	movlw	low _queueUp
  2436  000F1E  26D9               	addwf	fsr2l,f,c
  2437  000F20  0E03               	movlw	high _queueUp
  2438  000F22  22DA               	addwfc	fsr2h,f,c
  2439  000F24  0E04               	movlw	4
  2440  000F26  6EDE               	movwf	postinc2,c
  2441  000F28  0E00               	movlw	0
  2442  000F2A  6EDD               	movwf	postdec2,c
  2443  000F2C                     
  2444                           ;main.c: 321:                     tasksUp++;
  2445  000F2C  4A5D               	infsnz	_tasksUp^0,f,c
  2446  000F2E  2A5E               	incf	(_tasksUp+1)^0,f,c
  2447                           
  2448                           ;main.c: 322:                 } else {
  2449  000F30  EFAA  F007         	goto	l1742
  2450  000F34                     l1738:
  2451  000F34  FFFF               	dw	65535	; assembler added errata NOP
  2452                           
  2453                           ;main.c: 323:                     queueDown[tasksDown] = 4;
  2454  000F36  90D8               	bcf	status,0,c
  2455  000F38  345F               	rlcf	_tasksDown^0,w,c
  2456  000F3A  6ED9               	movwf	fsr2l,c
  2457  000F3C  3460               	rlcf	(_tasksDown+1)^0,w,c
  2458  000F3E  6EDA               	movwf	fsr2h,c
  2459  000F40  0E00               	movlw	low _queueDown
  2460  000F42  26D9               	addwf	fsr2l,f,c
  2461  000F44  0E04               	movlw	high _queueDown
  2462  000F46  22DA               	addwfc	fsr2h,f,c
  2463  000F48  0E04               	movlw	4
  2464  000F4A  6EDE               	movwf	postinc2,c
  2465  000F4C  0E00               	movlw	0
  2466  000F4E  6EDD               	movwf	postdec2,c
  2467  000F50                     
  2468                           ;main.c: 324:                     tasksDown++;
  2469  000F50  4A5F               	infsnz	_tasksDown^0,f,c
  2470  000F52  2A60               	incf	(_tasksDown+1)^0,f,c
  2471  000F54                     l1742:
  2472  000F54  FFFF               	dw	65535	; assembler added errata NOP
  2473                           
  2474                           ;main.c: 328:     } while (!PORTAbits.RA4);
  2475  000F56  A880               	btfss	128,4,c	;volatile
  2476  000F58  EFB0  F007         	goto	u971
  2477  000F5C  EFB3  F007         	goto	u970
  2478  000F60                     u971:
  2479  000F60  FFFF               	dw	65535	; assembler added errata NOP
  2480  000F62  EFBF  F006         	goto	l105
  2481  000F66                     u970:
  2482  000F66  FFFF               	dw	65535	; assembler added errata NOP
  2483  000F68                     
  2484                           ;main.c: 331:     sort(&queueUp[0], tasksUp);
  2485  000F68  0E00               	movlw	low _queueUp
  2486  000F6A  6E1F               	movwf	sort@p^0,c
  2487  000F6C  0E03               	movlw	high _queueUp
  2488  000F6E  6E20               	movwf	(sort@p+1)^0,c
  2489  000F70  C05D  F021         	movff	_tasksUp,sort@sizes
  2490  000F74  C05E  F022         	movff	_tasksUp+1,sort@sizes+1
  2491  000F78  EC8C  F004         	call	_sort	;wreg free
  2492                           
  2493                           ;main.c: 332:     int new_size = noRepeat(&queueUp[0], tasksUp);
  2494  000F7C  0E00               	movlw	low _queueUp
  2495  000F7E  6E1F               	movwf	noRepeat@po^0,c
  2496  000F80  0E03               	movlw	high _queueUp
  2497  000F82  6E20               	movwf	(noRepeat@po+1)^0,c
  2498  000F84  C05D  F021         	movff	_tasksUp,noRepeat@sixes
  2499  000F88  C05E  F022         	movff	_tasksUp+1,noRepeat@sixes+1
  2500  000F8C  EC5C  F009         	call	_noRepeat	;wreg free
  2501  000F90  C01F  F031         	movff	?_noRepeat,dataPanelUp@new_size
  2502  000F94  C020  F032         	movff	?_noRepeat+1,dataPanelUp@new_size+1
  2503  000F98                     
  2504                           ;main.c: 333:     tasksUp = new_size;
  2505  000F98  C031  F05D         	movff	dataPanelUp@new_size,_tasksUp
  2506  000F9C  C032  F05E         	movff	dataPanelUp@new_size+1,_tasksUp+1
  2507  000FA0  0012               	return		;funcret
  2508  000FA2  FFFF               	dw	65535	; errata NOP
  2509  000FA4                     __end_of_dataPanelUp:
  2510                           	callstack 0
  2511                           
  2512 ;; *************** function _sort *****************
  2513 ;; Defined at:
  2514 ;;		line 237 in file "main.c"
  2515 ;; Parameters:    Size  Location     Type
  2516 ;;  p               2   30[COMRAM] PTR int 
  2517 ;;		 -> queueDown(200), queueUp(200), 
  2518 ;;  sizes           2   32[COMRAM] int 
  2519 ;; Auto vars:     Size  Location     Type
  2520 ;;  k               2  206[BANK2 ] int 
  2521 ;;  h               2  212[BANK2 ] int 
  2522 ;;  j               2  208[BANK2 ] int 
  2523 ;;  result        200    0[BANK2 ] int [100]
  2524 ;;  temp            2  210[BANK2 ] int 
  2525 ;;  sizesMod        2  204[BANK2 ] int 
  2526 ;;  nums            2  202[BANK2 ] int 
  2527 ;;  pos             2  200[BANK2 ] int 
  2528 ;; Return value:  Size  Location     Type
  2529 ;;                  1    wreg      void 
  2530 ;; Registers used:
  2531 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2532 ;; Tracked objects:
  2533 ;;		On entry : 0/0
  2534 ;;		On exit  : 0/0
  2535 ;;		Unchanged: 0/0
  2536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2537 ;;      Params:         4       0       0       0       0       0       0
  2538 ;;      Locals:         0       0       0     214       0       0       0
  2539 ;;      Temps:          5       0       0       0       0       0       0
  2540 ;;      Totals:         9       0       0     214       0       0       0
  2541 ;;Total ram usage:      223 bytes
  2542 ;; Hardware stack levels used: 1
  2543 ;; Hardware stack levels required when called: 2
  2544 ;; This function calls:
  2545 ;;		Nothing
  2546 ;; This function is called by:
  2547 ;;		_dataPanelUp
  2548 ;;		_rutine_up
  2549 ;; This function uses a non-reentrant model
  2550 ;;
  2551                           
  2552                           	psect	text6
  2553  000918                     __ptext6:
  2554                           	callstack 0
  2555  000918                     _sort:
  2556                           	callstack 0
  2557  000918  FFFF               	dw	65535	; assembler added errata NOP
  2558  00091A                     
  2559                           ;main.c: 238:     int temp, nums = 0, pos = 0, sizesMod = sizes;
  2560  00091A  0E00               	movlw	0
  2561  00091C  0102               	movlb	2	; () banked
  2562  00091E  6FCB               	movwf	(sort@nums+1)& (0+255),b
  2563  000920  0E00               	movlw	0
  2564  000922  6FCA               	movwf	sort@nums& (0+255),b
  2565  000924  0E00               	movlw	0
  2566  000926  6FC9               	movwf	(sort@pos+1)& (0+255),b
  2567  000928  0E00               	movlw	0
  2568  00092A  6FC8               	movwf	sort@pos& (0+255),b
  2569  00092C                     
  2570                           ; BSR set to: 2
  2571  00092C  C021  F2CC         	movff	sort@sizes,sort@sizesMod
  2572  000930  C022  F2CD         	movff	sort@sizes+1,sort@sizesMod+1
  2573  000934                     l1654:
  2574  000934  FFFF               	dw	65535	; assembler added errata NOP
  2575                           
  2576                           ; BSR set to: 2
  2577                           ;main.c: 245:         temp = *(p + 0);
  2578  000936  C01F  FFD9         	movff	sort@p,fsr2l
  2579  00093A  C020  FFDA         	movff	sort@p+1,fsr2h
  2580  00093E  CFDE F2D2          	movff	postinc2,sort@temp
  2581  000942  CFDD F2D3          	movff	postdec2,sort@temp+1
  2582  000946                     
  2583                           ; BSR set to: 2
  2584                           ;main.c: 247:         for (int h = 0; h < sizesMod; h++) {
  2585  000946  0E00               	movlw	0
  2586  000948  6FD5               	movwf	(sort@h+1)& (0+255),b
  2587  00094A  0E00               	movlw	0
  2588  00094C  6FD4               	movwf	sort@h& (0+255),b
  2589  00094E  EFF4  F004         	goto	l1672
  2590  000952                     l1658:
  2591  000952  FFFF               	dw	65535	; assembler added errata NOP
  2592                           
  2593                           ; BSR set to: 2
  2594                           ;main.c: 249:             if (*(p + h) == temp) {
  2595  000954  90D8               	bcf	status,0,c
  2596  000956  35D4               	rlcf	sort@h& (0+255),w,b
  2597  000958  6ED9               	movwf	fsr2l,c
  2598  00095A  35D5               	rlcf	(sort@h+1)& (0+255),w,b
  2599  00095C  6EDA               	movwf	fsr2h,c
  2600  00095E  501F               	movf	sort@p^0,w,c
  2601  000960  26D9               	addwf	fsr2l,f,c
  2602  000962  5020               	movf	(sort@p+1)^0,w,c
  2603  000964  22DA               	addwfc	fsr2h,f,c
  2604  000966  51D2               	movf	sort@temp& (0+255),w,b
  2605  000968  18DE               	xorwf	postinc2,w,c
  2606  00096A  E107               	bnz	u831
  2607  00096C  51D3               	movf	(sort@temp+1)& (0+255),w,b
  2608  00096E  18DE               	xorwf	postinc2,w,c
  2609  000970  A4D8               	btfss	status,2,c
  2610  000972  EFBD  F004         	goto	u831
  2611  000976  EFC0  F004         	goto	u830
  2612  00097A                     u831:
  2613  00097A  FFFF               	dw	65535	; assembler added errata NOP
  2614  00097C  EFC5  F004         	goto	l1664
  2615  000980                     u830:
  2616  000980  FFFF               	dw	65535	; assembler added errata NOP
  2617  000982                     
  2618                           ; BSR set to: 2
  2619                           ;main.c: 251:                 pos = h;
  2620  000982  C2D4  F2C8         	movff	sort@h,sort@pos
  2621  000986  C2D5  F2C9         	movff	sort@h+1,sort@pos+1
  2622  00098A                     l1664:
  2623  00098A  FFFF               	dw	65535	; assembler added errata NOP
  2624                           
  2625                           ; BSR set to: 2
  2626                           ;main.c: 258:             if (*(p + h) < temp) {
  2627  00098C  90D8               	bcf	status,0,c
  2628  00098E  35D4               	rlcf	sort@h& (0+255),w,b
  2629  000990  6ED9               	movwf	fsr2l,c
  2630  000992  35D5               	rlcf	(sort@h+1)& (0+255),w,b
  2631  000994  6EDA               	movwf	fsr2h,c
  2632  000996  501F               	movf	sort@p^0,w,c
  2633  000998  26D9               	addwf	fsr2l,f,c
  2634  00099A  5020               	movf	(sort@p+1)^0,w,c
  2635  00099C  22DA               	addwfc	fsr2h,f,c
  2636  00099E  51D2               	movf	sort@temp& (0+255),w,b
  2637  0009A0  5CDE               	subwf	postinc2,w,c
  2638  0009A2  50DE               	movf	postinc2,w,c
  2639  0009A4  0A80               	xorlw	128
  2640  0009A6  6E25               	movwf	(??_sort+2)^0,c
  2641  0009A8  51D3               	movf	(sort@temp+1)& (0+255),w,b
  2642  0009AA  0A80               	xorlw	128
  2643  0009AC  5825               	subwfb	(??_sort+2)^0,w,c
  2644  0009AE  B0D8               	btfsc	status,0,c
  2645  0009B0  EFDC  F004         	goto	u841
  2646  0009B4  EFDF  F004         	goto	u840
  2647  0009B8                     u841:
  2648  0009B8  FFFF               	dw	65535	; assembler added errata NOP
  2649  0009BA  EFF1  F004         	goto	l1670
  2650  0009BE                     u840:
  2651  0009BE  FFFF               	dw	65535	; assembler added errata NOP
  2652  0009C0                     
  2653                           ; BSR set to: 2
  2654                           ;main.c: 259:                 temp = *(p + h);
  2655  0009C0  90D8               	bcf	status,0,c
  2656  0009C2  35D4               	rlcf	sort@h& (0+255),w,b
  2657  0009C4  6ED9               	movwf	fsr2l,c
  2658  0009C6  35D5               	rlcf	(sort@h+1)& (0+255),w,b
  2659  0009C8  6EDA               	movwf	fsr2h,c
  2660  0009CA  501F               	movf	sort@p^0,w,c
  2661  0009CC  26D9               	addwf	fsr2l,f,c
  2662  0009CE  5020               	movf	(sort@p+1)^0,w,c
  2663  0009D0  22DA               	addwfc	fsr2h,f,c
  2664  0009D2  CFDE F2D2          	movff	postinc2,sort@temp
  2665  0009D6  CFDD F2D3          	movff	postdec2,sort@temp+1
  2666  0009DA                     
  2667                           ; BSR set to: 2
  2668                           ;main.c: 260:                 pos = h;
  2669  0009DA  C2D4  F2C8         	movff	sort@h,sort@pos
  2670  0009DE  C2D5  F2C9         	movff	sort@h+1,sort@pos+1
  2671  0009E2                     l1670:
  2672  0009E2  FFFF               	dw	65535	; assembler added errata NOP
  2673                           
  2674                           ; BSR set to: 2
  2675                           ;main.c: 262:         }
  2676  0009E4  4BD4               	infsnz	sort@h& (0+255),f,b
  2677  0009E6  2BD5               	incf	(sort@h+1)& (0+255),f,b
  2678  0009E8                     l1672:
  2679  0009E8  FFFF               	dw	65535	; assembler added errata NOP
  2680                           
  2681                           ; BSR set to: 2
  2682  0009EA  51CC               	movf	sort@sizesMod& (0+255),w,b
  2683  0009EC  5DD4               	subwf	sort@h& (0+255),w,b
  2684  0009EE  51D5               	movf	(sort@h+1)& (0+255),w,b
  2685  0009F0  0A80               	xorlw	128
  2686  0009F2  6E23               	movwf	??_sort^0,c
  2687  0009F4  51CD               	movf	(sort@sizesMod+1)& (0+255),w,b
  2688  0009F6  0A80               	xorlw	128
  2689  0009F8  5823               	subwfb	??_sort^0,w,c
  2690  0009FA  A0D8               	btfss	status,0,c
  2691  0009FC  EF02  F005         	goto	u851
  2692  000A00  EF05  F005         	goto	u850
  2693  000A04                     u851:
  2694  000A04  FFFF               	dw	65535	; assembler added errata NOP
  2695  000A06  EFA9  F004         	goto	l1658
  2696  000A0A                     u850:
  2697  000A0A  FFFF               	dw	65535	; assembler added errata NOP
  2698  000A0C                     
  2699                           ; BSR set to: 2
  2700                           ;main.c: 265:         for (int k = pos; k < sizesMod; k++) {
  2701  000A0C  C2C8  F2CE         	movff	sort@pos,sort@k
  2702  000A10  C2C9  F2CF         	movff	sort@pos+1,sort@k+1
  2703  000A14  EF31  F005         	goto	l1678
  2704  000A18                     l1674:
  2705  000A18  FFFF               	dw	65535	; assembler added errata NOP
  2706                           
  2707                           ; BSR set to: 2
  2708                           ;main.c: 266:             *(p + k) = *(p + (k + 1));
  2709  000A1A  C2CE  F023         	movff	sort@k,??_sort
  2710  000A1E  C2CF  F024         	movff	sort@k+1,??_sort+1
  2711  000A22  90D8               	bcf	status,0,c
  2712  000A24  3623               	rlcf	??_sort^0,f,c
  2713  000A26  3624               	rlcf	(??_sort+1)^0,f,c
  2714  000A28  C01F  F025         	movff	sort@p,??_sort+2
  2715  000A2C  C020  F026         	movff	sort@p+1,??_sort+3
  2716  000A30  5023               	movf	??_sort^0,w,c
  2717  000A32  2625               	addwf	(??_sort+2)^0,f,c
  2718  000A34  5024               	movf	(??_sort+1)^0,w,c
  2719  000A36  2226               	addwfc	(??_sort+3)^0,f,c
  2720  000A38  0E02               	movlw	2
  2721  000A3A  2425               	addwf	(??_sort+2)^0,w,c
  2722  000A3C  6ED9               	movwf	fsr2l,c
  2723  000A3E  0E00               	movlw	0
  2724  000A40  2026               	addwfc	(??_sort+3)^0,w,c
  2725  000A42  6EDA               	movwf	fsr2h,c
  2726  000A44  90D8               	bcf	status,0,c
  2727  000A46  35CE               	rlcf	sort@k& (0+255),w,b
  2728  000A48  6EE1               	movwf	fsr1l,c
  2729  000A4A  35CF               	rlcf	(sort@k+1)& (0+255),w,b
  2730  000A4C  6EE2               	movwf	fsr1h,c
  2731  000A4E  501F               	movf	sort@p^0,w,c
  2732  000A50  26E1               	addwf	fsr1l,f,c
  2733  000A52  5020               	movf	(sort@p+1)^0,w,c
  2734  000A54  22E2               	addwfc	fsr1h,f,c
  2735  000A56  CFDE FFE6          	movff	postinc2,postinc1
  2736  000A5A  CFDD FFE5          	movff	postdec2,postdec1
  2737  000A5E                     
  2738                           ; BSR set to: 2
  2739                           ;main.c: 267:         }
  2740  000A5E  4BCE               	infsnz	sort@k& (0+255),f,b
  2741  000A60  2BCF               	incf	(sort@k+1)& (0+255),f,b
  2742  000A62                     l1678:
  2743  000A62  FFFF               	dw	65535	; assembler added errata NOP
  2744                           
  2745                           ; BSR set to: 2
  2746  000A64  51CC               	movf	sort@sizesMod& (0+255),w,b
  2747  000A66  5DCE               	subwf	sort@k& (0+255),w,b
  2748  000A68  51CF               	movf	(sort@k+1)& (0+255),w,b
  2749  000A6A  0A80               	xorlw	128
  2750  000A6C  6E23               	movwf	??_sort^0,c
  2751  000A6E  51CD               	movf	(sort@sizesMod+1)& (0+255),w,b
  2752  000A70  0A80               	xorlw	128
  2753  000A72  5823               	subwfb	??_sort^0,w,c
  2754  000A74  A0D8               	btfss	status,0,c
  2755  000A76  EF3F  F005         	goto	u861
  2756  000A7A  EF42  F005         	goto	u860
  2757  000A7E                     u861:
  2758  000A7E  FFFF               	dw	65535	; assembler added errata NOP
  2759  000A80  EF0C  F005         	goto	l1674
  2760  000A84                     u860:
  2761  000A84  FFFF               	dw	65535	; assembler added errata NOP
  2762  000A86                     
  2763                           ; BSR set to: 2
  2764                           ;main.c: 268:         result[nums] = temp;
  2765  000A86  90D8               	bcf	status,0,c
  2766  000A88  35CA               	rlcf	sort@nums& (0+255),w,b
  2767  000A8A  6ED9               	movwf	fsr2l,c
  2768  000A8C  35CB               	rlcf	(sort@nums+1)& (0+255),w,b
  2769  000A8E  6EDA               	movwf	fsr2h,c
  2770  000A90  0E00               	movlw	low sort@result
  2771  000A92  26D9               	addwf	fsr2l,f,c
  2772  000A94  0E02               	movlw	high sort@result
  2773  000A96  22DA               	addwfc	fsr2h,f,c
  2774  000A98  C2D2  FFDE         	movff	sort@temp,postinc2
  2775  000A9C  C2D3  FFDD         	movff	sort@temp+1,postdec2
  2776  000AA0                     
  2777                           ; BSR set to: 2
  2778                           ;main.c: 269:         sizesMod--;
  2779  000AA0  07CC               	decf	sort@sizesMod& (0+255),f,b
  2780  000AA2  A0D8               	btfss	status,0,c
  2781  000AA4  07CD               	decf	(sort@sizesMod+1)& (0+255),f,b
  2782  000AA6                     
  2783                           ; BSR set to: 2
  2784                           ;main.c: 270:         nums++;
  2785  000AA6  4BCA               	infsnz	sort@nums& (0+255),f,b
  2786  000AA8  2BCB               	incf	(sort@nums+1)& (0+255),f,b
  2787  000AAA                     
  2788                           ; BSR set to: 2
  2789                           ;main.c: 271:     } while (nums <= sizes - 1);
  2790  000AAA  0EFF               	movlw	255
  2791  000AAC  6E23               	movwf	??_sort^0,c
  2792  000AAE  0EFF               	movlw	255
  2793  000AB0  6E24               	movwf	(??_sort+1)^0,c
  2794  000AB2  C021  F025         	movff	sort@sizes,??_sort+2
  2795  000AB6  C022  F026         	movff	sort@sizes+1,??_sort+3
  2796  000ABA  5023               	movf	??_sort^0,w,c
  2797  000ABC  2625               	addwf	(??_sort+2)^0,f,c
  2798  000ABE  5024               	movf	(??_sort+1)^0,w,c
  2799  000AC0  2226               	addwfc	(??_sort+3)^0,f,c
  2800  000AC2  51CA               	movf	sort@nums& (0+255),w,b
  2801  000AC4  5C25               	subwf	(??_sort+2)^0,w,c
  2802  000AC6  5026               	movf	(??_sort+3)^0,w,c
  2803  000AC8  0A80               	xorlw	128
  2804  000ACA  6E27               	movwf	(??_sort+4)^0,c
  2805  000ACC  51CB               	movf	(sort@nums+1)& (0+255),w,b
  2806  000ACE  0A80               	xorlw	128
  2807  000AD0  5827               	subwfb	(??_sort+4)^0,w,c
  2808  000AD2  B0D8               	btfsc	status,0,c
  2809  000AD4  EF6E  F005         	goto	u871
  2810  000AD8  EF71  F005         	goto	u870
  2811  000ADC                     u871:
  2812  000ADC  FFFF               	dw	65535	; assembler added errata NOP
  2813  000ADE  EF9A  F004         	goto	l1654
  2814  000AE2                     u870:
  2815  000AE2  FFFF               	dw	65535	; assembler added errata NOP
  2816  000AE4                     
  2817                           ; BSR set to: 2
  2818                           ;main.c: 274:     for (int j = 0; j < sizes; j++) {
  2819  000AE4  0E00               	movlw	0
  2820  000AE6  6FD1               	movwf	(sort@j+1)& (0+255),b
  2821  000AE8  0E00               	movlw	0
  2822  000AEA  6FD0               	movwf	sort@j& (0+255),b
  2823  000AEC  EF91  F005         	goto	l1694
  2824  000AF0                     l1690:
  2825  000AF0  FFFF               	dw	65535	; assembler added errata NOP
  2826                           
  2827                           ; BSR set to: 2
  2828                           ;main.c: 275:         *(p + j) = result[j];
  2829  000AF2  90D8               	bcf	status,0,c
  2830  000AF4  35D0               	rlcf	sort@j& (0+255),w,b
  2831  000AF6  6ED9               	movwf	fsr2l,c
  2832  000AF8  35D1               	rlcf	(sort@j+1)& (0+255),w,b
  2833  000AFA  6EDA               	movwf	fsr2h,c
  2834  000AFC  0E00               	movlw	low sort@result
  2835  000AFE  26D9               	addwf	fsr2l,f,c
  2836  000B00  0E02               	movlw	high sort@result
  2837  000B02  22DA               	addwfc	fsr2h,f,c
  2838  000B04  90D8               	bcf	status,0,c
  2839  000B06  35D0               	rlcf	sort@j& (0+255),w,b
  2840  000B08  6EE1               	movwf	fsr1l,c
  2841  000B0A  35D1               	rlcf	(sort@j+1)& (0+255),w,b
  2842  000B0C  6EE2               	movwf	fsr1h,c
  2843  000B0E  501F               	movf	sort@p^0,w,c
  2844  000B10  26E1               	addwf	fsr1l,f,c
  2845  000B12  5020               	movf	(sort@p+1)^0,w,c
  2846  000B14  22E2               	addwfc	fsr1h,f,c
  2847  000B16  CFDE FFE6          	movff	postinc2,postinc1
  2848  000B1A  CFDD FFE5          	movff	postdec2,postdec1
  2849  000B1E                     
  2850                           ; BSR set to: 2
  2851                           ;main.c: 276:     }
  2852  000B1E  4BD0               	infsnz	sort@j& (0+255),f,b
  2853  000B20  2BD1               	incf	(sort@j+1)& (0+255),f,b
  2854  000B22                     l1694:
  2855  000B22  FFFF               	dw	65535	; assembler added errata NOP
  2856                           
  2857                           ; BSR set to: 2
  2858  000B24  5021               	movf	sort@sizes^0,w,c
  2859  000B26  5DD0               	subwf	sort@j& (0+255),w,b
  2860  000B28  51D1               	movf	(sort@j+1)& (0+255),w,b
  2861  000B2A  0A80               	xorlw	128
  2862  000B2C  6E23               	movwf	??_sort^0,c
  2863  000B2E  5022               	movf	(sort@sizes+1)^0,w,c
  2864  000B30  0A80               	xorlw	128
  2865  000B32  5823               	subwfb	??_sort^0,w,c
  2866  000B34  A0D8               	btfss	status,0,c
  2867  000B36  EF9F  F005         	goto	u881
  2868  000B3A  EFA2  F005         	goto	u880
  2869  000B3E                     u881:
  2870  000B3E  FFFF               	dw	65535	; assembler added errata NOP
  2871  000B40  EF78  F005         	goto	l1690
  2872  000B44                     u880:
  2873  000B44  FFFF               	dw	65535	; assembler added errata NOP
  2874  000B46                     
  2875                           ; BSR set to: 2
  2876  000B46  0012               	return		;funcret
  2877  000B48  FFFF               	dw	65535	; errata NOP
  2878  000B4A                     __end_of_sort:
  2879                           	callstack 0
  2880                           
  2881 ;; *************** function _noRepeat *****************
  2882 ;; Defined at:
  2883 ;;		line 206 in file "main.c"
  2884 ;; Parameters:    Size  Location     Type
  2885 ;;  po              2   30[COMRAM] PTR int 
  2886 ;;		 -> queueDown(200), queueUp(200), 
  2887 ;;  sixes           2   32[COMRAM] int 
  2888 ;; Auto vars:     Size  Location     Type
  2889 ;;  shift           2   40[COMRAM] int 
  2890 ;;  t               2   38[COMRAM] int 
  2891 ;;  comp            2   46[COMRAM] int 
  2892 ;;  temp            2   42[COMRAM] int 
  2893 ;;  size            2   44[COMRAM] int 
  2894 ;; Return value:  Size  Location     Type
  2895 ;;                  2   30[COMRAM] int 
  2896 ;; Registers used:
  2897 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2898 ;; Tracked objects:
  2899 ;;		On entry : 0/0
  2900 ;;		On exit  : 0/0
  2901 ;;		Unchanged: 0/0
  2902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2903 ;;      Params:         4       0       0       0       0       0       0
  2904 ;;      Locals:        10       0       0       0       0       0       0
  2905 ;;      Temps:          4       0       0       0       0       0       0
  2906 ;;      Totals:        18       0       0       0       0       0       0
  2907 ;;Total ram usage:       18 bytes
  2908 ;; Hardware stack levels used: 1
  2909 ;; Hardware stack levels required when called: 2
  2910 ;; This function calls:
  2911 ;;		Nothing
  2912 ;; This function is called by:
  2913 ;;		_dataPanelUp
  2914 ;;		_rutine_up
  2915 ;; This function uses a non-reentrant model
  2916 ;;
  2917                           
  2918                           	psect	text7
  2919  0012B8                     __ptext7:
  2920                           	callstack 0
  2921  0012B8                     _noRepeat:
  2922                           	callstack 0
  2923  0012B8  FFFF               	dw	65535	; assembler added errata NOP
  2924  0012BA                     
  2925                           ;main.c: 207:     int size = sixes;
  2926  0012BA  C021  F02D         	movff	noRepeat@sixes,noRepeat@size
  2927  0012BE  C022  F02E         	movff	noRepeat@sixes+1,noRepeat@size+1
  2928  0012C2                     
  2929                           ;main.c: 215:     for (int temp = 0; temp < size; temp++){
  2930  0012C2  0E00               	movlw	0
  2931  0012C4  6E2C               	movwf	(noRepeat@temp+1)^0,c
  2932  0012C6  0E00               	movlw	0
  2933  0012C8  6E2B               	movwf	noRepeat@temp^0,c
  2934  0012CA  EFF1  F009         	goto	l1648
  2935  0012CE                     l1628:
  2936  0012CE  FFFF               	dw	65535	; assembler added errata NOP
  2937                           
  2938                           ;main.c: 217:         for(int comp = temp + 1; comp < size; comp++){
  2939  0012D0  0E01               	movlw	1
  2940  0012D2  242B               	addwf	noRepeat@temp^0,w,c
  2941  0012D4  6E2F               	movwf	noRepeat@comp^0,c
  2942  0012D6  0E00               	movlw	0
  2943  0012D8  202C               	addwfc	(noRepeat@temp+1)^0,w,c
  2944  0012DA  6E30               	movwf	(noRepeat@comp+1)^0,c
  2945  0012DC  EFDD  F009         	goto	l1644
  2946  0012E0                     l1630:
  2947  0012E0  FFFF               	dw	65535	; assembler added errata NOP
  2948                           
  2949                           ;main.c: 219:             if (*(po + temp) == *(po + comp)){
  2950  0012E2  90D8               	bcf	status,0,c
  2951  0012E4  342F               	rlcf	noRepeat@comp^0,w,c
  2952  0012E6  6ED9               	movwf	fsr2l,c
  2953  0012E8  3430               	rlcf	(noRepeat@comp+1)^0,w,c
  2954  0012EA  6EDA               	movwf	fsr2h,c
  2955  0012EC  501F               	movf	noRepeat@po^0,w,c
  2956  0012EE  26D9               	addwf	fsr2l,f,c
  2957  0012F0  5020               	movf	(noRepeat@po+1)^0,w,c
  2958  0012F2  22DA               	addwfc	fsr2h,f,c
  2959  0012F4  90D8               	bcf	status,0,c
  2960  0012F6  342B               	rlcf	noRepeat@temp^0,w,c
  2961  0012F8  6EE1               	movwf	fsr1l,c
  2962  0012FA  342C               	rlcf	(noRepeat@temp+1)^0,w,c
  2963  0012FC  6EE2               	movwf	fsr1h,c
  2964  0012FE  501F               	movf	noRepeat@po^0,w,c
  2965  001300  26E1               	addwf	fsr1l,f,c
  2966  001302  5020               	movf	(noRepeat@po+1)^0,w,c
  2967  001304  22E2               	addwfc	fsr1h,f,c
  2968  001306  50DE               	movf	postinc2,w,c
  2969  001308  18E6               	xorwf	postinc1,w,c
  2970  00130A  E107               	bnz	u791
  2971  00130C  50DE               	movf	postinc2,w,c
  2972  00130E  18E6               	xorwf	postinc1,w,c
  2973  001310  A4D8               	btfss	status,2,c
  2974  001312  EF8D  F009         	goto	u791
  2975  001316  EF90  F009         	goto	u790
  2976  00131A                     u791:
  2977  00131A  FFFF               	dw	65535	; assembler added errata NOP
  2978  00131C  EFDA  F009         	goto	l79
  2979  001320                     u790:
  2980  001320  FFFF               	dw	65535	; assembler added errata NOP
  2981  001322                     
  2982                           ;main.c: 220:                 int t = comp;
  2983  001322  C02F  F027         	movff	noRepeat@comp,noRepeat@t
  2984  001326  C030  F028         	movff	noRepeat@comp+1,noRepeat@t+1
  2985                           
  2986                           ;main.c: 222:                 for (int shift = comp; shift < size; shift++){
  2987  00132A  C02F  F029         	movff	noRepeat@comp,noRepeat@shift
  2988  00132E  C030  F02A         	movff	noRepeat@comp+1,noRepeat@shift+1
  2989  001332  EFC2  F009         	goto	l1640
  2990  001336                     l1634:
  2991  001336  FFFF               	dw	65535	; assembler added errata NOP
  2992                           
  2993                           ;main.c: 223:                     *(po + t) = *(po + (shift + 1));
  2994  001338  C029  F023         	movff	noRepeat@shift,??_noRepeat
  2995  00133C  C02A  F024         	movff	noRepeat@shift+1,??_noRepeat+1
  2996  001340  90D8               	bcf	status,0,c
  2997  001342  3623               	rlcf	??_noRepeat^0,f,c
  2998  001344  3624               	rlcf	(??_noRepeat+1)^0,f,c
  2999  001346  C01F  F025         	movff	noRepeat@po,??_noRepeat+2
  3000  00134A  C020  F026         	movff	noRepeat@po+1,??_noRepeat+3
  3001  00134E  5023               	movf	??_noRepeat^0,w,c
  3002  001350  2625               	addwf	(??_noRepeat+2)^0,f,c
  3003  001352  5024               	movf	(??_noRepeat+1)^0,w,c
  3004  001354  2226               	addwfc	(??_noRepeat+3)^0,f,c
  3005  001356  0E02               	movlw	2
  3006  001358  2425               	addwf	(??_noRepeat+2)^0,w,c
  3007  00135A  6ED9               	movwf	fsr2l,c
  3008  00135C  0E00               	movlw	0
  3009  00135E  2026               	addwfc	(??_noRepeat+3)^0,w,c
  3010  001360  6EDA               	movwf	fsr2h,c
  3011  001362  90D8               	bcf	status,0,c
  3012  001364  3427               	rlcf	noRepeat@t^0,w,c
  3013  001366  6EE1               	movwf	fsr1l,c
  3014  001368  3428               	rlcf	(noRepeat@t+1)^0,w,c
  3015  00136A  6EE2               	movwf	fsr1h,c
  3016  00136C  501F               	movf	noRepeat@po^0,w,c
  3017  00136E  26E1               	addwf	fsr1l,f,c
  3018  001370  5020               	movf	(noRepeat@po+1)^0,w,c
  3019  001372  22E2               	addwfc	fsr1h,f,c
  3020  001374  CFDE FFE6          	movff	postinc2,postinc1
  3021  001378  CFDD FFE5          	movff	postdec2,postdec1
  3022  00137C                     
  3023                           ;main.c: 224:                     t++;
  3024  00137C  4A27               	infsnz	noRepeat@t^0,f,c
  3025  00137E  2A28               	incf	(noRepeat@t+1)^0,f,c
  3026  001380                     
  3027                           ;main.c: 225:                 }
  3028  001380  4A29               	infsnz	noRepeat@shift^0,f,c
  3029  001382  2A2A               	incf	(noRepeat@shift+1)^0,f,c
  3030  001384                     l1640:
  3031  001384  FFFF               	dw	65535	; assembler added errata NOP
  3032  001386  502D               	movf	noRepeat@size^0,w,c
  3033  001388  5C29               	subwf	noRepeat@shift^0,w,c
  3034  00138A  502A               	movf	(noRepeat@shift+1)^0,w,c
  3035  00138C  0A80               	xorlw	128
  3036  00138E  6E23               	movwf	??_noRepeat^0,c
  3037  001390  502E               	movf	(noRepeat@size+1)^0,w,c
  3038  001392  0A80               	xorlw	128
  3039  001394  5823               	subwfb	??_noRepeat^0,w,c
  3040  001396  A0D8               	btfss	status,0,c
  3041  001398  EFD0  F009         	goto	u801
  3042  00139C  EFD3  F009         	goto	u800
  3043  0013A0                     u801:
  3044  0013A0  FFFF               	dw	65535	; assembler added errata NOP
  3045  0013A2  EF9B  F009         	goto	l1634
  3046  0013A6                     u800:
  3047  0013A6  FFFF               	dw	65535	; assembler added errata NOP
  3048  0013A8                     
  3049                           ;main.c: 226:                 size--;
  3050  0013A8  062D               	decf	noRepeat@size^0,f,c
  3051  0013AA  A0D8               	btfss	status,0,c
  3052  0013AC  062E               	decf	(noRepeat@size+1)^0,f,c
  3053                           
  3054                           ;main.c: 227:                 comp--;
  3055  0013AE  062F               	decf	noRepeat@comp^0,f,c
  3056  0013B0  A0D8               	btfss	status,0,c
  3057  0013B2  0630               	decf	(noRepeat@comp+1)^0,f,c
  3058  0013B4                     l79:
  3059  0013B4  FFFF               	dw	65535	; assembler added errata NOP
  3060                           
  3061                           ;main.c: 231:         }
  3062  0013B6  4A2F               	infsnz	noRepeat@comp^0,f,c
  3063  0013B8  2A30               	incf	(noRepeat@comp+1)^0,f,c
  3064  0013BA                     l1644:
  3065  0013BA  FFFF               	dw	65535	; assembler added errata NOP
  3066  0013BC  502D               	movf	noRepeat@size^0,w,c
  3067  0013BE  5C2F               	subwf	noRepeat@comp^0,w,c
  3068  0013C0  5030               	movf	(noRepeat@comp+1)^0,w,c
  3069  0013C2  0A80               	xorlw	128
  3070  0013C4  6E23               	movwf	??_noRepeat^0,c
  3071  0013C6  502E               	movf	(noRepeat@size+1)^0,w,c
  3072  0013C8  0A80               	xorlw	128
  3073  0013CA  5823               	subwfb	??_noRepeat^0,w,c
  3074  0013CC  A0D8               	btfss	status,0,c
  3075  0013CE  EFEB  F009         	goto	u811
  3076  0013D2  EFEE  F009         	goto	u810
  3077  0013D6                     u811:
  3078  0013D6  FFFF               	dw	65535	; assembler added errata NOP
  3079  0013D8  EF70  F009         	goto	l1630
  3080  0013DC                     u810:
  3081  0013DC  FFFF               	dw	65535	; assembler added errata NOP
  3082  0013DE                     
  3083                           ;main.c: 232:     }
  3084  0013DE  4A2B               	infsnz	noRepeat@temp^0,f,c
  3085  0013E0  2A2C               	incf	(noRepeat@temp+1)^0,f,c
  3086  0013E2                     l1648:
  3087  0013E2  FFFF               	dw	65535	; assembler added errata NOP
  3088  0013E4  502D               	movf	noRepeat@size^0,w,c
  3089  0013E6  5C2B               	subwf	noRepeat@temp^0,w,c
  3090  0013E8  502C               	movf	(noRepeat@temp+1)^0,w,c
  3091  0013EA  0A80               	xorlw	128
  3092  0013EC  6E23               	movwf	??_noRepeat^0,c
  3093  0013EE  502E               	movf	(noRepeat@size+1)^0,w,c
  3094  0013F0  0A80               	xorlw	128
  3095  0013F2  5823               	subwfb	??_noRepeat^0,w,c
  3096  0013F4  A0D8               	btfss	status,0,c
  3097  0013F6  EFFF  F009         	goto	u821
  3098  0013FA  EF02  F00A         	goto	u820
  3099  0013FE                     u821:
  3100  0013FE  FFFF               	dw	65535	; assembler added errata NOP
  3101  001400  EF67  F009         	goto	l1628
  3102  001404                     u820:
  3103  001404  FFFF               	dw	65535	; assembler added errata NOP
  3104  001406                     
  3105                           ;main.c: 233:     return size;
  3106  001406  C02D  F01F         	movff	noRepeat@size,?_noRepeat
  3107  00140A  C02E  F020         	movff	noRepeat@size+1,?_noRepeat+1
  3108  00140E  0012               	return		;funcret
  3109  001410  FFFF               	dw	65535	; errata NOP
  3110  001412                     __end_of_noRepeat:
  3111                           	callstack 0
  3112                           
  3113 ;; *************** function _rutine_down *****************
  3114 ;; Defined at:
  3115 ;;		line 425 in file "main.c"
  3116 ;; Parameters:    Size  Location     Type
  3117 ;;		None
  3118 ;; Auto vars:     Size  Location     Type
  3119 ;;		None
  3120 ;; Return value:  Size  Location     Type
  3121 ;;                  2   30[COMRAM] int 
  3122 ;; Registers used:
  3123 ;;		wreg, status,2
  3124 ;; Tracked objects:
  3125 ;;		On entry : 0/0
  3126 ;;		On exit  : 0/0
  3127 ;;		Unchanged: 0/0
  3128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3129 ;;      Params:         2       0       0       0       0       0       0
  3130 ;;      Locals:         0       0       0       0       0       0       0
  3131 ;;      Temps:          0       0       0       0       0       0       0
  3132 ;;      Totals:         2       0       0       0       0       0       0
  3133 ;;Total ram usage:        2 bytes
  3134 ;; Hardware stack levels used: 1
  3135 ;; Hardware stack levels required when called: 2
  3136 ;; This function calls:
  3137 ;;		Nothing
  3138 ;; This function is called by:
  3139 ;;		_selectionMode
  3140 ;; This function uses a non-reentrant model
  3141 ;;
  3142                           
  3143                           	psect	text8
  3144  00166C                     __ptext8:
  3145                           	callstack 0
  3146  00166C                     _rutine_down:
  3147                           	callstack 0
  3148  00166C  FFFF               	dw	65535	; assembler added errata NOP
  3149  00166E                     
  3150                           ;main.c: 426:     return 0;
  3151  00166E  0E00               	movlw	0
  3152  001670  6E20               	movwf	(?_rutine_down+1)^0,c
  3153  001672  0E00               	movlw	0
  3154  001674  6E1F               	movwf	?_rutine_down^0,c
  3155  001676  0012               	return		;funcret
  3156  001678  FFFF               	dw	65535	; errata NOP
  3157  00167A                     __end_of_rutine_down:
  3158                           	callstack 0
  3159                           
  3160 ;; *************** function _interruptsInit *****************
  3161 ;; Defined at:
  3162 ;;		line 182 in file "main.c"
  3163 ;; Parameters:    Size  Location     Type
  3164 ;;		None
  3165 ;; Auto vars:     Size  Location     Type
  3166 ;;		None
  3167 ;; Return value:  Size  Location     Type
  3168 ;;                  1    wreg      void 
  3169 ;; Registers used:
  3170 ;;		None
  3171 ;; Tracked objects:
  3172 ;;		On entry : 0/0
  3173 ;;		On exit  : 0/0
  3174 ;;		Unchanged: 0/0
  3175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3176 ;;      Params:         0       0       0       0       0       0       0
  3177 ;;      Locals:         0       0       0       0       0       0       0
  3178 ;;      Temps:          0       0       0       0       0       0       0
  3179 ;;      Totals:         0       0       0       0       0       0       0
  3180 ;;Total ram usage:        0 bytes
  3181 ;; Hardware stack levels used: 1
  3182 ;; Hardware stack levels required when called: 2
  3183 ;; This function calls:
  3184 ;;		Nothing
  3185 ;; This function is called by:
  3186 ;;		_main
  3187 ;; This function uses a non-reentrant model
  3188 ;;
  3189                           
  3190                           	psect	text9
  3191  00167A                     __ptext9:
  3192                           	callstack 0
  3193  00167A                     _interruptsInit:
  3194                           	callstack 0
  3195  00167A  FFFF               	dw	65535	; assembler added errata NOP
  3196  00167C                     
  3197                           ;main.c: 183:     RCONbits.IPEN = 0;
  3198  00167C  9ED0               	bcf	208,7,c	;volatile
  3199                           
  3200                           ;main.c: 184:     INTCONbits.GIE = 1;
  3201  00167E  8EF2               	bsf	242,7,c	;volatile
  3202                           
  3203                           ;main.c: 185:     INTCONbits.PEIE = 1;
  3204  001680  8CF2               	bsf	242,6,c	;volatile
  3205  001682  0012               	return		;funcret
  3206  001684  FFFF               	dw	65535	; errata NOP
  3207  001686                     __end_of_interruptsInit:
  3208                           	callstack 0
  3209                           
  3210 ;; *************** function _bootAscensor *****************
  3211 ;; Defined at:
  3212 ;;		line 188 in file "main.c"
  3213 ;; Parameters:    Size  Location     Type
  3214 ;;		None
  3215 ;; Auto vars:     Size  Location     Type
  3216 ;;		None
  3217 ;; Return value:  Size  Location     Type
  3218 ;;                  1    wreg      void 
  3219 ;; Registers used:
  3220 ;;		wreg, status,2
  3221 ;; Tracked objects:
  3222 ;;		On entry : 0/0
  3223 ;;		On exit  : 0/0
  3224 ;;		Unchanged: 0/0
  3225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3226 ;;      Params:         0       0       0       0       0       0       0
  3227 ;;      Locals:         0       0       0       0       0       0       0
  3228 ;;      Temps:          0       0       0       0       0       0       0
  3229 ;;      Totals:         0       0       0       0       0       0       0
  3230 ;;Total ram usage:        0 bytes
  3231 ;; Hardware stack levels used: 1
  3232 ;; Hardware stack levels required when called: 2
  3233 ;; This function calls:
  3234 ;;		Nothing
  3235 ;; This function is called by:
  3236 ;;		_main
  3237 ;; This function uses a non-reentrant model
  3238 ;;
  3239                           
  3240                           	psect	text10
  3241  0015E4                     __ptext10:
  3242                           	callstack 0
  3243  0015E4                     _bootAscensor:
  3244                           	callstack 0
  3245  0015E4  FFFF               	dw	65535	; assembler added errata NOP
  3246  0015E6                     
  3247                           ;main.c: 189:     LATCbits.LC0 = 1;
  3248  0015E6  808B               	bsf	139,0,c	;volatile
  3249                           
  3250                           ;main.c: 190:     LATCbits.LC1 = 1;
  3251  0015E8  828B               	bsf	139,1,c	;volatile
  3252                           
  3253                           ;main.c: 192:     if (PORTDbits.RD4 == 1) {
  3254  0015EA  A883               	btfss	131,4,c	;volatile
  3255  0015EC  EFFA  F00A         	goto	u371
  3256  0015F0  EFFD  F00A         	goto	u370
  3257  0015F4                     u371:
  3258  0015F4  FFFF               	dw	65535	; assembler added errata NOP
  3259  0015F6  EF05  F00B         	goto	l67
  3260  0015FA                     u370:
  3261  0015FA  FFFF               	dw	65535	; assembler added errata NOP
  3262  0015FC                     l1244:
  3263  0015FC  FFFF               	dw	65535	; assembler added errata NOP
  3264                           
  3265                           ;main.c: 193:         prevFL = 1;
  3266  0015FE  0E00               	movlw	0
  3267  001600  6E54               	movwf	(_prevFL+1)^0,c
  3268  001602  0E01               	movlw	1
  3269  001604  6E53               	movwf	_prevFL^0,c
  3270  001606  EF14  F00B         	goto	l68
  3271  00160A                     l67:
  3272  00160A  FFFF               	dw	65535	; assembler added errata NOP
  3273                           
  3274                           ;main.c: 196:         LATCbits.LC0 = 0;
  3275  00160C  908B               	bcf	139,0,c	;volatile
  3276  00160E                     l70:
  3277  00160E  FFFF               	dw	65535	; assembler added errata NOP
  3278                           
  3279                           ;main.c: 197:         while (!PORTDbits.RD4) {
  3280  001610  A883               	btfss	131,4,c	;volatile
  3281  001612  EF0D  F00B         	goto	u381
  3282  001616  EF10  F00B         	goto	u380
  3283  00161A                     u381:
  3284  00161A  FFFF               	dw	65535	; assembler added errata NOP
  3285  00161C  EF07  F00B         	goto	l70
  3286  001620                     u380:
  3287  001620  FFFF               	dw	65535	; assembler added errata NOP
  3288  001622                     
  3289                           ;main.c: 200:         LATCbits.LC0 = 1;
  3290  001622  808B               	bsf	139,0,c	;volatile
  3291  001624  EFFE  F00A         	goto	l1244
  3292  001628                     l68:
  3293  001628  FFFF               	dw	65535	; assembler added errata NOP
  3294  00162A  0012               	return		;funcret
  3295  00162C  FFFF               	dw	65535	; errata NOP
  3296  00162E                     __end_of_bootAscensor:
  3297                           	callstack 0
  3298                           
  3299 ;; *************** function _boot *****************
  3300 ;; Defined at:
  3301 ;;		line 156 in file "main.c"
  3302 ;; Parameters:    Size  Location     Type
  3303 ;;		None
  3304 ;; Auto vars:     Size  Location     Type
  3305 ;;		None
  3306 ;; Return value:  Size  Location     Type
  3307 ;;                  1    wreg      void 
  3308 ;; Registers used:
  3309 ;;		wreg, status,2
  3310 ;; Tracked objects:
  3311 ;;		On entry : 0/0
  3312 ;;		On exit  : 0/0
  3313 ;;		Unchanged: 0/0
  3314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3315 ;;      Params:         0       0       0       0       0       0       0
  3316 ;;      Locals:         0       0       0       0       0       0       0
  3317 ;;      Temps:          0       0       0       0       0       0       0
  3318 ;;      Totals:         0       0       0       0       0       0       0
  3319 ;;Total ram usage:        0 bytes
  3320 ;; Hardware stack levels used: 1
  3321 ;; Hardware stack levels required when called: 2
  3322 ;; This function calls:
  3323 ;;		Nothing
  3324 ;; This function is called by:
  3325 ;;		_main
  3326 ;; This function uses a non-reentrant model
  3327 ;;
  3328                           
  3329                           	psect	text11
  3330  001576                     __ptext11:
  3331                           	callstack 0
  3332  001576                     _boot:
  3333                           	callstack 0
  3334  001576  FFFF               	dw	65535	; assembler added errata NOP
  3335  001578                     
  3336                           ;main.c: 157:     ADCON1 = 0x06;
  3337  001578  0E06               	movlw	6
  3338  00157A  6EC1               	movwf	193,c	;volatile
  3339  00157C                     
  3340                           ;main.c: 158:     TRISB = 0xFF;
  3341  00157C  6893               	setf	147,c	;volatile
  3342                           
  3343                           ;main.c: 159:     TRISD = 0xF0;
  3344  00157E  0EF0               	movlw	240
  3345  001580  6E95               	movwf	149,c	;volatile
  3346  001582                     
  3347                           ;main.c: 160:     TRISA = 0xFF;
  3348  001582  6892               	setf	146,c	;volatile
  3349                           
  3350                           ;main.c: 161:     TRISC = 0xFC;
  3351  001584  0EFC               	movlw	252
  3352  001586  6E94               	movwf	148,c	;volatile
  3353                           
  3354                           ;main.c: 164:     tasksDown = 0;
  3355  001588  0E00               	movlw	0
  3356  00158A  6E60               	movwf	(_tasksDown+1)^0,c
  3357  00158C  0E00               	movlw	0
  3358  00158E  6E5F               	movwf	_tasksDown^0,c
  3359                           
  3360                           ;main.c: 165:     tasksUp = 0;
  3361  001590  0E00               	movlw	0
  3362  001592  6E5E               	movwf	(_tasksUp+1)^0,c
  3363  001594  0E00               	movlw	0
  3364  001596  6E5D               	movwf	_tasksUp^0,c
  3365                           
  3366                           ;main.c: 166:     callsU = 0;
  3367  001598  0E00               	movlw	0
  3368  00159A  6E5C               	movwf	(_callsU+1)^0,c
  3369  00159C  0E00               	movlw	0
  3370  00159E  6E5B               	movwf	_callsU^0,c
  3371                           
  3372                           ;main.c: 167:     callsD = 0;
  3373  0015A0  0E00               	movlw	0
  3374  0015A2  6E5A               	movwf	(_callsD+1)^0,c
  3375  0015A4  0E00               	movlw	0
  3376  0015A6  6E59               	movwf	_callsD^0,c
  3377                           
  3378                           ;main.c: 168:     call_init = 0;
  3379  0015A8  0E00               	movlw	0
  3380  0015AA  6E58               	movwf	(_call_init+1)^0,c
  3381  0015AC  0E00               	movlw	0
  3382  0015AE  6E57               	movwf	_call_init^0,c
  3383                           
  3384                           ;main.c: 169:     prevFL = 0;
  3385  0015B0  0E00               	movlw	0
  3386  0015B2  6E54               	movwf	(_prevFL+1)^0,c
  3387  0015B4  0E00               	movlw	0
  3388  0015B6  6E53               	movwf	_prevFL^0,c
  3389                           
  3390                           ;main.c: 170:     nowFL = 0;
  3391  0015B8  0E00               	movlw	0
  3392  0015BA  6E56               	movwf	(_nowFL+1)^0,c
  3393  0015BC  0E00               	movlw	0
  3394  0015BE  6E55               	movwf	_nowFL^0,c
  3395                           
  3396                           ;main.c: 173:     modeUp_F = 0;
  3397  0015C0  0E00               	movlw	0
  3398  0015C2  6E52               	movwf	(_modeUp_F+1)^0,c
  3399  0015C4  0E00               	movlw	0
  3400  0015C6  6E51               	movwf	_modeUp_F^0,c
  3401                           
  3402                           ;main.c: 174:     modeDown_F = 0;
  3403  0015C8  0E00               	movlw	0
  3404  0015CA  6E50               	movwf	(_modeDown_F+1)^0,c
  3405  0015CC  0E00               	movlw	0
  3406  0015CE  6E4F               	movwf	_modeDown_F^0,c
  3407                           
  3408                           ;main.c: 176:     from_up_change = 0;
  3409  0015D0  0E00               	movlw	0
  3410  0015D2  6E4E               	movwf	(_from_up_change+1)^0,c
  3411  0015D4  0E00               	movlw	0
  3412  0015D6  6E4D               	movwf	_from_up_change^0,c
  3413                           
  3414                           ;main.c: 177:     from_down_change = 0;
  3415  0015D8  0E00               	movlw	0
  3416  0015DA  6E4C               	movwf	(_from_down_change+1)^0,c
  3417  0015DC  0E00               	movlw	0
  3418  0015DE  6E4B               	movwf	_from_down_change^0,c
  3419  0015E0  0012               	return		;funcret
  3420  0015E2  FFFF               	dw	65535	; errata NOP
  3421  0015E4                     __end_of_boot:
  3422                           	callstack 0
  3423                           
  3424 ;; *************** function _ISR *****************
  3425 ;; Defined at:
  3426 ;;		line 713 in file "main.c"
  3427 ;; Parameters:    Size  Location     Type
  3428 ;;		None
  3429 ;; Auto vars:     Size  Location     Type
  3430 ;;  si              2   28[COMRAM] int 
  3431 ;;  si              2   26[COMRAM] int 
  3432 ;;  si              2   24[COMRAM] int 
  3433 ;; Return value:  Size  Location     Type
  3434 ;;                  1    wreg      void 
  3435 ;; Registers used:
  3436 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3437 ;; Tracked objects:
  3438 ;;		On entry : 0/0
  3439 ;;		On exit  : 0/0
  3440 ;;		Unchanged: 0/0
  3441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3442 ;;      Params:         0       0       0       0       0       0       0
  3443 ;;      Locals:         6       0       0       0       0       0       0
  3444 ;;      Temps:          6       0       0       0       0       0       0
  3445 ;;      Totals:        12       0       0       0       0       0       0
  3446 ;;Total ram usage:       12 bytes
  3447 ;; Hardware stack levels used: 1
  3448 ;; Hardware stack levels required when called: 1
  3449 ;; This function calls:
  3450 ;;		i2_noRepeat
  3451 ;;		i2_sort
  3452 ;; This function is called by:
  3453 ;;		Interrupt level 2
  3454 ;; This function uses a non-reentrant model
  3455 ;;
  3456                           
  3457                           	psect	intcode
  3458  000008                     __pintcode:
  3459                           	callstack 0
  3460  000008                     _ISR:
  3461                           	callstack 0
  3462  000008  FFFF               	dw	65535	; assembler added errata NOP
  3463                           
  3464                           ;incstack = 0
  3465  00000A  8261               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3466  00000C  CFE1 F015          	movff	fsr1l,??_ISR+2
  3467  000010  CFE2 F016          	movff	fsr1h,??_ISR+3
  3468  000014  CFD9 F017          	movff	fsr2l,??_ISR+4
  3469  000018  CFDA F018          	movff	fsr2h,??_ISR+5
  3470  00001C                     
  3471                           ;main.c: 715:     switch (PORTB) {
  3472  00001C  EF3E  F001         	goto	i2l2222
  3473  000020                     i2l2160:
  3474  000020  FFFF               	dw	65535	; assembler added errata NOP
  3475                           
  3476                           ;main.c: 717:             if (modeUp_F){
  3477  000022  5051               	movf	_modeUp_F^0,w,c
  3478  000024  1052               	iorwf	(_modeUp_F+1)^0,w,c
  3479  000026  B4D8               	btfsc	status,2,c
  3480  000028  EF18  F000         	goto	i2u146_41
  3481  00002C  EF1B  F000         	goto	i2u146_40
  3482  000030                     i2u146_41:
  3483  000030  FFFF               	dw	65535	; assembler added errata NOP
  3484  000032  EF6D  F001         	goto	i2l254
  3485  000036                     i2u146_40:
  3486  000036  FFFF               	dw	65535	; assembler added errata NOP
  3487  000038                     
  3488                           ;main.c: 718:                     if (nowFL < 1){
  3489  000038  BE56               	btfsc	(_nowFL+1)^0,7,c
  3490  00003A  EF2A  F000         	goto	i2u147_40
  3491  00003E  5056               	movf	(_nowFL+1)^0,w,c
  3492  000040  E106               	bnz	i2u147_41
  3493  000042  0455               	decf	_nowFL^0,w,c
  3494  000044  B0D8               	btfsc	status,0,c
  3495  000046  EF27  F000         	goto	i2u147_41
  3496  00004A  EF2A  F000         	goto	i2u147_40
  3497  00004E                     i2u147_41:
  3498  00004E  FFFF               	dw	65535	; assembler added errata NOP
  3499  000050  EF6D  F001         	goto	i2l254
  3500  000054                     i2u147_40:
  3501  000054  FFFF               	dw	65535	; assembler added errata NOP
  3502  000056                     
  3503                           ;main.c: 719:                         queueUp[tasksUp] = 1;
  3504  000056  90D8               	bcf	status,0,c
  3505  000058  345D               	rlcf	_tasksUp^0,w,c
  3506  00005A  6ED9               	movwf	fsr2l,c
  3507  00005C  345E               	rlcf	(_tasksUp+1)^0,w,c
  3508  00005E  6EDA               	movwf	fsr2h,c
  3509  000060  0E00               	movlw	low _queueUp
  3510  000062  26D9               	addwf	fsr2l,f,c
  3511  000064  0E03               	movlw	high _queueUp
  3512  000066  22DA               	addwfc	fsr2h,f,c
  3513  000068  0E01               	movlw	1
  3514  00006A  6EDE               	movwf	postinc2,c
  3515  00006C  0E00               	movlw	0
  3516  00006E  6EDD               	movwf	postdec2,c
  3517  000070                     
  3518                           ;main.c: 720:                         tasksUp++;
  3519  000070  4A5D               	infsnz	_tasksUp^0,f,c
  3520  000072  2A5E               	incf	(_tasksUp+1)^0,f,c
  3521  000074                     
  3522                           ;main.c: 721:                         sort(&queueUp[0], tasksUp);
  3523  000074  0E00               	movlw	low _queueUp
  3524  000076  6E01               	movwf	i2sort@p^0,c
  3525  000078  0E03               	movlw	high _queueUp
  3526  00007A  6E02               	movwf	(i2sort@p+1)^0,c
  3527  00007C  C05D  F003         	movff	_tasksUp,i2sort@sizes
  3528  000080  C05E  F004         	movff	_tasksUp+1,i2sort@sizes+1
  3529  000084  ECA5  F005         	call	i2_sort	;wreg free
  3530  000088                     
  3531                           ;main.c: 722:                         int si = noRepeat(&queueUp[0], tasksUp);
  3532  000088  0E00               	movlw	low _queueUp
  3533  00008A  6E01               	movwf	i2noRepeat@po^0,c
  3534  00008C  0E03               	movlw	high _queueUp
  3535  00008E  6E02               	movwf	(i2noRepeat@po+1)^0,c
  3536  000090  C05D  F003         	movff	_tasksUp,i2noRepeat@sixes
  3537  000094  C05E  F004         	movff	_tasksUp+1,i2noRepeat@sixes+1
  3538  000098  ECAE  F008         	call	i2_noRepeat	;wreg free
  3539  00009C  C001  F019         	movff	?i2_noRepeat,ISR@si
  3540  0000A0  C002  F01A         	movff	?i2_noRepeat+1,ISR@si+1
  3541  0000A4                     
  3542                           ;main.c: 723:                         tasksUp = si;
  3543  0000A4  C019  F05D         	movff	ISR@si,_tasksUp
  3544  0000A8  C01A  F05E         	movff	ISR@si+1,_tasksUp+1
  3545  0000AC  EF6D  F001         	goto	i2l254
  3546  0000B0                     i2l2174:
  3547  0000B0  FFFF               	dw	65535	; assembler added errata NOP
  3548                           
  3549                           ;main.c: 730:             if (modeUp_F){
  3550  0000B2  5051               	movf	_modeUp_F^0,w,c
  3551  0000B4  1052               	iorwf	(_modeUp_F+1)^0,w,c
  3552  0000B6  B4D8               	btfsc	status,2,c
  3553  0000B8  EF60  F000         	goto	i2u148_41
  3554  0000BC  EF63  F000         	goto	i2u148_40
  3555  0000C0                     i2u148_41:
  3556  0000C0  FFFF               	dw	65535	; assembler added errata NOP
  3557  0000C2  EF6D  F001         	goto	i2l254
  3558  0000C6                     i2u148_40:
  3559  0000C6  FFFF               	dw	65535	; assembler added errata NOP
  3560  0000C8                     
  3561                           ;main.c: 731:                     if (nowFL < 2){
  3562  0000C8  BE56               	btfsc	(_nowFL+1)^0,7,c
  3563  0000CA  EF73  F000         	goto	i2u149_40
  3564  0000CE  5056               	movf	(_nowFL+1)^0,w,c
  3565  0000D0  E107               	bnz	i2u149_41
  3566  0000D2  0E02               	movlw	2
  3567  0000D4  5C55               	subwf	_nowFL^0,w,c
  3568  0000D6  B0D8               	btfsc	status,0,c
  3569  0000D8  EF70  F000         	goto	i2u149_41
  3570  0000DC  EF73  F000         	goto	i2u149_40
  3571  0000E0                     i2u149_41:
  3572  0000E0  FFFF               	dw	65535	; assembler added errata NOP
  3573  0000E2  EF6D  F001         	goto	i2l254
  3574  0000E6                     i2u149_40:
  3575  0000E6  FFFF               	dw	65535	; assembler added errata NOP
  3576  0000E8                     
  3577                           ;main.c: 732:                         queueUp[tasksUp] = 2;
  3578  0000E8  90D8               	bcf	status,0,c
  3579  0000EA  345D               	rlcf	_tasksUp^0,w,c
  3580  0000EC  6ED9               	movwf	fsr2l,c
  3581  0000EE  345E               	rlcf	(_tasksUp+1)^0,w,c
  3582  0000F0  6EDA               	movwf	fsr2h,c
  3583  0000F2  0E00               	movlw	low _queueUp
  3584  0000F4  26D9               	addwf	fsr2l,f,c
  3585  0000F6  0E03               	movlw	high _queueUp
  3586  0000F8  22DA               	addwfc	fsr2h,f,c
  3587  0000FA  0E02               	movlw	2
  3588  0000FC  6EDE               	movwf	postinc2,c
  3589  0000FE  0E00               	movlw	0
  3590  000100  6EDD               	movwf	postdec2,c
  3591  000102                     
  3592                           ;main.c: 733:                         tasksUp++;
  3593  000102  4A5D               	infsnz	_tasksUp^0,f,c
  3594  000104  2A5E               	incf	(_tasksUp+1)^0,f,c
  3595  000106                     
  3596                           ;main.c: 735:                         sort(&queueUp[0], tasksUp);
  3597  000106  0E00               	movlw	low _queueUp
  3598  000108  6E01               	movwf	i2sort@p^0,c
  3599  00010A  0E03               	movlw	high _queueUp
  3600  00010C  6E02               	movwf	(i2sort@p+1)^0,c
  3601  00010E  C05D  F003         	movff	_tasksUp,i2sort@sizes
  3602  000112  C05E  F004         	movff	_tasksUp+1,i2sort@sizes+1
  3603  000116  ECA5  F005         	call	i2_sort	;wreg free
  3604  00011A                     
  3605                           ;main.c: 736:                         int si = noRepeat(&queueUp[0], tasksUp);
  3606  00011A  0E00               	movlw	low _queueUp
  3607  00011C  6E01               	movwf	i2noRepeat@po^0,c
  3608  00011E  0E03               	movlw	high _queueUp
  3609  000120  6E02               	movwf	(i2noRepeat@po+1)^0,c
  3610  000122  C05D  F003         	movff	_tasksUp,i2noRepeat@sixes
  3611  000126  C05E  F004         	movff	_tasksUp+1,i2noRepeat@sixes+1
  3612  00012A  ECAE  F008         	call	i2_noRepeat	;wreg free
  3613  00012E  C001  F01B         	movff	?i2_noRepeat,ISR@si_533
  3614  000132  C002  F01C         	movff	?i2_noRepeat+1,ISR@si_533+1
  3615  000136                     
  3616                           ;main.c: 737:                         tasksUp = si;
  3617  000136  C01B  F05D         	movff	ISR@si_533,_tasksUp
  3618  00013A  C01C  F05E         	movff	ISR@si_533+1,_tasksUp+1
  3619  00013E  EF6D  F001         	goto	i2l254
  3620  000142                     i2l2188:
  3621  000142  FFFF               	dw	65535	; assembler added errata NOP
  3622                           
  3623                           ;main.c: 743:             if (modeUp_F){
  3624  000144  5051               	movf	_modeUp_F^0,w,c
  3625  000146  1052               	iorwf	(_modeUp_F+1)^0,w,c
  3626  000148  B4D8               	btfsc	status,2,c
  3627  00014A  EFA9  F000         	goto	i2u150_41
  3628  00014E  EFAC  F000         	goto	i2u150_40
  3629  000152                     i2u150_41:
  3630  000152  FFFF               	dw	65535	; assembler added errata NOP
  3631  000154  EF6D  F001         	goto	i2l254
  3632  000158                     i2u150_40:
  3633  000158  FFFF               	dw	65535	; assembler added errata NOP
  3634  00015A                     
  3635                           ;main.c: 744:                     callsInUp[callsD] = 2;
  3636  00015A  90D8               	bcf	status,0,c
  3637  00015C  3459               	rlcf	_callsD^0,w,c
  3638  00015E  6ED9               	movwf	fsr2l,c
  3639  000160  345A               	rlcf	(_callsD+1)^0,w,c
  3640  000162  6EDA               	movwf	fsr2h,c
  3641  000164  0E00               	movlw	low _callsInUp
  3642  000166  26D9               	addwf	fsr2l,f,c
  3643  000168  0E05               	movlw	high _callsInUp
  3644  00016A  22DA               	addwfc	fsr2h,f,c
  3645  00016C  0E02               	movlw	2
  3646  00016E  6EDE               	movwf	postinc2,c
  3647  000170  0E00               	movlw	0
  3648  000172  6EDD               	movwf	postdec2,c
  3649  000174                     i2l2192:
  3650  000174  FFFF               	dw	65535	; assembler added errata NOP
  3651                           
  3652                           ;main.c: 745:                     callsD++;
  3653  000176  4A59               	infsnz	_callsD^0,f,c
  3654  000178  2A5A               	incf	(_callsD+1)^0,f,c
  3655  00017A  EF6D  F001         	goto	i2l254
  3656  00017E                     i2l2194:
  3657  00017E  FFFF               	dw	65535	; assembler added errata NOP
  3658                           
  3659                           ;main.c: 754:             if (modeUp_F){
  3660  000180  5051               	movf	_modeUp_F^0,w,c
  3661  000182  1052               	iorwf	(_modeUp_F+1)^0,w,c
  3662  000184  B4D8               	btfsc	status,2,c
  3663  000186  EFC7  F000         	goto	i2u151_41
  3664  00018A  EFCA  F000         	goto	i2u151_40
  3665  00018E                     i2u151_41:
  3666  00018E  FFFF               	dw	65535	; assembler added errata NOP
  3667  000190  EF6D  F001         	goto	i2l254
  3668  000194                     i2u151_40:
  3669  000194  FFFF               	dw	65535	; assembler added errata NOP
  3670  000196                     
  3671                           ;main.c: 755:                     if (nowFL < 3){
  3672  000196  BE56               	btfsc	(_nowFL+1)^0,7,c
  3673  000198  EFDA  F000         	goto	i2u152_40
  3674  00019C  5056               	movf	(_nowFL+1)^0,w,c
  3675  00019E  E107               	bnz	i2u152_41
  3676  0001A0  0E03               	movlw	3
  3677  0001A2  5C55               	subwf	_nowFL^0,w,c
  3678  0001A4  B0D8               	btfsc	status,0,c
  3679  0001A6  EFD7  F000         	goto	i2u152_41
  3680  0001AA  EFDA  F000         	goto	i2u152_40
  3681  0001AE                     i2u152_41:
  3682  0001AE  FFFF               	dw	65535	; assembler added errata NOP
  3683  0001B0  EF6D  F001         	goto	i2l254
  3684  0001B4                     i2u152_40:
  3685  0001B4  FFFF               	dw	65535	; assembler added errata NOP
  3686  0001B6                     
  3687                           ;main.c: 756:                         queueUp[tasksUp] = 3;
  3688  0001B6  90D8               	bcf	status,0,c
  3689  0001B8  345D               	rlcf	_tasksUp^0,w,c
  3690  0001BA  6ED9               	movwf	fsr2l,c
  3691  0001BC  345E               	rlcf	(_tasksUp+1)^0,w,c
  3692  0001BE  6EDA               	movwf	fsr2h,c
  3693  0001C0  0E00               	movlw	low _queueUp
  3694  0001C2  26D9               	addwf	fsr2l,f,c
  3695  0001C4  0E03               	movlw	high _queueUp
  3696  0001C6  22DA               	addwfc	fsr2h,f,c
  3697  0001C8  0E03               	movlw	3
  3698  0001CA  6EDE               	movwf	postinc2,c
  3699  0001CC  0E00               	movlw	0
  3700  0001CE  6EDD               	movwf	postdec2,c
  3701  0001D0                     
  3702                           ;main.c: 757:                         tasksUp++;
  3703  0001D0  4A5D               	infsnz	_tasksUp^0,f,c
  3704  0001D2  2A5E               	incf	(_tasksUp+1)^0,f,c
  3705  0001D4                     
  3706                           ;main.c: 758:                         sort(&queueUp[0], tasksUp);
  3707  0001D4  0E00               	movlw	low _queueUp
  3708  0001D6  6E01               	movwf	i2sort@p^0,c
  3709  0001D8  0E03               	movlw	high _queueUp
  3710  0001DA  6E02               	movwf	(i2sort@p+1)^0,c
  3711  0001DC  C05D  F003         	movff	_tasksUp,i2sort@sizes
  3712  0001E0  C05E  F004         	movff	_tasksUp+1,i2sort@sizes+1
  3713  0001E4  ECA5  F005         	call	i2_sort	;wreg free
  3714  0001E8                     
  3715                           ;main.c: 759:                         int si = noRepeat(&queueUp[0], tasksUp);
  3716  0001E8  0E00               	movlw	low _queueUp
  3717  0001EA  6E01               	movwf	i2noRepeat@po^0,c
  3718  0001EC  0E03               	movlw	high _queueUp
  3719  0001EE  6E02               	movwf	(i2noRepeat@po+1)^0,c
  3720  0001F0  C05D  F003         	movff	_tasksUp,i2noRepeat@sixes
  3721  0001F4  C05E  F004         	movff	_tasksUp+1,i2noRepeat@sixes+1
  3722  0001F8  ECAE  F008         	call	i2_noRepeat	;wreg free
  3723  0001FC  C001  F01D         	movff	?i2_noRepeat,ISR@si_534
  3724  000200  C002  F01E         	movff	?i2_noRepeat+1,ISR@si_534+1
  3725  000204                     
  3726                           ;main.c: 760:                         tasksUp = si;
  3727  000204  C01D  F05D         	movff	ISR@si_534,_tasksUp
  3728  000208  C01E  F05E         	movff	ISR@si_534+1,_tasksUp+1
  3729  00020C  EF6D  F001         	goto	i2l254
  3730  000210                     i2l2208:
  3731  000210  FFFF               	dw	65535	; assembler added errata NOP
  3732                           
  3733                           ;main.c: 766:             if (modeUp_F){
  3734  000212  5051               	movf	_modeUp_F^0,w,c
  3735  000214  1052               	iorwf	(_modeUp_F+1)^0,w,c
  3736  000216  B4D8               	btfsc	status,2,c
  3737  000218  EF10  F001         	goto	i2u153_41
  3738  00021C  EF13  F001         	goto	i2u153_40
  3739  000220                     i2u153_41:
  3740  000220  FFFF               	dw	65535	; assembler added errata NOP
  3741  000222  EF6D  F001         	goto	i2l254
  3742  000226                     i2u153_40:
  3743  000226  FFFF               	dw	65535	; assembler added errata NOP
  3744  000228                     
  3745                           ;main.c: 767:                     callsInUp[callsD] = 3;
  3746  000228  90D8               	bcf	status,0,c
  3747  00022A  3459               	rlcf	_callsD^0,w,c
  3748  00022C  6ED9               	movwf	fsr2l,c
  3749  00022E  345A               	rlcf	(_callsD+1)^0,w,c
  3750  000230  6EDA               	movwf	fsr2h,c
  3751  000232  0E00               	movlw	low _callsInUp
  3752  000234  26D9               	addwf	fsr2l,f,c
  3753  000236  0E05               	movlw	high _callsInUp
  3754  000238  22DA               	addwfc	fsr2h,f,c
  3755  00023A  0E03               	movlw	3
  3756  00023C  6EDE               	movwf	postinc2,c
  3757  00023E  0E00               	movlw	0
  3758  000240  6EDD               	movwf	postdec2,c
  3759  000242  EFBA  F000         	goto	i2l2192
  3760  000246                     i2l2214:
  3761  000246  FFFF               	dw	65535	; assembler added errata NOP
  3762                           
  3763                           ;main.c: 773:             if (modeUp_F){
  3764  000248  5051               	movf	_modeUp_F^0,w,c
  3765  00024A  1052               	iorwf	(_modeUp_F+1)^0,w,c
  3766  00024C  B4D8               	btfsc	status,2,c
  3767  00024E  EF2B  F001         	goto	i2u154_41
  3768  000252  EF2E  F001         	goto	i2u154_40
  3769  000256                     i2u154_41:
  3770  000256  FFFF               	dw	65535	; assembler added errata NOP
  3771  000258  EF6D  F001         	goto	i2l254
  3772  00025C                     i2u154_40:
  3773  00025C  FFFF               	dw	65535	; assembler added errata NOP
  3774  00025E                     
  3775                           ;main.c: 774:                     callsInUp[callsD] = 4;
  3776  00025E  90D8               	bcf	status,0,c
  3777  000260  3459               	rlcf	_callsD^0,w,c
  3778  000262  6ED9               	movwf	fsr2l,c
  3779  000264  345A               	rlcf	(_callsD+1)^0,w,c
  3780  000266  6EDA               	movwf	fsr2h,c
  3781  000268  0E00               	movlw	low _callsInUp
  3782  00026A  26D9               	addwf	fsr2l,f,c
  3783  00026C  0E05               	movlw	high _callsInUp
  3784  00026E  22DA               	addwfc	fsr2h,f,c
  3785  000270  0E04               	movlw	4
  3786  000272  6EDE               	movwf	postinc2,c
  3787  000274  0E00               	movlw	0
  3788  000276  6EDD               	movwf	postdec2,c
  3789  000278  EFBA  F000         	goto	i2l2192
  3790  00027C                     i2l2222:
  3791  00027C  FFFF               	dw	65535	; assembler added errata NOP
  3792  00027E  5081               	movf	129,w,c	;volatile
  3793  000280  6E13               	movwf	??_ISR^0,c
  3794  000282  6A14               	clrf	(??_ISR+1)^0,c
  3795                           
  3796                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3797                           ; Switch size 1, requested type "simple"
  3798                           ; Number of cases is 1, Range of values is 0 to 0
  3799                           ; switch strategies available:
  3800                           ; Name         Instructions Cycles
  3801                           ; simple_byte            4     3 (average)
  3802                           ;	Chosen strategy is simple_byte
  3803  000284  5014               	movf	(??_ISR+1)^0,w,c
  3804  000286  0A00               	xorlw	0	; case 0
  3805  000288  B4D8               	btfsc	status,2,c
  3806  00028A  EF49  F001         	goto	i2l2302
  3807  00028E  EF6D  F001         	goto	i2l254
  3808  000292                     i2l2302:
  3809  000292  FFFF               	dw	65535	; assembler added errata NOP
  3810                           
  3811                           ; Switch size 1, requested type "simple"
  3812                           ; Number of cases is 8, Range of values is 1 to 128
  3813                           ; switch strategies available:
  3814                           ; Name         Instructions Cycles
  3815                           ; simple_byte           25    13 (average)
  3816                           ;	Chosen strategy is simple_byte
  3817  000294  5013               	movf	??_ISR^0,w,c
  3818  000296  0A01               	xorlw	1	; case 1
  3819  000298  B4D8               	btfsc	status,2,c
  3820  00029A  EF10  F000         	goto	i2l2160
  3821  00029E  0A03               	xorlw	3	; case 2
  3822  0002A0  B4D8               	btfsc	status,2,c
  3823  0002A2  EF58  F000         	goto	i2l2174
  3824  0002A6  0A06               	xorlw	6	; case 4
  3825  0002A8  B4D8               	btfsc	status,2,c
  3826  0002AA  EFA1  F000         	goto	i2l2188
  3827  0002AE  0A0C               	xorlw	12	; case 8
  3828  0002B0  B4D8               	btfsc	status,2,c
  3829  0002B2  EF6D  F001         	goto	i2l254
  3830  0002B6  0A18               	xorlw	24	; case 16
  3831  0002B8  B4D8               	btfsc	status,2,c
  3832  0002BA  EFBF  F000         	goto	i2l2194
  3833  0002BE  0A30               	xorlw	48	; case 32
  3834  0002C0  B4D8               	btfsc	status,2,c
  3835  0002C2  EF08  F001         	goto	i2l2208
  3836  0002C6  0A60               	xorlw	96	; case 64
  3837  0002C8  B4D8               	btfsc	status,2,c
  3838  0002CA  EF23  F001         	goto	i2l2214
  3839  0002CE  0AC0               	xorlw	192	; case 128
  3840  0002D0  B4D8               	btfsc	status,2,c
  3841  0002D2  EF6D  F001         	goto	i2l254
  3842  0002D6  EF6D  F001         	goto	i2l254
  3843  0002DA                     i2l254:
  3844  0002DA  FFFF               	dw	65535	; assembler added errata NOP
  3845  0002DC  C018  FFDA         	movff	??_ISR+5,fsr2h
  3846  0002E0  C017  FFD9         	movff	??_ISR+4,fsr2l
  3847  0002E4  C016  FFE2         	movff	??_ISR+3,fsr1h
  3848  0002E8  C015  FFE1         	movff	??_ISR+2,fsr1l
  3849  0002EC  9261               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3850  0002EE  0011               	retfie		f
  3851  0002F0  FFFF               	dw	65535	; errata NOP
  3852  0002F2                     __end_of_ISR:
  3853                           	callstack 0
  3854                           
  3855 ;; *************** function i2_sort *****************
  3856 ;; Defined at:
  3857 ;;		line 237 in file "main.c"
  3858 ;; Parameters:    Size  Location     Type
  3859 ;;  p               2    0[COMRAM] PTR int 
  3860 ;;		 -> queueDown(200), queueUp(200), 
  3861 ;;  sizes           2    2[COMRAM] int 
  3862 ;; Auto vars:     Size  Location     Type
  3863 ;;  result        200    0[BANK1 ] int [100]
  3864 ;;  h               2  212[BANK1 ] int 
  3865 ;;  temp            2  210[BANK1 ] int 
  3866 ;;  j               2  208[BANK1 ] int 
  3867 ;;  k               2  206[BANK1 ] int 
  3868 ;;  sizesMod        2  204[BANK1 ] int 
  3869 ;;  nums            2  202[BANK1 ] int 
  3870 ;;  pos             2  200[BANK1 ] int 
  3871 ;; Return value:  Size  Location     Type
  3872 ;;                  1    wreg      void 
  3873 ;; Registers used:
  3874 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3875 ;; Tracked objects:
  3876 ;;		On entry : 0/0
  3877 ;;		On exit  : 0/0
  3878 ;;		Unchanged: 0/0
  3879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3880 ;;      Params:         4       0       0       0       0       0       0
  3881 ;;      Locals:         0       0     214       0       0       0       0
  3882 ;;      Temps:          5       0       0       0       0       0       0
  3883 ;;      Totals:         9       0     214       0       0       0       0
  3884 ;;Total ram usage:      223 bytes
  3885 ;; Hardware stack levels used: 1
  3886 ;; This function calls:
  3887 ;;		Nothing
  3888 ;; This function is called by:
  3889 ;;		_ISR
  3890 ;; This function uses a non-reentrant model
  3891 ;;
  3892                           
  3893                           	psect	text13
  3894  000B4A                     __ptext13:
  3895                           	callstack 0
  3896  000B4A                     i2_sort:
  3897                           	callstack 0
  3898  000B4A  FFFF               	dw	65535	; assembler added errata NOP
  3899  000B4C                     
  3900                           ;main.c: 238:     int temp, nums = 0, pos = 0, sizesMod = sizes;
  3901  000B4C  0E00               	movlw	0
  3902  000B4E  0101               	movlb	1	; () banked
  3903  000B50  6FCB               	movwf	(i2sort@nums+1)& (0+255),b
  3904  000B52  0E00               	movlw	0
  3905  000B54  6FCA               	movwf	i2sort@nums& (0+255),b
  3906  000B56  0E00               	movlw	0
  3907  000B58  6FC9               	movwf	(i2sort@pos+1)& (0+255),b
  3908  000B5A  0E00               	movlw	0
  3909  000B5C  6FC8               	movwf	i2sort@pos& (0+255),b
  3910  000B5E                     
  3911                           ; BSR set to: 1
  3912  000B5E  C003  F1CC         	movff	i2sort@sizes,i2sort@sizesMod
  3913  000B62  C004  F1CD         	movff	i2sort@sizes+1,i2sort@sizesMod+1
  3914  000B66                     i2l2084:
  3915  000B66  FFFF               	dw	65535	; assembler added errata NOP
  3916                           
  3917                           ; BSR set to: 1
  3918                           ;main.c: 245:         temp = *(p + 0);
  3919  000B68  C001  FFD9         	movff	i2sort@p,fsr2l
  3920  000B6C  C002  FFDA         	movff	i2sort@p+1,fsr2h
  3921  000B70  CFDE F1D2          	movff	postinc2,i2sort@temp
  3922  000B74  CFDD F1D3          	movff	postdec2,i2sort@temp+1
  3923  000B78                     
  3924                           ; BSR set to: 1
  3925                           ;main.c: 247:         for (int h = 0; h < sizesMod; h++) {
  3926  000B78  0E00               	movlw	0
  3927  000B7A  6FD5               	movwf	(i2sort@h+1)& (0+255),b
  3928  000B7C  0E00               	movlw	0
  3929  000B7E  6FD4               	movwf	i2sort@h& (0+255),b
  3930  000B80  EF0D  F006         	goto	i2l2102
  3931  000B84                     i2l2088:
  3932  000B84  FFFF               	dw	65535	; assembler added errata NOP
  3933                           
  3934                           ; BSR set to: 1
  3935                           ;main.c: 249:             if (*(p + h) == temp) {
  3936  000B86  90D8               	bcf	status,0,c
  3937  000B88  35D4               	rlcf	i2sort@h& (0+255),w,b
  3938  000B8A  6ED9               	movwf	fsr2l,c
  3939  000B8C  35D5               	rlcf	(i2sort@h+1)& (0+255),w,b
  3940  000B8E  6EDA               	movwf	fsr2h,c
  3941  000B90  5001               	movf	i2sort@p^0,w,c
  3942  000B92  26D9               	addwf	fsr2l,f,c
  3943  000B94  5002               	movf	(i2sort@p+1)^0,w,c
  3944  000B96  22DA               	addwfc	fsr2h,f,c
  3945  000B98  51D2               	movf	i2sort@temp& (0+255),w,b
  3946  000B9A  18DE               	xorwf	postinc2,w,c
  3947  000B9C  E107               	bnz	i2u135_41
  3948  000B9E  51D3               	movf	(i2sort@temp+1)& (0+255),w,b
  3949  000BA0  18DE               	xorwf	postinc2,w,c
  3950  000BA2  A4D8               	btfss	status,2,c
  3951  000BA4  EFD6  F005         	goto	i2u135_41
  3952  000BA8  EFD9  F005         	goto	i2u135_40
  3953  000BAC                     i2u135_41:
  3954  000BAC  FFFF               	dw	65535	; assembler added errata NOP
  3955  000BAE  EFDE  F005         	goto	i2l2094
  3956  000BB2                     i2u135_40:
  3957  000BB2  FFFF               	dw	65535	; assembler added errata NOP
  3958  000BB4                     
  3959                           ; BSR set to: 1
  3960                           ;main.c: 251:                 pos = h;
  3961  000BB4  C1D4  F1C8         	movff	i2sort@h,i2sort@pos
  3962  000BB8  C1D5  F1C9         	movff	i2sort@h+1,i2sort@pos+1
  3963  000BBC                     i2l2094:
  3964  000BBC  FFFF               	dw	65535	; assembler added errata NOP
  3965                           
  3966                           ; BSR set to: 1
  3967                           ;main.c: 258:             if (*(p + h) < temp) {
  3968  000BBE  90D8               	bcf	status,0,c
  3969  000BC0  35D4               	rlcf	i2sort@h& (0+255),w,b
  3970  000BC2  6ED9               	movwf	fsr2l,c
  3971  000BC4  35D5               	rlcf	(i2sort@h+1)& (0+255),w,b
  3972  000BC6  6EDA               	movwf	fsr2h,c
  3973  000BC8  5001               	movf	i2sort@p^0,w,c
  3974  000BCA  26D9               	addwf	fsr2l,f,c
  3975  000BCC  5002               	movf	(i2sort@p+1)^0,w,c
  3976  000BCE  22DA               	addwfc	fsr2h,f,c
  3977  000BD0  51D2               	movf	i2sort@temp& (0+255),w,b
  3978  000BD2  5CDE               	subwf	postinc2,w,c
  3979  000BD4  50DE               	movf	postinc2,w,c
  3980  000BD6  0A80               	xorlw	128
  3981  000BD8  6E07               	movwf	(??i2_sort+2)^0,c
  3982  000BDA  51D3               	movf	(i2sort@temp+1)& (0+255),w,b
  3983  000BDC  0A80               	xorlw	128
  3984  000BDE  5807               	subwfb	(??i2_sort+2)^0,w,c
  3985  000BE0  B0D8               	btfsc	status,0,c
  3986  000BE2  EFF5  F005         	goto	i2u136_41
  3987  000BE6  EFF8  F005         	goto	i2u136_40
  3988  000BEA                     i2u136_41:
  3989  000BEA  FFFF               	dw	65535	; assembler added errata NOP
  3990  000BEC  EF0A  F006         	goto	i2l2100
  3991  000BF0                     i2u136_40:
  3992  000BF0  FFFF               	dw	65535	; assembler added errata NOP
  3993  000BF2                     
  3994                           ; BSR set to: 1
  3995                           ;main.c: 259:                 temp = *(p + h);
  3996  000BF2  90D8               	bcf	status,0,c
  3997  000BF4  35D4               	rlcf	i2sort@h& (0+255),w,b
  3998  000BF6  6ED9               	movwf	fsr2l,c
  3999  000BF8  35D5               	rlcf	(i2sort@h+1)& (0+255),w,b
  4000  000BFA  6EDA               	movwf	fsr2h,c
  4001  000BFC  5001               	movf	i2sort@p^0,w,c
  4002  000BFE  26D9               	addwf	fsr2l,f,c
  4003  000C00  5002               	movf	(i2sort@p+1)^0,w,c
  4004  000C02  22DA               	addwfc	fsr2h,f,c
  4005  000C04  CFDE F1D2          	movff	postinc2,i2sort@temp
  4006  000C08  CFDD F1D3          	movff	postdec2,i2sort@temp+1
  4007  000C0C                     
  4008                           ; BSR set to: 1
  4009                           ;main.c: 260:                 pos = h;
  4010  000C0C  C1D4  F1C8         	movff	i2sort@h,i2sort@pos
  4011  000C10  C1D5  F1C9         	movff	i2sort@h+1,i2sort@pos+1
  4012  000C14                     i2l2100:
  4013  000C14  FFFF               	dw	65535	; assembler added errata NOP
  4014                           
  4015                           ; BSR set to: 1
  4016                           ;main.c: 262:         }
  4017  000C16  4BD4               	infsnz	i2sort@h& (0+255),f,b
  4018  000C18  2BD5               	incf	(i2sort@h+1)& (0+255),f,b
  4019  000C1A                     i2l2102:
  4020  000C1A  FFFF               	dw	65535	; assembler added errata NOP
  4021                           
  4022                           ; BSR set to: 1
  4023  000C1C  51CC               	movf	i2sort@sizesMod& (0+255),w,b
  4024  000C1E  5DD4               	subwf	i2sort@h& (0+255),w,b
  4025  000C20  51D5               	movf	(i2sort@h+1)& (0+255),w,b
  4026  000C22  0A80               	xorlw	128
  4027  000C24  6E05               	movwf	??i2_sort^0,c
  4028  000C26  51CD               	movf	(i2sort@sizesMod+1)& (0+255),w,b
  4029  000C28  0A80               	xorlw	128
  4030  000C2A  5805               	subwfb	??i2_sort^0,w,c
  4031  000C2C  A0D8               	btfss	status,0,c
  4032  000C2E  EF1B  F006         	goto	i2u137_41
  4033  000C32  EF1E  F006         	goto	i2u137_40
  4034  000C36                     i2u137_41:
  4035  000C36  FFFF               	dw	65535	; assembler added errata NOP
  4036  000C38  EFC2  F005         	goto	i2l2088
  4037  000C3C                     i2u137_40:
  4038  000C3C  FFFF               	dw	65535	; assembler added errata NOP
  4039  000C3E                     
  4040                           ; BSR set to: 1
  4041                           ;main.c: 265:         for (int k = pos; k < sizesMod; k++) {
  4042  000C3E  C1C8  F1CE         	movff	i2sort@pos,i2sort@k
  4043  000C42  C1C9  F1CF         	movff	i2sort@pos+1,i2sort@k+1
  4044  000C46  EF4A  F006         	goto	i2l2108
  4045  000C4A                     i2l2104:
  4046  000C4A  FFFF               	dw	65535	; assembler added errata NOP
  4047                           
  4048                           ; BSR set to: 1
  4049                           ;main.c: 266:             *(p + k) = *(p + (k + 1));
  4050  000C4C  C1CE  F005         	movff	i2sort@k,??i2_sort
  4051  000C50  C1CF  F006         	movff	i2sort@k+1,??i2_sort+1
  4052  000C54  90D8               	bcf	status,0,c
  4053  000C56  3605               	rlcf	??i2_sort^0,f,c
  4054  000C58  3606               	rlcf	(??i2_sort+1)^0,f,c
  4055  000C5A  C001  F007         	movff	i2sort@p,??i2_sort+2
  4056  000C5E  C002  F008         	movff	i2sort@p+1,??i2_sort+3
  4057  000C62  5005               	movf	??i2_sort^0,w,c
  4058  000C64  2607               	addwf	(??i2_sort+2)^0,f,c
  4059  000C66  5006               	movf	(??i2_sort+1)^0,w,c
  4060  000C68  2208               	addwfc	(??i2_sort+3)^0,f,c
  4061  000C6A  0E02               	movlw	2
  4062  000C6C  2407               	addwf	(??i2_sort+2)^0,w,c
  4063  000C6E  6ED9               	movwf	fsr2l,c
  4064  000C70  0E00               	movlw	0
  4065  000C72  2008               	addwfc	(??i2_sort+3)^0,w,c
  4066  000C74  6EDA               	movwf	fsr2h,c
  4067  000C76  90D8               	bcf	status,0,c
  4068  000C78  35CE               	rlcf	i2sort@k& (0+255),w,b
  4069  000C7A  6EE1               	movwf	fsr1l,c
  4070  000C7C  35CF               	rlcf	(i2sort@k+1)& (0+255),w,b
  4071  000C7E  6EE2               	movwf	fsr1h,c
  4072  000C80  5001               	movf	i2sort@p^0,w,c
  4073  000C82  26E1               	addwf	fsr1l,f,c
  4074  000C84  5002               	movf	(i2sort@p+1)^0,w,c
  4075  000C86  22E2               	addwfc	fsr1h,f,c
  4076  000C88  CFDE FFE6          	movff	postinc2,postinc1
  4077  000C8C  CFDD FFE5          	movff	postdec2,postdec1
  4078  000C90                     
  4079                           ; BSR set to: 1
  4080                           ;main.c: 267:         }
  4081  000C90  4BCE               	infsnz	i2sort@k& (0+255),f,b
  4082  000C92  2BCF               	incf	(i2sort@k+1)& (0+255),f,b
  4083  000C94                     i2l2108:
  4084  000C94  FFFF               	dw	65535	; assembler added errata NOP
  4085                           
  4086                           ; BSR set to: 1
  4087  000C96  51CC               	movf	i2sort@sizesMod& (0+255),w,b
  4088  000C98  5DCE               	subwf	i2sort@k& (0+255),w,b
  4089  000C9A  51CF               	movf	(i2sort@k+1)& (0+255),w,b
  4090  000C9C  0A80               	xorlw	128
  4091  000C9E  6E05               	movwf	??i2_sort^0,c
  4092  000CA0  51CD               	movf	(i2sort@sizesMod+1)& (0+255),w,b
  4093  000CA2  0A80               	xorlw	128
  4094  000CA4  5805               	subwfb	??i2_sort^0,w,c
  4095  000CA6  A0D8               	btfss	status,0,c
  4096  000CA8  EF58  F006         	goto	i2u138_41
  4097  000CAC  EF5B  F006         	goto	i2u138_40
  4098  000CB0                     i2u138_41:
  4099  000CB0  FFFF               	dw	65535	; assembler added errata NOP
  4100  000CB2  EF25  F006         	goto	i2l2104
  4101  000CB6                     i2u138_40:
  4102  000CB6  FFFF               	dw	65535	; assembler added errata NOP
  4103  000CB8                     
  4104                           ; BSR set to: 1
  4105                           ;main.c: 268:         result[nums] = temp;
  4106  000CB8  90D8               	bcf	status,0,c
  4107  000CBA  35CA               	rlcf	i2sort@nums& (0+255),w,b
  4108  000CBC  6ED9               	movwf	fsr2l,c
  4109  000CBE  35CB               	rlcf	(i2sort@nums+1)& (0+255),w,b
  4110  000CC0  6EDA               	movwf	fsr2h,c
  4111  000CC2  0E00               	movlw	low i2sort@result
  4112  000CC4  26D9               	addwf	fsr2l,f,c
  4113  000CC6  0E01               	movlw	high i2sort@result
  4114  000CC8  22DA               	addwfc	fsr2h,f,c
  4115  000CCA  C1D2  FFDE         	movff	i2sort@temp,postinc2
  4116  000CCE  C1D3  FFDD         	movff	i2sort@temp+1,postdec2
  4117  000CD2                     
  4118                           ; BSR set to: 1
  4119                           ;main.c: 269:         sizesMod--;
  4120  000CD2  07CC               	decf	i2sort@sizesMod& (0+255),f,b
  4121  000CD4  A0D8               	btfss	status,0,c
  4122  000CD6  07CD               	decf	(i2sort@sizesMod+1)& (0+255),f,b
  4123  000CD8                     
  4124                           ; BSR set to: 1
  4125                           ;main.c: 270:         nums++;
  4126  000CD8  4BCA               	infsnz	i2sort@nums& (0+255),f,b
  4127  000CDA  2BCB               	incf	(i2sort@nums+1)& (0+255),f,b
  4128  000CDC                     
  4129                           ; BSR set to: 1
  4130                           ;main.c: 271:     } while (nums <= sizes - 1);
  4131  000CDC  0EFF               	movlw	255
  4132  000CDE  6E05               	movwf	??i2_sort^0,c
  4133  000CE0  0EFF               	movlw	255
  4134  000CE2  6E06               	movwf	(??i2_sort+1)^0,c
  4135  000CE4  C003  F007         	movff	i2sort@sizes,??i2_sort+2
  4136  000CE8  C004  F008         	movff	i2sort@sizes+1,??i2_sort+3
  4137  000CEC  5005               	movf	??i2_sort^0,w,c
  4138  000CEE  2607               	addwf	(??i2_sort+2)^0,f,c
  4139  000CF0  5006               	movf	(??i2_sort+1)^0,w,c
  4140  000CF2  2208               	addwfc	(??i2_sort+3)^0,f,c
  4141  000CF4  51CA               	movf	i2sort@nums& (0+255),w,b
  4142  000CF6  5C07               	subwf	(??i2_sort+2)^0,w,c
  4143  000CF8  5008               	movf	(??i2_sort+3)^0,w,c
  4144  000CFA  0A80               	xorlw	128
  4145  000CFC  6E09               	movwf	(??i2_sort+4)^0,c
  4146  000CFE  51CB               	movf	(i2sort@nums+1)& (0+255),w,b
  4147  000D00  0A80               	xorlw	128
  4148  000D02  5809               	subwfb	(??i2_sort+4)^0,w,c
  4149  000D04  B0D8               	btfsc	status,0,c
  4150  000D06  EF87  F006         	goto	i2u139_41
  4151  000D0A  EF8A  F006         	goto	i2u139_40
  4152  000D0E                     i2u139_41:
  4153  000D0E  FFFF               	dw	65535	; assembler added errata NOP
  4154  000D10  EFB3  F005         	goto	i2l2084
  4155  000D14                     i2u139_40:
  4156  000D14  FFFF               	dw	65535	; assembler added errata NOP
  4157  000D16                     
  4158                           ; BSR set to: 1
  4159                           ;main.c: 274:     for (int j = 0; j < sizes; j++) {
  4160  000D16  0E00               	movlw	0
  4161  000D18  6FD1               	movwf	(i2sort@j+1)& (0+255),b
  4162  000D1A  0E00               	movlw	0
  4163  000D1C  6FD0               	movwf	i2sort@j& (0+255),b
  4164  000D1E  EFAA  F006         	goto	i2l2124
  4165  000D22                     i2l2120:
  4166  000D22  FFFF               	dw	65535	; assembler added errata NOP
  4167                           
  4168                           ; BSR set to: 1
  4169                           ;main.c: 275:         *(p + j) = result[j];
  4170  000D24  90D8               	bcf	status,0,c
  4171  000D26  35D0               	rlcf	i2sort@j& (0+255),w,b
  4172  000D28  6ED9               	movwf	fsr2l,c
  4173  000D2A  35D1               	rlcf	(i2sort@j+1)& (0+255),w,b
  4174  000D2C  6EDA               	movwf	fsr2h,c
  4175  000D2E  0E00               	movlw	low i2sort@result
  4176  000D30  26D9               	addwf	fsr2l,f,c
  4177  000D32  0E01               	movlw	high i2sort@result
  4178  000D34  22DA               	addwfc	fsr2h,f,c
  4179  000D36  90D8               	bcf	status,0,c
  4180  000D38  35D0               	rlcf	i2sort@j& (0+255),w,b
  4181  000D3A  6EE1               	movwf	fsr1l,c
  4182  000D3C  35D1               	rlcf	(i2sort@j+1)& (0+255),w,b
  4183  000D3E  6EE2               	movwf	fsr1h,c
  4184  000D40  5001               	movf	i2sort@p^0,w,c
  4185  000D42  26E1               	addwf	fsr1l,f,c
  4186  000D44  5002               	movf	(i2sort@p+1)^0,w,c
  4187  000D46  22E2               	addwfc	fsr1h,f,c
  4188  000D48  CFDE FFE6          	movff	postinc2,postinc1
  4189  000D4C  CFDD FFE5          	movff	postdec2,postdec1
  4190  000D50                     
  4191                           ; BSR set to: 1
  4192                           ;main.c: 276:     }
  4193  000D50  4BD0               	infsnz	i2sort@j& (0+255),f,b
  4194  000D52  2BD1               	incf	(i2sort@j+1)& (0+255),f,b
  4195  000D54                     i2l2124:
  4196  000D54  FFFF               	dw	65535	; assembler added errata NOP
  4197                           
  4198                           ; BSR set to: 1
  4199  000D56  5003               	movf	i2sort@sizes^0,w,c
  4200  000D58  5DD0               	subwf	i2sort@j& (0+255),w,b
  4201  000D5A  51D1               	movf	(i2sort@j+1)& (0+255),w,b
  4202  000D5C  0A80               	xorlw	128
  4203  000D5E  6E05               	movwf	??i2_sort^0,c
  4204  000D60  5004               	movf	(i2sort@sizes+1)^0,w,c
  4205  000D62  0A80               	xorlw	128
  4206  000D64  5805               	subwfb	??i2_sort^0,w,c
  4207  000D66  A0D8               	btfss	status,0,c
  4208  000D68  EFB8  F006         	goto	i2u140_41
  4209  000D6C  EFBB  F006         	goto	i2u140_40
  4210  000D70                     i2u140_41:
  4211  000D70  FFFF               	dw	65535	; assembler added errata NOP
  4212  000D72  EF91  F006         	goto	i2l2120
  4213  000D76                     i2u140_40:
  4214  000D76  FFFF               	dw	65535	; assembler added errata NOP
  4215  000D78                     
  4216                           ; BSR set to: 1
  4217  000D78  0012               	return		;funcret
  4218  000D7A  FFFF               	dw	65535	; errata NOP
  4219  000D7C                     __end_ofi2_sort:
  4220                           	callstack 0
  4221                           
  4222 ;; *************** function i2_noRepeat *****************
  4223 ;; Defined at:
  4224 ;;		line 206 in file "main.c"
  4225 ;; Parameters:    Size  Location     Type
  4226 ;;  po              2    0[COMRAM] PTR int 
  4227 ;;		 -> queueDown(200), queueUp(200), 
  4228 ;;  sixes           2    2[COMRAM] int 
  4229 ;; Auto vars:     Size  Location     Type
  4230 ;;  comp            2   16[COMRAM] int 
  4231 ;;  size            2   14[COMRAM] int 
  4232 ;;  temp            2   12[COMRAM] int 
  4233 ;;  shift           2   10[COMRAM] int 
  4234 ;;  t               2    8[COMRAM] int 
  4235 ;; Return value:  Size  Location     Type
  4236 ;;                  2    0[COMRAM] int 
  4237 ;; Registers used:
  4238 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  4239 ;; Tracked objects:
  4240 ;;		On entry : 0/0
  4241 ;;		On exit  : 0/0
  4242 ;;		Unchanged: 0/0
  4243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4244 ;;      Params:         4       0       0       0       0       0       0
  4245 ;;      Locals:        10       0       0       0       0       0       0
  4246 ;;      Temps:          4       0       0       0       0       0       0
  4247 ;;      Totals:        18       0       0       0       0       0       0
  4248 ;;Total ram usage:       18 bytes
  4249 ;; Hardware stack levels used: 1
  4250 ;; This function calls:
  4251 ;;		Nothing
  4252 ;; This function is called by:
  4253 ;;		_ISR
  4254 ;; This function uses a non-reentrant model
  4255 ;;
  4256                           
  4257                           	psect	text14
  4258  00115C                     __ptext14:
  4259                           	callstack 0
  4260  00115C                     i2_noRepeat:
  4261                           	callstack 0
  4262  00115C  FFFF               	dw	65535	; assembler added errata NOP
  4263  00115E                     
  4264                           ;main.c: 207:     int size = sixes;
  4265  00115E  C003  F00F         	movff	i2noRepeat@sixes,i2noRepeat@size
  4266  001162  C004  F010         	movff	i2noRepeat@sixes+1,i2noRepeat@size+1
  4267  001166                     
  4268                           ;main.c: 215:     for (int temp = 0; temp < size; temp++){
  4269  001166  0E00               	movlw	0
  4270  001168  6E0E               	movwf	(i2noRepeat@temp+1)^0,c
  4271  00116A  0E00               	movlw	0
  4272  00116C  6E0D               	movwf	i2noRepeat@temp^0,c
  4273  00116E  EF43  F009         	goto	i2l2078
  4274  001172                     i2l2058:
  4275  001172  FFFF               	dw	65535	; assembler added errata NOP
  4276                           
  4277                           ;main.c: 217:         for(int comp = temp + 1; comp < size; comp++){
  4278  001174  0E01               	movlw	1
  4279  001176  240D               	addwf	i2noRepeat@temp^0,w,c
  4280  001178  6E11               	movwf	i2noRepeat@comp^0,c
  4281  00117A  0E00               	movlw	0
  4282  00117C  200E               	addwfc	(i2noRepeat@temp+1)^0,w,c
  4283  00117E  6E12               	movwf	(i2noRepeat@comp+1)^0,c
  4284  001180  EF2F  F009         	goto	i2l2074
  4285  001184                     i2l2060:
  4286  001184  FFFF               	dw	65535	; assembler added errata NOP
  4287                           
  4288                           ;main.c: 219:             if (*(po + temp) == *(po + comp)){
  4289  001186  90D8               	bcf	status,0,c
  4290  001188  3411               	rlcf	i2noRepeat@comp^0,w,c
  4291  00118A  6ED9               	movwf	fsr2l,c
  4292  00118C  3412               	rlcf	(i2noRepeat@comp+1)^0,w,c
  4293  00118E  6EDA               	movwf	fsr2h,c
  4294  001190  5001               	movf	i2noRepeat@po^0,w,c
  4295  001192  26D9               	addwf	fsr2l,f,c
  4296  001194  5002               	movf	(i2noRepeat@po+1)^0,w,c
  4297  001196  22DA               	addwfc	fsr2h,f,c
  4298  001198  90D8               	bcf	status,0,c
  4299  00119A  340D               	rlcf	i2noRepeat@temp^0,w,c
  4300  00119C  6EE1               	movwf	fsr1l,c
  4301  00119E  340E               	rlcf	(i2noRepeat@temp+1)^0,w,c
  4302  0011A0  6EE2               	movwf	fsr1h,c
  4303  0011A2  5001               	movf	i2noRepeat@po^0,w,c
  4304  0011A4  26E1               	addwf	fsr1l,f,c
  4305  0011A6  5002               	movf	(i2noRepeat@po+1)^0,w,c
  4306  0011A8  22E2               	addwfc	fsr1h,f,c
  4307  0011AA  50DE               	movf	postinc2,w,c
  4308  0011AC  18E6               	xorwf	postinc1,w,c
  4309  0011AE  E107               	bnz	i2u131_41
  4310  0011B0  50DE               	movf	postinc2,w,c
  4311  0011B2  18E6               	xorwf	postinc1,w,c
  4312  0011B4  A4D8               	btfss	status,2,c
  4313  0011B6  EFDF  F008         	goto	i2u131_41
  4314  0011BA  EFE2  F008         	goto	i2u131_40
  4315  0011BE                     i2u131_41:
  4316  0011BE  FFFF               	dw	65535	; assembler added errata NOP
  4317  0011C0  EF2C  F009         	goto	i2l79
  4318  0011C4                     i2u131_40:
  4319  0011C4  FFFF               	dw	65535	; assembler added errata NOP
  4320  0011C6                     
  4321                           ;main.c: 220:                 int t = comp;
  4322  0011C6  C011  F009         	movff	i2noRepeat@comp,i2noRepeat@t
  4323  0011CA  C012  F00A         	movff	i2noRepeat@comp+1,i2noRepeat@t+1
  4324                           
  4325                           ;main.c: 222:                 for (int shift = comp; shift < size; shift++){
  4326  0011CE  C011  F00B         	movff	i2noRepeat@comp,i2noRepeat@shift
  4327  0011D2  C012  F00C         	movff	i2noRepeat@comp+1,i2noRepeat@shift+1
  4328  0011D6  EF14  F009         	goto	i2l2070
  4329  0011DA                     i2l2064:
  4330  0011DA  FFFF               	dw	65535	; assembler added errata NOP
  4331                           
  4332                           ;main.c: 223:                     *(po + t) = *(po + (shift + 1));
  4333  0011DC  C00B  F005         	movff	i2noRepeat@shift,??i2_noRepeat
  4334  0011E0  C00C  F006         	movff	i2noRepeat@shift+1,??i2_noRepeat+1
  4335  0011E4  90D8               	bcf	status,0,c
  4336  0011E6  3605               	rlcf	??i2_noRepeat^0,f,c
  4337  0011E8  3606               	rlcf	(??i2_noRepeat+1)^0,f,c
  4338  0011EA  C001  F007         	movff	i2noRepeat@po,??i2_noRepeat+2
  4339  0011EE  C002  F008         	movff	i2noRepeat@po+1,??i2_noRepeat+3
  4340  0011F2  5005               	movf	??i2_noRepeat^0,w,c
  4341  0011F4  2607               	addwf	(??i2_noRepeat+2)^0,f,c
  4342  0011F6  5006               	movf	(??i2_noRepeat+1)^0,w,c
  4343  0011F8  2208               	addwfc	(??i2_noRepeat+3)^0,f,c
  4344  0011FA  0E02               	movlw	2
  4345  0011FC  2407               	addwf	(??i2_noRepeat+2)^0,w,c
  4346  0011FE  6ED9               	movwf	fsr2l,c
  4347  001200  0E00               	movlw	0
  4348  001202  2008               	addwfc	(??i2_noRepeat+3)^0,w,c
  4349  001204  6EDA               	movwf	fsr2h,c
  4350  001206  90D8               	bcf	status,0,c
  4351  001208  3409               	rlcf	i2noRepeat@t^0,w,c
  4352  00120A  6EE1               	movwf	fsr1l,c
  4353  00120C  340A               	rlcf	(i2noRepeat@t+1)^0,w,c
  4354  00120E  6EE2               	movwf	fsr1h,c
  4355  001210  5001               	movf	i2noRepeat@po^0,w,c
  4356  001212  26E1               	addwf	fsr1l,f,c
  4357  001214  5002               	movf	(i2noRepeat@po+1)^0,w,c
  4358  001216  22E2               	addwfc	fsr1h,f,c
  4359  001218  CFDE FFE6          	movff	postinc2,postinc1
  4360  00121C  CFDD FFE5          	movff	postdec2,postdec1
  4361  001220                     
  4362                           ;main.c: 224:                     t++;
  4363  001220  4A09               	infsnz	i2noRepeat@t^0,f,c
  4364  001222  2A0A               	incf	(i2noRepeat@t+1)^0,f,c
  4365  001224                     
  4366                           ;main.c: 225:                 }
  4367  001224  4A0B               	infsnz	i2noRepeat@shift^0,f,c
  4368  001226  2A0C               	incf	(i2noRepeat@shift+1)^0,f,c
  4369  001228                     i2l2070:
  4370  001228  FFFF               	dw	65535	; assembler added errata NOP
  4371  00122A  500F               	movf	i2noRepeat@size^0,w,c
  4372  00122C  5C0B               	subwf	i2noRepeat@shift^0,w,c
  4373  00122E  500C               	movf	(i2noRepeat@shift+1)^0,w,c
  4374  001230  0A80               	xorlw	128
  4375  001232  6E05               	movwf	??i2_noRepeat^0,c
  4376  001234  5010               	movf	(i2noRepeat@size+1)^0,w,c
  4377  001236  0A80               	xorlw	128
  4378  001238  5805               	subwfb	??i2_noRepeat^0,w,c
  4379  00123A  A0D8               	btfss	status,0,c
  4380  00123C  EF22  F009         	goto	i2u132_41
  4381  001240  EF25  F009         	goto	i2u132_40
  4382  001244                     i2u132_41:
  4383  001244  FFFF               	dw	65535	; assembler added errata NOP
  4384  001246  EFED  F008         	goto	i2l2064
  4385  00124A                     i2u132_40:
  4386  00124A  FFFF               	dw	65535	; assembler added errata NOP
  4387  00124C                     
  4388                           ;main.c: 226:                 size--;
  4389  00124C  060F               	decf	i2noRepeat@size^0,f,c
  4390  00124E  A0D8               	btfss	status,0,c
  4391  001250  0610               	decf	(i2noRepeat@size+1)^0,f,c
  4392                           
  4393                           ;main.c: 227:                 comp--;
  4394  001252  0611               	decf	i2noRepeat@comp^0,f,c
  4395  001254  A0D8               	btfss	status,0,c
  4396  001256  0612               	decf	(i2noRepeat@comp+1)^0,f,c
  4397  001258                     i2l79:
  4398  001258  FFFF               	dw	65535	; assembler added errata NOP
  4399                           
  4400                           ;main.c: 231:         }
  4401  00125A  4A11               	infsnz	i2noRepeat@comp^0,f,c
  4402  00125C  2A12               	incf	(i2noRepeat@comp+1)^0,f,c
  4403  00125E                     i2l2074:
  4404  00125E  FFFF               	dw	65535	; assembler added errata NOP
  4405  001260  500F               	movf	i2noRepeat@size^0,w,c
  4406  001262  5C11               	subwf	i2noRepeat@comp^0,w,c
  4407  001264  5012               	movf	(i2noRepeat@comp+1)^0,w,c
  4408  001266  0A80               	xorlw	128
  4409  001268  6E05               	movwf	??i2_noRepeat^0,c
  4410  00126A  5010               	movf	(i2noRepeat@size+1)^0,w,c
  4411  00126C  0A80               	xorlw	128
  4412  00126E  5805               	subwfb	??i2_noRepeat^0,w,c
  4413  001270  A0D8               	btfss	status,0,c
  4414  001272  EF3D  F009         	goto	i2u133_41
  4415  001276  EF40  F009         	goto	i2u133_40
  4416  00127A                     i2u133_41:
  4417  00127A  FFFF               	dw	65535	; assembler added errata NOP
  4418  00127C  EFC2  F008         	goto	i2l2060
  4419  001280                     i2u133_40:
  4420  001280  FFFF               	dw	65535	; assembler added errata NOP
  4421  001282                     
  4422                           ;main.c: 232:     }
  4423  001282  4A0D               	infsnz	i2noRepeat@temp^0,f,c
  4424  001284  2A0E               	incf	(i2noRepeat@temp+1)^0,f,c
  4425  001286                     i2l2078:
  4426  001286  FFFF               	dw	65535	; assembler added errata NOP
  4427  001288  500F               	movf	i2noRepeat@size^0,w,c
  4428  00128A  5C0D               	subwf	i2noRepeat@temp^0,w,c
  4429  00128C  500E               	movf	(i2noRepeat@temp+1)^0,w,c
  4430  00128E  0A80               	xorlw	128
  4431  001290  6E05               	movwf	??i2_noRepeat^0,c
  4432  001292  5010               	movf	(i2noRepeat@size+1)^0,w,c
  4433  001294  0A80               	xorlw	128
  4434  001296  5805               	subwfb	??i2_noRepeat^0,w,c
  4435  001298  A0D8               	btfss	status,0,c
  4436  00129A  EF51  F009         	goto	i2u134_41
  4437  00129E  EF54  F009         	goto	i2u134_40
  4438  0012A2                     i2u134_41:
  4439  0012A2  FFFF               	dw	65535	; assembler added errata NOP
  4440  0012A4  EFB9  F008         	goto	i2l2058
  4441  0012A8                     i2u134_40:
  4442  0012A8  FFFF               	dw	65535	; assembler added errata NOP
  4443  0012AA                     
  4444                           ;main.c: 233:     return size;
  4445  0012AA  C00F  F001         	movff	i2noRepeat@size,?i2_noRepeat
  4446  0012AE  C010  F002         	movff	i2noRepeat@size+1,?i2_noRepeat+1
  4447  0012B2  0012               	return		;funcret
  4448  0012B4  FFFF               	dw	65535	; errata NOP
  4449  0012B6                     __end_ofi2_noRepeat:
  4450                           	callstack 0
  4451  0012B6  FFFF               	dw	65535	; assembler added errata NOP
  4452                           
  4453                           	psect	rparam
  4454  0000                     
  4455                           	psect	temp
  4456  000061                     btemp:
  4457                           	callstack 0
  4458  000061                     	ds	1
  4459  0000                     int$flags	set	btemp
  4460  0000                     wtemp8	set	btemp+1
  4461  0000                     ttemp5	set	btemp+1
  4462  0000                     ttemp6	set	btemp+4
  4463  0000                     ttemp7	set	btemp+8
  4464                           
  4465                           	psect	idloc
  4466                           
  4467                           ;Config register IDLOC0 @ 0x200000
  4468                           ;	unspecified, using default values
  4469  200000                     	org	2097152
  4470  200000  FF                 	db	255
  4471                           
  4472                           ;Config register IDLOC1 @ 0x200001
  4473                           ;	unspecified, using default values
  4474  200001                     	org	2097153
  4475  200001  FF                 	db	255
  4476                           
  4477                           ;Config register IDLOC2 @ 0x200002
  4478                           ;	unspecified, using default values
  4479  200002                     	org	2097154
  4480  200002  FF                 	db	255
  4481                           
  4482                           ;Config register IDLOC3 @ 0x200003
  4483                           ;	unspecified, using default values
  4484  200003                     	org	2097155
  4485  200003  FF                 	db	255
  4486                           
  4487                           ;Config register IDLOC4 @ 0x200004
  4488                           ;	unspecified, using default values
  4489  200004                     	org	2097156
  4490  200004  FF                 	db	255
  4491                           
  4492                           ;Config register IDLOC5 @ 0x200005
  4493                           ;	unspecified, using default values
  4494  200005                     	org	2097157
  4495  200005  FF                 	db	255
  4496                           
  4497                           ;Config register IDLOC6 @ 0x200006
  4498                           ;	unspecified, using default values
  4499  200006                     	org	2097158
  4500  200006  FF                 	db	255
  4501                           
  4502                           ;Config register IDLOC7 @ 0x200007
  4503                           ;	unspecified, using default values
  4504  200007                     	org	2097159
  4505  200007  FF                 	db	255
  4506                           
  4507                           	psect	config
  4508                           
  4509                           ; Padding undefined space
  4510  300000                     	org	3145728
  4511  300000  FF                 	db	255
  4512                           
  4513                           ;Config register CONFIG1H @ 0x300001
  4514                           ;	Oscillator Selection bits
  4515                           ;	OSC = HS, HS oscillator
  4516                           ;	Oscillator System Clock Switch Enable bit
  4517                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
  4518  300001                     	org	3145729
  4519  300001  22                 	db	34
  4520                           
  4521                           ;Config register CONFIG2L @ 0x300002
  4522                           ;	Power-up Timer Enable bit
  4523                           ;	PWRT = OFF, PWRT disabled
  4524                           ;	Brown-out Reset Enable bit
  4525                           ;	BOR = OFF, Brown-out Reset disabled
  4526                           ;	Brown-out Reset Voltage bits
  4527                           ;	BORV = 20, VBOR set to 2.0V
  4528  300002                     	org	3145730
  4529  300002  0D                 	db	13
  4530                           
  4531                           ;Config register CONFIG2H @ 0x300003
  4532                           ;	Watchdog Timer Enable bit
  4533                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4534                           ;	Watchdog Timer Postscale Select bits
  4535                           ;	WDTPS = 128, 1:128
  4536  300003                     	org	3145731
  4537  300003  0E                 	db	14
  4538                           
  4539                           ; Padding undefined space
  4540  300004                     	org	3145732
  4541  300004  FF                 	db	255
  4542                           
  4543                           ;Config register CONFIG3H @ 0x300005
  4544                           ;	CCP2 Mux bit
  4545                           ;	CCP2MUX = OFF, CCP2 input/output is multiplexed with RB3
  4546  300005                     	org	3145733
  4547  300005  00                 	db	0
  4548                           
  4549                           ;Config register CONFIG4L @ 0x300006
  4550                           ;	Stack Full/Underflow Reset Enable bit
  4551                           ;	STVR = OFF, Stack Full/Underflow will not cause RESET
  4552                           ;	Low Voltage ICSP Enable bit
  4553                           ;	LVP = OFF, Low Voltage ICSP disabled
  4554                           ;	Background Debugger Enable bit
  4555                           ;	DEBUG = 0x1, unprogrammed default
  4556  300006                     	org	3145734
  4557  300006  80                 	db	128
  4558                           
  4559                           ; Padding undefined space
  4560  300007                     	org	3145735
  4561  300007  FF                 	db	255
  4562                           
  4563                           ;Config register CONFIG5L @ 0x300008
  4564                           ;	Code Protection bit
  4565                           ;	CP0 = ON, Block 0 (000200-001FFFh) code protected
  4566                           ;	Code Protection bit
  4567                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code protected
  4568                           ;	Code Protection bit
  4569                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code protected
  4570                           ;	Code Protection bit
  4571                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code protected
  4572  300008                     	org	3145736
  4573  300008  0E                 	db	14
  4574                           
  4575                           ;Config register CONFIG5H @ 0x300009
  4576                           ;	Boot Block Code Protection bit
  4577                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code protected
  4578                           ;	Data EEPROM Code Protection bit
  4579                           ;	CPD = OFF, Data EEPROM not code protected
  4580  300009                     	org	3145737
  4581  300009  C0                 	db	192
  4582                           
  4583                           ;Config register CONFIG6L @ 0x30000A
  4584                           ;	Write Protection bit
  4585                           ;	WRT0 = OFF, Block 0 (000200-001FFFh) not write protected
  4586                           ;	Write Protection bit
  4587                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write protected
  4588                           ;	Write Protection bit
  4589                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write protected
  4590                           ;	Write Protection bit
  4591                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write protected
  4592  30000A                     	org	3145738
  4593  30000A  0F                 	db	15
  4594                           
  4595                           ;Config register CONFIG6H @ 0x30000B
  4596                           ;	Configuration Register Write Protection bit
  4597                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write protected
  4598                           ;	Boot Block Write Protection bit
  4599                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write protected
  4600                           ;	Data EEPROM Write Protection bit
  4601                           ;	WRTD = OFF, Data EEPROM not write protected
  4602  30000B                     	org	3145739
  4603  30000B  E0                 	db	224
  4604                           
  4605                           ;Config register CONFIG7L @ 0x30000C
  4606                           ;	Table Read Protection bit
  4607                           ;	EBTR0 = OFF, Block 0 (000200-001FFFh) not protected from Table Reads executed in other
      +                           blocks
  4608                           ;	Table Read Protection bit
  4609                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from Table Reads executed in other
      +                           blocks
  4610                           ;	Table Read Protection bit
  4611                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from Table Reads executed in other
      +                           blocks
  4612                           ;	Table Read Protection bit
  4613                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from Table Reads executed in other
      +                           blocks
  4614  30000C                     	org	3145740
  4615  30000C  0F                 	db	15
  4616                           
  4617                           ;Config register CONFIG7H @ 0x30000D
  4618                           ;	Boot Block Table Read Protection bit
  4619                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from Table Reads executed in ot
      +                          her blocks
  4620  30000D                     	org	3145741
  4621  30000D  40                 	db	64
  4622                           tosu	equ	0xFFF
  4623                           tosh	equ	0xFFE
  4624                           tosl	equ	0xFFD
  4625                           stkptr	equ	0xFFC
  4626                           pclatu	equ	0xFFB
  4627                           pclath	equ	0xFFA
  4628                           pcl	equ	0xFF9
  4629                           tblptru	equ	0xFF8
  4630                           tblptrh	equ	0xFF7
  4631                           tblptrl	equ	0xFF6
  4632                           tablat	equ	0xFF5
  4633                           prodh	equ	0xFF4
  4634                           prodl	equ	0xFF3
  4635                           indf0	equ	0xFEF
  4636                           postinc0	equ	0xFEE
  4637                           postdec0	equ	0xFED
  4638                           preinc0	equ	0xFEC
  4639                           plusw0	equ	0xFEB
  4640                           fsr0h	equ	0xFEA
  4641                           fsr0l	equ	0xFE9
  4642                           wreg	equ	0xFE8
  4643                           indf1	equ	0xFE7
  4644                           postinc1	equ	0xFE6
  4645                           postdec1	equ	0xFE5
  4646                           preinc1	equ	0xFE4
  4647                           plusw1	equ	0xFE3
  4648                           fsr1h	equ	0xFE2
  4649                           fsr1l	equ	0xFE1
  4650                           bsr	equ	0xFE0
  4651                           indf2	equ	0xFDF
  4652                           postinc2	equ	0xFDE
  4653                           postdec2	equ	0xFDD
  4654                           preinc2	equ	0xFDC
  4655                           plusw2	equ	0xFDB
  4656                           fsr2h	equ	0xFDA
  4657                           fsr2l	equ	0xFD9
  4658                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         622
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     74      96
    BANK0           128      0       0
    BANK1           256    214     214
    BANK2           256    214     214
    BANK3           256      0     200
    BANK4           256      0     200
    BANK5           256      0     200

Pointer List with Targets:

    sort@p	PTR int  size(2) Largest target is 200
		 -> queueDown(BANK4[200]), queueUp(BANK3[200]), 

    noRepeat@po	PTR int  size(2) Largest target is 200
		 -> queueDown(BANK4[200]), queueUp(BANK3[200]), 


Critical Paths under _main in COMRAM

    _main->_modeControl
    _modeControl->_selectionMode
    _selectionMode->_rutine_up
    _rutine_up->_controlCalls
    _controlCalls->_dataPanelUp
    _dataPanelUp->_noRepeat

Critical Paths under _ISR in COMRAM

    _ISR->i2_noRepeat

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    _ISR->i2_sort

Critical Paths under _main in BANK2

    _rutine_up->_sort
    _dataPanelUp->_sort

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    9275
                               _boot
                       _bootAscensor
                     _interruptsInit
                        _modeControl
 ---------------------------------------------------------------------------------
 (1) _modeControl                                          4     2      2    9275
                                             70 COMRAM     4     2      2
                        _dataPanelUp
                      _selectionMode
 ---------------------------------------------------------------------------------
 (2) _selectionMode                                        2     0      2    6161
                                             68 COMRAM     2     0      2
                        _rutine_down
                          _rutine_up
 ---------------------------------------------------------------------------------
 (3) _rutine_up                                            8     6      2    5281
                                             60 COMRAM     8     6      2
                       _controlCalls
                           _noRepeat
                               _sort
 ---------------------------------------------------------------------------------
 (4) _controlCalls                                        10    10      0    2720
                                             50 COMRAM    10    10      0
                        _dataPanelUp
 ---------------------------------------------------------------------------------
 (5) _dataPanelUp                                          2     2      0    2448
                                             48 COMRAM     2     2      0
                           _noRepeat
                               _sort
 ---------------------------------------------------------------------------------
 (4) _sort                                               223   219      4    1392
                                             30 COMRAM     9     5      4
                                              0 BANK2    214   214      0
 ---------------------------------------------------------------------------------
 (4) _noRepeat                                            18    14      4    1033
                                             30 COMRAM    18    14      4
 ---------------------------------------------------------------------------------
 (3) _rutine_down                                          2     0      2       0
                                             30 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _interruptsInit                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _bootAscensor                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _boot                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ISR                                                 12    12      0    1598
                                             18 COMRAM    12    12      0
                         i2_noRepeat
                             i2_sort
 ---------------------------------------------------------------------------------
 (8) i2_sort                                             223   219      4     944
                                              0 COMRAM     9     5      4
                                              0 BANK1    214   214      0
 ---------------------------------------------------------------------------------
 (8) i2_noRepeat                                          18    14      4     585
                                              0 COMRAM    18    14      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _boot
   _bootAscensor
   _interruptsInit
   _modeControl
     _dataPanelUp
       _noRepeat
       _sort
     _selectionMode
       _rutine_down
       _rutine_up
         _controlCalls
           _dataPanelUp
         _noRepeat
         _sort

 _ISR (ROOT)
   i2_noRepeat
   i2_sort

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0      C8      14       78.1%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      C8      13       78.1%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C8      11       78.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100     D6      D6       9       83.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100     D6      D6       7       83.6%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     4A      60       1       76.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     464      15        0.0%
DATA                 0      0     464       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Sun Nov 14 07:36:43 2021

                                                                     l61 15E0  
                                                                     l70 160E  
                                                                     l72 1622  
                                                                     l64 1682  
                                                                     l67 160A  
                                                                     l68 1628  
                                                                     l84 1406  
                                                                     l85 140E  
                                                                     l94 0A0C  
                                                                     l79 13B4  
                                                                    l102 0B46  
                                                                    l105 0D7E  
                                                                    l201 07FA  
                                                                    l210 088A  
                                                                    l202 0810  
                                                                    l211 08A0  
                                                                    l204 081E  
                                                                    l213 08AE  
                                                                    l205 0834  
                                                                    l221 1450  
                                                                    l214 08C4  
                                                                    l119 0FA0  
                                                                    l215 0912  
                                                                    l223 1486  
                                                 __end_of_interruptsInit 1686  
                                                                    l144 0626  
                                                                    l160 1156  
                                                                    l224 14D6  
                                                                    l225 14AE  
                                                         ??_bootAscensor 001F  
                                                                    l147 1676  
                                                                    l175 1570  
                                                                    l192 076A  
                                                                    l193 0780  
                                                                    l185 06FE  
                                                                    l186 0714  
                                                                    l195 078E  
                                                                    l196 07A4  
                                                                    u370 15FA  
                                                                    u371 15F4  
                                                                    u380 1620  
                                                                    _ISR 0008  
                                                                    u381 161A  
                                                                    u800 13A6  
                                                                    u801 13A0  
                                                                    u810 13DC  
                                                                    u811 13D6  
                                                                    u820 1404  
                                                                    u900 0DAE  
                                                                    u821 13FE  
                                                                    u901 0DA8  
                                                                    u830 0980  
                                                                    u910 0E04  
                                                                    u831 097A  
                                                                    u911 0DFE  
                                                                    u840 09BE  
                                                                    u920 0E24  
                                                                    u841 09B8  
                                                                    u921 0E1E  
                                                                    u850 0A0A  
                                                                    u930 0E7A  
                                                                    u851 0A04  
                                                                    u931 0E74  
                                                                    u860 0A84  
                                                                    u940 0E9A  
                                                                    u861 0A7E  
                                                                    u941 0E94  
                                                                    u790 1320  
                                                                    u870 0AE2  
                                                                    u950 0EF0  
                                                                    u791 131A  
                                                                    u871 0ADC  
                                                                    u951 0EEA  
                                                                    u880 0B44  
                                                                    u960 0F10  
                                                                    u881 0B3E  
                                                                    u961 0F0A  
                                                                    u970 0F66  
                                                                    u890 0D90  
                                                                    u971 0F60  
                                                                    u891 0D8A  
                                                                    u980 031C  
                                                                    u981 0316  
                                                                    u990 0388  
                                                                    u991 0382  
                                                                    wreg 000FE8  
                                                                   ?_ISR 0001  
                                                                   l2000 0814  
                                                                   l2010 083C  
                                                                   l2002 0818  
                                                                   l2020 085E  
                                                                   l2030 08A4  
                                                                   l2022 0862  
                                                                   l1240 167C  
                                                                   l2040 08CC  
                                                                   l2032 08A8  
                                                                   l2016 0842  
                                                                   l2008 0838  
                                                                   l1234 1578  
                                                                   l1242 15E6  
                                                                   l2018 085C  
                                                                   l2130 141C  
                                                                   l1236 157C  
                                                                   l1244 15FC  
                                                                   l2300 05FE  
                                                                   l2028 0868  
                                                                   l2140 1474  
                                                                   l2132 1420  
                                                                   l1238 1582  
                                                                   l2038 08C8  
                                                                   l2150 14C2  
                                                                   l2134 1438  
                                                                   l2126 1412  
                                                                   l2048 08D2  
                                                                   l2144 149A  
                                                                   l2136 1440  
                                                                   l2128 1418  
                                                                   l2154 14EA  
                                                                   l2138 1464  
                                                                   l1700 0DCA  
                                                                   l1630 12E0  
                                                                   l1710 0E26  
                                                                   l1702 0DD2  
                                                                   l1640 1384  
                                                                   l1632 1322  
                                                                   l1624 12BA  
                                                                   l1720 0E7C  
                                                                   l1712 0E40  
                                                                   l1704 0DEE  
                                                                   l1800 046C  
                                                                   l1642 13A8  
                                                                   l1634 1336  
                                                                   l1626 12C2  
                                                                   l1650 091A  
                                                                   l1722 0E9C  
                                                                   l1730 0EDE  
                                                                   l1714 0E48  
                                                                   l1706 0DF2  
                                                                   l1810 04AC  
                                                                   l1802 0472  
                                                                   l1636 137C  
                                                                   l1644 13BA  
                                                                   l1628 12CE  
                                                                   l1660 0982  
                                                                   l1652 092C  
                                                                   l1740 0F50  
                                                                   l1732 0EF2  
                                                                   l1724 0EB6  
                                                                   l1716 0E64  
                                                                   l1708 0E06  
                                                                   l1820 050A  
                                                                   l1812 04DA  
                                                                   l1804 047C  
                                                                   l1646 13DE  
                                                                   l1638 1380  
                                                                   l1670 09E2  
                                                                   l1654 0934  
                                                                   l1734 0F12  
                                                                   l1742 0F54  
                                                                   l1726 0EBE  
                                                                   l1718 0E68  
                                                                   l1830 0538  
                                                                   l1822 050E  
                                                                   l1814 04DE  
                                                                   l1806 0496  
                                                                   l1750 02FC  
                                                                   l1648 13E2  
                                                                   l1680 0A86  
                                                                   l1664 098A  
                                                                   l1672 09E8  
                                                                   l1656 0946  
                                                                   l1744 0F68  
                                                                   l1736 0F2C  
                                                                   l1728 0EDA  
                                                                   l1840 059A  
                                                                   l1832 0552  
                                                                   l1824 0510  
                                                                   l1816 0502  
                                                                   l1808 049E  
                                                                   l1760 0362  
                                                                   l1752 0306  
                                                                   l1904 1126  
                                                                   l1920 153C  
                                                                   l1912 1504  
                                                                   l1690 0AF0  
                                                                   l1682 0AA0  
                                                                   l1674 0A18  
                                                                   l1666 09C0  
                                                                   l1658 0952  
                                                                   l1746 0F98  
                                                                   l1738 0F34  
                                                                   l1850 05CC  
                                                                   l1842 05BE  
                                                                   l1834 055A  
                                                                   l1826 0528  
                                                                   l1818 0508  
                                                                   l1770 0396  
                                                                   l1762 0366  
                                                                   l1754 031E  
                                                                   l1922 1554  
                                                                   l1914 151A  
                                                                   l2298 08EA  
                                                                   l1930 0644  
                                                                   l1692 0B1E  
                                                                   l1684 0AA6  
                                                                   l1676 0A5E  
                                                                   l1668 09DA  
                                                                   l1844 05C4  
                                                                   l1836 0568  
                                                                   l1828 052E  
                                                                   l1780 03DA  
                                                                   l1772 0398  
                                                                   l1764 038A  
                                                                   l1756 0326  
                                                                   l1748 02F8  
                                                                   l1908 114C  
                                                                   l1924 1556  
                                                                   l1916 151C  
                                                                   l1940 06CE  
                                                                   l1932 0670  
                                                                   l1862 166E  
                                                                   l1694 0B22  
                                                                   l1686 0AAA  
                                                                   l1678 0A62  
                                                                   l1846 05C6  
                                                                   l1838 0596  
                                                                   l1790 0446  
                                                                   l1782 03E2  
                                                                   l1774 03B0  
                                                                   l1766 0390  
                                                                   l1758 0334  
                                                                   l1854 05E8  
                                                                   l1870 0FC0  
                                                                   l1950 071C  
                                                                   l1942 06D2  
                                                                   l1934 0688  
                                                                   l1688 0AE4  
                                                                   l1696 0D92  
                                                                   l1848 05CA  
                                                                   l1792 044C  
                                                                   l1784 03F0  
                                                                   l1776 03B6  
                                                                   l1768 0392  
                                                                   l1880 1046  
                                                                   l1872 0FDE  
                                                                   l1960 073E  
                                                                   l1944 06D4  
                                                                   l1936 06B4  
                                                                   l1928 062E  
                                                                   l1698 0DB0  
                                                                   l1794 044E  
                                                                   l1786 041E  
                                                                   l1778 03C0  
                                                                   l1890 10E4  
                                                                   l1882 106A  
                                                                   l1874 0FFA  
                                                                   l1866 0FA6  
                                                                   l1970 0784  
                                                                   l1962 0742  
                                                                   l1946 06EE  
                                                                   l1938 06CC  
                                                                   l1796 0452  
                                                                   l1788 0422  
                                                                   l1892 10E8  
                                                                   l1884 10A2  
                                                                   l1876 1008  
                                                                   l1868 0FAA  
                                                                   l1980 07AC  
                                                                   l1972 0788  
                                                                   l1956 0722  
                                                                   l1948 0718  
                                                                   l1798 0454  
                                                                   l1894 110C  
                                                                   l1886 10AA  
                                                                   l1878 1042  
                                                                   l1990 07CE  
                                                                   l1958 073C  
                                                                   l1896 1112  
                                                                   l1888 10B6  
                                                                   l1992 07D2  
                                                                   l1968 0748  
                                                                   l1898 111A  
                                                                   l1986 07B2  
                                                                   l1978 07A8  
                                                                   l1988 07CC  
                                                                   l1998 07D8  
                                                                   u1000 03D8  
                                                                   u1001 03D2  
                                                                   u1010 0444  
                                                                   u1011 043E  
                                                                   u1020 0494  
                                                                   u1100 110A  
                                                                   u1021 048E  
                                                                   u1101 1104  
                                                                   u1030 0500  
                                                                   u1110 1518  
                                                                   u1031 04FA  
                                                                   u1111 1512  
                                                                   u1040 0550  
                                                                   u1120 1536  
                                                                   u1200 0768  
                                                                   u1041 054A  
                                                                   u1121 1530  
                                                                   u1201 0762  
                                                                   u1050 05BC  
                                                                   u1130 1552  
                                                                   u1210 077E  
                                                                   u1051 05B6  
                                                                   u1131 154C  
                                                                   u1211 0778  
                                                                   u1060 0FBE  
                                                                   u1140 1570  
                                                                   u1300 08C2  
                                                                   u1220 07A2  
                                                                   u1061 0FB8  
                                                                   u1141 156A  
                                                                   u1301 08BC  
                                                                   u1221 079C  
                                                                   u1070 0FDC  
                                                                   u1230 07CA  
                                                                   u1150 0642  
                                                                   u1071 0FD6  
                                                                   u1231 07C4  
                                                                   u1151 063C  
                                                                   u1080 0FFA  
                                                                   u1240 07F8  
                                                                   u1160 0686  
                                                                   u1081 0FF4  
                                                                   u1241 07F2  
                                                                   u1161 0680  
                                                                   u1090 1068  
                                                                   u1250 080E  
                                                                   u1170 06CA  
                                                                   u1410 1436  
                                                                   u1091 1062  
                                                                   u1251 0808  
                                                                   u1171 06C4  
                                                                   u1411 1430  
                                                                   u1260 0832  
                                                                   u1180 0712  
                                                                   u1420 1462  
                                                                   u1261 082C  
                                                                   u1181 070C  
                                                                   u1421 145C  
                                                                   u1270 085A  
                                                                   u1190 073A  
                                                                   u1430 1498  
                                                                   u1271 0854  
                                                                   u1191 0734  
                                                                   u1431 1492  
                                                                   u1280 0888  
                                                                   u1440 14C0  
                                                                   u1281 0882  
                                                                   u1441 14BA  
                                                                   u1290 089E  
                                                                   u1450 14E8  
                                                                   u1291 0898  
                                                                   u1451 14E2  
                                                                   u1557 06E0  
                                                                   u1567 03A2  
                                                                   u1577 045E  
                                                                   u1587 051A  
                                                                   u1597 05D6  
                                                                   i2l84 12AA  
                                                                   i2l85 12B2  
                                                                   i2l94 0C3E  
                                                                   i2l79 1258  
                                                             i2_noRepeat 115C  
                                                                   _boot 1576  
                                                                   _main 1412  
                                                                   fsr1h 000FE2  
                                                                   fsr2h 000FDA  
                                                                   fsr1l 000FE1  
                                                                   fsr2l 000FD9  
                                                                   _sort 0918  
                                                                   btemp 0061  
                                                                   start 02F2  
                                                           ___param_bank 000000  
                                                            _rutine_down 166C  
                                                                  ??_ISR 0013  
                                                          ?_controlCalls 0001  
                                                                  ISR@si 0019  
                                                                  ?_boot 0001  
                                                                  ?_main 0001  
                                                                  ?_sort 001F  
                                                        ?_interruptsInit 0001  
                                                                  i2l102 0D78  
                                                                  i2l254 02DA  
                                                           ?_modeControl 0047  
                                                                  _PORTB 000F81  
                                                                  _PORTD 000F83  
                                                   __size_of_dataPanelUp 0228  
                                                                  _TRISA 000F92  
                                                                  _TRISB 000F93  
                                                                  _TRISC 000F94  
                                                                  _TRISD 000F95  
                                                                  _nowFL 0055  
                                                        i2noRepeat@shift 000B  
                                                        i2noRepeat@sixes 0003  
                                                                  sort@h 02D4  
                                                                  sort@j 02D0  
                                                                  sort@k 02CE  
                                                                  sort@p 001F  
                                                                  ttemp5 0062  
                                                                  ttemp6 0065  
                                                                  ttemp7 0069  
                                                                  status 000FD8  
                                                                  wtemp8 0062  
                                                        __initialization 162E  
                                                           __end_of_boot 15E4  
                                                           __end_of_main 1502  
                                                           __end_of_sort 0B4A  
                                                         ??_controlCalls 0033  
                                                             i2sort@temp 01D2  
                                                             i2sort@nums 01CA  
                                                                 ??_boot 001F  
                                                                 ??_main 004B  
                                                                 ??_sort 0023  
                                                          __activetblptr 000002  
                                                  __end_of_selectionMode 1576  
                                                                 _ADCON1 000FC1  
                                                                 i2l2100 0C14  
                                                                 i2l2110 0CB8  
                                                                 i2l2102 0C1A  
                                                                 i2l2120 0D22  
                                                                 i2l2112 0CD2  
                                                                 i2l2104 0C4A  
                                                                 i2l2200 01D0  
                                                                 i2l2122 0D50  
                                                                 i2l2114 0CD8  
                                                                 i2l2106 0C90  
                                                                 i2l2210 0228  
                                                                 i2l2202 01D4  
                                                                 i2l2060 1184  
                                                                 i2l2124 0D54  
                                                                 i2l2116 0CDC  
                                                                 i2l2108 0C94  
                                                                 i2l2204 01E8  
                                                                 i2l2070 1228  
                                                                 i2l2062 11C6  
                                                                 i2l2054 115E  
                                                                 i2l2118 0D16  
                                                                 i2l2302 0292  
                                                                 i2l2214 0246  
                                                                 i2l2206 0204  
                                                                 i2l2222 027C  
                                                                 i2l2072 124C  
                                                                 i2l2064 11DA  
                                                                 i2l2056 1166  
                                                                 i2l2080 0B4C  
                                                                 i2l2216 025E  
                                                                 i2l2208 0210  
                                                                 i2l2160 0020  
                                                                 i2l2066 1220  
                                                                 i2l2074 125E  
                                                                 i2l2058 1172  
                                                                 i2l2090 0BB4  
                                                                 i2l2082 0B5E  
                                                                 i2l2170 0088  
                                                                 i2l2162 0038  
                                                                 i2l2076 1282  
                                                                 i2l2068 1224  
                                                                 i2l2084 0B66  
                                                                 i2l2180 0102  
                                                                 i2l2172 00A4  
                                                                 i2l2164 0056  
                                                                 i2l2078 1286  
                                                                 i2l2094 0BBC  
                                                                 i2l2086 0B78  
                                                                 i2l2190 015A  
                                                                 i2l2182 0106  
                                                                 i2l2174 00B0  
                                                                 i2l2166 0070  
                                                                 i2l2158 001C  
                                                                 i2l2096 0BF2  
                                                                 i2l2088 0B84  
                                                                 i2l2192 0174  
                                                                 i2l2184 011A  
                                                                 i2l2176 00C8  
                                                                 i2l2168 0074  
                                                                 i2l2098 0C0C  
                                                                 i2l2194 017E  
                                                                 i2l2186 0136  
                                                                 i2l2178 00E8  
                                                                 i2l2196 0196  
                                                                 i2l2188 0142  
                                                                 i2l2198 01B6  
                                                            ?i2_noRepeat 0001  
                                                   __end_of_bootAscensor 162E  
                                                                 i2_sort 0B4A  
                                                            i2noRepeat@t 0009  
                                                           sort@sizesMod 02CC  
                                                                 _callsD 0059  
                                                                 _callsU 005B  
                                                       __end_of_noRepeat 1412  
                                                                 clear_0 1634  
                                                                 clear_1 1640  
                                                                 clear_2 164C  
                                                                 clear_3 1658  
                                                                 _prevFL 0053  
                                                      controlCalls@i_495 0037  
                                                      controlCalls@i_496 0039  
                                                      controlCalls@i_497 003B  
                                                                 isa$std 000001  
                                                                 tblptru 000FF8  
                                                             __accesstop 0080  
                                                __end_of__initialization 165E  
                                                       _from_down_change 004B  
                                                          ___rparam_used 000001  
                                                         __pcstackCOMRAM 0001  
                                                    __size_ofi2_noRepeat 015A  
                                                            i2sort@sizes 0003  
                                                   __size_of_modeControl 02EC  
                                                   __end_of_controlCalls 062C  
                                                             __pbssBANK3 0300  
                                                             __pbssBANK4 0400  
                                                             __pbssBANK5 0500  
                                                              ISR@si_533 001B  
                                                              ISR@si_534 001D  
                                                                ?i2_sort 0001  
                                                           ?_rutine_down 001F  
                                                       ??_interruptsInit 001F  
                                                 modeControl@select_mode 0047  
                                                           noRepeat@comp 002F  
                                                           noRepeat@temp 002B  
                                                           noRepeat@size 002D  
                                                    selectionMode@mode_s 0045  
                                                  __size_of_bootAscensor 004A  
                                                              ?_noRepeat 001F  
                                                     __size_of_rutine_up 01B8  
                                                           i2noRepeat@po 0001  
                                                                i2sort@h 01D4  
                                                                i2sort@j 01D0  
                                                                i2sort@k 01CE  
                                                                i2sort@p 0001  
                                                        __size_ofi2_sort 0232  
                                                                __Hparam 0000  
                                                                __Lparam 0000  
                                                         i2sort@sizesMod 01CC  
                                                             _modeDown_F 004F  
                                                                __pcinit 162E  
                                                          ??_dataPanelUp 0031  
                                                                __ramtop 0600  
                                                                __ptext0 1412  
                                                                __ptext1 062C  
                                                                __ptext2 1502  
                                                                __ptext3 0FA4  
                                                                __ptext4 02F6  
                                                                __ptext5 0D7C  
                                                                __ptext6 0918  
                                                                __ptext7 12B8  
                                                                __ptext8 166C  
                                                                __ptext9 167A  
                                                           __size_of_ISR 02EA  
                                                           _bootAscensor 15E4  
                                                                _tasksUp 005D  
                                                                _queueUp 0300  
                                                   end_of_initialization 165E  
                                                           ??i2_noRepeat 0005  
                                                             ??_noRepeat 0023  
                                                          controlCalls@i 0035  
                                                          __Lmediumconst 0000  
                                                                postdec1 000FE5  
                                                                postdec2 000FDD  
                                                                postinc0 000FEE  
                                                                postinc1 000FE6  
                                                                postinc2 000FDE  
                                                                sort@pos 02C8  
                                                              _PORTAbits 000F80  
                                                              _PORTBbits 000F81  
                                                              _PORTDbits 000F83  
                                                      __end_of_rutine_up 115C  
                                                     __end_ofi2_noRepeat 12B6  
                                                  __size_of_controlCalls 0336  
                                                    __end_of_dataPanelUp 0FA4  
                                                         __end_ofi2_sort 0D7C  
                                                 __size_of_selectionMode 0074  
                                                           _controlCalls 02F6  
                                                   __size_of_rutine_down 000E  
                                                         i2noRepeat@comp 0011  
                                                         i2noRepeat@temp 000D  
                                                         i2noRepeat@size 000F  
                                                    start_initialization 162E  
                                                            __end_of_ISR 02F2  
                                                              i2sort@pos 01C8  
                                                    dataPanelUp@new_size 0031  
                                                             noRepeat@po 001F  
                                                               ??i2_sort 0005  
                                                           i2sort@result 0100  
                                                         _from_up_change 004D  
                                                            _dataPanelUp 0D7C  
                                                          ??_modeControl 0049  
                                                            __pbssCOMRAM 004B  
                                                          __pcstackBANK1 0100  
                                                          __pcstackBANK2 0200  
                                                          _selectionMode 1502  
                                                              _call_init 0057  
                                                              _callsInUp 0500  
                                                      __size_of_noRepeat 015A  
                                                              __pintcode 0008  
                                                          noRepeat@shift 0029  
                                                          noRepeat@sixes 0021  
                                                         ?_selectionMode 0045  
                                                    __end_of_modeControl 0918  
                                                            rutine_up@re 0043  
                                                               _LATCbits 000F8B  
                                                               _LATDbits 000F8C  
                                                               i2u131_40 11C4  
                                                               i2u131_41 11BE  
                                                               i2u132_40 124A  
                                                               i2u140_40 0D76  
                                                               i2u132_41 1244  
                                                               i2u140_41 0D70  
                                                               i2u133_40 1280  
                                                               i2u133_41 127A  
                                                               i2u134_40 12A8  
                                                               i2u150_40 0158  
                                                               i2u134_41 12A2  
                                                               i2u150_41 0152  
                                                               i2u135_40 0BB2  
                                                               i2u151_40 0194  
                                                               i2u135_41 0BAC  
                                                               i2u151_41 018E  
                                                               i2u136_40 0BF0  
                                                               i2u152_40 01B4  
                                                               i2u136_41 0BEA  
                                                               i2u152_41 01AE  
                                                               i2u137_40 0C3C  
                                                               i2u153_40 0226  
                                                               i2u137_41 0C36  
                                                               i2u153_41 0220  
                                                               i2u138_40 0CB6  
                                                               i2u154_40 025C  
                                                               i2u146_40 0036  
                                                               i2u138_41 0CB0  
                                                               i2u154_41 0256  
                                                               i2u146_41 0030  
                                                               i2u139_40 0D14  
                                                               i2u147_40 0054  
                                                               i2u139_41 0D0E  
                                                               i2u147_41 004E  
                                                               i2u148_40 00C6  
                                                               i2u148_41 00C0  
                                                               i2u149_40 00E6  
                                                               i2u149_41 00E0  
                                                              _tasksDown 005F  
                                                               _RCONbits 000FD0  
                                                              _queueDown 0400  
                                                __size_of_interruptsInit 000C  
                                                              _rutine_up 0FA4  
                                                              noRepeat@t 0027  
                                                               __Hrparam 0000  
                                                             sort@result 0200  
                                                               __Lrparam 0000  
                                                            _modeControl 062C  
                                                        ??_selectionMode 0047  
                                                             ?_rutine_up 003D  
                                                               __ptext10 15E4  
                                                               __ptext11 1576  
                                                               __ptext13 0B4A  
                                                               __ptext14 115C  
                                                               _noRepeat 12B8  
                                                          __size_of_boot 006E  
                                                          __size_of_main 00F0  
                                                               _modeUp_F 0051  
                                                          __size_of_sort 0232  
                                                             rutine_up@i 0041  
                                                          ??_rutine_down 0021  
                                                               isa$xinst 000000  
                                                               int$flags 0061  
                                                           ?_dataPanelUp 0001  
                                                             _INTCONbits 000FF2  
                                                              sort@sizes 0021  
                                                               intlevel2 1686  
                                                               sort@temp 02D2  
                                                               sort@nums 02CA  
                                                    __end_of_rutine_down 167A  
                                                          ?_bootAscensor 0001  
                                                         _interruptsInit 167A  
                                                            ??_rutine_up 003F  
