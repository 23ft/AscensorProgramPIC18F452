

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Nov  9 10:24:30 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    21                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    22                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    24                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    25                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    26  0000                     
    27                           ; Version 2.20
    28                           ; Generated 12/02/2020 GMT
    29                           ; 
    30                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC18F452 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     _PORTB	set	3969
    62  0000                     _LATD	set	3980
    63  0000                     _PORTBbits	set	3969
    64  0000                     _LATDbits	set	3980
    65  0000                     _PORTAbits	set	3968
    66  0000                     _PORTDbits	set	3971
    67  0000                     _LATCbits	set	3979
    68  0000                     _INTCONbits	set	4082
    69  0000                     _RCONbits	set	4048
    70  0000                     _TRISC	set	3988
    71  0000                     _TRISA	set	3986
    72  0000                     _TRISD	set	3989
    73  0000                     _TRISB	set	3987
    74  0000                     _ADCON1	set	4033
    75                           
    76                           ; #config settings
    77                           
    78                           	psect	cinit
    79  000974                     __pcinit:
    80                           	callstack 0
    81  000974                     start_initialization:
    82                           	callstack 0
    83  000974                     __initialization:
    84                           	callstack 0
    85                           
    86                           ; Clear objects allocated to BANK4 (200 bytes)
    87  000974  EE04  F000         	lfsr	0,__pbssBANK4
    88  000978  0EC8               	movlw	200
    89  00097A                     clear_0:
    90  00097A  6AEE               	clrf	postinc0,c
    91  00097C  06E8               	decf	wreg,f,c
    92  00097E  E1FD               	bnz	clear_0
    93                           
    94                           ; Clear objects allocated to BANK3 (200 bytes)
    95  000980  EE03  F000         	lfsr	0,__pbssBANK3
    96  000984  0EC8               	movlw	200
    97  000986                     clear_1:
    98  000986  6AEE               	clrf	postinc0,c
    99  000988  06E8               	decf	wreg,f,c
   100  00098A  E1FD               	bnz	clear_1
   101                           
   102                           ; Clear objects allocated to BANK2 (200 bytes)
   103  00098C  EE02  F000         	lfsr	0,__pbssBANK2
   104  000990  0EC8               	movlw	200
   105  000992                     clear_2:
   106  000992  6AEE               	clrf	postinc0,c
   107  000994  06E8               	decf	wreg,f,c
   108  000996  E1FD               	bnz	clear_2
   109                           
   110                           ; Clear objects allocated to BANK1 (200 bytes)
   111  000998  EE01  F000         	lfsr	0,__pbssBANK1
   112  00099C  0EC8               	movlw	200
   113  00099E                     clear_3:
   114  00099E  6AEE               	clrf	postinc0,c
   115  0009A0  06E8               	decf	wreg,f,c
   116  0009A2  E1FD               	bnz	clear_3
   117                           
   118                           ; Clear objects allocated to COMRAM (16 bytes)
   119  0009A4  EE00  F02C         	lfsr	0,__pbssCOMRAM
   120  0009A8  0E10               	movlw	16
   121  0009AA                     clear_4:
   122  0009AA  6AEE               	clrf	postinc0,c
   123  0009AC  06E8               	decf	wreg,f,c
   124  0009AE  E1FD               	bnz	clear_4
   125  0009B0                     end_of_initialization:
   126                           	callstack 0
   127  0009B0                     __end_of__initialization:
   128                           	callstack 0
   129  0009B0  903C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   130  0009B2  923C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   131  0009B4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   132  0009B6  6EF8               	movwf	tblptru,c
   133  0009B8  0100               	movlb	0
   134  0009BA  EF7B  F004         	goto	_main	;jump to C main() function
   135                           
   136                           	psect	bssCOMRAM
   137  00002C                     __pbssCOMRAM:
   138                           	callstack 0
   139  00002C                     	ds	2
   140  00002E                     _downF:
   141                           	callstack 0
   142  00002E                     	ds	2
   143  000030                     _upF:
   144                           	callstack 0
   145  000030                     	ds	2
   146  000032                     _numUps:
   147                           	callstack 0
   148  000032                     	ds	2
   149  000034                     _nowFL:
   150                           	callstack 0
   151  000034                     	ds	2
   152  000036                     _callFL:
   153                           	callstack 0
   154  000036                     	ds	2
   155  000038                     _callsD:
   156                           	callstack 0
   157  000038                     	ds	2
   158  00003A                     _calls:
   159                           	callstack 0
   160  00003A                     	ds	2
   161                           
   162                           	psect	bssBANK1
   163  000100                     __pbssBANK1:
   164                           	callstack 0
   165  000100                     _queueUp:
   166                           	callstack 0
   167  000100                     	ds	200
   168                           
   169                           	psect	bssBANK2
   170  000200                     __pbssBANK2:
   171                           	callstack 0
   172  000200                     _queueDown:
   173                           	callstack 0
   174  000200                     	ds	200
   175                           
   176                           	psect	bssBANK3
   177  000300                     __pbssBANK3:
   178                           	callstack 0
   179  000300                     _callsInUp:
   180                           	callstack 0
   181  000300                     	ds	200
   182                           
   183                           	psect	bssBANK4
   184  000400                     __pbssBANK4:
   185                           	callstack 0
   186  000400                     sort@result:
   187                           	callstack 0
   188  000400                     	ds	200
   189                           
   190                           	psect	cstackCOMRAM
   191  000001                     __pcstackCOMRAM:
   192                           	callstack 0
   193  000001                     ??_ISR:
   194                           
   195                           ; 1 bytes @ 0x0
   196  000001                     	ds	4
   197  000005                     sort@p:
   198                           	callstack 0
   199                           
   200                           ; 2 bytes @ 0x4
   201  000005                     	ds	2
   202  000007                     sort@sizes:
   203                           	callstack 0
   204                           
   205                           ; 2 bytes @ 0x6
   206  000007                     	ds	2
   207  000009                     ??_sort:
   208                           
   209                           ; 1 bytes @ 0x8
   210  000009                     	ds	5
   211  00000E                     sort@pos:
   212                           	callstack 0
   213                           
   214                           ; 2 bytes @ 0xD
   215  00000E                     	ds	2
   216  000010                     sort@nums:
   217                           	callstack 0
   218                           
   219                           ; 2 bytes @ 0xF
   220  000010                     	ds	2
   221  000012                     sort@sizesMod:
   222                           	callstack 0
   223                           
   224                           ; 2 bytes @ 0x11
   225  000012                     	ds	2
   226  000014                     sort@k:
   227                           	callstack 0
   228                           
   229                           ; 2 bytes @ 0x13
   230  000014                     	ds	2
   231  000016                     sort@j:
   232                           	callstack 0
   233                           
   234                           ; 2 bytes @ 0x15
   235  000016                     	ds	2
   236  000018                     sort@temp:
   237                           	callstack 0
   238                           
   239                           ; 2 bytes @ 0x17
   240  000018                     	ds	2
   241  00001A                     sort@h:
   242                           	callstack 0
   243                           
   244                           ; 2 bytes @ 0x19
   245  00001A                     	ds	2
   246  00001C                     dataPanelUp@UpCalls:
   247                           	callstack 0
   248                           
   249                           ; 2 bytes @ 0x1B
   250  00001C                     	ds	2
   251  00001E                     dataPanelUp@tamano:
   252                           	callstack 0
   253                           
   254                           ; 2 bytes @ 0x1D
   255  00001E                     	ds	2
   256  000020                     ??_modeUpControl:
   257                           
   258                           ; 1 bytes @ 0x1F
   259  000020                     	ds	2
   260  000022                     modeUpControl@i:
   261                           	callstack 0
   262                           
   263                           ; 2 bytes @ 0x21
   264  000022                     	ds	2
   265  000024                     modeUpControl@i_484:
   266                           	callstack 0
   267                           
   268                           ; 2 bytes @ 0x23
   269  000024                     	ds	2
   270  000026                     modeUpControl@i_485:
   271                           	callstack 0
   272                           
   273                           ; 2 bytes @ 0x25
   274  000026                     	ds	2
   275  000028                     modeUpControl@i_486:
   276                           	callstack 0
   277                           
   278                           ; 2 bytes @ 0x27
   279  000028                     	ds	2
   280  00002A                     ??_modeUp:
   281                           
   282                           ; 1 bytes @ 0x29
   283  00002A                     	ds	2
   284  00002C                     
   285                           ; 1 bytes @ 0x2B
   286 ;;
   287 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   288 ;;
   289 ;; *************** function _main *****************
   290 ;; Defined at:
   291 ;;		line 375 in file "main.c"
   292 ;; Parameters:    Size  Location     Type
   293 ;;		None
   294 ;; Auto vars:     Size  Location     Type
   295 ;;		None
   296 ;; Return value:  Size  Location     Type
   297 ;;                  1    wreg      void 
   298 ;; Registers used:
   299 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   300 ;; Tracked objects:
   301 ;;		On entry : 0/0
   302 ;;		On exit  : 0/0
   303 ;;		Unchanged: 0/0
   304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   305 ;;      Params:         0       0       0       0       0       0       0
   306 ;;      Locals:         0       0       0       0       0       0       0
   307 ;;      Temps:          0       0       0       0       0       0       0
   308 ;;      Totals:         0       0       0       0       0       0       0
   309 ;;Total ram usage:        0 bytes
   310 ;; Hardware stack levels required when called: 5
   311 ;; This function calls:
   312 ;;		_boot
   313 ;;		_bootAscensor
   314 ;;		_interruptsInit
   315 ;;		_modeUp
   316 ;; This function is called by:
   317 ;;		Startup code after reset
   318 ;; This function uses a non-reentrant model
   319 ;;
   320                           
   321                           	psect	text0
   322  0008F6                     __ptext0:
   323                           	callstack 0
   324  0008F6                     _main:
   325                           	callstack 26
   326  0008F6  FFFF               	dw	65535	; assembler added errata NOP
   327                           
   328                           ;main.c: 376:     boot();
   329  0008F8  EC04  F005         	call	_boot	;wreg free
   330  0008FC                     
   331                           ;main.c: 377:     interruptsInit();
   332  0008FC  EC0F  F005         	call	_interruptsInit	;wreg free
   333  000900                     
   334                           ;main.c: 378:     bootAscensor();
   335  000900  ECDF  F004         	call	_bootAscensor	;wreg free
   336  000904                     l1368:
   337  000904  FFFF               	dw	65535	; assembler added errata NOP
   338                           
   339                           ;main.c: 381:         if (PORTBbits.RB6) {
   340  000906  AC81               	btfss	129,6,c	;volatile
   341  000908  EF88  F004         	goto	u561
   342  00090C  EF8B  F004         	goto	u560
   343  000910                     u561:
   344  000910  FFFF               	dw	65535	; assembler added errata NOP
   345  000912  EF95  F004         	goto	l146
   346  000916                     u560:
   347  000916  FFFF               	dw	65535	; assembler added errata NOP
   348  000918                     
   349                           ;main.c: 382:             callFL = 1;
   350  000918  0E00               	movlw	0
   351  00091A  6E37               	movwf	(_callFL+1)^0,c
   352  00091C  0E01               	movlw	1
   353  00091E  6E36               	movwf	_callFL^0,c
   354  000920                     l1372:
   355  000920  FFFF               	dw	65535	; assembler added errata NOP
   356                           
   357                           ;main.c: 383:             modeUp();
   358  000922  EC1D  F004         	call	_modeUp	;wreg free
   359                           
   360                           ;main.c: 384:         }
   361  000926  EF82  F004         	goto	l1368
   362  00092A                     l146:
   363  00092A  FFFF               	dw	65535	; assembler added errata NOP
   364  00092C  A281               	btfss	129,1,c	;volatile
   365  00092E  EF9B  F004         	goto	u571
   366  000932  EF9E  F004         	goto	u570
   367  000936                     u571:
   368  000936  FFFF               	dw	65535	; assembler added errata NOP
   369  000938  EFA5  F004         	goto	l148
   370  00093C                     u570:
   371  00093C  FFFF               	dw	65535	; assembler added errata NOP
   372  00093E                     
   373                           ;main.c: 386:             callFL = 2;
   374  00093E  0E00               	movlw	0
   375  000940  6E37               	movwf	(_callFL+1)^0,c
   376  000942  0E02               	movlw	2
   377  000944  6E36               	movwf	_callFL^0,c
   378  000946  EF90  F004         	goto	l1372
   379  00094A                     l148:
   380  00094A  FFFF               	dw	65535	; assembler added errata NOP
   381  00094C  A681               	btfss	129,3,c	;volatile
   382  00094E  EFAB  F004         	goto	u581
   383  000952  EFAE  F004         	goto	u580
   384  000956                     u581:
   385  000956  FFFF               	dw	65535	; assembler added errata NOP
   386  000958  EFB5  F004         	goto	l147
   387  00095C                     u580:
   388  00095C  FFFF               	dw	65535	; assembler added errata NOP
   389  00095E                     
   390                           ;main.c: 390:             callFL = 3;
   391  00095E  0E00               	movlw	0
   392  000960  6E37               	movwf	(_callFL+1)^0,c
   393  000962  0E03               	movlw	3
   394  000964  6E36               	movwf	_callFL^0,c
   395  000966  EF90  F004         	goto	l1372
   396  00096A                     l147:
   397  00096A  FFFF               	dw	65535	; assembler added errata NOP
   398  00096C  EF82  F004         	goto	l1368
   399  000970  EF7B  F000         	goto	start
   400  000974                     __end_of_main:
   401                           	callstack 0
   402                           
   403 ;; *************** function _modeUp *****************
   404 ;; Defined at:
   405 ;;		line 338 in file "main.c"
   406 ;; Parameters:    Size  Location     Type
   407 ;;		None
   408 ;; Auto vars:     Size  Location     Type
   409 ;;		None
   410 ;; Return value:  Size  Location     Type
   411 ;;                  1    wreg      void 
   412 ;; Registers used:
   413 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   414 ;; Tracked objects:
   415 ;;		On entry : 0/0
   416 ;;		On exit  : 0/0
   417 ;;		Unchanged: 0/0
   418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   419 ;;      Params:         0       0       0       0       0       0       0
   420 ;;      Locals:         0       0       0       0       0       0       0
   421 ;;      Temps:          2       0       0       0       0       0       0
   422 ;;      Totals:         2       0       0       0       0       0       0
   423 ;;Total ram usage:        2 bytes
   424 ;; Hardware stack levels used: 1
   425 ;; Hardware stack levels required when called: 4
   426 ;; This function calls:
   427 ;;		_dataPanelUp
   428 ;;		_modeUpControl
   429 ;; This function is called by:
   430 ;;		_main
   431 ;; This function uses a non-reentrant model
   432 ;;
   433                           
   434                           	psect	text1
   435  00083A                     __ptext1:
   436                           	callstack 0
   437  00083A                     _modeUp:
   438                           	callstack 0
   439  00083A  FFFF               	dw	65535	; assembler added errata NOP
   440  00083C                     
   441                           ;main.c: 339:     upF = 1;
   442  00083C  0E00               	movlw	0
   443  00083E  6E31               	movwf	(_upF+1)^0,c
   444  000840  0E01               	movlw	1
   445  000842  6E30               	movwf	_upF^0,c
   446                           
   447                           ;main.c: 340:     callsD = 0;
   448  000844  0E00               	movlw	0
   449  000846  6E39               	movwf	(_callsD+1)^0,c
   450  000848  0E00               	movlw	0
   451  00084A  6E38               	movwf	_callsD^0,c
   452                           
   453                           ;main.c: 341:     calls = 0;
   454  00084C  0E00               	movlw	0
   455  00084E  6E3B               	movwf	(_calls+1)^0,c
   456  000850  0E00               	movlw	0
   457  000852  6E3A               	movwf	_calls^0,c
   458                           
   459                           ;main.c: 342:     numUps = 0;
   460  000854  0E00               	movlw	0
   461  000856  6E33               	movwf	(_numUps+1)^0,c
   462  000858  0E00               	movlw	0
   463  00085A  6E32               	movwf	_numUps^0,c
   464                           
   465                           ;main.c: 344:     switch (callFL) {
   466  00085C  EF64  F004         	goto	l1356
   467  000860                     l1338:
   468  000860  FFFF               	dw	65535	; assembler added errata NOP
   469                           
   470                           ;main.c: 347:             if (nowFL == 1) {
   471  000862  0434               	decf	_nowFL^0,w,c
   472  000864  1035               	iorwf	(_nowFL+1)^0,w,c
   473  000866  A4D8               	btfss	status,2,c
   474  000868  EF38  F004         	goto	u541
   475  00086C  EF3B  F004         	goto	u540
   476  000870                     u541:
   477  000870  FFFF               	dw	65535	; assembler added errata NOP
   478  000872  EF52  F004         	goto	l137
   479  000876                     u540:
   480  000876  FFFF               	dw	65535	; assembler added errata NOP
   481  000878                     
   482                           ;main.c: 348:                 LATDbits.LD0 = 1;
   483  000878  808C               	bsf	140,0,c	;volatile
   484  00087A                     
   485                           ;main.c: 349:                 dataPanelUp();
   486  00087A  EC13  F003         	call	_dataPanelUp	;wreg free
   487  00087E                     
   488                           ;main.c: 350:                 LATDbits.LD0 = 0;
   489  00087E  908C               	bcf	140,0,c	;volatile
   490  000880                     
   491                           ;main.c: 351:                 _delay((unsigned long)((300)*(20000000/4000.0)));
   492  000880  0E06               	movlw	6
   493  000882  6E2B               	movwf	(??_modeUp+1)^0,c
   494  000884  0EB6               	movlw	182
   495  000886  6E2A               	movwf	??_modeUp^0,c
   496  000888  0EF9               	movlw	249
   497  00088A                     u597:
   498  00088A  FFFF               	dw	65535	; errata NOP
   499  00088C  2EE8               	decfsz	wreg,f,c
   500  00088E  D7FD               	bra	u597
   501  000890  2E2A               	decfsz	??_modeUp^0,f,c
   502  000892  D7FB               	bra	u597
   503  000894  2E2B               	decfsz	(??_modeUp+1)^0,f,c
   504  000896  D7F9               	bra	u597
   505  000898                     
   506                           ;main.c: 354:                 LATCbits.LC1 = 0;
   507  000898  928B               	bcf	139,1,c	;volatile
   508  00089A                     l1350:
   509  00089A  FFFF               	dw	65535	; assembler added errata NOP
   510                           
   511                           ;main.c: 358:                     modeUpControl();
   512  00089C  EC7D  F000         	call	_modeUpControl	;wreg free
   513  0008A0  EF4D  F004         	goto	l1350
   514  0008A4                     l137:
   515  0008A4  FFFF               	dw	65535	; assembler added errata NOP
   516                           
   517                           ;main.c: 364:                     LATCbits.LC0 = 0;
   518  0008A6  908B               	bcf	139,0,c	;volatile
   519                           
   520                           ;main.c: 365:                 } while (!PORTDbits.RD4);
   521  0008A8  A883               	btfss	131,4,c	;volatile
   522  0008AA  EF59  F004         	goto	u551
   523  0008AE  EF5C  F004         	goto	u550
   524  0008B2                     u551:
   525  0008B2  FFFF               	dw	65535	; assembler added errata NOP
   526  0008B4  EF52  F004         	goto	l137
   527  0008B8                     u550:
   528  0008B8  FFFF               	dw	65535	; assembler added errata NOP
   529  0008BA                     
   530                           ;main.c: 366:                 LATCbits.LC0 = 1;
   531  0008BA  808B               	bsf	139,0,c	;volatile
   532                           
   533                           ;main.c: 368:                 LATDbits.LD0 = 1;
   534  0008BC  808C               	bsf	140,0,c	;volatile
   535  0008BE                     
   536                           ;main.c: 369:                 dataPanelUp();
   537  0008BE  EC13  F003         	call	_dataPanelUp	;wreg free
   538  0008C2                     
   539                           ;main.c: 370:                 LATDbits.LD0 = 0;
   540  0008C2  908C               	bcf	140,0,c	;volatile
   541  0008C4  EF78  F004         	goto	l140
   542  0008C8                     l1356:
   543  0008C8  FFFF               	dw	65535	; assembler added errata NOP
   544  0008CA  C036  F02A         	movff	_callFL,??_modeUp
   545  0008CE  C037  F02B         	movff	_callFL+1,??_modeUp+1
   546                           
   547                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   548                           ; Switch size 1, requested type "simple"
   549                           ; Number of cases is 1, Range of values is 0 to 0
   550                           ; switch strategies available:
   551                           ; Name         Instructions Cycles
   552                           ; simple_byte            4     3 (average)
   553                           ;	Chosen strategy is simple_byte
   554  0008D2  502B               	movf	(??_modeUp+1)^0,w,c
   555  0008D4  0A00               	xorlw	0	; case 0
   556  0008D6  B4D8               	btfsc	status,2,c
   557  0008D8  EF70  F004         	goto	l1420
   558  0008DC  EF78  F004         	goto	l140
   559  0008E0                     l1420:
   560  0008E0  FFFF               	dw	65535	; assembler added errata NOP
   561                           
   562                           ; Switch size 1, requested type "simple"
   563                           ; Number of cases is 1, Range of values is 1 to 1
   564                           ; switch strategies available:
   565                           ; Name         Instructions Cycles
   566                           ; simple_byte            4     3 (average)
   567                           ;	Chosen strategy is simple_byte
   568  0008E2  502A               	movf	??_modeUp^0,w,c
   569  0008E4  0A01               	xorlw	1	; case 1
   570  0008E6  B4D8               	btfsc	status,2,c
   571  0008E8  EF30  F004         	goto	l1338
   572  0008EC  EF78  F004         	goto	l140
   573  0008F0                     l140:
   574  0008F0  FFFF               	dw	65535	; assembler added errata NOP
   575  0008F2  0012               	return		;funcret
   576  0008F4  FFFF               	dw	65535	; errata NOP
   577  0008F6                     __end_of_modeUp:
   578                           	callstack 0
   579                           
   580 ;; *************** function _modeUpControl *****************
   581 ;; Defined at:
   582 ;;		line 253 in file "main.c"
   583 ;; Parameters:    Size  Location     Type
   584 ;;		None
   585 ;; Auto vars:     Size  Location     Type
   586 ;;  i               2   39[COMRAM] int 
   587 ;;  i               2   37[COMRAM] int 
   588 ;;  i               2   35[COMRAM] int 
   589 ;;  i               2   33[COMRAM] int 
   590 ;; Return value:  Size  Location     Type
   591 ;;                  1    wreg      void 
   592 ;; Registers used:
   593 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   594 ;; Tracked objects:
   595 ;;		On entry : 0/0
   596 ;;		On exit  : 0/0
   597 ;;		Unchanged: 0/0
   598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   599 ;;      Params:         0       0       0       0       0       0       0
   600 ;;      Locals:         8       0       0       0       0       0       0
   601 ;;      Temps:          2       0       0       0       0       0       0
   602 ;;      Totals:        10       0       0       0       0       0       0
   603 ;;Total ram usage:       10 bytes
   604 ;; Hardware stack levels used: 1
   605 ;; Hardware stack levels required when called: 3
   606 ;; This function calls:
   607 ;;		_dataPanelUp
   608 ;; This function is called by:
   609 ;;		_modeUp
   610 ;; This function uses a non-reentrant model
   611 ;;
   612                           
   613                           	psect	text2
   614  0000FA                     __ptext2:
   615                           	callstack 0
   616  0000FA                     _modeUpControl:
   617                           	callstack 0
   618  0000FA  FFFF               	dw	65535	; assembler added errata NOP
   619  0000FC                     
   620                           ;main.c: 255:     static int cont = 0;;main.c: 257:     switch (queueUp[cont]) {
   621  0000FC  EFD8  F001         	goto	l1330
   622  000100                     l106:
   623  000100  FFFF               	dw	65535	; assembler added errata NOP
   624                           
   625                           ;main.c: 259:             if (PORTDbits.RD4) {
   626  000102  A883               	btfss	131,4,c	;volatile
   627  000104  EF86  F000         	goto	u461
   628  000108  EF89  F000         	goto	u460
   629  00010C                     u461:
   630  00010C  FFFF               	dw	65535	; assembler added errata NOP
   631  00010E  EFF8  F001         	goto	l127
   632  000112                     u460:
   633  000112  FFFF               	dw	65535	; assembler added errata NOP
   634  000114                     
   635                           ;main.c: 261:                 LATCbits.LC1 = 1;
   636  000114  828B               	bsf	139,1,c	;volatile
   637  000116                     
   638                           ;main.c: 262:                 for (int i = 0; i < calls; i++) {
   639  000116  0E00               	movlw	0
   640  000118  6E23               	movwf	(modeUpControl@i+1)^0,c
   641  00011A  0E00               	movlw	0
   642  00011C  6E22               	movwf	modeUpControl@i^0,c
   643  00011E  EFAA  F000         	goto	l1252
   644  000122                     l1248:
   645  000122  FFFF               	dw	65535	; assembler added errata NOP
   646                           
   647                           ;main.c: 263:                     queueUp[i] = queueUp[i + 1];
   648  000124  90D8               	bcf	status,0,c
   649  000126  3422               	rlcf	modeUpControl@i^0,w,c
   650  000128  6ED9               	movwf	fsr2l,c
   651  00012A  3423               	rlcf	(modeUpControl@i+1)^0,w,c
   652  00012C  6EDA               	movwf	fsr2h,c
   653  00012E  0E02               	movlw	low (_queueUp+2)
   654  000130  26D9               	addwf	fsr2l,f,c
   655  000132  0E01               	movlw	high (_queueUp+2)
   656  000134  22DA               	addwfc	fsr2h,f,c
   657  000136  90D8               	bcf	status,0,c
   658  000138  3422               	rlcf	modeUpControl@i^0,w,c
   659  00013A  6EE1               	movwf	fsr1l,c
   660  00013C  3423               	rlcf	(modeUpControl@i+1)^0,w,c
   661  00013E  6EE2               	movwf	fsr1h,c
   662  000140  0E00               	movlw	low _queueUp
   663  000142  26E1               	addwf	fsr1l,f,c
   664  000144  0E01               	movlw	high _queueUp
   665  000146  22E2               	addwfc	fsr1h,f,c
   666  000148  CFDE FFE6          	movff	postinc2,postinc1
   667  00014C  CFDD FFE5          	movff	postdec2,postdec1
   668  000150                     
   669                           ;main.c: 264:                 }
   670  000150  4A22               	infsnz	modeUpControl@i^0,f,c
   671  000152  2A23               	incf	(modeUpControl@i+1)^0,f,c
   672  000154                     l1252:
   673  000154  FFFF               	dw	65535	; assembler added errata NOP
   674  000156  503A               	movf	_calls^0,w,c
   675  000158  5C22               	subwf	modeUpControl@i^0,w,c
   676  00015A  5023               	movf	(modeUpControl@i+1)^0,w,c
   677  00015C  0A80               	xorlw	128
   678  00015E  6E20               	movwf	??_modeUpControl^0,c
   679  000160  503B               	movf	(_calls+1)^0,w,c
   680  000162  0A80               	xorlw	128
   681  000164  5820               	subwfb	??_modeUpControl^0,w,c
   682  000166  A0D8               	btfss	status,0,c
   683  000168  EFB8  F000         	goto	u471
   684  00016C  EFBB  F000         	goto	u470
   685  000170                     u471:
   686  000170  FFFF               	dw	65535	; assembler added errata NOP
   687  000172  EF91  F000         	goto	l1248
   688  000176                     u470:
   689  000176  FFFF               	dw	65535	; assembler added errata NOP
   690  000178                     
   691                           ;main.c: 265:                 calls--;
   692  000178  063A               	decf	_calls^0,f,c
   693  00017A  A0D8               	btfss	status,0,c
   694  00017C  063B               	decf	(_calls+1)^0,f,c
   695  00017E                     
   696                           ;main.c: 266:                 LATDbits.LD0 = 1;
   697  00017E  808C               	bsf	140,0,c	;volatile
   698  000180                     
   699                           ;main.c: 267:                 nowFL = 1;
   700  000180  0E00               	movlw	0
   701  000182  6E35               	movwf	(_nowFL+1)^0,c
   702  000184  0E01               	movlw	1
   703  000186  6E34               	movwf	_nowFL^0,c
   704  000188                     
   705                           ;main.c: 269:                 dataPanelUp();
   706  000188  EC13  F003         	call	_dataPanelUp	;wreg free
   707  00018C                     
   708                           ;main.c: 271:                 LATDbits.LD0 = 0;
   709  00018C  908C               	bcf	140,0,c	;volatile
   710  00018E                     
   711                           ;main.c: 272:                 _delay((unsigned long)((300)*(20000000/4000.0)));
   712  00018E  0E06               	movlw	6
   713  000190  6E21               	movwf	(??_modeUpControl+1)^0,c
   714  000192  0EB6               	movlw	182
   715  000194  6E20               	movwf	??_modeUpControl^0,c
   716  000196  0EF9               	movlw	249
   717  000198                     u607:
   718  000198  FFFF               	dw	65535	; errata NOP
   719  00019A  2EE8               	decfsz	wreg,f,c
   720  00019C  D7FD               	bra	u607
   721  00019E  2E20               	decfsz	??_modeUpControl^0,f,c
   722  0001A0  D7FB               	bra	u607
   723  0001A2  2E21               	decfsz	(??_modeUpControl+1)^0,f,c
   724  0001A4  D7F9               	bra	u607
   725  0001A6                     
   726                           ;main.c: 274:                 LATCbits.LC1 = 0;
   727  0001A6  928B               	bcf	139,1,c	;volatile
   728  0001A8  EFF8  F001         	goto	l127
   729  0001AC                     l112:
   730  0001AC  FFFF               	dw	65535	; assembler added errata NOP
   731                           
   732                           ;main.c: 279:             if (PORTDbits.RD5) {
   733  0001AE  AA83               	btfss	131,5,c	;volatile
   734  0001B0  EFDC  F000         	goto	u481
   735  0001B4  EFDF  F000         	goto	u480
   736  0001B8                     u481:
   737  0001B8  FFFF               	dw	65535	; assembler added errata NOP
   738  0001BA  EFF8  F001         	goto	l127
   739  0001BE                     u480:
   740  0001BE  FFFF               	dw	65535	; assembler added errata NOP
   741  0001C0                     
   742                           ;main.c: 281:                 LATCbits.LC1 = 1;
   743  0001C0  828B               	bsf	139,1,c	;volatile
   744                           
   745                           ;main.c: 282:                 LATDbits.LD1 = 1;
   746  0001C2  828C               	bsf	140,1,c	;volatile
   747  0001C4                     
   748                           ;main.c: 283:                 nowFL = 2;
   749  0001C4  0E00               	movlw	0
   750  0001C6  6E35               	movwf	(_nowFL+1)^0,c
   751  0001C8  0E02               	movlw	2
   752  0001CA  6E34               	movwf	_nowFL^0,c
   753                           
   754                           ;main.c: 285:                 for (int i = 0; i < calls; i++) {
   755  0001CC  0E00               	movlw	0
   756  0001CE  6E25               	movwf	(modeUpControl@i_484+1)^0,c
   757  0001D0  0E00               	movlw	0
   758  0001D2  6E24               	movwf	modeUpControl@i_484^0,c
   759  0001D4  EF05  F001         	goto	l1276
   760  0001D8                     l1272:
   761  0001D8  FFFF               	dw	65535	; assembler added errata NOP
   762                           
   763                           ;main.c: 286:                     queueUp[i] = queueUp[i + 1];
   764  0001DA  90D8               	bcf	status,0,c
   765  0001DC  3424               	rlcf	modeUpControl@i_484^0,w,c
   766  0001DE  6ED9               	movwf	fsr2l,c
   767  0001E0  3425               	rlcf	(modeUpControl@i_484+1)^0,w,c
   768  0001E2  6EDA               	movwf	fsr2h,c
   769  0001E4  0E02               	movlw	low (_queueUp+2)
   770  0001E6  26D9               	addwf	fsr2l,f,c
   771  0001E8  0E01               	movlw	high (_queueUp+2)
   772  0001EA  22DA               	addwfc	fsr2h,f,c
   773  0001EC  90D8               	bcf	status,0,c
   774  0001EE  3424               	rlcf	modeUpControl@i_484^0,w,c
   775  0001F0  6EE1               	movwf	fsr1l,c
   776  0001F2  3425               	rlcf	(modeUpControl@i_484+1)^0,w,c
   777  0001F4  6EE2               	movwf	fsr1h,c
   778  0001F6  0E00               	movlw	low _queueUp
   779  0001F8  26E1               	addwf	fsr1l,f,c
   780  0001FA  0E01               	movlw	high _queueUp
   781  0001FC  22E2               	addwfc	fsr1h,f,c
   782  0001FE  CFDE FFE6          	movff	postinc2,postinc1
   783  000202  CFDD FFE5          	movff	postdec2,postdec1
   784  000206                     
   785                           ;main.c: 287:                 }
   786  000206  4A24               	infsnz	modeUpControl@i_484^0,f,c
   787  000208  2A25               	incf	(modeUpControl@i_484+1)^0,f,c
   788  00020A                     l1276:
   789  00020A  FFFF               	dw	65535	; assembler added errata NOP
   790  00020C  503A               	movf	_calls^0,w,c
   791  00020E  5C24               	subwf	modeUpControl@i_484^0,w,c
   792  000210  5025               	movf	(modeUpControl@i_484+1)^0,w,c
   793  000212  0A80               	xorlw	128
   794  000214  6E20               	movwf	??_modeUpControl^0,c
   795  000216  503B               	movf	(_calls+1)^0,w,c
   796  000218  0A80               	xorlw	128
   797  00021A  5820               	subwfb	??_modeUpControl^0,w,c
   798  00021C  A0D8               	btfss	status,0,c
   799  00021E  EF13  F001         	goto	u491
   800  000222  EF16  F001         	goto	u490
   801  000226                     u491:
   802  000226  FFFF               	dw	65535	; assembler added errata NOP
   803  000228  EFEC  F000         	goto	l1272
   804  00022C                     u490:
   805  00022C  FFFF               	dw	65535	; assembler added errata NOP
   806  00022E                     
   807                           ;main.c: 288:                 calls--;
   808  00022E  063A               	decf	_calls^0,f,c
   809  000230  A0D8               	btfss	status,0,c
   810  000232  063B               	decf	(_calls+1)^0,f,c
   811  000234                     
   812                           ;main.c: 289:                 dataPanelUp();
   813  000234  EC13  F003         	call	_dataPanelUp	;wreg free
   814  000238                     
   815                           ;main.c: 290:                 LATDbits.LD1 = 0;
   816  000238  928C               	bcf	140,1,c	;volatile
   817  00023A                     
   818                           ;main.c: 291:                 _delay((unsigned long)((300)*(20000000/4000.0)));
   819  00023A  0E06               	movlw	6
   820  00023C  6E21               	movwf	(??_modeUpControl+1)^0,c
   821  00023E  0EB6               	movlw	182
   822  000240  6E20               	movwf	??_modeUpControl^0,c
   823  000242  0EF9               	movlw	249
   824  000244                     u617:
   825  000244  FFFF               	dw	65535	; errata NOP
   826  000246  2EE8               	decfsz	wreg,f,c
   827  000248  D7FD               	bra	u617
   828  00024A  2E20               	decfsz	??_modeUpControl^0,f,c
   829  00024C  D7FB               	bra	u617
   830  00024E  2E21               	decfsz	(??_modeUpControl+1)^0,f,c
   831  000250  D7F9               	bra	u617
   832  000252                     
   833                           ;main.c: 293:                 LATCbits.LC1 = 0;
   834  000252  928B               	bcf	139,1,c	;volatile
   835  000254  EFF8  F001         	goto	l127
   836  000258                     l117:
   837  000258  FFFF               	dw	65535	; assembler added errata NOP
   838                           
   839                           ;main.c: 298:             if (PORTDbits.RD6) {
   840  00025A  AC83               	btfss	131,6,c	;volatile
   841  00025C  EF32  F001         	goto	u501
   842  000260  EF35  F001         	goto	u500
   843  000264                     u501:
   844  000264  FFFF               	dw	65535	; assembler added errata NOP
   845  000266  EFF8  F001         	goto	l127
   846  00026A                     u500:
   847  00026A  FFFF               	dw	65535	; assembler added errata NOP
   848  00026C                     
   849                           ;main.c: 300:                 LATCbits.LC1 = 1;
   850  00026C  828B               	bsf	139,1,c	;volatile
   851                           
   852                           ;main.c: 301:                 LATDbits.LD2 = 1;
   853  00026E  848C               	bsf	140,2,c	;volatile
   854  000270                     
   855                           ;main.c: 302:                 nowFL = 3;
   856  000270  0E00               	movlw	0
   857  000272  6E35               	movwf	(_nowFL+1)^0,c
   858  000274  0E03               	movlw	3
   859  000276  6E34               	movwf	_nowFL^0,c
   860                           
   861                           ;main.c: 304:                 for (int i = 0; i < calls; i++) {
   862  000278  0E00               	movlw	0
   863  00027A  6E27               	movwf	(modeUpControl@i_485+1)^0,c
   864  00027C  0E00               	movlw	0
   865  00027E  6E26               	movwf	modeUpControl@i_485^0,c
   866  000280  EF5B  F001         	goto	l1296
   867  000284                     l1292:
   868  000284  FFFF               	dw	65535	; assembler added errata NOP
   869                           
   870                           ;main.c: 305:                     queueUp[i] = queueUp[i + 1];
   871  000286  90D8               	bcf	status,0,c
   872  000288  3426               	rlcf	modeUpControl@i_485^0,w,c
   873  00028A  6ED9               	movwf	fsr2l,c
   874  00028C  3427               	rlcf	(modeUpControl@i_485+1)^0,w,c
   875  00028E  6EDA               	movwf	fsr2h,c
   876  000290  0E02               	movlw	low (_queueUp+2)
   877  000292  26D9               	addwf	fsr2l,f,c
   878  000294  0E01               	movlw	high (_queueUp+2)
   879  000296  22DA               	addwfc	fsr2h,f,c
   880  000298  90D8               	bcf	status,0,c
   881  00029A  3426               	rlcf	modeUpControl@i_485^0,w,c
   882  00029C  6EE1               	movwf	fsr1l,c
   883  00029E  3427               	rlcf	(modeUpControl@i_485+1)^0,w,c
   884  0002A0  6EE2               	movwf	fsr1h,c
   885  0002A2  0E00               	movlw	low _queueUp
   886  0002A4  26E1               	addwf	fsr1l,f,c
   887  0002A6  0E01               	movlw	high _queueUp
   888  0002A8  22E2               	addwfc	fsr1h,f,c
   889  0002AA  CFDE FFE6          	movff	postinc2,postinc1
   890  0002AE  CFDD FFE5          	movff	postdec2,postdec1
   891  0002B2                     
   892                           ;main.c: 306:                 }
   893  0002B2  4A26               	infsnz	modeUpControl@i_485^0,f,c
   894  0002B4  2A27               	incf	(modeUpControl@i_485+1)^0,f,c
   895  0002B6                     l1296:
   896  0002B6  FFFF               	dw	65535	; assembler added errata NOP
   897  0002B8  503A               	movf	_calls^0,w,c
   898  0002BA  5C26               	subwf	modeUpControl@i_485^0,w,c
   899  0002BC  5027               	movf	(modeUpControl@i_485+1)^0,w,c
   900  0002BE  0A80               	xorlw	128
   901  0002C0  6E20               	movwf	??_modeUpControl^0,c
   902  0002C2  503B               	movf	(_calls+1)^0,w,c
   903  0002C4  0A80               	xorlw	128
   904  0002C6  5820               	subwfb	??_modeUpControl^0,w,c
   905  0002C8  A0D8               	btfss	status,0,c
   906  0002CA  EF69  F001         	goto	u511
   907  0002CE  EF6C  F001         	goto	u510
   908  0002D2                     u511:
   909  0002D2  FFFF               	dw	65535	; assembler added errata NOP
   910  0002D4  EF42  F001         	goto	l1292
   911  0002D8                     u510:
   912  0002D8  FFFF               	dw	65535	; assembler added errata NOP
   913  0002DA                     
   914                           ;main.c: 307:                 calls--;
   915  0002DA  063A               	decf	_calls^0,f,c
   916  0002DC  A0D8               	btfss	status,0,c
   917  0002DE  063B               	decf	(_calls+1)^0,f,c
   918  0002E0                     
   919                           ;main.c: 308:                 dataPanelUp();
   920  0002E0  EC13  F003         	call	_dataPanelUp	;wreg free
   921  0002E4                     
   922                           ;main.c: 309:                 LATDbits.LD2 = 0;
   923  0002E4  948C               	bcf	140,2,c	;volatile
   924  0002E6                     
   925                           ;main.c: 310:                 _delay((unsigned long)((300)*(20000000/4000.0)));
   926  0002E6  0E06               	movlw	6
   927  0002E8  6E21               	movwf	(??_modeUpControl+1)^0,c
   928  0002EA  0EB6               	movlw	182
   929  0002EC  6E20               	movwf	??_modeUpControl^0,c
   930  0002EE  0EF9               	movlw	249
   931  0002F0                     u627:
   932  0002F0  FFFF               	dw	65535	; errata NOP
   933  0002F2  2EE8               	decfsz	wreg,f,c
   934  0002F4  D7FD               	bra	u627
   935  0002F6  2E20               	decfsz	??_modeUpControl^0,f,c
   936  0002F8  D7FB               	bra	u627
   937  0002FA  2E21               	decfsz	(??_modeUpControl+1)^0,f,c
   938  0002FC  D7F9               	bra	u627
   939  0002FE                     
   940                           ;main.c: 312:                 LATCbits.LC1 = 0;
   941  0002FE  928B               	bcf	139,1,c	;volatile
   942  000300  EFF8  F001         	goto	l127
   943  000304                     l122:
   944  000304  FFFF               	dw	65535	; assembler added errata NOP
   945                           
   946                           ;main.c: 317:             if (PORTDbits.RD7) {
   947  000306  AE83               	btfss	131,7,c	;volatile
   948  000308  EF88  F001         	goto	u521
   949  00030C  EF8B  F001         	goto	u520
   950  000310                     u521:
   951  000310  FFFF               	dw	65535	; assembler added errata NOP
   952  000312  EFF8  F001         	goto	l127
   953  000316                     u520:
   954  000316  FFFF               	dw	65535	; assembler added errata NOP
   955  000318                     
   956                           ;main.c: 319:                 LATCbits.LC1 = 1;
   957  000318  828B               	bsf	139,1,c	;volatile
   958                           
   959                           ;main.c: 320:                 LATDbits.LD3 = 1;
   960  00031A  868C               	bsf	140,3,c	;volatile
   961  00031C                     
   962                           ;main.c: 321:                 nowFL = 4;
   963  00031C  0E00               	movlw	0
   964  00031E  6E35               	movwf	(_nowFL+1)^0,c
   965  000320  0E04               	movlw	4
   966  000322  6E34               	movwf	_nowFL^0,c
   967                           
   968                           ;main.c: 323:                 for (int i = 0; i < calls; i++) {
   969  000324  0E00               	movlw	0
   970  000326  6E29               	movwf	(modeUpControl@i_486+1)^0,c
   971  000328  0E00               	movlw	0
   972  00032A  6E28               	movwf	modeUpControl@i_486^0,c
   973  00032C  EFB1  F001         	goto	l1316
   974  000330                     l1312:
   975  000330  FFFF               	dw	65535	; assembler added errata NOP
   976                           
   977                           ;main.c: 324:                     queueUp[i] = queueUp[i + 1];
   978  000332  90D8               	bcf	status,0,c
   979  000334  3428               	rlcf	modeUpControl@i_486^0,w,c
   980  000336  6ED9               	movwf	fsr2l,c
   981  000338  3429               	rlcf	(modeUpControl@i_486+1)^0,w,c
   982  00033A  6EDA               	movwf	fsr2h,c
   983  00033C  0E02               	movlw	low (_queueUp+2)
   984  00033E  26D9               	addwf	fsr2l,f,c
   985  000340  0E01               	movlw	high (_queueUp+2)
   986  000342  22DA               	addwfc	fsr2h,f,c
   987  000344  90D8               	bcf	status,0,c
   988  000346  3428               	rlcf	modeUpControl@i_486^0,w,c
   989  000348  6EE1               	movwf	fsr1l,c
   990  00034A  3429               	rlcf	(modeUpControl@i_486+1)^0,w,c
   991  00034C  6EE2               	movwf	fsr1h,c
   992  00034E  0E00               	movlw	low _queueUp
   993  000350  26E1               	addwf	fsr1l,f,c
   994  000352  0E01               	movlw	high _queueUp
   995  000354  22E2               	addwfc	fsr1h,f,c
   996  000356  CFDE FFE6          	movff	postinc2,postinc1
   997  00035A  CFDD FFE5          	movff	postdec2,postdec1
   998  00035E                     
   999                           ;main.c: 325:                 }
  1000  00035E  4A28               	infsnz	modeUpControl@i_486^0,f,c
  1001  000360  2A29               	incf	(modeUpControl@i_486+1)^0,f,c
  1002  000362                     l1316:
  1003  000362  FFFF               	dw	65535	; assembler added errata NOP
  1004  000364  503A               	movf	_calls^0,w,c
  1005  000366  5C28               	subwf	modeUpControl@i_486^0,w,c
  1006  000368  5029               	movf	(modeUpControl@i_486+1)^0,w,c
  1007  00036A  0A80               	xorlw	128
  1008  00036C  6E20               	movwf	??_modeUpControl^0,c
  1009  00036E  503B               	movf	(_calls+1)^0,w,c
  1010  000370  0A80               	xorlw	128
  1011  000372  5820               	subwfb	??_modeUpControl^0,w,c
  1012  000374  A0D8               	btfss	status,0,c
  1013  000376  EFBF  F001         	goto	u531
  1014  00037A  EFC2  F001         	goto	u530
  1015  00037E                     u531:
  1016  00037E  FFFF               	dw	65535	; assembler added errata NOP
  1017  000380  EF98  F001         	goto	l1312
  1018  000384                     u530:
  1019  000384  FFFF               	dw	65535	; assembler added errata NOP
  1020  000386                     
  1021                           ;main.c: 326:                 calls--;
  1022  000386  063A               	decf	_calls^0,f,c
  1023  000388  A0D8               	btfss	status,0,c
  1024  00038A  063B               	decf	(_calls+1)^0,f,c
  1025  00038C                     
  1026                           ;main.c: 327:                 dataPanelUp();
  1027  00038C  EC13  F003         	call	_dataPanelUp	;wreg free
  1028  000390                     
  1029                           ;main.c: 328:                 LATDbits.LD3 = 0;
  1030  000390  968C               	bcf	140,3,c	;volatile
  1031  000392                     
  1032                           ;main.c: 329:                 _delay((unsigned long)((300)*(20000000/4000.0)));
  1033  000392  0E06               	movlw	6
  1034  000394  6E21               	movwf	(??_modeUpControl+1)^0,c
  1035  000396  0EB6               	movlw	182
  1036  000398  6E20               	movwf	??_modeUpControl^0,c
  1037  00039A  0EF9               	movlw	249
  1038  00039C                     u637:
  1039  00039C  FFFF               	dw	65535	; errata NOP
  1040  00039E  2EE8               	decfsz	wreg,f,c
  1041  0003A0  D7FD               	bra	u637
  1042  0003A2  2E20               	decfsz	??_modeUpControl^0,f,c
  1043  0003A4  D7FB               	bra	u637
  1044  0003A6  2E21               	decfsz	(??_modeUpControl+1)^0,f,c
  1045  0003A8  D7F9               	bra	u637
  1046  0003AA                     
  1047                           ;main.c: 331:                 LATCbits.LC1 = 0;
  1048  0003AA  928B               	bcf	139,1,c	;volatile
  1049  0003AC  EFF8  F001         	goto	l127
  1050  0003B0                     l1330:
  1051  0003B0  FFFF               	dw	65535	; assembler added errata NOP
  1052  0003B2  C100  F020         	movff	_queueUp,??_modeUpControl
  1053  0003B6  C101  F021         	movff	_queueUp+1,??_modeUpControl+1
  1054                           
  1055                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1056                           ; Switch size 1, requested type "simple"
  1057                           ; Number of cases is 1, Range of values is 0 to 0
  1058                           ; switch strategies available:
  1059                           ; Name         Instructions Cycles
  1060                           ; simple_byte            4     3 (average)
  1061                           ;	Chosen strategy is simple_byte
  1062  0003BA  5021               	movf	(??_modeUpControl+1)^0,w,c
  1063  0003BC  0A00               	xorlw	0	; case 0
  1064  0003BE  B4D8               	btfsc	status,2,c
  1065  0003C0  EFE4  F001         	goto	l1422
  1066  0003C4  EFF8  F001         	goto	l127
  1067  0003C8                     l1422:
  1068  0003C8  FFFF               	dw	65535	; assembler added errata NOP
  1069                           
  1070                           ; Switch size 1, requested type "simple"
  1071                           ; Number of cases is 4, Range of values is 1 to 4
  1072                           ; switch strategies available:
  1073                           ; Name         Instructions Cycles
  1074                           ; simple_byte           13     7 (average)
  1075                           ;	Chosen strategy is simple_byte
  1076  0003CA  5020               	movf	??_modeUpControl^0,w,c
  1077  0003CC  0A01               	xorlw	1	; case 1
  1078  0003CE  B4D8               	btfsc	status,2,c
  1079  0003D0  EF80  F000         	goto	l106
  1080  0003D4  0A03               	xorlw	3	; case 2
  1081  0003D6  B4D8               	btfsc	status,2,c
  1082  0003D8  EFD6  F000         	goto	l112
  1083  0003DC  0A01               	xorlw	1	; case 3
  1084  0003DE  B4D8               	btfsc	status,2,c
  1085  0003E0  EF2C  F001         	goto	l117
  1086  0003E4  0A07               	xorlw	7	; case 4
  1087  0003E6  B4D8               	btfsc	status,2,c
  1088  0003E8  EF82  F001         	goto	l122
  1089  0003EC  EFF8  F001         	goto	l127
  1090  0003F0                     l127:
  1091  0003F0  FFFF               	dw	65535	; assembler added errata NOP
  1092  0003F2  0012               	return		;funcret
  1093  0003F4  FFFF               	dw	65535	; errata NOP
  1094  0003F6                     __end_of_modeUpControl:
  1095                           	callstack 0
  1096                           
  1097 ;; *************** function _dataPanelUp *****************
  1098 ;; Defined at:
  1099 ;;		line 202 in file "main.c"
  1100 ;; Parameters:    Size  Location     Type
  1101 ;;		None
  1102 ;; Auto vars:     Size  Location     Type
  1103 ;;  tamano          2   29[COMRAM] int 
  1104 ;;  UpCalls         2   27[COMRAM] PTR int 
  1105 ;;		 -> queueUp(200), 
  1106 ;; Return value:  Size  Location     Type
  1107 ;;                  1    wreg      void 
  1108 ;; Registers used:
  1109 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1110 ;; Tracked objects:
  1111 ;;		On entry : 0/0
  1112 ;;		On exit  : 0/0
  1113 ;;		Unchanged: 0/0
  1114 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1115 ;;      Params:         0       0       0       0       0       0       0
  1116 ;;      Locals:         4       0       0       0       0       0       0
  1117 ;;      Temps:          0       0       0       0       0       0       0
  1118 ;;      Totals:         4       0       0       0       0       0       0
  1119 ;;Total ram usage:        4 bytes
  1120 ;; Hardware stack levels used: 1
  1121 ;; Hardware stack levels required when called: 2
  1122 ;; This function calls:
  1123 ;;		_sort
  1124 ;; This function is called by:
  1125 ;;		_modeUpControl
  1126 ;;		_modeUp
  1127 ;; This function uses a non-reentrant model
  1128 ;;
  1129                           
  1130                           	psect	text3
  1131  000626                     __ptext3:
  1132                           	callstack 0
  1133  000626                     _dataPanelUp:
  1134                           	callstack 0
  1135  000626  FFFF               	dw	65535	; assembler added errata NOP
  1136  000628                     l86:
  1137  000628  FFFF               	dw	65535	; assembler added errata NOP
  1138                           
  1139                           ;main.c: 204:         if (PORTAbits.RA0) {
  1140  00062A  A080               	btfss	128,0,c	;volatile
  1141  00062C  EF1A  F003         	goto	u371
  1142  000630  EF1D  F003         	goto	u370
  1143  000634                     u371:
  1144  000634  FFFF               	dw	65535	; assembler added errata NOP
  1145  000636  EF4E  F003         	goto	l1198
  1146  00063A                     u370:
  1147  00063A  FFFF               	dw	65535	; assembler added errata NOP
  1148  00063C                     
  1149                           ;main.c: 205:             if (nowFL < 1) {
  1150  00063C  BE35               	btfsc	(_nowFL+1)^0,7,c
  1151  00063E  EF2C  F003         	goto	u380
  1152  000642  5035               	movf	(_nowFL+1)^0,w,c
  1153  000644  E106               	bnz	u381
  1154  000646  0434               	decf	_nowFL^0,w,c
  1155  000648  B0D8               	btfsc	status,0,c
  1156  00064A  EF29  F003         	goto	u381
  1157  00064E  EF2C  F003         	goto	u380
  1158  000652                     u381:
  1159  000652  FFFF               	dw	65535	; assembler added errata NOP
  1160  000654  EF3E  F003         	goto	l1194
  1161  000658                     u380:
  1162  000658  FFFF               	dw	65535	; assembler added errata NOP
  1163  00065A                     
  1164                           ;main.c: 206:                 queueUp[calls] = 1;
  1165  00065A  90D8               	bcf	status,0,c
  1166  00065C  343A               	rlcf	_calls^0,w,c
  1167  00065E  6ED9               	movwf	fsr2l,c
  1168  000660  343B               	rlcf	(_calls+1)^0,w,c
  1169  000662  6EDA               	movwf	fsr2h,c
  1170  000664  0E00               	movlw	low _queueUp
  1171  000666  26D9               	addwf	fsr2l,f,c
  1172  000668  0E01               	movlw	high _queueUp
  1173  00066A  22DA               	addwfc	fsr2h,f,c
  1174  00066C  0E01               	movlw	1
  1175  00066E  6EDE               	movwf	postinc2,c
  1176  000670  0E00               	movlw	0
  1177  000672  6EDD               	movwf	postdec2,c
  1178  000674                     
  1179                           ;main.c: 207:                 calls++;
  1180  000674  4A3A               	infsnz	_calls^0,f,c
  1181  000676  2A3B               	incf	(_calls+1)^0,f,c
  1182                           
  1183                           ;main.c: 208:             } else {
  1184  000678  EF4E  F003         	goto	l1198
  1185  00067C                     l1194:
  1186  00067C  FFFF               	dw	65535	; assembler added errata NOP
  1187                           
  1188                           ;main.c: 209:                 queueDown[callsD] = 1;
  1189  00067E  90D8               	bcf	status,0,c
  1190  000680  3438               	rlcf	_callsD^0,w,c
  1191  000682  6ED9               	movwf	fsr2l,c
  1192  000684  3439               	rlcf	(_callsD+1)^0,w,c
  1193  000686  6EDA               	movwf	fsr2h,c
  1194  000688  0E00               	movlw	low _queueDown
  1195  00068A  26D9               	addwf	fsr2l,f,c
  1196  00068C  0E02               	movlw	high _queueDown
  1197  00068E  22DA               	addwfc	fsr2h,f,c
  1198  000690  0E01               	movlw	1
  1199  000692  6EDE               	movwf	postinc2,c
  1200  000694  0E00               	movlw	0
  1201  000696  6EDD               	movwf	postdec2,c
  1202  000698                     
  1203                           ;main.c: 210:                 callsD++;
  1204  000698  4A38               	infsnz	_callsD^0,f,c
  1205  00069A  2A39               	incf	(_callsD+1)^0,f,c
  1206  00069C                     l1198:
  1207  00069C  FFFF               	dw	65535	; assembler added errata NOP
  1208                           
  1209                           ;main.c: 214:         if (PORTAbits.RA1) {
  1210  00069E  A280               	btfss	128,1,c	;volatile
  1211  0006A0  EF54  F003         	goto	u391
  1212  0006A4  EF57  F003         	goto	u390
  1213  0006A8                     u391:
  1214  0006A8  FFFF               	dw	65535	; assembler added errata NOP
  1215  0006AA  EF89  F003         	goto	l1210
  1216  0006AE                     u390:
  1217  0006AE  FFFF               	dw	65535	; assembler added errata NOP
  1218  0006B0                     
  1219                           ;main.c: 215:             if (nowFL < 2) {
  1220  0006B0  BE35               	btfsc	(_nowFL+1)^0,7,c
  1221  0006B2  EF67  F003         	goto	u400
  1222  0006B6  5035               	movf	(_nowFL+1)^0,w,c
  1223  0006B8  E107               	bnz	u401
  1224  0006BA  0E02               	movlw	2
  1225  0006BC  5C34               	subwf	_nowFL^0,w,c
  1226  0006BE  B0D8               	btfsc	status,0,c
  1227  0006C0  EF64  F003         	goto	u401
  1228  0006C4  EF67  F003         	goto	u400
  1229  0006C8                     u401:
  1230  0006C8  FFFF               	dw	65535	; assembler added errata NOP
  1231  0006CA  EF79  F003         	goto	l1206
  1232  0006CE                     u400:
  1233  0006CE  FFFF               	dw	65535	; assembler added errata NOP
  1234  0006D0                     
  1235                           ;main.c: 216:                 queueUp[calls] = 2;
  1236  0006D0  90D8               	bcf	status,0,c
  1237  0006D2  343A               	rlcf	_calls^0,w,c
  1238  0006D4  6ED9               	movwf	fsr2l,c
  1239  0006D6  343B               	rlcf	(_calls+1)^0,w,c
  1240  0006D8  6EDA               	movwf	fsr2h,c
  1241  0006DA  0E00               	movlw	low _queueUp
  1242  0006DC  26D9               	addwf	fsr2l,f,c
  1243  0006DE  0E01               	movlw	high _queueUp
  1244  0006E0  22DA               	addwfc	fsr2h,f,c
  1245  0006E2  0E02               	movlw	2
  1246  0006E4  6EDE               	movwf	postinc2,c
  1247  0006E6  0E00               	movlw	0
  1248  0006E8  6EDD               	movwf	postdec2,c
  1249  0006EA                     
  1250                           ;main.c: 217:                 calls++;
  1251  0006EA  4A3A               	infsnz	_calls^0,f,c
  1252  0006EC  2A3B               	incf	(_calls+1)^0,f,c
  1253                           
  1254                           ;main.c: 218:             } else {
  1255  0006EE  EF89  F003         	goto	l1210
  1256  0006F2                     l1206:
  1257  0006F2  FFFF               	dw	65535	; assembler added errata NOP
  1258                           
  1259                           ;main.c: 219:                 queueDown[callsD] = 2;
  1260  0006F4  90D8               	bcf	status,0,c
  1261  0006F6  3438               	rlcf	_callsD^0,w,c
  1262  0006F8  6ED9               	movwf	fsr2l,c
  1263  0006FA  3439               	rlcf	(_callsD+1)^0,w,c
  1264  0006FC  6EDA               	movwf	fsr2h,c
  1265  0006FE  0E00               	movlw	low _queueDown
  1266  000700  26D9               	addwf	fsr2l,f,c
  1267  000702  0E02               	movlw	high _queueDown
  1268  000704  22DA               	addwfc	fsr2h,f,c
  1269  000706  0E02               	movlw	2
  1270  000708  6EDE               	movwf	postinc2,c
  1271  00070A  0E00               	movlw	0
  1272  00070C  6EDD               	movwf	postdec2,c
  1273  00070E                     
  1274                           ;main.c: 220:                 callsD++;
  1275  00070E  4A38               	infsnz	_callsD^0,f,c
  1276  000710  2A39               	incf	(_callsD+1)^0,f,c
  1277  000712                     l1210:
  1278  000712  FFFF               	dw	65535	; assembler added errata NOP
  1279                           
  1280                           ;main.c: 224:         if (PORTAbits.RA2) {
  1281  000714  A480               	btfss	128,2,c	;volatile
  1282  000716  EF8F  F003         	goto	u411
  1283  00071A  EF92  F003         	goto	u410
  1284  00071E                     u411:
  1285  00071E  FFFF               	dw	65535	; assembler added errata NOP
  1286  000720  EFC4  F003         	goto	l1222
  1287  000724                     u410:
  1288  000724  FFFF               	dw	65535	; assembler added errata NOP
  1289  000726                     
  1290                           ;main.c: 225:             if (nowFL < 3) {
  1291  000726  BE35               	btfsc	(_nowFL+1)^0,7,c
  1292  000728  EFA2  F003         	goto	u420
  1293  00072C  5035               	movf	(_nowFL+1)^0,w,c
  1294  00072E  E107               	bnz	u421
  1295  000730  0E03               	movlw	3
  1296  000732  5C34               	subwf	_nowFL^0,w,c
  1297  000734  B0D8               	btfsc	status,0,c
  1298  000736  EF9F  F003         	goto	u421
  1299  00073A  EFA2  F003         	goto	u420
  1300  00073E                     u421:
  1301  00073E  FFFF               	dw	65535	; assembler added errata NOP
  1302  000740  EFB4  F003         	goto	l1218
  1303  000744                     u420:
  1304  000744  FFFF               	dw	65535	; assembler added errata NOP
  1305  000746                     
  1306                           ;main.c: 226:                 queueUp[calls] = 3;
  1307  000746  90D8               	bcf	status,0,c
  1308  000748  343A               	rlcf	_calls^0,w,c
  1309  00074A  6ED9               	movwf	fsr2l,c
  1310  00074C  343B               	rlcf	(_calls+1)^0,w,c
  1311  00074E  6EDA               	movwf	fsr2h,c
  1312  000750  0E00               	movlw	low _queueUp
  1313  000752  26D9               	addwf	fsr2l,f,c
  1314  000754  0E01               	movlw	high _queueUp
  1315  000756  22DA               	addwfc	fsr2h,f,c
  1316  000758  0E03               	movlw	3
  1317  00075A  6EDE               	movwf	postinc2,c
  1318  00075C  0E00               	movlw	0
  1319  00075E  6EDD               	movwf	postdec2,c
  1320  000760                     
  1321                           ;main.c: 227:                 calls++;
  1322  000760  4A3A               	infsnz	_calls^0,f,c
  1323  000762  2A3B               	incf	(_calls+1)^0,f,c
  1324                           
  1325                           ;main.c: 228:             } else {
  1326  000764  EFC4  F003         	goto	l1222
  1327  000768                     l1218:
  1328  000768  FFFF               	dw	65535	; assembler added errata NOP
  1329                           
  1330                           ;main.c: 229:                 queueDown[callsD] = 3;
  1331  00076A  90D8               	bcf	status,0,c
  1332  00076C  3438               	rlcf	_callsD^0,w,c
  1333  00076E  6ED9               	movwf	fsr2l,c
  1334  000770  3439               	rlcf	(_callsD+1)^0,w,c
  1335  000772  6EDA               	movwf	fsr2h,c
  1336  000774  0E00               	movlw	low _queueDown
  1337  000776  26D9               	addwf	fsr2l,f,c
  1338  000778  0E02               	movlw	high _queueDown
  1339  00077A  22DA               	addwfc	fsr2h,f,c
  1340  00077C  0E03               	movlw	3
  1341  00077E  6EDE               	movwf	postinc2,c
  1342  000780  0E00               	movlw	0
  1343  000782  6EDD               	movwf	postdec2,c
  1344  000784                     
  1345                           ;main.c: 230:                 callsD++;
  1346  000784  4A38               	infsnz	_callsD^0,f,c
  1347  000786  2A39               	incf	(_callsD+1)^0,f,c
  1348  000788                     l1222:
  1349  000788  FFFF               	dw	65535	; assembler added errata NOP
  1350                           
  1351                           ;main.c: 234:         if (PORTAbits.RA3) {
  1352  00078A  A680               	btfss	128,3,c	;volatile
  1353  00078C  EFCA  F003         	goto	u431
  1354  000790  EFCD  F003         	goto	u430
  1355  000794                     u431:
  1356  000794  FFFF               	dw	65535	; assembler added errata NOP
  1357  000796  EFFF  F003         	goto	l1234
  1358  00079A                     u430:
  1359  00079A  FFFF               	dw	65535	; assembler added errata NOP
  1360  00079C                     
  1361                           ;main.c: 235:             if (nowFL < 4) {
  1362  00079C  BE35               	btfsc	(_nowFL+1)^0,7,c
  1363  00079E  EFDD  F003         	goto	u440
  1364  0007A2  5035               	movf	(_nowFL+1)^0,w,c
  1365  0007A4  E107               	bnz	u441
  1366  0007A6  0E04               	movlw	4
  1367  0007A8  5C34               	subwf	_nowFL^0,w,c
  1368  0007AA  B0D8               	btfsc	status,0,c
  1369  0007AC  EFDA  F003         	goto	u441
  1370  0007B0  EFDD  F003         	goto	u440
  1371  0007B4                     u441:
  1372  0007B4  FFFF               	dw	65535	; assembler added errata NOP
  1373  0007B6  EFEF  F003         	goto	l1230
  1374  0007BA                     u440:
  1375  0007BA  FFFF               	dw	65535	; assembler added errata NOP
  1376  0007BC                     
  1377                           ;main.c: 236:                 queueUp[calls] = 4;
  1378  0007BC  90D8               	bcf	status,0,c
  1379  0007BE  343A               	rlcf	_calls^0,w,c
  1380  0007C0  6ED9               	movwf	fsr2l,c
  1381  0007C2  343B               	rlcf	(_calls+1)^0,w,c
  1382  0007C4  6EDA               	movwf	fsr2h,c
  1383  0007C6  0E00               	movlw	low _queueUp
  1384  0007C8  26D9               	addwf	fsr2l,f,c
  1385  0007CA  0E01               	movlw	high _queueUp
  1386  0007CC  22DA               	addwfc	fsr2h,f,c
  1387  0007CE  0E04               	movlw	4
  1388  0007D0  6EDE               	movwf	postinc2,c
  1389  0007D2  0E00               	movlw	0
  1390  0007D4  6EDD               	movwf	postdec2,c
  1391  0007D6                     
  1392                           ;main.c: 237:                 calls++;
  1393  0007D6  4A3A               	infsnz	_calls^0,f,c
  1394  0007D8  2A3B               	incf	(_calls+1)^0,f,c
  1395                           
  1396                           ;main.c: 238:             } else {
  1397  0007DA  EFFF  F003         	goto	l1234
  1398  0007DE                     l1230:
  1399  0007DE  FFFF               	dw	65535	; assembler added errata NOP
  1400                           
  1401                           ;main.c: 239:                 queueDown[callsD] = 4;
  1402  0007E0  90D8               	bcf	status,0,c
  1403  0007E2  3438               	rlcf	_callsD^0,w,c
  1404  0007E4  6ED9               	movwf	fsr2l,c
  1405  0007E6  3439               	rlcf	(_callsD+1)^0,w,c
  1406  0007E8  6EDA               	movwf	fsr2h,c
  1407  0007EA  0E00               	movlw	low _queueDown
  1408  0007EC  26D9               	addwf	fsr2l,f,c
  1409  0007EE  0E02               	movlw	high _queueDown
  1410  0007F0  22DA               	addwfc	fsr2h,f,c
  1411  0007F2  0E04               	movlw	4
  1412  0007F4  6EDE               	movwf	postinc2,c
  1413  0007F6  0E00               	movlw	0
  1414  0007F8  6EDD               	movwf	postdec2,c
  1415  0007FA                     
  1416                           ;main.c: 240:                 callsD++;
  1417  0007FA  4A38               	infsnz	_callsD^0,f,c
  1418  0007FC  2A39               	incf	(_callsD+1)^0,f,c
  1419  0007FE                     l1234:
  1420  0007FE  FFFF               	dw	65535	; assembler added errata NOP
  1421                           
  1422                           ;main.c: 244:     } while (!PORTAbits.RA4);
  1423  000800  A880               	btfss	128,4,c	;volatile
  1424  000802  EF05  F004         	goto	u451
  1425  000806  EF08  F004         	goto	u450
  1426  00080A                     u451:
  1427  00080A  FFFF               	dw	65535	; assembler added errata NOP
  1428  00080C  EF14  F003         	goto	l86
  1429  000810                     u450:
  1430  000810  FFFF               	dw	65535	; assembler added errata NOP
  1431  000812                     
  1432                           ;main.c: 246:     int *UpCalls = &queueUp[0];
  1433  000812  0E00               	movlw	low _queueUp
  1434  000814  6E1C               	movwf	dataPanelUp@UpCalls^0,c
  1435  000816  0E01               	movlw	high _queueUp
  1436  000818  6E1D               	movwf	(dataPanelUp@UpCalls+1)^0,c
  1437  00081A                     
  1438                           ;main.c: 247:     int tamano = calls;
  1439  00081A  C03A  F01E         	movff	_calls,dataPanelUp@tamano
  1440  00081E  C03B  F01F         	movff	_calls+1,dataPanelUp@tamano+1
  1441  000822                     
  1442                           ;main.c: 249:     sort(UpCalls, tamano);
  1443  000822  C01C  F005         	movff	dataPanelUp@UpCalls,sort@p
  1444  000826  C01D  F006         	movff	dataPanelUp@UpCalls+1,sort@p+1
  1445  00082A  C01E  F007         	movff	dataPanelUp@tamano,sort@sizes
  1446  00082E  C01F  F008         	movff	dataPanelUp@tamano+1,sort@sizes+1
  1447  000832  ECFB  F001         	call	_sort	;wreg free
  1448  000836  0012               	return		;funcret
  1449  000838  FFFF               	dw	65535	; errata NOP
  1450  00083A                     __end_of_dataPanelUp:
  1451                           	callstack 0
  1452                           
  1453 ;; *************** function _sort *****************
  1454 ;; Defined at:
  1455 ;;		line 160 in file "main.c"
  1456 ;; Parameters:    Size  Location     Type
  1457 ;;  p               2    4[COMRAM] PTR int 
  1458 ;;		 -> queueUp(200), 
  1459 ;;  sizes           2    6[COMRAM] int 
  1460 ;; Auto vars:     Size  Location     Type
  1461 ;;  k               2   19[COMRAM] int 
  1462 ;;  h               2   25[COMRAM] int 
  1463 ;;  j               2   21[COMRAM] int 
  1464 ;;  temp            2   23[COMRAM] int 
  1465 ;;  sizesMod        2   17[COMRAM] int 
  1466 ;;  nums            2   15[COMRAM] int 
  1467 ;;  pos             2   13[COMRAM] int 
  1468 ;; Return value:  Size  Location     Type
  1469 ;;                  1    wreg      void 
  1470 ;; Registers used:
  1471 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1472 ;; Tracked objects:
  1473 ;;		On entry : 0/0
  1474 ;;		On exit  : 0/0
  1475 ;;		Unchanged: 0/0
  1476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1477 ;;      Params:         4       0       0       0       0       0       0
  1478 ;;      Locals:        14       0       0       0       0       0       0
  1479 ;;      Temps:          5       0       0       0       0       0       0
  1480 ;;      Totals:        23       0       0       0       0       0       0
  1481 ;;Total ram usage:       23 bytes
  1482 ;; Hardware stack levels used: 1
  1483 ;; Hardware stack levels required when called: 1
  1484 ;; This function calls:
  1485 ;;		Nothing
  1486 ;; This function is called by:
  1487 ;;		_dataPanelUp
  1488 ;; This function uses a non-reentrant model
  1489 ;;
  1490                           
  1491                           	psect	text4
  1492  0003F6                     __ptext4:
  1493                           	callstack 0
  1494  0003F6                     _sort:
  1495                           	callstack 0
  1496  0003F6  FFFF               	dw	65535	; assembler added errata NOP
  1497  0003F8                     
  1498                           ;main.c: 161:     int temp, nums = 0, pos = 0, sizesMod = sizes;
  1499  0003F8  0E00               	movlw	0
  1500  0003FA  6E11               	movwf	(sort@nums+1)^0,c
  1501  0003FC  0E00               	movlw	0
  1502  0003FE  6E10               	movwf	sort@nums^0,c
  1503  000400  0E00               	movlw	0
  1504  000402  6E0F               	movwf	(sort@pos+1)^0,c
  1505  000404  0E00               	movlw	0
  1506  000406  6E0E               	movwf	sort@pos^0,c
  1507  000408  C007  F012         	movff	sort@sizes,sort@sizesMod
  1508  00040C  C008  F013         	movff	sort@sizes+1,sort@sizesMod+1
  1509  000410                     l1146:
  1510  000410  FFFF               	dw	65535	; assembler added errata NOP
  1511                           
  1512                           ;main.c: 168:         temp = *(p + 0);
  1513  000412  C005  FFD9         	movff	sort@p,fsr2l
  1514  000416  C006  FFDA         	movff	sort@p+1,fsr2h
  1515  00041A  CFDE F018          	movff	postinc2,sort@temp
  1516  00041E  CFDD F019          	movff	postdec2,sort@temp+1
  1517  000422                     
  1518                           ;main.c: 170:         for (int h = 0; h < sizesMod; h++) {
  1519  000422  0E00               	movlw	0
  1520  000424  6E1B               	movwf	(sort@h+1)^0,c
  1521  000426  0E00               	movlw	0
  1522  000428  6E1A               	movwf	sort@h^0,c
  1523  00042A  EF62  F002         	goto	l1164
  1524  00042E                     l1150:
  1525  00042E  FFFF               	dw	65535	; assembler added errata NOP
  1526                           
  1527                           ;main.c: 172:             if (*(p + h) == temp) {
  1528  000430  90D8               	bcf	status,0,c
  1529  000432  341A               	rlcf	sort@h^0,w,c
  1530  000434  6ED9               	movwf	fsr2l,c
  1531  000436  341B               	rlcf	(sort@h+1)^0,w,c
  1532  000438  6EDA               	movwf	fsr2h,c
  1533  00043A  5005               	movf	sort@p^0,w,c
  1534  00043C  26D9               	addwf	fsr2l,f,c
  1535  00043E  5006               	movf	(sort@p+1)^0,w,c
  1536  000440  22DA               	addwfc	fsr2h,f,c
  1537  000442  5018               	movf	sort@temp^0,w,c
  1538  000444  18DE               	xorwf	postinc2,w,c
  1539  000446  E107               	bnz	u311
  1540  000448  5019               	movf	(sort@temp+1)^0,w,c
  1541  00044A  18DE               	xorwf	postinc2,w,c
  1542  00044C  A4D8               	btfss	status,2,c
  1543  00044E  EF2B  F002         	goto	u311
  1544  000452  EF2E  F002         	goto	u310
  1545  000456                     u311:
  1546  000456  FFFF               	dw	65535	; assembler added errata NOP
  1547  000458  EF33  F002         	goto	l1156
  1548  00045C                     u310:
  1549  00045C  FFFF               	dw	65535	; assembler added errata NOP
  1550  00045E                     
  1551                           ;main.c: 174:                 pos = h;
  1552  00045E  C01A  F00E         	movff	sort@h,sort@pos
  1553  000462  C01B  F00F         	movff	sort@h+1,sort@pos+1
  1554  000466                     l1156:
  1555  000466  FFFF               	dw	65535	; assembler added errata NOP
  1556                           
  1557                           ;main.c: 181:             if (*(p + h) < temp) {
  1558  000468  90D8               	bcf	status,0,c
  1559  00046A  341A               	rlcf	sort@h^0,w,c
  1560  00046C  6ED9               	movwf	fsr2l,c
  1561  00046E  341B               	rlcf	(sort@h+1)^0,w,c
  1562  000470  6EDA               	movwf	fsr2h,c
  1563  000472  5005               	movf	sort@p^0,w,c
  1564  000474  26D9               	addwf	fsr2l,f,c
  1565  000476  5006               	movf	(sort@p+1)^0,w,c
  1566  000478  22DA               	addwfc	fsr2h,f,c
  1567  00047A  5018               	movf	sort@temp^0,w,c
  1568  00047C  5CDE               	subwf	postinc2,w,c
  1569  00047E  50DE               	movf	postinc2,w,c
  1570  000480  0A80               	xorlw	128
  1571  000482  6E0B               	movwf	(??_sort+2)^0,c
  1572  000484  5019               	movf	(sort@temp+1)^0,w,c
  1573  000486  0A80               	xorlw	128
  1574  000488  580B               	subwfb	(??_sort+2)^0,w,c
  1575  00048A  B0D8               	btfsc	status,0,c
  1576  00048C  EF4A  F002         	goto	u321
  1577  000490  EF4D  F002         	goto	u320
  1578  000494                     u321:
  1579  000494  FFFF               	dw	65535	; assembler added errata NOP
  1580  000496  EF5F  F002         	goto	l1162
  1581  00049A                     u320:
  1582  00049A  FFFF               	dw	65535	; assembler added errata NOP
  1583  00049C                     
  1584                           ;main.c: 182:                 temp = *(p + h);
  1585  00049C  90D8               	bcf	status,0,c
  1586  00049E  341A               	rlcf	sort@h^0,w,c
  1587  0004A0  6ED9               	movwf	fsr2l,c
  1588  0004A2  341B               	rlcf	(sort@h+1)^0,w,c
  1589  0004A4  6EDA               	movwf	fsr2h,c
  1590  0004A6  5005               	movf	sort@p^0,w,c
  1591  0004A8  26D9               	addwf	fsr2l,f,c
  1592  0004AA  5006               	movf	(sort@p+1)^0,w,c
  1593  0004AC  22DA               	addwfc	fsr2h,f,c
  1594  0004AE  CFDE F018          	movff	postinc2,sort@temp
  1595  0004B2  CFDD F019          	movff	postdec2,sort@temp+1
  1596  0004B6                     
  1597                           ;main.c: 183:                 pos = h;
  1598  0004B6  C01A  F00E         	movff	sort@h,sort@pos
  1599  0004BA  C01B  F00F         	movff	sort@h+1,sort@pos+1
  1600  0004BE                     l1162:
  1601  0004BE  FFFF               	dw	65535	; assembler added errata NOP
  1602                           
  1603                           ;main.c: 185:         }
  1604  0004C0  4A1A               	infsnz	sort@h^0,f,c
  1605  0004C2  2A1B               	incf	(sort@h+1)^0,f,c
  1606  0004C4                     l1164:
  1607  0004C4  FFFF               	dw	65535	; assembler added errata NOP
  1608  0004C6  5012               	movf	sort@sizesMod^0,w,c
  1609  0004C8  5C1A               	subwf	sort@h^0,w,c
  1610  0004CA  501B               	movf	(sort@h+1)^0,w,c
  1611  0004CC  0A80               	xorlw	128
  1612  0004CE  6E09               	movwf	??_sort^0,c
  1613  0004D0  5013               	movf	(sort@sizesMod+1)^0,w,c
  1614  0004D2  0A80               	xorlw	128
  1615  0004D4  5809               	subwfb	??_sort^0,w,c
  1616  0004D6  A0D8               	btfss	status,0,c
  1617  0004D8  EF70  F002         	goto	u331
  1618  0004DC  EF73  F002         	goto	u330
  1619  0004E0                     u331:
  1620  0004E0  FFFF               	dw	65535	; assembler added errata NOP
  1621  0004E2  EF17  F002         	goto	l1150
  1622  0004E6                     u330:
  1623  0004E6  FFFF               	dw	65535	; assembler added errata NOP
  1624  0004E8                     
  1625                           ;main.c: 188:         for (int k = pos; k < sizesMod; k++) {
  1626  0004E8  C00E  F014         	movff	sort@pos,sort@k
  1627  0004EC  C00F  F015         	movff	sort@pos+1,sort@k+1
  1628  0004F0  EF9F  F002         	goto	l1170
  1629  0004F4                     l1166:
  1630  0004F4  FFFF               	dw	65535	; assembler added errata NOP
  1631                           
  1632                           ;main.c: 189:             *(p + k) = *(p + (k + 1));
  1633  0004F6  C014  F009         	movff	sort@k,??_sort
  1634  0004FA  C015  F00A         	movff	sort@k+1,??_sort+1
  1635  0004FE  90D8               	bcf	status,0,c
  1636  000500  3609               	rlcf	??_sort^0,f,c
  1637  000502  360A               	rlcf	(??_sort+1)^0,f,c
  1638  000504  C005  F00B         	movff	sort@p,??_sort+2
  1639  000508  C006  F00C         	movff	sort@p+1,??_sort+3
  1640  00050C  5009               	movf	??_sort^0,w,c
  1641  00050E  260B               	addwf	(??_sort+2)^0,f,c
  1642  000510  500A               	movf	(??_sort+1)^0,w,c
  1643  000512  220C               	addwfc	(??_sort+3)^0,f,c
  1644  000514  0E02               	movlw	2
  1645  000516  240B               	addwf	(??_sort+2)^0,w,c
  1646  000518  6ED9               	movwf	fsr2l,c
  1647  00051A  0E00               	movlw	0
  1648  00051C  200C               	addwfc	(??_sort+3)^0,w,c
  1649  00051E  6EDA               	movwf	fsr2h,c
  1650  000520  90D8               	bcf	status,0,c
  1651  000522  3414               	rlcf	sort@k^0,w,c
  1652  000524  6EE1               	movwf	fsr1l,c
  1653  000526  3415               	rlcf	(sort@k+1)^0,w,c
  1654  000528  6EE2               	movwf	fsr1h,c
  1655  00052A  5005               	movf	sort@p^0,w,c
  1656  00052C  26E1               	addwf	fsr1l,f,c
  1657  00052E  5006               	movf	(sort@p+1)^0,w,c
  1658  000530  22E2               	addwfc	fsr1h,f,c
  1659  000532  CFDE FFE6          	movff	postinc2,postinc1
  1660  000536  CFDD FFE5          	movff	postdec2,postdec1
  1661  00053A                     
  1662                           ;main.c: 190:         }
  1663  00053A  4A14               	infsnz	sort@k^0,f,c
  1664  00053C  2A15               	incf	(sort@k+1)^0,f,c
  1665  00053E                     l1170:
  1666  00053E  FFFF               	dw	65535	; assembler added errata NOP
  1667  000540  5012               	movf	sort@sizesMod^0,w,c
  1668  000542  5C14               	subwf	sort@k^0,w,c
  1669  000544  5015               	movf	(sort@k+1)^0,w,c
  1670  000546  0A80               	xorlw	128
  1671  000548  6E09               	movwf	??_sort^0,c
  1672  00054A  5013               	movf	(sort@sizesMod+1)^0,w,c
  1673  00054C  0A80               	xorlw	128
  1674  00054E  5809               	subwfb	??_sort^0,w,c
  1675  000550  A0D8               	btfss	status,0,c
  1676  000552  EFAD  F002         	goto	u341
  1677  000556  EFB0  F002         	goto	u340
  1678  00055A                     u341:
  1679  00055A  FFFF               	dw	65535	; assembler added errata NOP
  1680  00055C  EF7A  F002         	goto	l1166
  1681  000560                     u340:
  1682  000560  FFFF               	dw	65535	; assembler added errata NOP
  1683  000562                     
  1684                           ;main.c: 191:         result[nums] = temp;
  1685  000562  90D8               	bcf	status,0,c
  1686  000564  3410               	rlcf	sort@nums^0,w,c
  1687  000566  6ED9               	movwf	fsr2l,c
  1688  000568  3411               	rlcf	(sort@nums+1)^0,w,c
  1689  00056A  6EDA               	movwf	fsr2h,c
  1690  00056C  0E00               	movlw	low sort@result
  1691  00056E  26D9               	addwf	fsr2l,f,c
  1692  000570  0E04               	movlw	high sort@result
  1693  000572  22DA               	addwfc	fsr2h,f,c
  1694  000574  C018  FFDE         	movff	sort@temp,postinc2
  1695  000578  C019  FFDD         	movff	sort@temp+1,postdec2
  1696  00057C                     
  1697                           ;main.c: 192:         sizesMod--;
  1698  00057C  0612               	decf	sort@sizesMod^0,f,c
  1699  00057E  A0D8               	btfss	status,0,c
  1700  000580  0613               	decf	(sort@sizesMod+1)^0,f,c
  1701  000582                     
  1702                           ;main.c: 193:         nums++;
  1703  000582  4A10               	infsnz	sort@nums^0,f,c
  1704  000584  2A11               	incf	(sort@nums+1)^0,f,c
  1705  000586                     
  1706                           ;main.c: 194:     } while (nums <= sizes - 1);
  1707  000586  0EFF               	movlw	255
  1708  000588  6E09               	movwf	??_sort^0,c
  1709  00058A  0EFF               	movlw	255
  1710  00058C  6E0A               	movwf	(??_sort+1)^0,c
  1711  00058E  C007  F00B         	movff	sort@sizes,??_sort+2
  1712  000592  C008  F00C         	movff	sort@sizes+1,??_sort+3
  1713  000596  5009               	movf	??_sort^0,w,c
  1714  000598  260B               	addwf	(??_sort+2)^0,f,c
  1715  00059A  500A               	movf	(??_sort+1)^0,w,c
  1716  00059C  220C               	addwfc	(??_sort+3)^0,f,c
  1717  00059E  5010               	movf	sort@nums^0,w,c
  1718  0005A0  5C0B               	subwf	(??_sort+2)^0,w,c
  1719  0005A2  500C               	movf	(??_sort+3)^0,w,c
  1720  0005A4  0A80               	xorlw	128
  1721  0005A6  6E0D               	movwf	(??_sort+4)^0,c
  1722  0005A8  5011               	movf	(sort@nums+1)^0,w,c
  1723  0005AA  0A80               	xorlw	128
  1724  0005AC  580D               	subwfb	(??_sort+4)^0,w,c
  1725  0005AE  B0D8               	btfsc	status,0,c
  1726  0005B0  EFDC  F002         	goto	u351
  1727  0005B4  EFDF  F002         	goto	u350
  1728  0005B8                     u351:
  1729  0005B8  FFFF               	dw	65535	; assembler added errata NOP
  1730  0005BA  EF08  F002         	goto	l1146
  1731  0005BE                     u350:
  1732  0005BE  FFFF               	dw	65535	; assembler added errata NOP
  1733  0005C0                     
  1734                           ;main.c: 197:     for (int j = 0; j < sizes; j++) {
  1735  0005C0  0E00               	movlw	0
  1736  0005C2  6E17               	movwf	(sort@j+1)^0,c
  1737  0005C4  0E00               	movlw	0
  1738  0005C6  6E16               	movwf	sort@j^0,c
  1739  0005C8  EFFF  F002         	goto	l1186
  1740  0005CC                     l1182:
  1741  0005CC  FFFF               	dw	65535	; assembler added errata NOP
  1742                           
  1743                           ;main.c: 198:         *(p + j) = result[j];
  1744  0005CE  90D8               	bcf	status,0,c
  1745  0005D0  3416               	rlcf	sort@j^0,w,c
  1746  0005D2  6ED9               	movwf	fsr2l,c
  1747  0005D4  3417               	rlcf	(sort@j+1)^0,w,c
  1748  0005D6  6EDA               	movwf	fsr2h,c
  1749  0005D8  0E00               	movlw	low sort@result
  1750  0005DA  26D9               	addwf	fsr2l,f,c
  1751  0005DC  0E04               	movlw	high sort@result
  1752  0005DE  22DA               	addwfc	fsr2h,f,c
  1753  0005E0  90D8               	bcf	status,0,c
  1754  0005E2  3416               	rlcf	sort@j^0,w,c
  1755  0005E4  6EE1               	movwf	fsr1l,c
  1756  0005E6  3417               	rlcf	(sort@j+1)^0,w,c
  1757  0005E8  6EE2               	movwf	fsr1h,c
  1758  0005EA  5005               	movf	sort@p^0,w,c
  1759  0005EC  26E1               	addwf	fsr1l,f,c
  1760  0005EE  5006               	movf	(sort@p+1)^0,w,c
  1761  0005F0  22E2               	addwfc	fsr1h,f,c
  1762  0005F2  CFDE FFE6          	movff	postinc2,postinc1
  1763  0005F6  CFDD FFE5          	movff	postdec2,postdec1
  1764  0005FA                     
  1765                           ;main.c: 199:     }
  1766  0005FA  4A16               	infsnz	sort@j^0,f,c
  1767  0005FC  2A17               	incf	(sort@j+1)^0,f,c
  1768  0005FE                     l1186:
  1769  0005FE  FFFF               	dw	65535	; assembler added errata NOP
  1770  000600  5007               	movf	sort@sizes^0,w,c
  1771  000602  5C16               	subwf	sort@j^0,w,c
  1772  000604  5017               	movf	(sort@j+1)^0,w,c
  1773  000606  0A80               	xorlw	128
  1774  000608  6E09               	movwf	??_sort^0,c
  1775  00060A  5008               	movf	(sort@sizes+1)^0,w,c
  1776  00060C  0A80               	xorlw	128
  1777  00060E  5809               	subwfb	??_sort^0,w,c
  1778  000610  A0D8               	btfss	status,0,c
  1779  000612  EF0D  F003         	goto	u361
  1780  000616  EF10  F003         	goto	u360
  1781  00061A                     u361:
  1782  00061A  FFFF               	dw	65535	; assembler added errata NOP
  1783  00061C  EFE6  F002         	goto	l1182
  1784  000620                     u360:
  1785  000620  FFFF               	dw	65535	; assembler added errata NOP
  1786  000622  0012               	return		;funcret
  1787  000624  FFFF               	dw	65535	; errata NOP
  1788  000626                     __end_of_sort:
  1789                           	callstack 0
  1790                           
  1791 ;; *************** function _interruptsInit *****************
  1792 ;; Defined at:
  1793 ;;		line 136 in file "main.c"
  1794 ;; Parameters:    Size  Location     Type
  1795 ;;		None
  1796 ;; Auto vars:     Size  Location     Type
  1797 ;;		None
  1798 ;; Return value:  Size  Location     Type
  1799 ;;                  1    wreg      void 
  1800 ;; Registers used:
  1801 ;;		None
  1802 ;; Tracked objects:
  1803 ;;		On entry : 0/0
  1804 ;;		On exit  : 0/0
  1805 ;;		Unchanged: 0/0
  1806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1807 ;;      Params:         0       0       0       0       0       0       0
  1808 ;;      Locals:         0       0       0       0       0       0       0
  1809 ;;      Temps:          0       0       0       0       0       0       0
  1810 ;;      Totals:         0       0       0       0       0       0       0
  1811 ;;Total ram usage:        0 bytes
  1812 ;; Hardware stack levels used: 1
  1813 ;; Hardware stack levels required when called: 1
  1814 ;; This function calls:
  1815 ;;		Nothing
  1816 ;; This function is called by:
  1817 ;;		_main
  1818 ;; This function uses a non-reentrant model
  1819 ;;
  1820                           
  1821                           	psect	text5
  1822  000A1E                     __ptext5:
  1823                           	callstack 0
  1824  000A1E                     _interruptsInit:
  1825                           	callstack 0
  1826  000A1E  FFFF               	dw	65535	; assembler added errata NOP
  1827  000A20                     
  1828                           ;main.c: 137:     RCONbits.IPEN = 0;
  1829  000A20  9ED0               	bcf	208,7,c	;volatile
  1830                           
  1831                           ;main.c: 138:     INTCONbits.GIE = 1;
  1832  000A22  8EF2               	bsf	242,7,c	;volatile
  1833                           
  1834                           ;main.c: 139:     INTCONbits.PEIE = 1;
  1835  000A24  8CF2               	bsf	242,6,c	;volatile
  1836  000A26  0012               	return		;funcret
  1837  000A28  FFFF               	dw	65535	; errata NOP
  1838  000A2A                     __end_of_interruptsInit:
  1839                           	callstack 0
  1840                           
  1841 ;; *************** function _bootAscensor *****************
  1842 ;; Defined at:
  1843 ;;		line 142 in file "main.c"
  1844 ;; Parameters:    Size  Location     Type
  1845 ;;		None
  1846 ;; Auto vars:     Size  Location     Type
  1847 ;;		None
  1848 ;; Return value:  Size  Location     Type
  1849 ;;                  1    wreg      void 
  1850 ;; Registers used:
  1851 ;;		wreg, status,2
  1852 ;; Tracked objects:
  1853 ;;		On entry : 0/0
  1854 ;;		On exit  : 0/0
  1855 ;;		Unchanged: 0/0
  1856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1857 ;;      Params:         0       0       0       0       0       0       0
  1858 ;;      Locals:         0       0       0       0       0       0       0
  1859 ;;      Temps:          0       0       0       0       0       0       0
  1860 ;;      Totals:         0       0       0       0       0       0       0
  1861 ;;Total ram usage:        0 bytes
  1862 ;; Hardware stack levels used: 1
  1863 ;; Hardware stack levels required when called: 1
  1864 ;; This function calls:
  1865 ;;		Nothing
  1866 ;; This function is called by:
  1867 ;;		_main
  1868 ;; This function uses a non-reentrant model
  1869 ;;
  1870                           
  1871                           	psect	text6
  1872  0009BE                     __ptext6:
  1873                           	callstack 0
  1874  0009BE                     _bootAscensor:
  1875                           	callstack 0
  1876  0009BE  FFFF               	dw	65535	; assembler added errata NOP
  1877  0009C0                     
  1878                           ;main.c: 143:     LATCbits.LC0 = 1;
  1879  0009C0  808B               	bsf	139,0,c	;volatile
  1880                           
  1881                           ;main.c: 144:     LATCbits.LC1 = 1;
  1882  0009C2  828B               	bsf	139,1,c	;volatile
  1883                           
  1884                           ;main.c: 146:     if (PORTDbits.RD4 == 1) {
  1885  0009C4  A883               	btfss	131,4,c	;volatile
  1886  0009C6  EFE7  F004         	goto	u241
  1887  0009CA  EFEA  F004         	goto	u240
  1888  0009CE                     u241:
  1889  0009CE  FFFF               	dw	65535	; assembler added errata NOP
  1890  0009D0  EFF2  F004         	goto	l59
  1891  0009D4                     u240:
  1892  0009D4  FFFF               	dw	65535	; assembler added errata NOP
  1893  0009D6                     l1048:
  1894  0009D6  FFFF               	dw	65535	; assembler added errata NOP
  1895                           
  1896                           ;main.c: 147:         nowFL = 1;
  1897  0009D8  0E00               	movlw	0
  1898  0009DA  6E35               	movwf	(_nowFL+1)^0,c
  1899  0009DC  0E01               	movlw	1
  1900  0009DE  6E34               	movwf	_nowFL^0,c
  1901  0009E0  EF01  F005         	goto	l60
  1902  0009E4                     l59:
  1903  0009E4  FFFF               	dw	65535	; assembler added errata NOP
  1904                           
  1905                           ;main.c: 150:         LATCbits.LC0 = 0;
  1906  0009E6  908B               	bcf	139,0,c	;volatile
  1907  0009E8                     l62:
  1908  0009E8  FFFF               	dw	65535	; assembler added errata NOP
  1909                           
  1910                           ;main.c: 151:         while (!PORTDbits.RD4) {
  1911  0009EA  A883               	btfss	131,4,c	;volatile
  1912  0009EC  EFFA  F004         	goto	u251
  1913  0009F0  EFFD  F004         	goto	u250
  1914  0009F4                     u251:
  1915  0009F4  FFFF               	dw	65535	; assembler added errata NOP
  1916  0009F6  EFF4  F004         	goto	l62
  1917  0009FA                     u250:
  1918  0009FA  FFFF               	dw	65535	; assembler added errata NOP
  1919  0009FC                     
  1920                           ;main.c: 154:         LATCbits.LC0 = 1;
  1921  0009FC  808B               	bsf	139,0,c	;volatile
  1922  0009FE  EFEB  F004         	goto	l1048
  1923  000A02                     l60:
  1924  000A02  FFFF               	dw	65535	; assembler added errata NOP
  1925  000A04  0012               	return		;funcret
  1926  000A06  FFFF               	dw	65535	; errata NOP
  1927  000A08                     __end_of_bootAscensor:
  1928                           	callstack 0
  1929                           
  1930 ;; *************** function _boot *****************
  1931 ;; Defined at:
  1932 ;;		line 128 in file "main.c"
  1933 ;; Parameters:    Size  Location     Type
  1934 ;;		None
  1935 ;; Auto vars:     Size  Location     Type
  1936 ;;		None
  1937 ;; Return value:  Size  Location     Type
  1938 ;;                  1    wreg      void 
  1939 ;; Registers used:
  1940 ;;		wreg, status,2
  1941 ;; Tracked objects:
  1942 ;;		On entry : 0/0
  1943 ;;		On exit  : 0/0
  1944 ;;		Unchanged: 0/0
  1945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1946 ;;      Params:         0       0       0       0       0       0       0
  1947 ;;      Locals:         0       0       0       0       0       0       0
  1948 ;;      Temps:          0       0       0       0       0       0       0
  1949 ;;      Totals:         0       0       0       0       0       0       0
  1950 ;;Total ram usage:        0 bytes
  1951 ;; Hardware stack levels used: 1
  1952 ;; Hardware stack levels required when called: 1
  1953 ;; This function calls:
  1954 ;;		Nothing
  1955 ;; This function is called by:
  1956 ;;		_main
  1957 ;; This function uses a non-reentrant model
  1958 ;;
  1959                           
  1960                           	psect	text7
  1961  000A08                     __ptext7:
  1962                           	callstack 0
  1963  000A08                     _boot:
  1964                           	callstack 0
  1965  000A08  FFFF               	dw	65535	; assembler added errata NOP
  1966  000A0A                     
  1967                           ;main.c: 129:     ADCON1 = 0x06;
  1968  000A0A  0E06               	movlw	6
  1969  000A0C  6EC1               	movwf	193,c	;volatile
  1970  000A0E                     
  1971                           ;main.c: 130:     TRISB = 0xFF;
  1972  000A0E  6893               	setf	147,c	;volatile
  1973                           
  1974                           ;main.c: 131:     TRISD = 0xF0;
  1975  000A10  0EF0               	movlw	240
  1976  000A12  6E95               	movwf	149,c	;volatile
  1977  000A14                     
  1978                           ;main.c: 132:     TRISA = 0xFF;
  1979  000A14  6892               	setf	146,c	;volatile
  1980                           
  1981                           ;main.c: 133:     TRISC = 0xFC;
  1982  000A16  0EFC               	movlw	252
  1983  000A18  6E94               	movwf	148,c	;volatile
  1984  000A1A  0012               	return		;funcret
  1985  000A1C  FFFF               	dw	65535	; errata NOP
  1986  000A1E                     __end_of_boot:
  1987                           	callstack 0
  1988                           
  1989 ;; *************** function _ISR *****************
  1990 ;; Defined at:
  1991 ;;		line 400 in file "main.c"
  1992 ;; Parameters:    Size  Location     Type
  1993 ;;		None
  1994 ;; Auto vars:     Size  Location     Type
  1995 ;;		None
  1996 ;; Return value:  Size  Location     Type
  1997 ;;                  1    wreg      void 
  1998 ;; Registers used:
  1999 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2000 ;; Tracked objects:
  2001 ;;		On entry : 0/0
  2002 ;;		On exit  : 0/0
  2003 ;;		Unchanged: 0/0
  2004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2005 ;;      Params:         0       0       0       0       0       0       0
  2006 ;;      Locals:         0       0       0       0       0       0       0
  2007 ;;      Temps:          4       0       0       0       0       0       0
  2008 ;;      Totals:         4       0       0       0       0       0       0
  2009 ;;Total ram usage:        4 bytes
  2010 ;; Hardware stack levels used: 1
  2011 ;; This function calls:
  2012 ;;		Nothing
  2013 ;; This function is called by:
  2014 ;;		Interrupt level 2
  2015 ;; This function uses a non-reentrant model
  2016 ;;
  2017                           
  2018                           	psect	intcode
  2019  000008                     __pintcode:
  2020                           	callstack 0
  2021  000008                     _ISR:
  2022                           	callstack 0
  2023  000008  FFFF               	dw	65535	; assembler added errata NOP
  2024                           
  2025                           ;incstack = 0
  2026  00000A  823C               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2027  00000C  CFD9 F003          	movff	fsr2l,??_ISR+2
  2028  000010  CFDA F004          	movff	fsr2h,??_ISR+3
  2029  000014                     
  2030                           ;main.c: 401:     switch (PORTB) {
  2031  000014  EF43  F000         	goto	i2l1402
  2032  000018                     i2l1384:
  2033  000018  FFFF               	dw	65535	; assembler added errata NOP
  2034                           
  2035                           ;main.c: 403:             LATD = 0x00;
  2036  00001A  0E00               	movlw	0
  2037  00001C  6E8C               	movwf	140,c	;volatile
  2038                           
  2039                           ;main.c: 404:             break;
  2040  00001E  EF72  F000         	goto	i2l168
  2041  000022                     i2l1386:
  2042  000022  FFFF               	dw	65535	; assembler added errata NOP
  2043                           
  2044                           ;main.c: 407:             callsInUp[numUps] = 2;
  2045  000024  90D8               	bcf	status,0,c
  2046  000026  3432               	rlcf	_numUps^0,w,c
  2047  000028  6ED9               	movwf	fsr2l,c
  2048  00002A  3433               	rlcf	(_numUps+1)^0,w,c
  2049  00002C  6EDA               	movwf	fsr2h,c
  2050  00002E  0E00               	movlw	low _callsInUp
  2051  000030  26D9               	addwf	fsr2l,f,c
  2052  000032  0E03               	movlw	high _callsInUp
  2053  000034  22DA               	addwfc	fsr2h,f,c
  2054  000036  0E02               	movlw	2
  2055  000038  6EDE               	movwf	postinc2,c
  2056  00003A  0E00               	movlw	0
  2057  00003C  6EDD               	movwf	postdec2,c
  2058  00003E                     i2l1388:
  2059  00003E  FFFF               	dw	65535	; assembler added errata NOP
  2060                           
  2061                           ;main.c: 408:             numUps++;
  2062  000040  4A32               	infsnz	_numUps^0,f,c
  2063  000042  2A33               	incf	(_numUps+1)^0,f,c
  2064                           
  2065                           ;main.c: 409:             break;
  2066  000044  EF72  F000         	goto	i2l168
  2067  000048                     i2l1390:
  2068  000048  FFFF               	dw	65535	; assembler added errata NOP
  2069                           
  2070                           ;main.c: 416:             callsInUp[numUps] = 3;
  2071  00004A  90D8               	bcf	status,0,c
  2072  00004C  3432               	rlcf	_numUps^0,w,c
  2073  00004E  6ED9               	movwf	fsr2l,c
  2074  000050  3433               	rlcf	(_numUps+1)^0,w,c
  2075  000052  6EDA               	movwf	fsr2h,c
  2076  000054  0E00               	movlw	low _callsInUp
  2077  000056  26D9               	addwf	fsr2l,f,c
  2078  000058  0E03               	movlw	high _callsInUp
  2079  00005A  22DA               	addwfc	fsr2h,f,c
  2080  00005C  0E03               	movlw	3
  2081  00005E  6EDE               	movwf	postinc2,c
  2082  000060  0E00               	movlw	0
  2083  000062  6EDD               	movwf	postdec2,c
  2084  000064  EF1F  F000         	goto	i2l1388
  2085  000068                     i2l1394:
  2086  000068  FFFF               	dw	65535	; assembler added errata NOP
  2087                           
  2088                           ;main.c: 421:             LATD = 0x10;
  2089  00006A  0E10               	movlw	16
  2090  00006C  6E8C               	movwf	140,c	;volatile
  2091                           
  2092                           ;main.c: 422:             break;
  2093  00006E  EF72  F000         	goto	i2l168
  2094  000072                     i2l1396:
  2095  000072  FFFF               	dw	65535	; assembler added errata NOP
  2096                           
  2097                           ;main.c: 425:             LATD = 0x20;
  2098  000074  0E20               	movlw	32
  2099  000076  6E8C               	movwf	140,c	;volatile
  2100                           
  2101                           ;main.c: 426:             break;
  2102  000078  EF72  F000         	goto	i2l168
  2103  00007C                     i2l1398:
  2104  00007C  FFFF               	dw	65535	; assembler added errata NOP
  2105                           
  2106                           ;main.c: 429:             LATD = 0x40;
  2107  00007E  0E40               	movlw	64
  2108  000080  6E8C               	movwf	140,c	;volatile
  2109                           
  2110                           ;main.c: 430:             break;
  2111  000082  EF72  F000         	goto	i2l168
  2112  000086                     i2l1402:
  2113  000086  FFFF               	dw	65535	; assembler added errata NOP
  2114  000088  5081               	movf	129,w,c	;volatile
  2115  00008A  6E01               	movwf	??_ISR^0,c
  2116  00008C  6A02               	clrf	(??_ISR+1)^0,c
  2117                           
  2118                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2119                           ; Switch size 1, requested type "simple"
  2120                           ; Number of cases is 1, Range of values is 0 to 0
  2121                           ; switch strategies available:
  2122                           ; Name         Instructions Cycles
  2123                           ; simple_byte            4     3 (average)
  2124                           ;	Chosen strategy is simple_byte
  2125  00008E  5002               	movf	(??_ISR+1)^0,w,c
  2126  000090  0A00               	xorlw	0	; case 0
  2127  000092  B4D8               	btfsc	status,2,c
  2128  000094  EF4E  F000         	goto	i2l1424
  2129  000098  EF72  F000         	goto	i2l168
  2130  00009C                     i2l1424:
  2131  00009C  FFFF               	dw	65535	; assembler added errata NOP
  2132                           
  2133                           ; Switch size 1, requested type "simple"
  2134                           ; Number of cases is 8, Range of values is 0 to 128
  2135                           ; switch strategies available:
  2136                           ; Name         Instructions Cycles
  2137                           ; simple_byte           25    13 (average)
  2138                           ;	Chosen strategy is simple_byte
  2139  00009E  5001               	movf	??_ISR^0,w,c
  2140  0000A0  0A00               	xorlw	0	; case 0
  2141  0000A2  B4D8               	btfsc	status,2,c
  2142  0000A4  EF0C  F000         	goto	i2l1384
  2143  0000A8  0A02               	xorlw	2	; case 2
  2144  0000AA  B4D8               	btfsc	status,2,c
  2145  0000AC  EF11  F000         	goto	i2l1386
  2146  0000B0  0A06               	xorlw	6	; case 4
  2147  0000B2  B4D8               	btfsc	status,2,c
  2148  0000B4  EF72  F000         	goto	i2l168
  2149  0000B8  0A0C               	xorlw	12	; case 8
  2150  0000BA  B4D8               	btfsc	status,2,c
  2151  0000BC  EF24  F000         	goto	i2l1390
  2152  0000C0  0A18               	xorlw	24	; case 16
  2153  0000C2  B4D8               	btfsc	status,2,c
  2154  0000C4  EF34  F000         	goto	i2l1394
  2155  0000C8  0A30               	xorlw	48	; case 32
  2156  0000CA  B4D8               	btfsc	status,2,c
  2157  0000CC  EF39  F000         	goto	i2l1396
  2158  0000D0  0A60               	xorlw	96	; case 64
  2159  0000D2  B4D8               	btfsc	status,2,c
  2160  0000D4  EF3E  F000         	goto	i2l1398
  2161  0000D8  0AC0               	xorlw	192	; case 128
  2162  0000DA  B4D8               	btfsc	status,2,c
  2163  0000DC  EF72  F000         	goto	i2l168
  2164  0000E0  EF72  F000         	goto	i2l168
  2165  0000E4                     i2l168:
  2166  0000E4  FFFF               	dw	65535	; assembler added errata NOP
  2167  0000E6  C004  FFDA         	movff	??_ISR+3,fsr2h
  2168  0000EA  C003  FFD9         	movff	??_ISR+2,fsr2l
  2169  0000EE  923C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2170  0000F0  0011               	retfie		f
  2171  0000F2  FFFF               	dw	65535	; errata NOP
  2172  0000F4                     __end_of_ISR:
  2173                           	callstack 0
  2174  0000F4  FFFF               	dw	65535	; assembler added errata NOP
  2175                           
  2176                           	psect	rparam
  2177  0000                     
  2178                           	psect	temp
  2179  00003C                     btemp:
  2180                           	callstack 0
  2181  00003C                     	ds	1
  2182  0000                     int$flags	set	btemp
  2183  0000                     wtemp8	set	btemp+1
  2184  0000                     ttemp5	set	btemp+1
  2185  0000                     ttemp6	set	btemp+4
  2186  0000                     ttemp7	set	btemp+8
  2187                           
  2188                           	psect	idloc
  2189                           
  2190                           ;Config register IDLOC0 @ 0x200000
  2191                           ;	unspecified, using default values
  2192  200000                     	org	2097152
  2193  200000  FF                 	db	255
  2194                           
  2195                           ;Config register IDLOC1 @ 0x200001
  2196                           ;	unspecified, using default values
  2197  200001                     	org	2097153
  2198  200001  FF                 	db	255
  2199                           
  2200                           ;Config register IDLOC2 @ 0x200002
  2201                           ;	unspecified, using default values
  2202  200002                     	org	2097154
  2203  200002  FF                 	db	255
  2204                           
  2205                           ;Config register IDLOC3 @ 0x200003
  2206                           ;	unspecified, using default values
  2207  200003                     	org	2097155
  2208  200003  FF                 	db	255
  2209                           
  2210                           ;Config register IDLOC4 @ 0x200004
  2211                           ;	unspecified, using default values
  2212  200004                     	org	2097156
  2213  200004  FF                 	db	255
  2214                           
  2215                           ;Config register IDLOC5 @ 0x200005
  2216                           ;	unspecified, using default values
  2217  200005                     	org	2097157
  2218  200005  FF                 	db	255
  2219                           
  2220                           ;Config register IDLOC6 @ 0x200006
  2221                           ;	unspecified, using default values
  2222  200006                     	org	2097158
  2223  200006  FF                 	db	255
  2224                           
  2225                           ;Config register IDLOC7 @ 0x200007
  2226                           ;	unspecified, using default values
  2227  200007                     	org	2097159
  2228  200007  FF                 	db	255
  2229                           
  2230                           	psect	config
  2231                           
  2232                           ; Padding undefined space
  2233  300000                     	org	3145728
  2234  300000  FF                 	db	255
  2235                           
  2236                           ;Config register CONFIG1H @ 0x300001
  2237                           ;	Oscillator Selection bits
  2238                           ;	OSC = HS, HS oscillator
  2239                           ;	Oscillator System Clock Switch Enable bit
  2240                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
  2241  300001                     	org	3145729
  2242  300001  22                 	db	34
  2243                           
  2244                           ;Config register CONFIG2L @ 0x300002
  2245                           ;	Power-up Timer Enable bit
  2246                           ;	PWRT = OFF, PWRT disabled
  2247                           ;	Brown-out Reset Enable bit
  2248                           ;	BOR = OFF, Brown-out Reset disabled
  2249                           ;	Brown-out Reset Voltage bits
  2250                           ;	BORV = 20, VBOR set to 2.0V
  2251  300002                     	org	3145730
  2252  300002  0D                 	db	13
  2253                           
  2254                           ;Config register CONFIG2H @ 0x300003
  2255                           ;	Watchdog Timer Enable bit
  2256                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2257                           ;	Watchdog Timer Postscale Select bits
  2258                           ;	WDTPS = 128, 1:128
  2259  300003                     	org	3145731
  2260  300003  0E                 	db	14
  2261                           
  2262                           ; Padding undefined space
  2263  300004                     	org	3145732
  2264  300004  FF                 	db	255
  2265                           
  2266                           ;Config register CONFIG3H @ 0x300005
  2267                           ;	CCP2 Mux bit
  2268                           ;	CCP2MUX = OFF, CCP2 input/output is multiplexed with RB3
  2269  300005                     	org	3145733
  2270  300005  00                 	db	0
  2271                           
  2272                           ;Config register CONFIG4L @ 0x300006
  2273                           ;	Stack Full/Underflow Reset Enable bit
  2274                           ;	STVR = OFF, Stack Full/Underflow will not cause RESET
  2275                           ;	Low Voltage ICSP Enable bit
  2276                           ;	LVP = OFF, Low Voltage ICSP disabled
  2277                           ;	Background Debugger Enable bit
  2278                           ;	DEBUG = 0x1, unprogrammed default
  2279  300006                     	org	3145734
  2280  300006  80                 	db	128
  2281                           
  2282                           ; Padding undefined space
  2283  300007                     	org	3145735
  2284  300007  FF                 	db	255
  2285                           
  2286                           ;Config register CONFIG5L @ 0x300008
  2287                           ;	Code Protection bit
  2288                           ;	CP0 = ON, Block 0 (000200-001FFFh) code protected
  2289                           ;	Code Protection bit
  2290                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code protected
  2291                           ;	Code Protection bit
  2292                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code protected
  2293                           ;	Code Protection bit
  2294                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code protected
  2295  300008                     	org	3145736
  2296  300008  0E                 	db	14
  2297                           
  2298                           ;Config register CONFIG5H @ 0x300009
  2299                           ;	Boot Block Code Protection bit
  2300                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code protected
  2301                           ;	Data EEPROM Code Protection bit
  2302                           ;	CPD = OFF, Data EEPROM not code protected
  2303  300009                     	org	3145737
  2304  300009  C0                 	db	192
  2305                           
  2306                           ;Config register CONFIG6L @ 0x30000A
  2307                           ;	Write Protection bit
  2308                           ;	WRT0 = OFF, Block 0 (000200-001FFFh) not write protected
  2309                           ;	Write Protection bit
  2310                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write protected
  2311                           ;	Write Protection bit
  2312                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write protected
  2313                           ;	Write Protection bit
  2314                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write protected
  2315  30000A                     	org	3145738
  2316  30000A  0F                 	db	15
  2317                           
  2318                           ;Config register CONFIG6H @ 0x30000B
  2319                           ;	Configuration Register Write Protection bit
  2320                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write protected
  2321                           ;	Boot Block Write Protection bit
  2322                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write protected
  2323                           ;	Data EEPROM Write Protection bit
  2324                           ;	WRTD = OFF, Data EEPROM not write protected
  2325  30000B                     	org	3145739
  2326  30000B  E0                 	db	224
  2327                           
  2328                           ;Config register CONFIG7L @ 0x30000C
  2329                           ;	Table Read Protection bit
  2330                           ;	EBTR0 = OFF, Block 0 (000200-001FFFh) not protected from Table Reads executed in other
      +                           blocks
  2331                           ;	Table Read Protection bit
  2332                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from Table Reads executed in other
      +                           blocks
  2333                           ;	Table Read Protection bit
  2334                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from Table Reads executed in other
      +                           blocks
  2335                           ;	Table Read Protection bit
  2336                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from Table Reads executed in other
      +                           blocks
  2337  30000C                     	org	3145740
  2338  30000C  0F                 	db	15
  2339                           
  2340                           ;Config register CONFIG7H @ 0x30000D
  2341                           ;	Boot Block Table Read Protection bit
  2342                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from Table Reads executed in ot
      +                          her blocks
  2343  30000D                     	org	3145741
  2344  30000D  40                 	db	64
  2345                           tosu	equ	0xFFF
  2346                           tosh	equ	0xFFE
  2347                           tosl	equ	0xFFD
  2348                           stkptr	equ	0xFFC
  2349                           pclatu	equ	0xFFB
  2350                           pclath	equ	0xFFA
  2351                           pcl	equ	0xFF9
  2352                           tblptru	equ	0xFF8
  2353                           tblptrh	equ	0xFF7
  2354                           tblptrl	equ	0xFF6
  2355                           tablat	equ	0xFF5
  2356                           prodh	equ	0xFF4
  2357                           prodl	equ	0xFF3
  2358                           indf0	equ	0xFEF
  2359                           postinc0	equ	0xFEE
  2360                           postdec0	equ	0xFED
  2361                           preinc0	equ	0xFEC
  2362                           plusw0	equ	0xFEB
  2363                           fsr0h	equ	0xFEA
  2364                           fsr0l	equ	0xFE9
  2365                           wreg	equ	0xFE8
  2366                           indf1	equ	0xFE7
  2367                           postinc1	equ	0xFE6
  2368                           postdec1	equ	0xFE5
  2369                           preinc1	equ	0xFE4
  2370                           plusw1	equ	0xFE3
  2371                           fsr1h	equ	0xFE2
  2372                           fsr1l	equ	0xFE1
  2373                           bsr	equ	0xFE0
  2374                           indf2	equ	0xFDF
  2375                           postinc2	equ	0xFDE
  2376                           postdec2	equ	0xFDD
  2377                           preinc2	equ	0xFDC
  2378                           plusw2	equ	0xFDB
  2379                           fsr2h	equ	0xFDA
  2380                           fsr2l	equ	0xFD9
  2381                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         816
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     43      59
    BANK0           128      0       0
    BANK1           256      0     200
    BANK2           256      0     200
    BANK3           256      0     200
    BANK4           256      0     200
    BANK5           256      0       0

Pointer List with Targets:

    dataPanelUp@UpCalls	PTR int  size(2) Largest target is 200
		 -> queueUp(BANK1[200]), 

    sort@p	PTR int  size(2) Largest target is 200
		 -> queueUp(BANK1[200]), 


Critical Paths under _main in COMRAM

    _main->_modeUp
    _modeUp->_modeUpControl
    _modeUpControl->_dataPanelUp
    _dataPanelUp->_sort

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2150
                               _boot
                       _bootAscensor
                     _interruptsInit
                             _modeUp
 ---------------------------------------------------------------------------------
 (1) _modeUp                                               2     2      0    2150
                                             41 COMRAM     2     2      0
                        _dataPanelUp
                      _modeUpControl
 ---------------------------------------------------------------------------------
 (2) _modeUpControl                                       10    10      0    1211
                                             31 COMRAM    10    10      0
                        _dataPanelUp
 ---------------------------------------------------------------------------------
 (3) _dataPanelUp                                          4     4      0     939
                                             27 COMRAM     4     4      0
                               _sort
 ---------------------------------------------------------------------------------
 (4) _sort                                                23    19      4     893
                                              4 COMRAM    23    19      4
 ---------------------------------------------------------------------------------
 (1) _interruptsInit                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _bootAscensor                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _boot                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  4     4      0       0
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _boot
   _bootAscensor
   _interruptsInit
   _modeUp
     _dataPanelUp
       _sort
     _modeUpControl
       _dataPanelUp

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      C8      13       78.1%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C8      11       78.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C8       9       78.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      C8       7       78.1%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     2B      3B       1       46.8%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     35B      15        0.0%
DATA                 0      0     35B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Nov  9 10:24:30 2021

                                                                     l60 0A02  
                                                                     l53 0A1A  
                                                                     l62 09E8  
                                                                     l64 09FC  
                                                                     l56 0A26  
                                                                     l59 09E4  
                                                                     l83 0622  
                                                                     l75 04E8  
                                                                     l86 0628  
                                                                    l100 0836  
                                                                    l112 01AC  
                                                                    l122 0304  
                                                                    l106 0100  
                                                                    l140 08F0  
                                                                    l117 0258  
                                                                    l127 03F0  
                                                 __end_of_interruptsInit 0A2A  
                                                                    l137 08A4  
                                                         ??_bootAscensor 0005  
                                                                    l138 08BA  
                                                                    l146 092A  
                                                                    l147 096A  
                                                                    l148 094A  
                                                                    u310 045C  
                                                                    u311 0456  
                                                                    u240 09D4  
                                                                    u320 049A  
                                                                    u400 06CE  
                                                                    u241 09CE  
                                                                    u321 0494  
                                                                    u401 06C8  
                                                                    u250 09FA  
                                                                    u330 04E6  
                                                                    u410 0724  
                                                                    u251 09F4  
                                                                    u331 04E0  
                                                                    u411 071E  
                                                                    u340 0560  
                                                                    u420 0744  
                                                                    u500 026A  
                                                                    u341 055A  
                                                                    u421 073E  
                                                                    u501 0264  
                                                                    u350 05BE  
                                                                    u430 079A  
                                                                    u510 02D8  
                                                                    u351 05B8  
                                                                    u431 0794  
                                                                    u511 02D2  
                                                                    u360 0620  
                                                                    u440 07BA  
                                                                    u520 0316  
                                                                    u361 061A  
                                                                    u441 07B4  
                                                                    u521 0310  
                                                                    u450 0810  
                                                                    u370 063A  
                                                                    u530 0384  
                                                                    u451 080A  
                                                                    u371 0634  
                                                                    u531 037E  
                                                                    u380 0658  
                                                                    u460 0112  
                                                                    u540 0876  
                                                                    _ISR 0008  
                                                                    u381 0652  
                                                                    u461 010C  
                                                                    u541 0870  
                                                                    u390 06AE  
                                                                    u470 0176  
                                                                    u550 08B8  
                                                                    u391 06A8  
                                                                    u607 0198  
                                                                    u471 0170  
                                                                    u551 08B2  
                                                                    u480 01BE  
                                                                    u560 0916  
                                                                    u617 0244  
                                                                    u481 01B8  
                                                                    u561 0910  
                                                                    u490 022C  
                                                                    u570 093C  
                                                                    u627 02F0  
                                                                    u491 0226  
                                                                    u571 0936  
                                                                    u580 095C  
                                                                    u637 039C  
                                                                    u581 0956  
                                                                    u597 088A  
                                                                    _upF 0030  
                                                                    wreg 000FE8  
                                                                   ?_ISR 0001  
                                                                   l1040 0A0E  
                                                                   l1200 06B0  
                                                                   l1042 0A14  
                                                                   l1202 06D0  
                                                                   l1210 0712  
                                                                   l1044 0A20  
                                                                   l1220 0784  
                                                                   l1212 0726  
                                                                   l1204 06EA  
                                                                   l1300 02E0  
                                                                   l1038 0A0A  
                                                                   l1046 09C0  
                                                                   l1150 042E  
                                                                   l1142 03F8  
                                                                   l1230 07DE  
                                                                   l1214 0746  
                                                                   l1222 0788  
                                                                   l1206 06F2  
                                                                   l1310 031C  
                                                                   l1302 02E4  
                                                                   l1048 09D6  
                                                                   l1160 04B6  
                                                                   l1152 045E  
                                                                   l1144 0408  
                                                                   l1240 0822  
                                                                   l1232 07FA  
                                                                   l1224 079C  
                                                                   l1216 0760  
                                                                   l1208 070E  
                                                                   l1320 038C  
                                                                   l1312 0330  
                                                                   l1304 02E6  
                                                                   l1170 053E  
                                                                   l1162 04BE  
                                                                   l1146 0410  
                                                                   l1226 07BC  
                                                                   l1234 07FE  
                                                                   l1218 0768  
                                                                   l1322 0390  
                                                                   l1314 035E  
                                                                   l1306 02FE  
                                                                   l1250 0150  
                                                                   l1330 03B0  
                                                                   l1242 00FC  
                                                                   l1180 05C0  
                                                                   l1172 0562  
                                                                   l1156 0466  
                                                                   l1164 04C4  
                                                                   l1148 0422  
                                                                   l1236 0812  
                                                                   l1228 07D6  
                                                                   l1324 0392  
                                                                   l1316 0362  
                                                                   l1308 0318  
                                                                   l1260 0188  
                                                                   l1252 0154  
                                                                   l1244 0114  
                                                                   l1420 08E0  
                                                                   l1340 0878  
                                                                   l1182 05CC  
                                                                   l1174 057C  
                                                                   l1166 04F4  
                                                                   l1158 049C  
                                                                   l1238 081A  
                                                                   l1190 065A  
                                                                   l1422 03C8  
                                                                   l1326 03AA  
                                                                   l1318 0386  
                                                                   l1270 01C4  
                                                                   l1262 018C  
                                                                   l1254 0178  
                                                                   l1246 0116  
                                                                   l1350 089A  
                                                                   l1342 087A  
                                                                   l1184 05FA  
                                                                   l1176 0582  
                                                                   l1168 053A  
                                                                   l1192 0674  
                                                                   l1280 0234  
                                                                   l1272 01D8  
                                                                   l1264 018E  
                                                                   l1256 017E  
                                                                   l1248 0122  
                                                                   l1352 08BE  
                                                                   l1344 087E  
                                                                   l1336 083C  
                                                                   l1186 05FE  
                                                                   l1178 0586  
                                                                   l1194 067C  
                                                                   l1290 0270  
                                                                   l1282 0238  
                                                                   l1274 0206  
                                                                   l1266 01A6  
                                                                   l1258 0180  
                                                                   l1354 08C2  
                                                                   l1346 0880  
                                                                   l1338 0860  
                                                                   l1370 0918  
                                                                   l1362 08F6  
                                                                   l1196 0698  
                                                                   l1188 063C  
                                                                   l1292 0284  
                                                                   l1284 023A  
                                                                   l1276 020A  
                                                                   l1268 01C0  
                                                                   l1348 0898  
                                                                   l1356 08C8  
                                                                   l1372 0920  
                                                                   l1364 08FC  
                                                                   l1198 069C  
                                                                   l1294 02B2  
                                                                   l1286 0252  
                                                                   l1278 022E  
                                                                   l1374 093E  
                                                                   l1366 0900  
                                                                   l1296 02B6  
                                                                   l1288 026C  
                                                                   l1368 0904  
                                                                   l1298 02DA  
                                                                   l1378 095E  
                                                                   _LATD 000F8C  
                                                                   _boot 0A08  
                                                                   _main 08F6  
                                                                   fsr1h 000FE2  
                                                                   fsr2h 000FDA  
                                                                   fsr1l 000FE1  
                                                                   fsr2l 000FD9  
                                                                   _sort 03F6  
                                                                   btemp 003C  
                                                                   start 00F6  
                                                           ___param_bank 000000  
                                                                  ??_ISR 0001  
                                                      modeUpControl@cont 002C  
                                                                  ?_boot 0001  
                                                                  ?_main 0001  
                                                                  ?_sort 0005  
                                                        ?_interruptsInit 0001  
                                                                  i2l168 00E4  
                                                                  _PORTB 000F81  
                                                   __size_of_dataPanelUp 0214  
                                                                  _TRISA 000F92  
                                                                  _TRISB 000F93  
                                                                  _TRISC 000F94  
                                                                  _TRISD 000F95  
                                                                  _calls 003A  
                                                                  _downF 002E  
                                                                  _nowFL 0034  
                                                                  sort@h 001A  
                                                                  sort@j 0016  
                                                                  sort@k 0014  
                                                                  sort@p 0005  
                                                                  ttemp5 003D  
                                                                  ttemp6 0040  
                                                                  ttemp7 0044  
                                                                  status 000FD8  
                                                                  wtemp8 003D  
                                                        __initialization 0974  
                                                           __end_of_boot 0A1E  
                                                           __end_of_main 0974  
                                                           __end_of_sort 0626  
                                                     modeUpControl@i_484 0024  
                                                     modeUpControl@i_485 0026  
                                                     modeUpControl@i_486 0028  
                                                                 ??_boot 0005  
                                                                 ??_main 002C  
                                                                 ??_sort 0009  
                                                          __activetblptr 000002  
                                                                 _ADCON1 000FC1  
                                                                 i2l1402 0086  
                                                                 i2l1424 009C  
                                                                 i2l1390 0048  
                                                                 i2l1382 0014  
                                                                 i2l1384 0018  
                                                                 i2l1394 0068  
                                                                 i2l1386 0022  
                                                                 i2l1396 0072  
                                                                 i2l1388 003E  
                                                                 i2l1398 007C  
                                                   __end_of_bootAscensor 0A08  
                                                           sort@sizesMod 0012  
                                                                 _callFL 0036  
                                                                 _callsD 0038  
                                                                 _modeUp 083A  
                                                                 clear_0 097A  
                                                                 clear_1 0986  
                                                                 clear_2 0992  
                                                                 clear_3 099E  
                                                                 clear_4 09AA  
                                                                 _numUps 0032  
                                                                 isa$std 000001  
                                                                 tblptru 000FF8  
                                                 __size_of_modeUpControl 02FC  
                                                             __accesstop 0080  
                                                __end_of__initialization 09B0  
                                                          ___rparam_used 000001  
                                                         __pcstackCOMRAM 0001  
                                                             __pbssBANK1 0100  
                                                             __pbssBANK2 0200  
                                                             __pbssBANK3 0300  
                                                             __pbssBANK4 0400  
                                                          _modeUpControl 00FA  
                                                       ??_interruptsInit 0005  
                                                                ?_modeUp 0001  
                                                  __size_of_bootAscensor 004A  
                                                      dataPanelUp@tamano 001E  
                                                                __Hparam 0000  
                                                                __Lparam 0000  
                                                         ?_modeUpControl 0001  
                                                                __pcinit 0974  
                                                          ??_dataPanelUp 001C  
                                                        __size_of_modeUp 00BC  
                                                                __ramtop 0600  
                                                                __ptext0 08F6  
                                                                __ptext1 083A  
                                                                __ptext2 00FA  
                                                                __ptext3 0626  
                                                                __ptext4 03F6  
                                                                __ptext5 0A1E  
                                                                __ptext6 09BE  
                                                                __ptext7 0A08  
                                                           __size_of_ISR 00EC  
                                                           _bootAscensor 09BE  
                                                                _queueUp 0100  
                                                   end_of_initialization 09B0  
                                                          __Lmediumconst 0000  
                                                                postdec1 000FE5  
                                                                postdec2 000FDD  
                                                                postinc0 000FEE  
                                                                postinc1 000FE6  
                                                                postinc2 000FDE  
                                                                sort@pos 000E  
                                                              _PORTAbits 000F80  
                                                              _PORTBbits 000F81  
                                                              _PORTDbits 000F83  
                                                    __end_of_dataPanelUp 083A  
                                                        ??_modeUpControl 0020  
                                                         __end_of_modeUp 08F6  
                                                    start_initialization 0974  
                                                            __end_of_ISR 00F4  
                                                               ??_modeUp 002A  
                                                            _dataPanelUp 0626  
                                                            __pbssCOMRAM 002C  
                                                              _callsInUp 0300  
                                                              __pintcode 0008  
                                                               _LATCbits 000F8B  
                                                               _LATDbits 000F8C  
                                                               _RCONbits 000FD0  
                                                              _queueDown 0200  
                                                     dataPanelUp@UpCalls 001C  
                                                __size_of_interruptsInit 000C  
                                                               __Hrparam 0000  
                                                             sort@result 0400  
                                                               __Lrparam 0000  
                                                          __size_of_boot 0016  
                                                          __size_of_main 007E  
                                                          __size_of_sort 0230  
                                                  __end_of_modeUpControl 03F6  
                                                               isa$xinst 000000  
                                                               int$flags 003C  
                                                           ?_dataPanelUp 0001  
                                                         modeUpControl@i 0022  
                                                             _INTCONbits 000FF2  
                                                              sort@sizes 0007  
                                                               intlevel2 0A2A  
                                                               sort@temp 0018  
                                                               sort@nums 0010  
                                                          ?_bootAscensor 0001  
                                                         _interruptsInit 0A1E  
