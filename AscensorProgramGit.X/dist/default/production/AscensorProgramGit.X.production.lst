

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Nov 25 17:35:27 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    57                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    58                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    59                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    60  0000                     
    61                           ; Version 2.20
    62                           ; Generated 12/02/2020 GMT
    63                           ; 
    64                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    65                           ; All rights reserved.
    66                           ; 
    67                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    68                           ; 
    69                           ; Redistribution and use in source and binary forms, with or without modification, are
    70                           ; permitted provided that the following conditions are met:
    71                           ; 
    72                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    73                           ;        conditions and the following disclaimer.
    74                           ; 
    75                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    76                           ;        of conditions and the following disclaimer in the documentation and/or other
    77                           ;        materials provided with the distribution.
    78                           ; 
    79                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    80                           ;        software without specific prior written permission.
    81                           ; 
    82                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    83                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    84                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    85                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    86                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    87                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    88                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    89                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    90                           ; 
    91                           ; 
    92                           ; Code-generator required, PIC18F452 Definitions
    93                           ; 
    94                           ; SFR Addresses
    95  0000                     
    96                           	psect	idataBANK0
    97  0005C8                     __pidataBANK0:
    98                           	callstack 0
    99                           
   100                           ;initializer for _pLCD
   101  0005C8  01                 	db	1
   102                           
   103                           ;initializer for _BackLight_State
   104  0005C9  08                 	db	8
   105  0000                     _PORTAbits	set	3968
   106  0000                     _PORTDbits	set	3971
   107  0000                     _LATDbits	set	3980
   108  0000                     _LATCbits	set	3979
   109  0000                     _INTCONbits	set	4082
   110  0000                     _RCONbits	set	4048
   111  0000                     _PORTBbits	set	3969
   112  0000                     _TRISC	set	3988
   113  0000                     _TRISA	set	3986
   114  0000                     _TRISD	set	3989
   115  0000                     _TRISB	set	3987
   116  0000                     _ADCON1	set	4033
   117  0000                     _SSPBUF	set	4041
   118  0000                     _SSPADD	set	4040
   119  0000                     _SSPSTAT	set	4039
   120  0000                     _SSPCON2	set	4037
   121  0000                     _SSPCON1	set	4038
   122  0000                     _RCEN	set	32299
   123  0000                     _ACKSTAT	set	32302
   124  0000                     _SSPIF	set	31987
   125  0000                     _ACKEN	set	32300
   126  0000                     _ACKDT	set	32301
   127  0000                     _PEN	set	32298
   128  0000                     _RSEN	set	32297
   129  0000                     _SEN	set	32296
   130  0000                     _TRISC4	set	31908
   131  0000                     _TRISC3	set	31907
   132                           
   133                           	psect	mediumconst
   134  007E48                     __pmediumconst:
   135                           	callstack 0
   136  007E48  00                 	db	0
   137  007E49                     STR_8:
   138  007E49  44                 	db	68	;'D'
   139  007E4A  6F                 	db	111	;'o'
   140  007E4B  77                 	db	119	;'w'
   141  007E4C  6E                 	db	110	;'n'
   142  007E4D  3A                 	db	58	;':'
   143  007E4E  20                 	db	32
   144  007E4F  53                 	db	83	;'S'
   145  007E50  74                 	db	116	;'t'
   146  007E51  6F                 	db	111	;'o'
   147  007E52  70                 	db	112	;'p'
   148  007E53  20                 	db	32
   149  007E54  46                 	db	70	;'F'
   150  007E55  4C                 	db	76	;'L'
   151  007E56  31                 	db	49	;'1'
   152  007E57  00                 	db	0
   153  007E58                     STR_39:
   154  007E58  4D                 	db	77	;'M'
   155  007E59  6F                 	db	111	;'o'
   156  007E5A  76                 	db	118	;'v'
   157  007E5B  65                 	db	101	;'e'
   158  007E5C  2D                 	db	45
   159  007E5D  74                 	db	116	;'t'
   160  007E5E  6F                 	db	111	;'o'
   161  007E5F  20                 	db	32
   162  007E60  66                 	db	102	;'f'
   163  007E61  6C                 	db	108	;'l'
   164  007E62  6F                 	db	111	;'o'
   165  007E63  6F                 	db	111	;'o'
   166  007E64  72                 	db	114	;'r'
   167  007E65  31                 	db	49	;'1'
   168  007E66  00                 	db	0
   169  007E67                     STR_13:
   170  007E67  44                 	db	68	;'D'
   171  007E68  6F                 	db	111	;'o'
   172  007E69  77                 	db	119	;'w'
   173  007E6A  6E                 	db	110	;'n'
   174  007E6B  3A                 	db	58	;':'
   175  007E6C  20                 	db	32
   176  007E6D  53                 	db	83	;'S'
   177  007E6E  74                 	db	116	;'t'
   178  007E6F  6F                 	db	111	;'o'
   179  007E70  70                 	db	112	;'p'
   180  007E71  20                 	db	32
   181  007E72  46                 	db	70	;'F'
   182  007E73  4C                 	db	76	;'L'
   183  007E74  32                 	db	50	;'2'
   184  007E75  00                 	db	0
   185  007E76                     STR_40:
   186  007E76  4D                 	db	77	;'M'
   187  007E77  6F                 	db	111	;'o'
   188  007E78  76                 	db	118	;'v'
   189  007E79  65                 	db	101	;'e'
   190  007E7A  2D                 	db	45
   191  007E7B  74                 	db	116	;'t'
   192  007E7C  6F                 	db	111	;'o'
   193  007E7D  20                 	db	32
   194  007E7E  66                 	db	102	;'f'
   195  007E7F  6C                 	db	108	;'l'
   196  007E80  6F                 	db	111	;'o'
   197  007E81  6F                 	db	111	;'o'
   198  007E82  72                 	db	114	;'r'
   199  007E83  32                 	db	50	;'2'
   200  007E84  00                 	db	0
   201  007E85                     STR_19:
   202  007E85  44                 	db	68	;'D'
   203  007E86  6F                 	db	111	;'o'
   204  007E87  77                 	db	119	;'w'
   205  007E88  6E                 	db	110	;'n'
   206  007E89  3A                 	db	58	;':'
   207  007E8A  20                 	db	32
   208  007E8B  53                 	db	83	;'S'
   209  007E8C  74                 	db	116	;'t'
   210  007E8D  6F                 	db	111	;'o'
   211  007E8E  70                 	db	112	;'p'
   212  007E8F  20                 	db	32
   213  007E90  46                 	db	70	;'F'
   214  007E91  4C                 	db	76	;'L'
   215  007E92  33                 	db	51	;'3'
   216  007E93  00                 	db	0
   217  007E94                     STR_41:
   218  007E94  4D                 	db	77	;'M'
   219  007E95  6F                 	db	111	;'o'
   220  007E96  76                 	db	118	;'v'
   221  007E97  65                 	db	101	;'e'
   222  007E98  2D                 	db	45
   223  007E99  74                 	db	116	;'t'
   224  007E9A  6F                 	db	111	;'o'
   225  007E9B  20                 	db	32
   226  007E9C  66                 	db	102	;'f'
   227  007E9D  6C                 	db	108	;'l'
   228  007E9E  6F                 	db	111	;'o'
   229  007E9F  6F                 	db	111	;'o'
   230  007EA0  72                 	db	114	;'r'
   231  007EA1  33                 	db	51	;'3'
   232  007EA2  00                 	db	0
   233  007EA3                     STR_24:
   234  007EA3  44                 	db	68	;'D'
   235  007EA4  6F                 	db	111	;'o'
   236  007EA5  77                 	db	119	;'w'
   237  007EA6  6E                 	db	110	;'n'
   238  007EA7  3A                 	db	58	;':'
   239  007EA8  20                 	db	32
   240  007EA9  53                 	db	83	;'S'
   241  007EAA  74                 	db	116	;'t'
   242  007EAB  6F                 	db	111	;'o'
   243  007EAC  70                 	db	112	;'p'
   244  007EAD  20                 	db	32
   245  007EAE  46                 	db	70	;'F'
   246  007EAF  4C                 	db	76	;'L'
   247  007EB0  34                 	db	52	;'4'
   248  007EB1  00                 	db	0
   249  007EB2                     STR_42:
   250  007EB2  4D                 	db	77	;'M'
   251  007EB3  6F                 	db	111	;'o'
   252  007EB4  76                 	db	118	;'v'
   253  007EB5  65                 	db	101	;'e'
   254  007EB6  2D                 	db	45
   255  007EB7  74                 	db	116	;'t'
   256  007EB8  6F                 	db	111	;'o'
   257  007EB9  20                 	db	32
   258  007EBA  66                 	db	102	;'f'
   259  007EBB  6C                 	db	108	;'l'
   260  007EBC  6F                 	db	111	;'o'
   261  007EBD  6F                 	db	111	;'o'
   262  007EBE  72                 	db	114	;'r'
   263  007EBF  34                 	db	52	;'4'
   264  007EC0  00                 	db	0
   265  007EC1                     STR_30:
   266  007EC1  4E                 	db	78	;'N'
   267  007EC2  6F                 	db	111	;'o'
   268  007EC3  20                 	db	32
   269  007EC4  63                 	db	99	;'c'
   270  007EC5  61                 	db	97	;'a'
   271  007EC6  6C                 	db	108	;'l'
   272  007EC7  6C                 	db	108	;'l'
   273  007EC8  73                 	db	115	;'s'
   274  007EC9  49                 	db	73	;'I'
   275  007ECA  6E                 	db	110	;'n'
   276  007ECB  44                 	db	68	;'D'
   277  007ECC  6F                 	db	111	;'o'
   278  007ECD  77                 	db	119	;'w'
   279  007ECE  6E                 	db	110	;'n'
   280  007ECF  00                 	db	0
   281  007ED0                     STR_1:
   282  007ED0  42                 	db	66	;'B'
   283  007ED1  74                 	db	116	;'t'
   284  007ED2  6E                 	db	110	;'n'
   285  007ED3  50                 	db	80	;'P'
   286  007ED4  6E                 	db	110	;'n'
   287  007ED5  31                 	db	49	;'1'
   288  007ED6  20                 	db	32
   289  007ED7  50                 	db	80	;'P'
   290  007ED8  72                 	db	114	;'r'
   291  007ED9  65                 	db	101	;'e'
   292  007EDA  73                 	db	115	;'s'
   293  007EDB  73                 	db	115	;'s'
   294  007EDC  21                 	db	33
   295  007EDD  00                 	db	0
   296  007EDE                     STR_2:
   297  007EDE  42                 	db	66	;'B'
   298  007EDF  74                 	db	116	;'t'
   299  007EE0  6E                 	db	110	;'n'
   300  007EE1  50                 	db	80	;'P'
   301  007EE2  6E                 	db	110	;'n'
   302  007EE3  32                 	db	50	;'2'
   303  007EE4  20                 	db	32
   304  007EE5  50                 	db	80	;'P'
   305  007EE6  72                 	db	114	;'r'
   306  007EE7  65                 	db	101	;'e'
   307  007EE8  73                 	db	115	;'s'
   308  007EE9  73                 	db	115	;'s'
   309  007EEA  21                 	db	33
   310  007EEB  00                 	db	0
   311  007EEC                     STR_3:
   312  007EEC  42                 	db	66	;'B'
   313  007EED  74                 	db	116	;'t'
   314  007EEE  6E                 	db	110	;'n'
   315  007EEF  50                 	db	80	;'P'
   316  007EF0  6E                 	db	110	;'n'
   317  007EF1  33                 	db	51	;'3'
   318  007EF2  20                 	db	32
   319  007EF3  50                 	db	80	;'P'
   320  007EF4  72                 	db	114	;'r'
   321  007EF5  65                 	db	101	;'e'
   322  007EF6  73                 	db	115	;'s'
   323  007EF7  73                 	db	115	;'s'
   324  007EF8  21                 	db	33
   325  007EF9  00                 	db	0
   326  007EFA                     STR_4:
   327  007EFA  42                 	db	66	;'B'
   328  007EFB  74                 	db	116	;'t'
   329  007EFC  6E                 	db	110	;'n'
   330  007EFD  50                 	db	80	;'P'
   331  007EFE  6E                 	db	110	;'n'
   332  007EFF  34                 	db	52	;'4'
   333  007F00  20                 	db	32
   334  007F01  50                 	db	80	;'P'
   335  007F02  72                 	db	114	;'r'
   336  007F03  65                 	db	101	;'e'
   337  007F04  73                 	db	115	;'s'
   338  007F05  73                 	db	115	;'s'
   339  007F06  21                 	db	33
   340  007F07  00                 	db	0
   341  007F08                     STR_52:
   342  007F08  4D                 	db	77	;'M'
   343  007F09  6F                 	db	111	;'o'
   344  007F0A  64                 	db	100	;'d'
   345  007F0B  65                 	db	101	;'e'
   346  007F0C  20                 	db	32
   347  007F0D  64                 	db	100	;'d'
   348  007F0E  6F                 	db	111	;'o'
   349  007F0F  77                 	db	119	;'w'
   350  007F10  6E                 	db	110	;'n'
   351  007F11  20                 	db	32
   352  007F12  45                 	db	69	;'E'
   353  007F13  4E                 	db	78	;'N'
   354  007F14  44                 	db	68	;'D'
   355  007F15  00                 	db	0
   356  007F16                     STR_15:
   357  007F16  4D                 	db	77	;'M'
   358  007F17  6F                 	db	111	;'o'
   359  007F18  64                 	db	100	;'d'
   360  007F19  65                 	db	101	;'e'
   361  007F1A  20                 	db	32
   362  007F1B  44                 	db	68	;'D'
   363  007F1C  6F                 	db	111	;'o'
   364  007F1D  77                 	db	119	;'w'
   365  007F1E  6E                 	db	110	;'n'
   366  007F1F  20                 	db	32
   367  007F20  4F                 	db	79	;'O'
   368  007F21  46                 	db	70	;'F'
   369  007F22  46                 	db	70	;'F'
   370  007F23  00                 	db	0
   371  007F24                     STR_27:
   372  007F24  45                 	db	69	;'E'
   373  007F25  6E                 	db	110	;'n'
   374  007F26  64                 	db	100	;'d'
   375  007F27  20                 	db	32
   376  007F28  44                 	db	68	;'D'
   377  007F29  6F                 	db	111	;'o'
   378  007F2A  77                 	db	119	;'w'
   379  007F2B  6E                 	db	110	;'n'
   380  007F2C  20                 	db	32
   381  007F2D  4D                 	db	77	;'M'
   382  007F2E  6F                 	db	111	;'o'
   383  007F2F  64                 	db	100	;'d'
   384  007F30  65                 	db	101	;'e'
   385  007F31  00                 	db	0
   386  007F32                     STR_5:
   387  007F32  55                 	db	85	;'U'
   388  007F33  70                 	db	112	;'p'
   389  007F34  3A                 	db	58	;':'
   390  007F35  20                 	db	32
   391  007F36  53                 	db	83	;'S'
   392  007F37  74                 	db	116	;'t'
   393  007F38  6F                 	db	111	;'o'
   394  007F39  70                 	db	112	;'p'
   395  007F3A  20                 	db	32
   396  007F3B  46                 	db	70	;'F'
   397  007F3C  4C                 	db	76	;'L'
   398  007F3D  31                 	db	49	;'1'
   399  007F3E  00                 	db	0
   400  007F3F                     STR_10:
   401  007F3F  55                 	db	85	;'U'
   402  007F40  70                 	db	112	;'p'
   403  007F41  3A                 	db	58	;':'
   404  007F42  20                 	db	32
   405  007F43  53                 	db	83	;'S'
   406  007F44  74                 	db	116	;'t'
   407  007F45  6F                 	db	111	;'o'
   408  007F46  70                 	db	112	;'p'
   409  007F47  20                 	db	32
   410  007F48  46                 	db	70	;'F'
   411  007F49  4C                 	db	76	;'L'
   412  007F4A  32                 	db	50	;'2'
   413  007F4B  00                 	db	0
   414  007F4C                     STR_16:
   415  007F4C  55                 	db	85	;'U'
   416  007F4D  70                 	db	112	;'p'
   417  007F4E  3A                 	db	58	;':'
   418  007F4F  20                 	db	32
   419  007F50  53                 	db	83	;'S'
   420  007F51  74                 	db	116	;'t'
   421  007F52  6F                 	db	111	;'o'
   422  007F53  70                 	db	112	;'p'
   423  007F54  20                 	db	32
   424  007F55  46                 	db	70	;'F'
   425  007F56  4C                 	db	76	;'L'
   426  007F57  33                 	db	51	;'3'
   427  007F58  00                 	db	0
   428  007F59                     STR_22:
   429  007F59  55                 	db	85	;'U'
   430  007F5A  70                 	db	112	;'p'
   431  007F5B  3A                 	db	58	;':'
   432  007F5C  20                 	db	32
   433  007F5D  53                 	db	83	;'S'
   434  007F5E  74                 	db	116	;'t'
   435  007F5F  6F                 	db	111	;'o'
   436  007F60  70                 	db	112	;'p'
   437  007F61  20                 	db	32
   438  007F62  46                 	db	70	;'F'
   439  007F63  4C                 	db	76	;'L'
   440  007F64  34                 	db	52	;'4'
   441  007F65  00                 	db	0
   442  007F66                     STR_46:
   443  007F66  4D                 	db	77	;'M'
   444  007F67  6F                 	db	111	;'o'
   445  007F68  64                 	db	100	;'d'
   446  007F69  65                 	db	101	;'e'
   447  007F6A  20                 	db	32
   448  007F6B  75                 	db	117	;'u'
   449  007F6C  70                 	db	112	;'p'
   450  007F6D  20                 	db	32
   451  007F6E  45                 	db	69	;'E'
   452  007F6F  4E                 	db	78	;'N'
   453  007F70  44                 	db	68	;'D'
   454  007F71  00                 	db	0
   455  007F72                     STR_7:
   456  007F72  4D                 	db	77	;'M'
   457  007F73  6F                 	db	111	;'o'
   458  007F74  64                 	db	100	;'d'
   459  007F75  65                 	db	101	;'e'
   460  007F76  20                 	db	32
   461  007F77  55                 	db	85	;'U'
   462  007F78  70                 	db	112	;'p'
   463  007F79  20                 	db	32
   464  007F7A  4F                 	db	79	;'O'
   465  007F7B  46                 	db	70	;'F'
   466  007F7C  46                 	db	70	;'F'
   467  007F7D  00                 	db	0
   468  007F7E                     STR_35:
   469  007F7E  5B                 	db	91	;'['
   470  007F7F  4D                 	db	77	;'M'
   471  007F80  6F                 	db	111	;'o'
   472  007F81  64                 	db	100	;'d'
   473  007F82  65                 	db	101	;'e'
   474  007F83  20                 	db	32
   475  007F84  44                 	db	68	;'D'
   476  007F85  6F                 	db	111	;'o'
   477  007F86  77                 	db	119	;'w'
   478  007F87  6E                 	db	110	;'n'
   479  007F88  5D                 	db	93	;']'
   480  007F89  00                 	db	0
   481  007F8A                     STR_44:
   482  007F8A  4D                 	db	77	;'M'
   483  007F8B  6F                 	db	111	;'o'
   484  007F8C  64                 	db	100	;'d'
   485  007F8D  6F                 	db	111	;'o'
   486  007F8E  20                 	db	32
   487  007F8F  45                 	db	69	;'E'
   488  007F90  73                 	db	115	;'s'
   489  007F91  70                 	db	112	;'p'
   490  007F92  65                 	db	101	;'e'
   491  007F93  72                 	db	114	;'r'
   492  007F94  61                 	db	97	;'a'
   493  007F95  00                 	db	0
   494  007F96                     STR_31:
   495  007F96  45                 	db	69	;'E'
   496  007F97  6E                 	db	110	;'n'
   497  007F98  64                 	db	100	;'d'
   498  007F99  20                 	db	32
   499  007F9A  55                 	db	85	;'U'
   500  007F9B  70                 	db	112	;'p'
   501  007F9C  20                 	db	32
   502  007F9D  4D                 	db	77	;'M'
   503  007F9E  6F                 	db	111	;'o'
   504  007F9F  64                 	db	100	;'d'
   505  007FA0  65                 	db	101	;'e'
   506  007FA1  00                 	db	0
   507  007FA2                     STR_51:
   508  007FA2  62                 	db	98	;'b'
   509  007FA3  74                 	db	116	;'t'
   510  007FA4  6E                 	db	110	;'n'
   511  007FA5  20                 	db	32
   512  007FA6  64                 	db	100	;'d'
   513  007FA7  6F                 	db	111	;'o'
   514  007FA8  77                 	db	119	;'w'
   515  007FA9  6E                 	db	110	;'n'
   516  007FAA  20                 	db	32
   517  007FAB  32                 	db	50	;'2'
   518  007FAC  00                 	db	0
   519  007FAD                     STR_53:
   520  007FAD  62                 	db	98	;'b'
   521  007FAE  74                 	db	116	;'t'
   522  007FAF  6E                 	db	110	;'n'
   523  007FB0  20                 	db	32
   524  007FB1  64                 	db	100	;'d'
   525  007FB2  6F                 	db	111	;'o'
   526  007FB3  77                 	db	119	;'w'
   527  007FB4  6E                 	db	110	;'n'
   528  007FB5  20                 	db	32
   529  007FB6  33                 	db	51	;'3'
   530  007FB7  00                 	db	0
   531  007FB8                     STR_55:
   532  007FB8  62                 	db	98	;'b'
   533  007FB9  74                 	db	116	;'t'
   534  007FBA  6E                 	db	110	;'n'
   535  007FBB  20                 	db	32
   536  007FBC  64                 	db	100	;'d'
   537  007FBD  6F                 	db	111	;'o'
   538  007FBE  77                 	db	119	;'w'
   539  007FBF  6E                 	db	110	;'n'
   540  007FC0  20                 	db	32
   541  007FC1  34                 	db	52	;'4'
   542  007FC2  00                 	db	0
   543  007FC3                     STR_43:
   544  007FC3  49                 	db	73	;'I'
   545  007FC4  6E                 	db	110	;'n'
   546  007FC5  63                 	db	99	;'c'
   547  007FC6  69                 	db	105	;'i'
   548  007FC7  61                 	db	97	;'a'
   549  007FC8  6E                 	db	110	;'n'
   550  007FC9  64                 	db	100	;'d'
   551  007FCA  6F                 	db	111	;'o'
   552  007FCB  21                 	db	33
   553  007FCC  00                 	db	0
   554  007FCD                     STR_33:
   555  007FCD  5B                 	db	91	;'['
   556  007FCE  4D                 	db	77	;'M'
   557  007FCF  6F                 	db	111	;'o'
   558  007FD0  64                 	db	100	;'d'
   559  007FD1  65                 	db	101	;'e'
   560  007FD2  20                 	db	32
   561  007FD3  55                 	db	85	;'U'
   562  007FD4  70                 	db	112	;'p'
   563  007FD5  5D                 	db	93	;']'
   564  007FD6  00                 	db	0
   565  007FD7                     STR_32:
   566  007FD7  63                 	db	99	;'c'
   567  007FD8  61                 	db	97	;'a'
   568  007FD9  6C                 	db	108	;'l'
   569  007FDA  6C                 	db	108	;'l'
   570  007FDB  73                 	db	115	;'s'
   571  007FDC  49                 	db	73	;'I'
   572  007FDD  6E                 	db	110	;'n'
   573  007FDE  55                 	db	85	;'U'
   574  007FDF  70                 	db	112	;'p'
   575  007FE0  00                 	db	0
   576  007FE1                     STR_45:
   577  007FE1  62                 	db	98	;'b'
   578  007FE2  74                 	db	116	;'t'
   579  007FE3  6E                 	db	110	;'n'
   580  007FE4  20                 	db	32
   581  007FE5  75                 	db	117	;'u'
   582  007FE6  70                 	db	112	;'p'
   583  007FE7  20                 	db	32
   584  007FE8  31                 	db	49	;'1'
   585  007FE9  00                 	db	0
   586  007FEA                     STR_47:
   587  007FEA  62                 	db	98	;'b'
   588  007FEB  74                 	db	116	;'t'
   589  007FEC  6E                 	db	110	;'n'
   590  007FED  20                 	db	32
   591  007FEE  75                 	db	117	;'u'
   592  007FEF  70                 	db	112	;'p'
   593  007FF0  20                 	db	32
   594  007FF1  32                 	db	50	;'2'
   595  007FF2  00                 	db	0
   596  007FF3                     STR_49:
   597  007FF3  62                 	db	98	;'b'
   598  007FF4  74                 	db	116	;'t'
   599  007FF5  6E                 	db	110	;'n'
   600  007FF6  20                 	db	32
   601  007FF7  75                 	db	117	;'u'
   602  007FF8  70                 	db	112	;'p'
   603  007FF9  20                 	db	32
   604  007FFA  33                 	db	51	;'3'
   605  007FFB  00                 	db	0
   606  007FFC                     STR_6:
   607  007FFC  25                 	db	37
   608  007FFD  64                 	db	100	;'d'
   609  007FFE  00                 	db	0
   610  007FFF  00                 	db	0	; dummy byte at the end
   611  0000                     
   612                           ; #config settings
   613                           
   614                           	psect	cinit
   615  000974                     __pcinit:
   616                           	callstack 0
   617  000974                     start_initialization:
   618                           	callstack 0
   619  000974                     __initialization:
   620                           	callstack 0
   621                           
   622                           ; Initialize objects allocated to BANK0 (2 bytes)
   623                           ; load TBLPTR registers with __pidataBANK0
   624  000974  0EC8               	movlw	low __pidataBANK0
   625  000976  6EF6               	movwf	tblptrl,c
   626  000978  0E05               	movlw	high __pidataBANK0
   627  00097A  6EF7               	movwf	tblptrh,c
   628  00097C  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   629  00097E  6EF8               	movwf	tblptru,c
   630  000980  0009               	tblrd		*+	;fetch initializer
   631  000982  CFF5 F0E3          	movff	tablat,__pdataBANK0
   632  000986  0009               	tblrd		*+	;fetch initializer
   633  000988  CFF5 F0E4          	movff	tablat,__pdataBANK0+1
   634                           
   635                           ; Clear objects allocated to BANK5 (200 bytes)
   636  00098C  EE05  F000         	lfsr	0,__pbssBANK5
   637  000990  0EC8               	movlw	200
   638  000992                     clear_0:
   639  000992  6AEE               	clrf	postinc0,c
   640  000994  06E8               	decf	wreg,f,c
   641  000996  E1FD               	bnz	clear_0
   642                           
   643                           ; Clear objects allocated to BANK4 (200 bytes)
   644  000998  EE04  F000         	lfsr	0,__pbssBANK4
   645  00099C  0EC8               	movlw	200
   646  00099E                     clear_1:
   647  00099E  6AEE               	clrf	postinc0,c
   648  0009A0  06E8               	decf	wreg,f,c
   649  0009A2  E1FD               	bnz	clear_1
   650                           
   651                           ; Clear objects allocated to BANK3 (200 bytes)
   652  0009A4  EE03  F000         	lfsr	0,__pbssBANK3
   653  0009A8  0EC8               	movlw	200
   654  0009AA                     clear_2:
   655  0009AA  6AEE               	clrf	postinc0,c
   656  0009AC  06E8               	decf	wreg,f,c
   657  0009AE  E1FD               	bnz	clear_2
   658                           
   659                           ; Clear objects allocated to BANK2 (200 bytes)
   660  0009B0  EE02  F000         	lfsr	0,__pbssBANK2
   661  0009B4  0EC8               	movlw	200
   662  0009B6                     clear_3:
   663  0009B6  6AEE               	clrf	postinc0,c
   664  0009B8  06E8               	decf	wreg,f,c
   665  0009BA  E1FD               	bnz	clear_3
   666                           
   667                           ; Clear objects allocated to BANK1 (36 bytes)
   668  0009BC  EE01  F0D6         	lfsr	0,__pbssBANK1
   669  0009C0  0E24               	movlw	36
   670  0009C2                     clear_4:
   671  0009C2  6AEE               	clrf	postinc0,c
   672  0009C4  06E8               	decf	wreg,f,c
   673  0009C6  E1FD               	bnz	clear_4
   674                           
   675                           ; Clear objects allocated to BANK0 (63 bytes)
   676  0009C8  EE00  F080         	lfsr	0,__pbssBANK0
   677  0009CC  0E3F               	movlw	63
   678  0009CE                     clear_5:
   679  0009CE  6AEE               	clrf	postinc0,c
   680  0009D0  06E8               	decf	wreg,f,c
   681  0009D2  E1FD               	bnz	clear_5
   682                           
   683                           ; Clear objects allocated to COMRAM (5 bytes)
   684  0009D4  6A7F               	clrf	(__pbssCOMRAM+4)& (0+255),c
   685  0009D6  6A7E               	clrf	(__pbssCOMRAM+3)& (0+255),c
   686  0009D8  6A7D               	clrf	(__pbssCOMRAM+2)& (0+255),c
   687  0009DA  6A7C               	clrf	(__pbssCOMRAM+1)& (0+255),c
   688  0009DC  6A7B               	clrf	__pbssCOMRAM& (0+255),c
   689  0009DE                     end_of_initialization:
   690                           	callstack 0
   691  0009DE                     __end_of__initialization:
   692                           	callstack 0
   693  0009DE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   694  0009E0  6EF8               	movwf	tblptru,c
   695  0009E2  0100               	movlb	0
   696  0009E4  EF32  F011         	goto	_main	;jump to C main() function
   697                           
   698                           	psect	bssCOMRAM
   699  00007B                     __pbssCOMRAM:
   700                           	callstack 0
   701  00007B                     _tasksUp:
   702                           	callstack 0
   703  00007B                     	ds	2
   704  00007D                     _tasksDown:
   705                           	callstack 0
   706  00007D                     	ds	2
   707  00007F                     _RS:
   708                           	callstack 0
   709  00007F                     	ds	1
   710                           
   711                           	psect	bssBANK0
   712  000080                     __pbssBANK0:
   713                           	callstack 0
   714  000080                     _nout:
   715                           	callstack 0
   716  000080                     	ds	2
   717  000082                     _width:
   718                           	callstack 0
   719  000082                     	ds	2
   720  000084                     _prec:
   721                           	callstack 0
   722  000084                     	ds	2
   723  000086                     _flags:
   724                           	callstack 0
   725  000086                     	ds	2
   726  000088                     _from_down_change:
   727                           	callstack 0
   728  000088                     	ds	2
   729  00008A                     _from_up_change:
   730                           	callstack 0
   731  00008A                     	ds	2
   732  00008C                     _modeDown_F:
   733                           	callstack 0
   734  00008C                     	ds	2
   735  00008E                     _prevFL:
   736                           	callstack 0
   737  00008E                     	ds	2
   738  000090                     _call_init:
   739                           	callstack 0
   740  000090                     	ds	2
   741  000092                     _callsD:
   742                           	callstack 0
   743  000092                     	ds	2
   744  000094                     _callsU:
   745                           	callstack 0
   746  000094                     	ds	2
   747  000096                     _i2c_add:
   748                           	callstack 0
   749  000096                     	ds	1
   750  000097                     _buffer:
   751                           	callstack 0
   752  000097                     	ds	40
   753                           
   754                           	psect	dataBANK0
   755  0000E3                     __pdataBANK0:
   756                           	callstack 0
   757  0000E3                     _pLCD:
   758                           	callstack 0
   759  0000E3                     	ds	1
   760  0000E4                     _BackLight_State:
   761                           	callstack 0
   762  0000E4                     	ds	1
   763                           
   764                           	psect	bssBANK1
   765  0001D6                     __pbssBANK1:
   766                           	callstack 0
   767  0001D6                     _modeUp_F:
   768                           	callstack 0
   769  0001D6                     	ds	2
   770  0001D8                     _nowFL:
   771                           	callstack 0
   772  0001D8                     	ds	2
   773  0001DA                     _dbuf:
   774                           	callstack 0
   775  0001DA                     	ds	32
   776                           
   777                           	psect	bssBANK2
   778  000200                     __pbssBANK2:
   779                           	callstack 0
   780  000200                     _queueUp:
   781                           	callstack 0
   782  000200                     	ds	200
   783                           
   784                           	psect	bssBANK3
   785  000300                     __pbssBANK3:
   786                           	callstack 0
   787  000300                     _queueDown:
   788                           	callstack 0
   789  000300                     	ds	200
   790                           
   791                           	psect	bssBANK4
   792  000400                     __pbssBANK4:
   793                           	callstack 0
   794  000400                     _callsInUp:
   795                           	callstack 0
   796  000400                     	ds	200
   797                           
   798                           	psect	bssBANK5
   799  000500                     __pbssBANK5:
   800                           	callstack 0
   801  000500                     _callsInDown:
   802                           	callstack 0
   803  000500                     	ds	200
   804                           
   805                           	psect	cstackBANK1
   806  000100                     __pcstackBANK1:
   807                           	callstack 0
   808  000100                     sort@result:
   809                           	callstack 0
   810  000100                     sort_down@result:
   811                           	callstack 0
   812                           
   813                           ; 200 bytes @ 0x0
   814  000100                     	ds	200
   815  0001C8                     sort@pos:
   816                           	callstack 0
   817  0001C8                     sort_down@pos:
   818                           	callstack 0
   819                           
   820                           ; 2 bytes @ 0xC8
   821  0001C8                     	ds	2
   822  0001CA                     sort@nums:
   823                           	callstack 0
   824  0001CA                     sort_down@nums:
   825                           	callstack 0
   826                           
   827                           ; 2 bytes @ 0xCA
   828  0001CA                     	ds	2
   829  0001CC                     sort@sizesMod:
   830                           	callstack 0
   831  0001CC                     sort_down@sizesMod:
   832                           	callstack 0
   833                           
   834                           ; 2 bytes @ 0xCC
   835  0001CC                     	ds	2
   836  0001CE                     sort@k:
   837                           	callstack 0
   838  0001CE                     sort_down@k:
   839                           	callstack 0
   840                           
   841                           ; 2 bytes @ 0xCE
   842  0001CE                     	ds	2
   843  0001D0                     sort@j:
   844                           	callstack 0
   845  0001D0                     sort_down@j:
   846                           	callstack 0
   847                           
   848                           ; 2 bytes @ 0xD0
   849  0001D0                     	ds	2
   850  0001D2                     sort@temp:
   851                           	callstack 0
   852  0001D2                     sort_down@temp:
   853                           	callstack 0
   854                           
   855                           ; 2 bytes @ 0xD2
   856  0001D2                     	ds	2
   857  0001D4                     sort@h:
   858                           	callstack 0
   859  0001D4                     sort_down@h:
   860                           	callstack 0
   861                           
   862                           ; 2 bytes @ 0xD4
   863  0001D4                     	ds	2
   864                           
   865                           	psect	cstackBANK0
   866  0000BF                     __pcstackBANK0:
   867                           	callstack 0
   868  0000BF                     controlCalls@i_1:
   869                           	callstack 0
   870                           
   871                           ; 2 bytes @ 0x0
   872  0000BF                     	ds	2
   873  0000C1                     controlCalls@i_2:
   874                           	callstack 0
   875                           
   876                           ; 2 bytes @ 0x2
   877  0000C1                     	ds	2
   878  0000C3                     controlCalls@i_3:
   879                           	callstack 0
   880                           
   881                           ; 2 bytes @ 0x4
   882  0000C3                     	ds	2
   883  0000C5                     controlCalls@i_4:
   884                           	callstack 0
   885                           
   886                           ; 2 bytes @ 0x6
   887  0000C5                     	ds	2
   888  0000C7                     controlCalls@i_5:
   889                           	callstack 0
   890                           
   891                           ; 2 bytes @ 0x8
   892  0000C7                     	ds	2
   893  0000C9                     controlCalls@i_6:
   894                           	callstack 0
   895                           
   896                           ; 2 bytes @ 0xA
   897  0000C9                     	ds	2
   898  0000CB                     controlCalls@i_7:
   899                           	callstack 0
   900                           
   901                           ; 2 bytes @ 0xC
   902  0000CB                     	ds	2
   903  0000CD                     controlCalls@i_8:
   904                           	callstack 0
   905                           
   906                           ; 2 bytes @ 0xE
   907  0000CD                     	ds	2
   908  0000CF                     controlCalls@i1:
   909                           	callstack 0
   910                           
   911                           ; 2 bytes @ 0x10
   912  0000CF                     	ds	2
   913  0000D1                     controlCalls@i1_616:
   914                           	callstack 0
   915                           
   916                           ; 2 bytes @ 0x12
   917  0000D1                     	ds	2
   918  0000D3                     controlCalls@i1_620:
   919                           	callstack 0
   920                           
   921                           ; 2 bytes @ 0x14
   922  0000D3                     	ds	2
   923  0000D5                     controlCalls@i1_625:
   924                           	callstack 0
   925                           
   926                           ; 2 bytes @ 0x16
   927  0000D5                     	ds	2
   928  0000D7                     controlCalls@i1_630:
   929                           	callstack 0
   930                           
   931                           ; 2 bytes @ 0x18
   932  0000D7                     	ds	2
   933  0000D9                     controlCalls@i1_635:
   934                           	callstack 0
   935                           
   936                           ; 2 bytes @ 0x1A
   937  0000D9                     	ds	2
   938  0000DB                     controlCalls@i1_640:
   939                           	callstack 0
   940                           
   941                           ; 2 bytes @ 0x1C
   942  0000DB                     	ds	2
   943  0000DD                     controlCalls@i1_644:
   944                           	callstack 0
   945                           
   946                           ; 2 bytes @ 0x1E
   947  0000DD                     	ds	2
   948  0000DF                     selectionMode@mode_s:
   949                           	callstack 0
   950                           
   951                           ; 2 bytes @ 0x20
   952  0000DF                     	ds	2
   953  0000E1                     modeControl@select_mode:
   954                           	callstack 0
   955                           
   956                           ; 2 bytes @ 0x22
   957  0000E1                     	ds	2
   958                           
   959                           	psect	cstackCOMRAM
   960  000001                     __pcstackCOMRAM:
   961                           	callstack 0
   962  000001                     ??_I2C_Master_Wait:
   963  000001                     ??_bootAscensor:
   964  000001                     ?_noRepeat:
   965                           	callstack 0
   966  000001                     ?_strlen:
   967                           	callstack 0
   968  000001                     ?___aodiv:
   969                           	callstack 0
   970  000001                     ?___aomod:
   971                           	callstack 0
   972  000001                     noRepeat@po:
   973                           	callstack 0
   974  000001                     sort@p:
   975                           	callstack 0
   976  000001                     sort_down@p:
   977                           	callstack 0
   978  000001                     fputc@c:
   979                           	callstack 0
   980  000001                     strlen@s:
   981                           	callstack 0
   982  000001                     ___aodiv@dividend:
   983                           	callstack 0
   984  000001                     ___aomod@dividend:
   985                           	callstack 0
   986                           
   987                           ; 8 bytes @ 0x0
   988  000001                     	ds	1
   989  000002                     I2C_Master_Write@data:
   990                           	callstack 0
   991                           
   992                           ; 1 bytes @ 0x1
   993  000002                     	ds	1
   994  000003                     IO_Expander_Write@Data:
   995                           	callstack 0
   996  000003                     noRepeat@sixes:
   997                           	callstack 0
   998  000003                     sort@sizes:
   999                           	callstack 0
  1000  000003                     sort_down@sizes:
  1001                           	callstack 0
  1002  000003                     fputc@fp:
  1003                           	callstack 0
  1004  000003                     strlen@a:
  1005                           	callstack 0
  1006                           
  1007                           ; 2 bytes @ 0x2
  1008  000003                     	ds	1
  1009  000004                     LCD_Write_4Bit@Nibble:
  1010                           	callstack 0
  1011                           
  1012                           ; 1 bytes @ 0x3
  1013  000004                     	ds	1
  1014  000005                     ??_sort:
  1015  000005                     ??_noRepeat:
  1016  000005                     ??_fputc:
  1017  000005                     ??_sort_down:
  1018  000005                     LCD_CMD@CMD:
  1019                           	callstack 0
  1020  000005                     LCD_Write_Char@Data:
  1021                           	callstack 0
  1022                           
  1023                           ; 1 bytes @ 0x4
  1024  000005                     	ds	1
  1025  000006                     ??_LCD_Init:
  1026  000006                     LCD_Set_Cursor@COL:
  1027                           	callstack 0
  1028  000006                     LCD_Write_String@Str:
  1029                           	callstack 0
  1030                           
  1031                           ; 2 bytes @ 0x5
  1032  000006                     	ds	1
  1033  000007                     ??_LCD_Set_Cursor:
  1034                           
  1035                           ; 1 bytes @ 0x6
  1036  000007                     	ds	1
  1037  000008                     ??_LCD_Write_String:
  1038  000008                     LCD_Init@I2C_Add:
  1039                           	callstack 0
  1040                           
  1041                           ; 1 bytes @ 0x7
  1042  000008                     	ds	1
  1043  000009                     LCD_Set_Cursor@ROW:
  1044                           	callstack 0
  1045  000009                     noRepeat@t:
  1046                           	callstack 0
  1047  000009                     ___aodiv@divisor:
  1048                           	callstack 0
  1049  000009                     ___aomod@divisor:
  1050                           	callstack 0
  1051                           
  1052                           ; 8 bytes @ 0x8
  1053  000009                     	ds	1
  1054  00000A                     LCD_Write_String@i:
  1055                           	callstack 0
  1056  00000A                     fputs@s:
  1057                           	callstack 0
  1058                           
  1059                           ; 2 bytes @ 0x9
  1060  00000A                     	ds	1
  1061  00000B                     noRepeat@shift:
  1062                           	callstack 0
  1063                           
  1064                           ; 2 bytes @ 0xA
  1065  00000B                     	ds	1
  1066  00000C                     fputs@fp:
  1067                           	callstack 0
  1068                           
  1069                           ; 2 bytes @ 0xB
  1070  00000C                     	ds	1
  1071  00000D                     noRepeat@temp:
  1072                           	callstack 0
  1073                           
  1074                           ; 2 bytes @ 0xC
  1075  00000D                     	ds	1
  1076  00000E                     fputs@c:
  1077                           	callstack 0
  1078                           
  1079                           ; 1 bytes @ 0xD
  1080  00000E                     	ds	1
  1081  00000F                     noRepeat@size:
  1082                           	callstack 0
  1083  00000F                     fputs@i:
  1084                           	callstack 0
  1085                           
  1086                           ; 2 bytes @ 0xE
  1087  00000F                     	ds	2
  1088  000011                     ?_pad:
  1089                           	callstack 0
  1090  000011                     ___aodiv@counter:
  1091                           	callstack 0
  1092  000011                     ___aomod@counter:
  1093                           	callstack 0
  1094  000011                     noRepeat@comp:
  1095                           	callstack 0
  1096  000011                     pad@fp:
  1097                           	callstack 0
  1098                           
  1099                           ; 2 bytes @ 0x10
  1100  000011                     	ds	1
  1101  000012                     ___aodiv@sign:
  1102                           	callstack 0
  1103  000012                     ___aomod@sign:
  1104                           	callstack 0
  1105                           
  1106                           ; 1 bytes @ 0x11
  1107  000012                     	ds	1
  1108  000013                     ??_dataPanelUp:
  1109  000013                     ?_abs:
  1110                           	callstack 0
  1111  000013                     pad@buf:
  1112                           	callstack 0
  1113  000013                     abs@a:
  1114                           	callstack 0
  1115  000013                     ___aodiv@quotient:
  1116                           	callstack 0
  1117                           
  1118                           ; 8 bytes @ 0x12
  1119  000013                     	ds	2
  1120  000015                     ??_abs:
  1121  000015                     pad@p:
  1122                           	callstack 0
  1123                           
  1124                           ; 2 bytes @ 0x14
  1125  000015                     	ds	2
  1126  000017                     ??_pad:
  1127                           
  1128                           ; 1 bytes @ 0x16
  1129  000017                     	ds	1
  1130  000018                     pad@i:
  1131                           	callstack 0
  1132                           
  1133                           ; 2 bytes @ 0x17
  1134  000018                     	ds	2
  1135  00001A                     pad@w:
  1136                           	callstack 0
  1137                           
  1138                           ; 2 bytes @ 0x19
  1139  00001A                     	ds	2
  1140  00001C                     ?_dtoa:
  1141                           	callstack 0
  1142  00001C                     dtoa@fp:
  1143                           	callstack 0
  1144                           
  1145                           ; 2 bytes @ 0x1B
  1146  00001C                     	ds	2
  1147  00001E                     dtoa@d:
  1148                           	callstack 0
  1149                           
  1150                           ; 8 bytes @ 0x1D
  1151  00001E                     	ds	8
  1152  000026                     ??_dtoa:
  1153                           
  1154                           ; 1 bytes @ 0x25
  1155  000026                     	ds	8
  1156  00002E                     _dtoa$1216:
  1157                           	callstack 0
  1158                           
  1159                           ; 2 bytes @ 0x2D
  1160  00002E                     	ds	2
  1161  000030                     dtoa@p:
  1162                           	callstack 0
  1163                           
  1164                           ; 2 bytes @ 0x2F
  1165  000030                     	ds	2
  1166  000032                     dtoa@w:
  1167                           	callstack 0
  1168                           
  1169                           ; 2 bytes @ 0x31
  1170  000032                     	ds	2
  1171  000034                     dtoa@s:
  1172                           	callstack 0
  1173                           
  1174                           ; 2 bytes @ 0x33
  1175  000034                     	ds	2
  1176  000036                     dtoa@n:
  1177                           	callstack 0
  1178                           
  1179                           ; 8 bytes @ 0x35
  1180  000036                     	ds	8
  1181  00003E                     dtoa@i:
  1182                           	callstack 0
  1183                           
  1184                           ; 2 bytes @ 0x3D
  1185  00003E                     	ds	2
  1186  000040                     ?_vfpfcnvrt:
  1187                           	callstack 0
  1188  000040                     vfpfcnvrt@fp:
  1189                           	callstack 0
  1190                           
  1191                           ; 2 bytes @ 0x3F
  1192  000040                     	ds	2
  1193  000042                     vfpfcnvrt@fmt:
  1194                           	callstack 0
  1195                           
  1196                           ; 2 bytes @ 0x41
  1197  000042                     	ds	2
  1198  000044                     vfpfcnvrt@ap:
  1199                           	callstack 0
  1200                           
  1201                           ; 2 bytes @ 0x43
  1202  000044                     	ds	2
  1203  000046                     ??_vfpfcnvrt:
  1204                           
  1205                           ; 1 bytes @ 0x45
  1206  000046                     	ds	2
  1207  000048                     vfpfcnvrt@ll:
  1208                           	callstack 0
  1209                           
  1210                           ; 8 bytes @ 0x47
  1211  000048                     	ds	8
  1212  000050                     ?_vfprintf:
  1213                           	callstack 0
  1214  000050                     vfprintf@fp:
  1215                           	callstack 0
  1216                           
  1217                           ; 2 bytes @ 0x4F
  1218  000050                     	ds	2
  1219  000052                     vfprintf@fmt:
  1220                           	callstack 0
  1221                           
  1222                           ; 2 bytes @ 0x51
  1223  000052                     	ds	2
  1224  000054                     vfprintf@ap:
  1225                           	callstack 0
  1226                           
  1227                           ; 2 bytes @ 0x53
  1228  000054                     	ds	2
  1229  000056                     vfprintf@cfmt:
  1230                           	callstack 0
  1231                           
  1232                           ; 2 bytes @ 0x55
  1233  000056                     	ds	2
  1234  000058                     ?_sprintf:
  1235                           	callstack 0
  1236  000058                     sprintf@s:
  1237                           	callstack 0
  1238                           
  1239                           ; 2 bytes @ 0x57
  1240  000058                     	ds	2
  1241  00005A                     sprintf@fmt:
  1242                           	callstack 0
  1243                           
  1244                           ; 2 bytes @ 0x59
  1245  00005A                     	ds	4
  1246  00005E                     sprintf@ap:
  1247                           	callstack 0
  1248                           
  1249                           ; 2 bytes @ 0x5D
  1250  00005E                     	ds	2
  1251  000060                     sprintf@f:
  1252                           	callstack 0
  1253                           
  1254                           ; 6 bytes @ 0x5F
  1255  000060                     	ds	6
  1256  000066                     ??_controlCalls:
  1257                           
  1258                           ; 1 bytes @ 0x65
  1259  000066                     	ds	2
  1260  000068                     ?_rutine_down:
  1261                           	callstack 0
  1262  000068                     ?_rutine_up:
  1263                           	callstack 0
  1264                           
  1265                           ; 2 bytes @ 0x67
  1266  000068                     	ds	2
  1267  00006A                     ??_rutine_down:
  1268  00006A                     ??_rutine_up:
  1269                           
  1270                           ; 1 bytes @ 0x69
  1271  00006A                     	ds	2
  1272  00006C                     rutine_down@i_654:
  1273                           	callstack 0
  1274  00006C                     rutine_up@i:
  1275                           	callstack 0
  1276                           
  1277                           ; 2 bytes @ 0x6B
  1278  00006C                     	ds	2
  1279  00006E                     rutine_down@i:
  1280                           	callstack 0
  1281  00006E                     rutine_up@re:
  1282                           	callstack 0
  1283                           
  1284                           ; 2 bytes @ 0x6D
  1285  00006E                     	ds	2
  1286  000070                     rutine_down@re:
  1287                           	callstack 0
  1288                           
  1289                           ; 2 bytes @ 0x6F
  1290  000070                     	ds	2
  1291  000072                     ??_selectionMode:
  1292                           
  1293                           ; 1 bytes @ 0x71
  1294  000072                     	ds	1
  1295  000073                     selectionMode@i:
  1296                           	callstack 0
  1297                           
  1298                           ; 2 bytes @ 0x72
  1299  000073                     	ds	2
  1300  000075                     selectionMode@i_670:
  1301                           	callstack 0
  1302                           
  1303                           ; 2 bytes @ 0x74
  1304  000075                     	ds	2
  1305  000077                     ??_modeControl:
  1306                           
  1307                           ; 1 bytes @ 0x76
  1308  000077                     	ds	2
  1309  000079                     ??_main:
  1310                           
  1311                           ; 1 bytes @ 0x78
  1312  000079                     	ds	2
  1313                           
  1314 ;;
  1315 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1316 ;;
  1317 ;; *************** function _main *****************
  1318 ;; Defined at:
  1319 ;;		line 1313 in file "main.c"
  1320 ;; Parameters:    Size  Location     Type
  1321 ;;		None
  1322 ;; Auto vars:     Size  Location     Type
  1323 ;;		None
  1324 ;; Return value:  Size  Location     Type
  1325 ;;                  1    wreg      void 
  1326 ;; Registers used:
  1327 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1328 ;; Tracked objects:
  1329 ;;		On entry : 0/0
  1330 ;;		On exit  : 0/0
  1331 ;;		Unchanged: 0/0
  1332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1333 ;;      Params:         0       0       0       0       0       0       0
  1334 ;;      Locals:         0       0       0       0       0       0       0
  1335 ;;      Temps:          2       0       0       0       0       0       0
  1336 ;;      Totals:         2       0       0       0       0       0       0
  1337 ;;Total ram usage:        2 bytes
  1338 ;; Hardware stack levels required when called: 12
  1339 ;; This function calls:
  1340 ;;		_I2C_Master_Init
  1341 ;;		_LCD_Clear
  1342 ;;		_LCD_Init
  1343 ;;		_LCD_Set_Cursor
  1344 ;;		_LCD_Write_String
  1345 ;;		_boot
  1346 ;;		_bootAscensor
  1347 ;;		_modeControl
  1348 ;; This function is called by:
  1349 ;;		Startup code after reset
  1350 ;; This function uses a non-reentrant model
  1351 ;;
  1352                           
  1353                           	psect	text0
  1354  002264                     __ptext0:
  1355                           	callstack 0
  1356  002264                     _main:
  1357                           	callstack 19
  1358  002264  FFFF               	dw	65535	; assembler added errata NOP
  1359                           
  1360                           ;main.c: 1314:     boot();
  1361  002266  EC80  F004         	call	_boot	;wreg free
  1362                           
  1363                           ;main.c: 1316:     bootAscensor();
  1364  00226A  EC12  F004         	call	_bootAscensor	;wreg free
  1365                           
  1366                           ;main.c: 1318:     I2C_Master_Init();
  1367  00226E  ECFE  F002         	call	_I2C_Master_Init	;wreg free
  1368  002272                     
  1369                           ;main.c: 1319:     LCD_Init(0x4E);
  1370  002272  0E4E               	movlw	78
  1371  002274  EC5D  F006         	call	_LCD_Init
  1372  002278                     
  1373                           ;main.c: 1321:     LCD_Set_Cursor(1, 1);
  1374  002278  0E01               	movlw	1
  1375  00227A  6E06               	movwf	LCD_Set_Cursor@COL^0,c
  1376  00227C  0E01               	movlw	1
  1377  00227E  ECF4  F004         	call	_LCD_Set_Cursor
  1378  002282                     
  1379                           ;main.c: 1322:     LCD_Write_String("Inciando!");
  1380  002282  0EC3               	movlw	low STR_43
  1381  002284  6E06               	movwf	LCD_Write_String@Str^0,c
  1382  002286  0E7F               	movlw	high STR_43
  1383  002288  6E07               	movwf	(LCD_Write_String@Str+1)^0,c
  1384  00228A  EC32  F005         	call	_LCD_Write_String	;wreg free
  1385  00228E                     
  1386                           ;main.c: 1323:     LCD_Set_Cursor(2, 1);
  1387  00228E  0E01               	movlw	1
  1388  002290  6E06               	movwf	LCD_Set_Cursor@COL^0,c
  1389  002292  0E02               	movlw	2
  1390  002294  ECF4  F004         	call	_LCD_Set_Cursor
  1391  002298                     
  1392                           ;main.c: 1324:     LCD_Write_String("Modo Espera");
  1393  002298  0E8A               	movlw	low STR_44
  1394  00229A  6E06               	movwf	LCD_Write_String@Str^0,c
  1395  00229C  0E7F               	movlw	high STR_44
  1396  00229E  6E07               	movwf	(LCD_Write_String@Str+1)^0,c
  1397  0022A0  EC32  F005         	call	_LCD_Write_String	;wreg free
  1398  0022A4                     l4914:
  1399  0022A4  FFFF               	dw	65535	; assembler added errata NOP
  1400                           
  1401                           ;main.c: 1329:         if (from_up_change){
  1402  0022A6  0100               	movlb	0	; () banked
  1403  0022A8  518A               	movf	_from_up_change& (0+255),w,b
  1404  0022AA  118B               	iorwf	(_from_up_change+1)& (0+255),w,b
  1405  0022AC  B4D8               	btfsc	status,2,c
  1406  0022AE  EF5B  F011         	goto	u4371
  1407  0022B2  EF5E  F011         	goto	u4370
  1408  0022B6                     u4371:
  1409  0022B6  FFFF               	dw	65535	; assembler added errata NOP
  1410  0022B8  EF6D  F011         	goto	l4922
  1411  0022BC                     u4370:
  1412  0022BC  FFFF               	dw	65535	; assembler added errata NOP
  1413  0022BE                     
  1414                           ; BSR set to: 0
  1415                           ;main.c: 1330:             LATCbits.LC0 = 1;
  1416  0022BE  808B               	bsf	139,0,c	;volatile
  1417                           
  1418                           ;main.c: 1331:             LATCbits.LC1 = 1;
  1419  0022C0  828B               	bsf	139,1,c	;volatile
  1420  0022C2                     
  1421                           ; BSR set to: 0
  1422                           ;main.c: 1333:             from_up_change = 0;
  1423  0022C2  0E00               	movlw	0
  1424  0022C4  6F8B               	movwf	(_from_up_change+1)& (0+255),b
  1425  0022C6  0E00               	movlw	0
  1426  0022C8  6F8A               	movwf	_from_up_change& (0+255),b
  1427  0022CA                     
  1428                           ; BSR set to: 0
  1429                           ;main.c: 1334:             modeControl(0);
  1430  0022CA  0E00               	movlw	0
  1431  0022CC  6FE2               	movwf	(modeControl@select_mode+1)& (0+255),b
  1432  0022CE  0E00               	movlw	0
  1433  0022D0  6FE1               	movwf	modeControl@select_mode& (0+255),b
  1434  0022D2  ECDA  F014         	call	_modeControl	;wreg free
  1435                           
  1436                           ;main.c: 1335:             continue;
  1437  0022D6  EF52  F011         	goto	l4914
  1438  0022DA                     l4922:
  1439  0022DA  FFFF               	dw	65535	; assembler added errata NOP
  1440                           
  1441                           ; BSR set to: 0
  1442                           ;main.c: 1337:         if(from_down_change){
  1443  0022DC  5188               	movf	_from_down_change& (0+255),w,b
  1444  0022DE  1189               	iorwf	(_from_down_change+1)& (0+255),w,b
  1445  0022E0  B4D8               	btfsc	status,2,c
  1446  0022E2  EF75  F011         	goto	u4381
  1447  0022E6  EF78  F011         	goto	u4380
  1448  0022EA                     u4381:
  1449  0022EA  FFFF               	dw	65535	; assembler added errata NOP
  1450  0022EC  EF85  F011         	goto	l4930
  1451  0022F0                     u4380:
  1452  0022F0  FFFF               	dw	65535	; assembler added errata NOP
  1453  0022F2                     
  1454                           ; BSR set to: 0
  1455                           ;main.c: 1338:             LATCbits.LC0 = 1;
  1456  0022F2  808B               	bsf	139,0,c	;volatile
  1457                           
  1458                           ;main.c: 1339:             LATCbits.LC1 = 1;
  1459  0022F4  828B               	bsf	139,1,c	;volatile
  1460  0022F6                     
  1461                           ; BSR set to: 0
  1462                           ;main.c: 1341:             from_down_change = 0;
  1463  0022F6  0E00               	movlw	0
  1464  0022F8  6F89               	movwf	(_from_down_change+1)& (0+255),b
  1465  0022FA  0E00               	movlw	0
  1466  0022FC  6F88               	movwf	_from_down_change& (0+255),b
  1467  0022FE                     
  1468                           ; BSR set to: 0
  1469                           ;main.c: 1342:             modeControl(1);
  1470  0022FE  0E00               	movlw	0
  1471  002300  6FE2               	movwf	(modeControl@select_mode+1)& (0+255),b
  1472  002302  0E01               	movlw	1
  1473  002304  6FE1               	movwf	modeControl@select_mode& (0+255),b
  1474  002306  ECDA  F014         	call	_modeControl	;wreg free
  1475  00230A                     l4930:
  1476  00230A  FFFF               	dw	65535	; assembler added errata NOP
  1477                           
  1478                           ;main.c: 1346:         if (PORTBbits.RB0) {
  1479  00230C  A081               	btfss	129,0,c	;volatile
  1480  00230E  EF8B  F011         	goto	u4391
  1481  002312  EF8E  F011         	goto	u4390
  1482  002316                     u4391:
  1483  002316  FFFF               	dw	65535	; assembler added errata NOP
  1484  002318  EFCA  F011         	goto	l500
  1485  00231C                     u4390:
  1486  00231C  FFFF               	dw	65535	; assembler added errata NOP
  1487  00231E                     
  1488                           ;main.c: 1347:             LCD_Clear();
  1489  00231E  ECF4  F002         	call	_LCD_Clear	;wreg free
  1490                           
  1491                           ;main.c: 1348:             LCD_Set_Cursor(1,1);
  1492  002322  0E01               	movlw	1
  1493  002324  6E06               	movwf	LCD_Set_Cursor@COL^0,c
  1494  002326  0E01               	movlw	1
  1495  002328  ECF4  F004         	call	_LCD_Set_Cursor
  1496  00232C                     
  1497                           ;main.c: 1349:             LCD_Write_String("btn up 1");
  1498  00232C  0EE1               	movlw	low STR_45
  1499  00232E  6E06               	movwf	LCD_Write_String@Str^0,c
  1500  002330  0E7F               	movlw	high STR_45
  1501  002332  6E07               	movwf	(LCD_Write_String@Str+1)^0,c
  1502  002334  EC32  F005         	call	_LCD_Write_String	;wreg free
  1503  002338                     
  1504                           ;main.c: 1350:             nowFL = 1;
  1505  002338  0E00               	movlw	0
  1506  00233A  0101               	movlb	1	; () banked
  1507  00233C  6FD9               	movwf	(_nowFL+1)& (0+255),b
  1508  00233E  0E01               	movlw	1
  1509  002340  6FD8               	movwf	_nowFL& (0+255),b
  1510  002342                     
  1511                           ; BSR set to: 1
  1512                           ;main.c: 1351:             call_init = 1;
  1513  002342  0E00               	movlw	0
  1514  002344  0100               	movlb	0	; () banked
  1515  002346  6F91               	movwf	(_call_init+1)& (0+255),b
  1516  002348  0E01               	movlw	1
  1517  00234A  6F90               	movwf	_call_init& (0+255),b
  1518  00234C                     
  1519                           ; BSR set to: 0
  1520                           ;main.c: 1352:             modeControl(1);
  1521  00234C  0E00               	movlw	0
  1522  00234E  6FE2               	movwf	(modeControl@select_mode+1)& (0+255),b
  1523  002350  0E01               	movlw	1
  1524  002352  6FE1               	movwf	modeControl@select_mode& (0+255),b
  1525  002354  ECDA  F014         	call	_modeControl	;wreg free
  1526  002358                     
  1527                           ;main.c: 1354:             LCD_Clear();
  1528  002358  ECF4  F002         	call	_LCD_Clear	;wreg free
  1529  00235C                     
  1530                           ;main.c: 1355:             LCD_Set_Cursor(1,1);
  1531  00235C  0E01               	movlw	1
  1532  00235E  6E06               	movwf	LCD_Set_Cursor@COL^0,c
  1533  002360  0E01               	movlw	1
  1534  002362  ECF4  F004         	call	_LCD_Set_Cursor
  1535  002366                     
  1536                           ;main.c: 1356:             LCD_Write_String("Mode up END");
  1537  002366  0E66               	movlw	low STR_46
  1538  002368  6E06               	movwf	LCD_Write_String@Str^0,c
  1539  00236A  0E7F               	movlw	high STR_46
  1540  00236C  6E07               	movwf	(LCD_Write_String@Str+1)^0,c
  1541  00236E  EC32  F005         	call	_LCD_Write_String	;wreg free
  1542  002372                     
  1543                           ;main.c: 1358:             LATCbits.LC0 = 1;
  1544  002372  808B               	bsf	139,0,c	;volatile
  1545  002374                     
  1546                           ;main.c: 1359:             LATCbits.LC1 = 1;
  1547  002374  828B               	bsf	139,1,c	;volatile
  1548  002376                     l4952:
  1549  002376  FFFF               	dw	65535	; assembler added errata NOP
  1550                           
  1551                           ;main.c: 1360:             _delay((unsigned long)((1000)*(20000000/4000.0)));
  1552  002378  0E14               	movlw	20
  1553  00237A  6E7A               	movwf	(??_main+1)^0,c
  1554  00237C  0E0A               	movlw	10
  1555  00237E  6E79               	movwf	??_main^0,c
  1556  002380  0E40               	movlw	64
  1557  002382                     u4457:
  1558  002382  FFFF               	dw	65535	; errata NOP
  1559  002384  2EE8               	decfsz	wreg,f,c
  1560  002386  D7FD               	bra	u4457
  1561  002388  2E79               	decfsz	??_main^0,f,c
  1562  00238A  D7FB               	bra	u4457
  1563  00238C  2E7A               	decfsz	(??_main+1)^0,f,c
  1564  00238E  D7F9               	bra	u4457
  1565                           
  1566                           ;main.c: 1361:             continue;
  1567  002390  EF52  F011         	goto	l4914
  1568  002394                     l500:
  1569  002394  FFFF               	dw	65535	; assembler added errata NOP
  1570                           
  1571                           ;main.c: 1363:         if (PORTBbits.RB2) {
  1572  002396  A481               	btfss	129,2,c	;volatile
  1573  002398  EFD0  F011         	goto	u4401
  1574  00239C  EFD3  F011         	goto	u4400
  1575  0023A0                     u4401:
  1576  0023A0  FFFF               	dw	65535	; assembler added errata NOP
  1577  0023A2  EF02  F012         	goto	l501
  1578  0023A6                     u4400:
  1579  0023A6  FFFF               	dw	65535	; assembler added errata NOP
  1580  0023A8                     
  1581                           ;main.c: 1364:             LCD_Clear();
  1582  0023A8  ECF4  F002         	call	_LCD_Clear	;wreg free
  1583                           
  1584                           ;main.c: 1365:             LCD_Set_Cursor(1,1);
  1585  0023AC  0E01               	movlw	1
  1586  0023AE  6E06               	movwf	LCD_Set_Cursor@COL^0,c
  1587  0023B0  0E01               	movlw	1
  1588  0023B2  ECF4  F004         	call	_LCD_Set_Cursor
  1589  0023B6                     
  1590                           ;main.c: 1366:             LCD_Write_String("btn up 2");
  1591  0023B6  0EEA               	movlw	low STR_47
  1592  0023B8  6E06               	movwf	LCD_Write_String@Str^0,c
  1593  0023BA  0E7F               	movlw	high STR_47
  1594  0023BC  6E07               	movwf	(LCD_Write_String@Str+1)^0,c
  1595  0023BE  EC32  F005         	call	_LCD_Write_String	;wreg free
  1596  0023C2                     
  1597                           ;main.c: 1368:             nowFL = 2;
  1598  0023C2  0E00               	movlw	0
  1599  0023C4  0101               	movlb	1	; () banked
  1600  0023C6  6FD9               	movwf	(_nowFL+1)& (0+255),b
  1601  0023C8  0E02               	movlw	2
  1602  0023CA  6FD8               	movwf	_nowFL& (0+255),b
  1603  0023CC                     
  1604                           ; BSR set to: 1
  1605                           ;main.c: 1369:             call_init = 2;
  1606  0023CC  0E00               	movlw	0
  1607  0023CE  0100               	movlb	0	; () banked
  1608  0023D0  6F91               	movwf	(_call_init+1)& (0+255),b
  1609  0023D2  0E02               	movlw	2
  1610  0023D4  6F90               	movwf	_call_init& (0+255),b
  1611  0023D6                     
  1612                           ; BSR set to: 0
  1613                           ;main.c: 1370:             modeControl(1);
  1614  0023D6  0E00               	movlw	0
  1615  0023D8  6FE2               	movwf	(modeControl@select_mode+1)& (0+255),b
  1616  0023DA  0E01               	movlw	1
  1617  0023DC  6FE1               	movwf	modeControl@select_mode& (0+255),b
  1618  0023DE  ECDA  F014         	call	_modeControl	;wreg free
  1619  0023E2                     
  1620                           ;main.c: 1372:             LCD_Clear();
  1621  0023E2  ECF4  F002         	call	_LCD_Clear	;wreg free
  1622  0023E6                     
  1623                           ;main.c: 1373:             LCD_Set_Cursor(1,1);
  1624  0023E6  0E01               	movlw	1
  1625  0023E8  6E06               	movwf	LCD_Set_Cursor@COL^0,c
  1626  0023EA  0E01               	movlw	1
  1627  0023EC  ECF4  F004         	call	_LCD_Set_Cursor
  1628  0023F0                     
  1629                           ;main.c: 1374:             LCD_Write_String("Mode up END");
  1630  0023F0  0E66               	movlw	low STR_46
  1631  0023F2  6E06               	movwf	LCD_Write_String@Str^0,c
  1632  0023F4  0E7F               	movlw	high STR_46
  1633  0023F6  6E07               	movwf	(LCD_Write_String@Str+1)^0,c
  1634  0023F8  EC32  F005         	call	_LCD_Write_String	;wreg free
  1635  0023FC                     
  1636                           ;main.c: 1375:             LATCbits.LC0 = 1;
  1637  0023FC  808B               	bsf	139,0,c	;volatile
  1638  0023FE                     
  1639                           ;main.c: 1376:             LATCbits.LC1 = 1;
  1640  0023FE  828B               	bsf	139,1,c	;volatile
  1641  002400  EFBB  F011         	goto	l4952
  1642  002404                     l501:
  1643  002404  FFFF               	dw	65535	; assembler added errata NOP
  1644                           
  1645                           ;main.c: 1380:         if (PORTBbits.RB5) {
  1646  002406  AA81               	btfss	129,5,c	;volatile
  1647  002408  EF08  F012         	goto	u4411
  1648  00240C  EF0B  F012         	goto	u4410
  1649  002410                     u4411:
  1650  002410  FFFF               	dw	65535	; assembler added errata NOP
  1651  002412  EF35  F012         	goto	l502
  1652  002416                     u4410:
  1653  002416  FFFF               	dw	65535	; assembler added errata NOP
  1654  002418                     
  1655                           ;main.c: 1381:             LCD_Clear();
  1656  002418  ECF4  F002         	call	_LCD_Clear	;wreg free
  1657                           
  1658                           ;main.c: 1382:             LCD_Set_Cursor(1,1);
  1659  00241C  0E01               	movlw	1
  1660  00241E  6E06               	movwf	LCD_Set_Cursor@COL^0,c
  1661  002420  0E01               	movlw	1
  1662  002422  ECF4  F004         	call	_LCD_Set_Cursor
  1663  002426                     
  1664                           ;main.c: 1383:             LCD_Write_String("btn up 3");
  1665  002426  0EF3               	movlw	low STR_49
  1666  002428  6E06               	movwf	LCD_Write_String@Str^0,c
  1667  00242A  0E7F               	movlw	high STR_49
  1668  00242C  6E07               	movwf	(LCD_Write_String@Str+1)^0,c
  1669  00242E  EC32  F005         	call	_LCD_Write_String	;wreg free
  1670  002432                     
  1671                           ;main.c: 1386:             call_init = 3;
  1672  002432  0E00               	movlw	0
  1673  002434  0100               	movlb	0	; () banked
  1674  002436  6F91               	movwf	(_call_init+1)& (0+255),b
  1675  002438  0E03               	movlw	3
  1676  00243A  6F90               	movwf	_call_init& (0+255),b
  1677  00243C                     
  1678                           ; BSR set to: 0
  1679                           ;main.c: 1387:             modeControl(1);
  1680  00243C  0E00               	movlw	0
  1681  00243E  6FE2               	movwf	(modeControl@select_mode+1)& (0+255),b
  1682  002440  0E01               	movlw	1
  1683  002442  6FE1               	movwf	modeControl@select_mode& (0+255),b
  1684  002444  ECDA  F014         	call	_modeControl	;wreg free
  1685  002448                     
  1686                           ;main.c: 1389:             LCD_Clear();
  1687  002448  ECF4  F002         	call	_LCD_Clear	;wreg free
  1688  00244C                     
  1689                           ;main.c: 1390:             LCD_Set_Cursor(1,1);
  1690  00244C  0E01               	movlw	1
  1691  00244E  6E06               	movwf	LCD_Set_Cursor@COL^0,c
  1692  002450  0E01               	movlw	1
  1693  002452  ECF4  F004         	call	_LCD_Set_Cursor
  1694  002456                     
  1695                           ;main.c: 1391:             LCD_Write_String("Mode up END");
  1696  002456  0E66               	movlw	low STR_46
  1697  002458  6E06               	movwf	LCD_Write_String@Str^0,c
  1698  00245A  0E7F               	movlw	high STR_46
  1699  00245C  6E07               	movwf	(LCD_Write_String@Str+1)^0,c
  1700  00245E  EC32  F005         	call	_LCD_Write_String	;wreg free
  1701  002462                     
  1702                           ;main.c: 1392:             LATCbits.LC0 = 1;
  1703  002462  808B               	bsf	139,0,c	;volatile
  1704  002464                     
  1705                           ;main.c: 1393:             LATCbits.LC1 = 1;
  1706  002464  828B               	bsf	139,1,c	;volatile
  1707  002466  EFBB  F011         	goto	l4952
  1708  00246A                     l502:
  1709  00246A  FFFF               	dw	65535	; assembler added errata NOP
  1710                           
  1711                           ;main.c: 1399:         if(PORTBbits.RB1){
  1712  00246C  A281               	btfss	129,1,c	;volatile
  1713  00246E  EF3B  F012         	goto	u4421
  1714  002472  EF3E  F012         	goto	u4420
  1715  002476                     u4421:
  1716  002476  FFFF               	dw	65535	; assembler added errata NOP
  1717  002478  EF68  F012         	goto	l503
  1718  00247C                     u4420:
  1719  00247C  FFFF               	dw	65535	; assembler added errata NOP
  1720  00247E                     
  1721                           ;main.c: 1400:             LCD_Clear();
  1722  00247E  ECF4  F002         	call	_LCD_Clear	;wreg free
  1723                           
  1724                           ;main.c: 1401:             LCD_Set_Cursor(1,1);
  1725  002482  0E01               	movlw	1
  1726  002484  6E06               	movwf	LCD_Set_Cursor@COL^0,c
  1727  002486  0E01               	movlw	1
  1728  002488  ECF4  F004         	call	_LCD_Set_Cursor
  1729  00248C                     
  1730                           ;main.c: 1402:             LCD_Write_String("btn down 2");
  1731  00248C  0EA2               	movlw	low STR_51
  1732  00248E  6E06               	movwf	LCD_Write_String@Str^0,c
  1733  002490  0E7F               	movlw	high STR_51
  1734  002492  6E07               	movwf	(LCD_Write_String@Str+1)^0,c
  1735  002494  EC32  F005         	call	_LCD_Write_String	;wreg free
  1736  002498                     
  1737                           ;main.c: 1405:             call_init = 2;
  1738  002498  0E00               	movlw	0
  1739  00249A  0100               	movlb	0	; () banked
  1740  00249C  6F91               	movwf	(_call_init+1)& (0+255),b
  1741  00249E  0E02               	movlw	2
  1742  0024A0  6F90               	movwf	_call_init& (0+255),b
  1743  0024A2                     
  1744                           ; BSR set to: 0
  1745                           ;main.c: 1406:             modeControl(0);
  1746  0024A2  0E00               	movlw	0
  1747  0024A4  6FE2               	movwf	(modeControl@select_mode+1)& (0+255),b
  1748  0024A6  0E00               	movlw	0
  1749  0024A8  6FE1               	movwf	modeControl@select_mode& (0+255),b
  1750  0024AA  ECDA  F014         	call	_modeControl	;wreg free
  1751  0024AE                     
  1752                           ;main.c: 1408:             LCD_Clear();
  1753  0024AE  ECF4  F002         	call	_LCD_Clear	;wreg free
  1754  0024B2                     
  1755                           ;main.c: 1409:             LCD_Set_Cursor(1,1);
  1756  0024B2  0E01               	movlw	1
  1757  0024B4  6E06               	movwf	LCD_Set_Cursor@COL^0,c
  1758  0024B6  0E01               	movlw	1
  1759  0024B8  ECF4  F004         	call	_LCD_Set_Cursor
  1760  0024BC                     
  1761                           ;main.c: 1410:             LCD_Write_String("Mode down END");
  1762  0024BC  0E08               	movlw	low STR_52
  1763  0024BE  6E06               	movwf	LCD_Write_String@Str^0,c
  1764  0024C0  0E7F               	movlw	high STR_52
  1765  0024C2  6E07               	movwf	(LCD_Write_String@Str+1)^0,c
  1766  0024C4  EC32  F005         	call	_LCD_Write_String	;wreg free
  1767  0024C8                     
  1768                           ;main.c: 1411:             LATCbits.LC0 = 1;
  1769  0024C8  808B               	bsf	139,0,c	;volatile
  1770  0024CA                     
  1771                           ;main.c: 1412:             LATCbits.LC1 = 1;
  1772  0024CA  828B               	bsf	139,1,c	;volatile
  1773  0024CC  EFBB  F011         	goto	l4952
  1774  0024D0                     l503:
  1775  0024D0  FFFF               	dw	65535	; assembler added errata NOP
  1776                           
  1777                           ;main.c: 1416:         if (PORTBbits.RB4) {
  1778  0024D2  A881               	btfss	129,4,c	;volatile
  1779  0024D4  EF6E  F012         	goto	u4431
  1780  0024D8  EF71  F012         	goto	u4430
  1781  0024DC                     u4431:
  1782  0024DC  FFFF               	dw	65535	; assembler added errata NOP
  1783  0024DE  EFA0  F012         	goto	l504
  1784  0024E2                     u4430:
  1785  0024E2  FFFF               	dw	65535	; assembler added errata NOP
  1786  0024E4                     
  1787                           ;main.c: 1417:             LCD_Clear();
  1788  0024E4  ECF4  F002         	call	_LCD_Clear	;wreg free
  1789                           
  1790                           ;main.c: 1418:             LCD_Set_Cursor(1,1);
  1791  0024E8  0E01               	movlw	1
  1792  0024EA  6E06               	movwf	LCD_Set_Cursor@COL^0,c
  1793  0024EC  0E01               	movlw	1
  1794  0024EE  ECF4  F004         	call	_LCD_Set_Cursor
  1795  0024F2                     
  1796                           ;main.c: 1419:             LCD_Write_String("btn down 3");
  1797  0024F2  0EAD               	movlw	low STR_53
  1798  0024F4  6E06               	movwf	LCD_Write_String@Str^0,c
  1799  0024F6  0E7F               	movlw	high STR_53
  1800  0024F8  6E07               	movwf	(LCD_Write_String@Str+1)^0,c
  1801  0024FA  EC32  F005         	call	_LCD_Write_String	;wreg free
  1802  0024FE                     
  1803                           ;main.c: 1421:             nowFL = 3;
  1804  0024FE  0E00               	movlw	0
  1805  002500  0101               	movlb	1	; () banked
  1806  002502  6FD9               	movwf	(_nowFL+1)& (0+255),b
  1807  002504  0E03               	movlw	3
  1808  002506  6FD8               	movwf	_nowFL& (0+255),b
  1809  002508                     
  1810                           ; BSR set to: 1
  1811                           ;main.c: 1422:             call_init = 3;
  1812  002508  0E00               	movlw	0
  1813  00250A  0100               	movlb	0	; () banked
  1814  00250C  6F91               	movwf	(_call_init+1)& (0+255),b
  1815  00250E  0E03               	movlw	3
  1816  002510  6F90               	movwf	_call_init& (0+255),b
  1817  002512                     
  1818                           ; BSR set to: 0
  1819                           ;main.c: 1423:             modeControl(0);
  1820  002512  0E00               	movlw	0
  1821  002514  6FE2               	movwf	(modeControl@select_mode+1)& (0+255),b
  1822  002516  0E00               	movlw	0
  1823  002518  6FE1               	movwf	modeControl@select_mode& (0+255),b
  1824  00251A  ECDA  F014         	call	_modeControl	;wreg free
  1825  00251E                     
  1826                           ;main.c: 1425:             LCD_Clear();
  1827  00251E  ECF4  F002         	call	_LCD_Clear	;wreg free
  1828  002522                     
  1829                           ;main.c: 1426:             LCD_Set_Cursor(1,1);
  1830  002522  0E01               	movlw	1
  1831  002524  6E06               	movwf	LCD_Set_Cursor@COL^0,c
  1832  002526  0E01               	movlw	1
  1833  002528  ECF4  F004         	call	_LCD_Set_Cursor
  1834  00252C                     
  1835                           ;main.c: 1427:             LCD_Write_String("Mode down END");
  1836  00252C  0E08               	movlw	low STR_52
  1837  00252E  6E06               	movwf	LCD_Write_String@Str^0,c
  1838  002530  0E7F               	movlw	high STR_52
  1839  002532  6E07               	movwf	(LCD_Write_String@Str+1)^0,c
  1840  002534  EC32  F005         	call	_LCD_Write_String	;wreg free
  1841  002538                     
  1842                           ;main.c: 1428:             LATCbits.LC0 = 1;
  1843  002538  808B               	bsf	139,0,c	;volatile
  1844  00253A                     
  1845                           ;main.c: 1429:             LATCbits.LC1 = 1;
  1846  00253A  828B               	bsf	139,1,c	;volatile
  1847  00253C  EFBB  F011         	goto	l4952
  1848  002540                     l504:
  1849  002540  FFFF               	dw	65535	; assembler added errata NOP
  1850                           
  1851                           ;main.c: 1433:         if (PORTBbits.RB6) {
  1852  002542  AC81               	btfss	129,6,c	;volatile
  1853  002544  EFA6  F012         	goto	u4441
  1854  002548  EFA9  F012         	goto	u4440
  1855  00254C                     u4441:
  1856  00254C  FFFF               	dw	65535	; assembler added errata NOP
  1857  00254E  EF52  F011         	goto	l4914
  1858  002552                     u4440:
  1859  002552  FFFF               	dw	65535	; assembler added errata NOP
  1860  002554                     
  1861                           ;main.c: 1434:             LCD_Clear();
  1862  002554  ECF4  F002         	call	_LCD_Clear	;wreg free
  1863                           
  1864                           ;main.c: 1435:             LCD_Set_Cursor(1,1);
  1865  002558  0E01               	movlw	1
  1866  00255A  6E06               	movwf	LCD_Set_Cursor@COL^0,c
  1867  00255C  0E01               	movlw	1
  1868  00255E  ECF4  F004         	call	_LCD_Set_Cursor
  1869  002562                     
  1870                           ;main.c: 1436:             LCD_Write_String("btn down 4");
  1871  002562  0EB8               	movlw	low STR_55
  1872  002564  6E06               	movwf	LCD_Write_String@Str^0,c
  1873  002566  0E7F               	movlw	high STR_55
  1874  002568  6E07               	movwf	(LCD_Write_String@Str+1)^0,c
  1875  00256A  EC32  F005         	call	_LCD_Write_String	;wreg free
  1876  00256E                     
  1877                           ;main.c: 1438:             nowFL = 4;
  1878  00256E  0E00               	movlw	0
  1879  002570  0101               	movlb	1	; () banked
  1880  002572  6FD9               	movwf	(_nowFL+1)& (0+255),b
  1881  002574  0E04               	movlw	4
  1882  002576  6FD8               	movwf	_nowFL& (0+255),b
  1883  002578                     
  1884                           ; BSR set to: 1
  1885                           ;main.c: 1439:             call_init = 4;
  1886  002578  0E00               	movlw	0
  1887  00257A  0100               	movlb	0	; () banked
  1888  00257C  6F91               	movwf	(_call_init+1)& (0+255),b
  1889  00257E  0E04               	movlw	4
  1890  002580  6F90               	movwf	_call_init& (0+255),b
  1891  002582                     
  1892                           ; BSR set to: 0
  1893                           ;main.c: 1440:             modeControl(0);
  1894  002582  0E00               	movlw	0
  1895  002584  6FE2               	movwf	(modeControl@select_mode+1)& (0+255),b
  1896  002586  0E00               	movlw	0
  1897  002588  6FE1               	movwf	modeControl@select_mode& (0+255),b
  1898  00258A  ECDA  F014         	call	_modeControl	;wreg free
  1899  00258E                     
  1900                           ;main.c: 1442:             LCD_Clear();
  1901  00258E  ECF4  F002         	call	_LCD_Clear	;wreg free
  1902  002592                     
  1903                           ;main.c: 1443:             LCD_Set_Cursor(1,1);
  1904  002592  0E01               	movlw	1
  1905  002594  6E06               	movwf	LCD_Set_Cursor@COL^0,c
  1906  002596  0E01               	movlw	1
  1907  002598  ECF4  F004         	call	_LCD_Set_Cursor
  1908  00259C                     
  1909                           ;main.c: 1444:             LCD_Write_String("Mode down END");
  1910  00259C  0E08               	movlw	low STR_52
  1911  00259E  6E06               	movwf	LCD_Write_String@Str^0,c
  1912  0025A0  0E7F               	movlw	high STR_52
  1913  0025A2  6E07               	movwf	(LCD_Write_String@Str+1)^0,c
  1914  0025A4  EC32  F005         	call	_LCD_Write_String	;wreg free
  1915  0025A8                     
  1916                           ;main.c: 1445:             LATCbits.LC0 = 1;
  1917  0025A8  808B               	bsf	139,0,c	;volatile
  1918  0025AA                     
  1919                           ;main.c: 1446:             LATCbits.LC1 = 1;
  1920  0025AA  828B               	bsf	139,1,c	;volatile
  1921  0025AC  EFBB  F011         	goto	l4952
  1922  0025B0  EF01  F000         	goto	start
  1923  0025B4                     __end_of_main:
  1924                           	callstack 0
  1925                           
  1926 ;; *************** function _modeControl *****************
  1927 ;; Defined at:
  1928 ;;		line 1036 in file "main.c"
  1929 ;; Parameters:    Size  Location     Type
  1930 ;;  select_mode     2   34[BANK0 ] unsigned int 
  1931 ;; Auto vars:     Size  Location     Type
  1932 ;;		None
  1933 ;; Return value:  Size  Location     Type
  1934 ;;                  1    wreg      void 
  1935 ;; Registers used:
  1936 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1937 ;; Tracked objects:
  1938 ;;		On entry : 0/0
  1939 ;;		On exit  : 0/0
  1940 ;;		Unchanged: 0/0
  1941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1942 ;;      Params:         0       2       0       0       0       0       0
  1943 ;;      Locals:         0       0       0       0       0       0       0
  1944 ;;      Temps:          2       0       0       0       0       0       0
  1945 ;;      Totals:         2       2       0       0       0       0       0
  1946 ;;Total ram usage:        4 bytes
  1947 ;; Hardware stack levels used: 1
  1948 ;; Hardware stack levels required when called: 11
  1949 ;; This function calls:
  1950 ;;		_LCD_Clear
  1951 ;;		_LCD_Set_Cursor
  1952 ;;		_LCD_Write_String
  1953 ;;		_dataPanelUp
  1954 ;;		_selectionMode
  1955 ;; This function is called by:
  1956 ;;		_main
  1957 ;; This function uses a non-reentrant model
  1958 ;;
  1959                           
  1960                           	psect	text1
  1961  0029B4                     __ptext1:
  1962                           	callstack 0
  1963  0029B4                     _modeControl:
  1964                           	callstack 0
  1965  0029B4  FFFF               	dw	65535	; assembler added errata NOP
  1966  0029B6                     
  1967                           ;main.c: 1037:     if (select_mode == 1){
  1968  0029B6  0100               	movlb	0	; () banked
  1969  0029B8  05E1               	decf	modeControl@select_mode& (0+255),w,b
  1970  0029BA  11E2               	iorwf	(modeControl@select_mode+1)& (0+255),w,b
  1971  0029BC  A4D8               	btfss	status,2,c
  1972  0029BE  EFE3  F014         	goto	u3601
  1973  0029C2  EFE6  F014         	goto	u3600
  1974  0029C6                     u3601:
  1975  0029C6  FFFF               	dw	65535	; assembler added errata NOP
  1976  0029C8  EF0C  F015         	goto	l4474
  1977  0029CC                     u3600:
  1978  0029CC  FFFF               	dw	65535	; assembler added errata NOP
  1979  0029CE                     
  1980                           ; BSR set to: 0
  1981                           ;main.c: 1038:         modeDown_F = 0;
  1982  0029CE  0E00               	movlw	0
  1983  0029D0  6F8D               	movwf	(_modeDown_F+1)& (0+255),b
  1984  0029D2  0E00               	movlw	0
  1985  0029D4  6F8C               	movwf	_modeDown_F& (0+255),b
  1986                           
  1987                           ;main.c: 1039:         modeUp_F = 1;
  1988  0029D6  0E00               	movlw	0
  1989  0029D8  0101               	movlb	1	; () banked
  1990  0029DA  6FD7               	movwf	(_modeUp_F+1)& (0+255),b
  1991  0029DC  0E01               	movlw	1
  1992  0029DE  6FD6               	movwf	_modeUp_F& (0+255),b
  1993                           
  1994                           ;main.c: 1042:         callsD = 0;
  1995  0029E0  0E00               	movlw	0
  1996  0029E2  0100               	movlb	0	; () banked
  1997  0029E4  6F93               	movwf	(_callsD+1)& (0+255),b
  1998  0029E6  0E00               	movlw	0
  1999  0029E8  6F92               	movwf	_callsD& (0+255),b
  2000                           
  2001                           ;main.c: 1043:         callsU = 0;
  2002  0029EA  0E00               	movlw	0
  2003  0029EC  6F95               	movwf	(_callsU+1)& (0+255),b
  2004  0029EE  0E00               	movlw	0
  2005  0029F0  6F94               	movwf	_callsU& (0+255),b
  2006                           
  2007                           ;main.c: 1047:         tasksDown = 0;
  2008  0029F2  0E00               	movlw	0
  2009  0029F4  6E7E               	movwf	(_tasksDown+1)^0,c
  2010  0029F6  0E00               	movlw	0
  2011  0029F8  6E7D               	movwf	_tasksDown^0,c
  2012  0029FA                     
  2013                           ; BSR set to: 0
  2014                           ;main.c: 1049:         LCD_Clear();
  2015  0029FA  ECF4  F002         	call	_LCD_Clear	;wreg free
  2016  0029FE                     
  2017                           ;main.c: 1050:         LCD_Set_Cursor(1,1);
  2018  0029FE  0E01               	movlw	1
  2019  002A00  6E06               	movwf	LCD_Set_Cursor@COL^0,c
  2020  002A02  0E01               	movlw	1
  2021  002A04  ECF4  F004         	call	_LCD_Set_Cursor
  2022  002A08                     
  2023                           ;main.c: 1051:         LCD_Write_String("[Mode Up]");
  2024  002A08  0ECD               	movlw	low STR_33
  2025  002A0A  6E06               	movwf	LCD_Write_String@Str^0,c
  2026  002A0C  0E7F               	movlw	high STR_33
  2027  002A0E  6E07               	movwf	(LCD_Write_String@Str+1)^0,c
  2028  002A10  EC32  F005         	call	_LCD_Write_String	;wreg free
  2029                           
  2030                           ;main.c: 1052:     }
  2031  002A14  EF5A  F019         	goto	l4786
  2032  002A18                     l4474:
  2033  002A18  FFFF               	dw	65535	; assembler added errata NOP
  2034                           
  2035                           ; BSR set to: 0
  2036  002A1A  51E1               	movf	modeControl@select_mode& (0+255),w,b
  2037  002A1C  11E2               	iorwf	(modeControl@select_mode+1)& (0+255),w,b
  2038  002A1E  A4D8               	btfss	status,2,c
  2039  002A20  EF14  F015         	goto	u3611
  2040  002A24  EF17  F015         	goto	u3610
  2041  002A28                     u3611:
  2042  002A28  FFFF               	dw	65535	; assembler added errata NOP
  2043  002A2A  EF5A  F019         	goto	l4786
  2044  002A2E                     u3610:
  2045  002A2E  FFFF               	dw	65535	; assembler added errata NOP
  2046  002A30                     
  2047                           ; BSR set to: 0
  2048                           ;main.c: 1054:         modeUp_F = 0;
  2049  002A30  0E00               	movlw	0
  2050  002A32  0101               	movlb	1	; () banked
  2051  002A34  6FD7               	movwf	(_modeUp_F+1)& (0+255),b
  2052  002A36  0E00               	movlw	0
  2053  002A38  6FD6               	movwf	_modeUp_F& (0+255),b
  2054                           
  2055                           ;main.c: 1055:         modeDown_F = 1;
  2056  002A3A  0E00               	movlw	0
  2057  002A3C  0100               	movlb	0	; () banked
  2058  002A3E  6F8D               	movwf	(_modeDown_F+1)& (0+255),b
  2059  002A40  0E01               	movlw	1
  2060  002A42  6F8C               	movwf	_modeDown_F& (0+255),b
  2061                           
  2062                           ;main.c: 1057:         callsD = 0;
  2063  002A44  0E00               	movlw	0
  2064  002A46  6F93               	movwf	(_callsD+1)& (0+255),b
  2065  002A48  0E00               	movlw	0
  2066  002A4A  6F92               	movwf	_callsD& (0+255),b
  2067                           
  2068                           ;main.c: 1058:         callsU = 0;
  2069  002A4C  0E00               	movlw	0
  2070  002A4E  6F95               	movwf	(_callsU+1)& (0+255),b
  2071  002A50  0E00               	movlw	0
  2072  002A52  6F94               	movwf	_callsU& (0+255),b
  2073                           
  2074                           ;main.c: 1061:         tasksUp = 0;
  2075  002A54  0E00               	movlw	0
  2076  002A56  6E7C               	movwf	(_tasksUp+1)^0,c
  2077  002A58  0E00               	movlw	0
  2078  002A5A  6E7B               	movwf	_tasksUp^0,c
  2079  002A5C                     
  2080                           ; BSR set to: 0
  2081                           ;main.c: 1063:         LCD_Clear();
  2082  002A5C  ECF4  F002         	call	_LCD_Clear	;wreg free
  2083  002A60                     
  2084                           ;main.c: 1064:         LCD_Set_Cursor(1,1);
  2085  002A60  0E01               	movlw	1
  2086  002A62  6E06               	movwf	LCD_Set_Cursor@COL^0,c
  2087  002A64  0E01               	movlw	1
  2088  002A66  ECF4  F004         	call	_LCD_Set_Cursor
  2089  002A6A                     
  2090                           ;main.c: 1065:         LCD_Write_String("[Mode Down]");
  2091  002A6A  0E7E               	movlw	low STR_35
  2092  002A6C  6E06               	movwf	LCD_Write_String@Str^0,c
  2093  002A6E  0E7F               	movlw	high STR_35
  2094  002A70  6E07               	movwf	(LCD_Write_String@Str+1)^0,c
  2095  002A72  EC32  F005         	call	_LCD_Write_String	;wreg free
  2096  002A76  EF5A  F019         	goto	l4786
  2097  002A7A                     l4484:
  2098  002A7A  FFFF               	dw	65535	; assembler added errata NOP
  2099                           
  2100                           ;main.c: 1070:             LCD_Set_Cursor(2,1);
  2101  002A7C  0E01               	movlw	1
  2102  002A7E  6E06               	movwf	LCD_Set_Cursor@COL^0,c
  2103  002A80  0E02               	movlw	2
  2104  002A82  ECF4  F004         	call	_LCD_Set_Cursor
  2105  002A86                     
  2106                           ;main.c: 1071:             LCD_Write_String("Move-to floor1");
  2107  002A86  0E58               	movlw	low STR_39
  2108  002A88  6E06               	movwf	LCD_Write_String@Str^0,c
  2109  002A8A  0E7E               	movlw	high STR_39
  2110  002A8C  6E07               	movwf	(LCD_Write_String@Str+1)^0,c
  2111  002A8E  EC32  F005         	call	_LCD_Write_String	;wreg free
  2112  002A92                     
  2113                           ;main.c: 1074:             if (prevFL == 1) {
  2114  002A92  0100               	movlb	0	; () banked
  2115  002A94  058E               	decf	_prevFL& (0+255),w,b
  2116  002A96  118F               	iorwf	(_prevFL+1)& (0+255),w,b
  2117  002A98  A4D8               	btfss	status,2,c
  2118  002A9A  EF51  F015         	goto	u3621
  2119  002A9E  EF54  F015         	goto	u3620
  2120  002AA2                     u3621:
  2121  002AA2  FFFF               	dw	65535	; assembler added errata NOP
  2122  002AA4  EFA6  F015         	goto	l441
  2123  002AA8                     u3620:
  2124  002AA8  FFFF               	dw	65535	; assembler added errata NOP
  2125  002AAA                     
  2126                           ; BSR set to: 0
  2127                           ;main.c: 1075:                 nowFL = 1;
  2128  002AAA  0E00               	movlw	0
  2129  002AAC  0101               	movlb	1	; () banked
  2130  002AAE  6FD9               	movwf	(_nowFL+1)& (0+255),b
  2131  002AB0  0E01               	movlw	1
  2132  002AB2  6FD8               	movwf	_nowFL& (0+255),b
  2133  002AB4                     
  2134                           ; BSR set to: 1
  2135                           ;main.c: 1076:                 LATDbits.LD0 = 1;
  2136  002AB4  808C               	bsf	140,0,c	;volatile
  2137  002AB6                     
  2138                           ; BSR set to: 1
  2139                           ;main.c: 1077:                 dataPanelUp();
  2140  002AB6  ECDA  F012         	call	_dataPanelUp	;wreg free
  2141  002ABA                     
  2142                           ;main.c: 1078:                 LATDbits.LD0 = 0;
  2143  002ABA  908C               	bcf	140,0,c	;volatile
  2144  002ABC                     
  2145                           ;main.c: 1079:                 _delay((unsigned long)((300)*(20000000/4000.0)));
  2146  002ABC  0E06               	movlw	6
  2147  002ABE  6E78               	movwf	(??_modeControl+1)^0,c
  2148  002AC0  0EB6               	movlw	182
  2149  002AC2  6E77               	movwf	??_modeControl^0,c
  2150  002AC4  0EF9               	movlw	249
  2151  002AC6                     u4467:
  2152  002AC6  FFFF               	dw	65535	; errata NOP
  2153  002AC8  2EE8               	decfsz	wreg,f,c
  2154  002ACA  D7FD               	bra	u4467
  2155  002ACC  2E77               	decfsz	??_modeControl^0,f,c
  2156  002ACE  D7FB               	bra	u4467
  2157  002AD0  2E78               	decfsz	(??_modeControl+1)^0,f,c
  2158  002AD2  D7F9               	bra	u4467
  2159  002AD4                     
  2160                           ;main.c: 1081:                 if (tasksUp == 0 && modeUp_F == 1){
  2161  002AD4  507B               	movf	_tasksUp^0,w,c
  2162  002AD6  107C               	iorwf	(_tasksUp+1)^0,w,c
  2163  002AD8  A4D8               	btfss	status,2,c
  2164  002ADA  EF71  F015         	goto	u3631
  2165  002ADE  EF74  F015         	goto	u3630
  2166  002AE2                     u3631:
  2167  002AE2  FFFF               	dw	65535	; assembler added errata NOP
  2168  002AE4  EF83  F015         	goto	l4506
  2169  002AE8                     u3630:
  2170  002AE8  FFFF               	dw	65535	; assembler added errata NOP
  2171  002AEA  0101               	movlb	1	; () banked
  2172  002AEC  05D6               	decf	_modeUp_F& (0+255),w,b
  2173  002AEE  11D7               	iorwf	(_modeUp_F+1)& (0+255),w,b
  2174  002AF0  A4D8               	btfss	status,2,c
  2175  002AF2  EF7D  F015         	goto	u3641
  2176  002AF6  EF80  F015         	goto	u3640
  2177  002AFA                     u3641:
  2178  002AFA  FFFF               	dw	65535	; assembler added errata NOP
  2179  002AFC  EF83  F015         	goto	l4506
  2180  002B00                     u3640:
  2181  002B00  FFFF               	dw	65535	; assembler added errata NOP
  2182  002B02  EF7A  F019         	goto	l491
  2183  002B06                     l4506:
  2184  002B06  FFFF               	dw	65535	; assembler added errata NOP
  2185                           
  2186                           ;main.c: 1084:                 if (tasksDown == 0 && modeDown_F == 1){
  2187  002B08  507D               	movf	_tasksDown^0,w,c
  2188  002B0A  107E               	iorwf	(_tasksDown+1)^0,w,c
  2189  002B0C  A4D8               	btfss	status,2,c
  2190  002B0E  EF8B  F015         	goto	u3651
  2191  002B12  EF8E  F015         	goto	u3650
  2192  002B16                     u3651:
  2193  002B16  FFFF               	dw	65535	; assembler added errata NOP
  2194  002B18  EF9D  F015         	goto	l4512
  2195  002B1C                     u3650:
  2196  002B1C  FFFF               	dw	65535	; assembler added errata NOP
  2197  002B1E  0100               	movlb	0	; () banked
  2198  002B20  058C               	decf	_modeDown_F& (0+255),w,b
  2199  002B22  118D               	iorwf	(_modeDown_F+1)& (0+255),w,b
  2200  002B24  A4D8               	btfss	status,2,c
  2201  002B26  EF97  F015         	goto	u3661
  2202  002B2A  EF9A  F015         	goto	u3660
  2203  002B2E                     u3661:
  2204  002B2E  FFFF               	dw	65535	; assembler added errata NOP
  2205  002B30  EF9D  F015         	goto	l4512
  2206  002B34                     u3660:
  2207  002B34  FFFF               	dw	65535	; assembler added errata NOP
  2208  002B36  EF7A  F019         	goto	l491
  2209  002B3A                     l4512:
  2210  002B3A  FFFF               	dw	65535	; assembler added errata NOP
  2211                           
  2212                           ;main.c: 1088:                 selectionMode(select_mode);
  2213  002B3C  C0E1  F0DF         	movff	modeControl@select_mode,selectionMode@mode_s
  2214  002B40  C0E2  F0E0         	movff	modeControl@select_mode+1,selectionMode@mode_s+1
  2215  002B44  EC29  F009         	call	_selectionMode	;wreg free
  2216                           
  2217                           ;main.c: 1090:             } else {
  2218  002B48  EF7A  F019         	goto	l491
  2219  002B4C                     l441:
  2220  002B4C  FFFF               	dw	65535	; assembler added errata NOP
  2221                           
  2222                           ;main.c: 1092:                     LATCbits.LC0 = 0;
  2223  002B4E  908B               	bcf	139,0,c	;volatile
  2224                           
  2225                           ;main.c: 1093:                 } while (!PORTDbits.RD4);
  2226  002B50  A883               	btfss	131,4,c	;volatile
  2227  002B52  EFAD  F015         	goto	u3671
  2228  002B56  EFB0  F015         	goto	u3670
  2229  002B5A                     u3671:
  2230  002B5A  FFFF               	dw	65535	; assembler added errata NOP
  2231  002B5C  EFA6  F015         	goto	l441
  2232  002B60                     u3670:
  2233  002B60  FFFF               	dw	65535	; assembler added errata NOP
  2234  002B62                     
  2235                           ;main.c: 1094:                 nowFL = 1;
  2236  002B62  0E00               	movlw	0
  2237  002B64  0101               	movlb	1	; () banked
  2238  002B66  6FD9               	movwf	(_nowFL+1)& (0+255),b
  2239  002B68  0E01               	movlw	1
  2240  002B6A  6FD8               	movwf	_nowFL& (0+255),b
  2241  002B6C                     
  2242                           ; BSR set to: 1
  2243                           ;main.c: 1095:                 LATCbits.LC0 = 1;
  2244  002B6C  808B               	bsf	139,0,c	;volatile
  2245  002B6E                     
  2246                           ; BSR set to: 1
  2247                           ;main.c: 1097:                 LATDbits.LD0 = 1;
  2248  002B6E  808C               	bsf	140,0,c	;volatile
  2249  002B70                     
  2250                           ; BSR set to: 1
  2251                           ;main.c: 1098:                 dataPanelUp();
  2252  002B70  ECDA  F012         	call	_dataPanelUp	;wreg free
  2253  002B74                     
  2254                           ;main.c: 1099:                 LATDbits.LD0 = 0;
  2255  002B74  908C               	bcf	140,0,c	;volatile
  2256  002B76                     
  2257                           ;main.c: 1100:                 _delay((unsigned long)((300)*(20000000/4000.0)));
  2258  002B76  0E06               	movlw	6
  2259  002B78  6E78               	movwf	(??_modeControl+1)^0,c
  2260  002B7A  0EB6               	movlw	182
  2261  002B7C  6E77               	movwf	??_modeControl^0,c
  2262  002B7E  0EF9               	movlw	249
  2263  002B80                     u4477:
  2264  002B80  FFFF               	dw	65535	; errata NOP
  2265  002B82  2EE8               	decfsz	wreg,f,c
  2266  002B84  D7FD               	bra	u4477
  2267  002B86  2E77               	decfsz	??_modeControl^0,f,c
  2268  002B88  D7FB               	bra	u4477
  2269  002B8A  2E78               	decfsz	(??_modeControl+1)^0,f,c
  2270  002B8C  D7F9               	bra	u4477
  2271  002B8E                     
  2272                           ;main.c: 1102:                 if (tasksUp == 0 && modeUp_F == 1){
  2273  002B8E  507B               	movf	_tasksUp^0,w,c
  2274  002B90  107C               	iorwf	(_tasksUp+1)^0,w,c
  2275  002B92  A4D8               	btfss	status,2,c
  2276  002B94  EFCE  F015         	goto	u3681
  2277  002B98  EFD1  F015         	goto	u3680
  2278  002B9C                     u3681:
  2279  002B9C  FFFF               	dw	65535	; assembler added errata NOP
  2280  002B9E  EFE0  F015         	goto	l4532
  2281  002BA2                     u3680:
  2282  002BA2  FFFF               	dw	65535	; assembler added errata NOP
  2283  002BA4  0101               	movlb	1	; () banked
  2284  002BA6  05D6               	decf	_modeUp_F& (0+255),w,b
  2285  002BA8  11D7               	iorwf	(_modeUp_F+1)& (0+255),w,b
  2286  002BAA  A4D8               	btfss	status,2,c
  2287  002BAC  EFDA  F015         	goto	u3691
  2288  002BB0  EFDD  F015         	goto	u3690
  2289  002BB4                     u3691:
  2290  002BB4  FFFF               	dw	65535	; assembler added errata NOP
  2291  002BB6  EFE0  F015         	goto	l4532
  2292  002BBA                     u3690:
  2293  002BBA  FFFF               	dw	65535	; assembler added errata NOP
  2294  002BBC  EF7A  F019         	goto	l491
  2295  002BC0                     l4532:
  2296  002BC0  FFFF               	dw	65535	; assembler added errata NOP
  2297                           
  2298                           ;main.c: 1105:                 if (tasksDown == 0 && modeDown_F == 1){
  2299  002BC2  507D               	movf	_tasksDown^0,w,c
  2300  002BC4  107E               	iorwf	(_tasksDown+1)^0,w,c
  2301  002BC6  A4D8               	btfss	status,2,c
  2302  002BC8  EFE8  F015         	goto	u3701
  2303  002BCC  EFEB  F015         	goto	u3700
  2304  002BD0                     u3701:
  2305  002BD0  FFFF               	dw	65535	; assembler added errata NOP
  2306  002BD2  EF9D  F015         	goto	l4512
  2307  002BD6                     u3700:
  2308  002BD6  FFFF               	dw	65535	; assembler added errata NOP
  2309  002BD8  0100               	movlb	0	; () banked
  2310  002BDA  058C               	decf	_modeDown_F& (0+255),w,b
  2311  002BDC  118D               	iorwf	(_modeDown_F+1)& (0+255),w,b
  2312  002BDE  A4D8               	btfss	status,2,c
  2313  002BE0  EFF4  F015         	goto	u3711
  2314  002BE4  EFF7  F015         	goto	u3710
  2315  002BE8                     u3711:
  2316  002BE8  FFFF               	dw	65535	; assembler added errata NOP
  2317  002BEA  EF9D  F015         	goto	l4512
  2318  002BEE                     u3710:
  2319  002BEE  FFFF               	dw	65535	; assembler added errata NOP
  2320  002BF0  EF7A  F019         	goto	l491
  2321  002BF4                     l4540:
  2322  002BF4  FFFF               	dw	65535	; assembler added errata NOP
  2323                           
  2324                           ;main.c: 1115:             LCD_Set_Cursor(2,1);
  2325  002BF6  0E01               	movlw	1
  2326  002BF8  6E06               	movwf	LCD_Set_Cursor@COL^0,c
  2327  002BFA  0E02               	movlw	2
  2328  002BFC  ECF4  F004         	call	_LCD_Set_Cursor
  2329  002C00                     
  2330                           ;main.c: 1116:             LCD_Write_String("Move-to floor2");
  2331  002C00  0E76               	movlw	low STR_40
  2332  002C02  6E06               	movwf	LCD_Write_String@Str^0,c
  2333  002C04  0E7E               	movlw	high STR_40
  2334  002C06  6E07               	movwf	(LCD_Write_String@Str+1)^0,c
  2335  002C08  EC32  F005         	call	_LCD_Write_String	;wreg free
  2336  002C0C                     
  2337                           ;main.c: 1117:             if (prevFL == 2) {
  2338  002C0C  0E02               	movlw	2
  2339  002C0E  0100               	movlb	0	; () banked
  2340  002C10  198E               	xorwf	_prevFL& (0+255),w,b
  2341  002C12  118F               	iorwf	(_prevFL+1)& (0+255),w,b
  2342  002C14  A4D8               	btfss	status,2,c
  2343  002C16  EF0F  F016         	goto	u3721
  2344  002C1A  EF12  F016         	goto	u3720
  2345  002C1E                     u3721:
  2346  002C1E  FFFF               	dw	65535	; assembler added errata NOP
  2347  002C20  EF5B  F016         	goto	l4570
  2348  002C24                     u3720:
  2349  002C24  FFFF               	dw	65535	; assembler added errata NOP
  2350  002C26                     
  2351                           ; BSR set to: 0
  2352                           ;main.c: 1118:                 nowFL = 2;
  2353  002C26  0E00               	movlw	0
  2354  002C28  0101               	movlb	1	; () banked
  2355  002C2A  6FD9               	movwf	(_nowFL+1)& (0+255),b
  2356  002C2C  0E02               	movlw	2
  2357  002C2E  6FD8               	movwf	_nowFL& (0+255),b
  2358  002C30                     
  2359                           ; BSR set to: 1
  2360                           ;main.c: 1119:                 LATDbits.LD1 = 1;
  2361  002C30  828C               	bsf	140,1,c	;volatile
  2362  002C32                     
  2363                           ; BSR set to: 1
  2364                           ;main.c: 1120:                 dataPanelUp();
  2365  002C32  ECDA  F012         	call	_dataPanelUp	;wreg free
  2366  002C36                     
  2367                           ;main.c: 1121:                 LATDbits.LD1 = 0;
  2368  002C36  928C               	bcf	140,1,c	;volatile
  2369  002C38                     
  2370                           ;main.c: 1122:                 _delay((unsigned long)((300)*(20000000/4000.0)));
  2371  002C38  0E06               	movlw	6
  2372  002C3A  6E78               	movwf	(??_modeControl+1)^0,c
  2373  002C3C  0EB6               	movlw	182
  2374  002C3E  6E77               	movwf	??_modeControl^0,c
  2375  002C40  0EF9               	movlw	249
  2376  002C42                     u4487:
  2377  002C42  FFFF               	dw	65535	; errata NOP
  2378  002C44  2EE8               	decfsz	wreg,f,c
  2379  002C46  D7FD               	bra	u4487
  2380  002C48  2E77               	decfsz	??_modeControl^0,f,c
  2381  002C4A  D7FB               	bra	u4487
  2382  002C4C  2E78               	decfsz	(??_modeControl+1)^0,f,c
  2383  002C4E  D7F9               	bra	u4487
  2384  002C50                     
  2385                           ;main.c: 1124:                 if (tasksUp == 0 && modeUp_F == 1){
  2386  002C50  507B               	movf	_tasksUp^0,w,c
  2387  002C52  107C               	iorwf	(_tasksUp+1)^0,w,c
  2388  002C54  A4D8               	btfss	status,2,c
  2389  002C56  EF2F  F016         	goto	u3731
  2390  002C5A  EF32  F016         	goto	u3730
  2391  002C5E                     u3731:
  2392  002C5E  FFFF               	dw	65535	; assembler added errata NOP
  2393  002C60  EF41  F016         	goto	l4562
  2394  002C64                     u3730:
  2395  002C64  FFFF               	dw	65535	; assembler added errata NOP
  2396  002C66  0101               	movlb	1	; () banked
  2397  002C68  05D6               	decf	_modeUp_F& (0+255),w,b
  2398  002C6A  11D7               	iorwf	(_modeUp_F+1)& (0+255),w,b
  2399  002C6C  A4D8               	btfss	status,2,c
  2400  002C6E  EF3B  F016         	goto	u3741
  2401  002C72  EF3E  F016         	goto	u3740
  2402  002C76                     u3741:
  2403  002C76  FFFF               	dw	65535	; assembler added errata NOP
  2404  002C78  EF41  F016         	goto	l4562
  2405  002C7C                     u3740:
  2406  002C7C  FFFF               	dw	65535	; assembler added errata NOP
  2407  002C7E  EF7A  F019         	goto	l491
  2408  002C82                     l4562:
  2409  002C82  FFFF               	dw	65535	; assembler added errata NOP
  2410                           
  2411                           ;main.c: 1127:                 if (tasksDown == 0 && modeDown_F == 1){
  2412  002C84  507D               	movf	_tasksDown^0,w,c
  2413  002C86  107E               	iorwf	(_tasksDown+1)^0,w,c
  2414  002C88  A4D8               	btfss	status,2,c
  2415  002C8A  EF49  F016         	goto	u3751
  2416  002C8E  EF4C  F016         	goto	u3750
  2417  002C92                     u3751:
  2418  002C92  FFFF               	dw	65535	; assembler added errata NOP
  2419  002C94  EF9D  F015         	goto	l4512
  2420  002C98                     u3750:
  2421  002C98  FFFF               	dw	65535	; assembler added errata NOP
  2422  002C9A  0100               	movlb	0	; () banked
  2423  002C9C  058C               	decf	_modeDown_F& (0+255),w,b
  2424  002C9E  118D               	iorwf	(_modeDown_F+1)& (0+255),w,b
  2425  002CA0  A4D8               	btfss	status,2,c
  2426  002CA2  EF55  F016         	goto	u3761
  2427  002CA6  EF58  F016         	goto	u3760
  2428  002CAA                     u3761:
  2429  002CAA  FFFF               	dw	65535	; assembler added errata NOP
  2430  002CAC  EF9D  F015         	goto	l4512
  2431  002CB0                     u3760:
  2432  002CB0  FFFF               	dw	65535	; assembler added errata NOP
  2433  002CB2  EF7A  F019         	goto	l491
  2434  002CB6                     l4570:
  2435  002CB6  FFFF               	dw	65535	; assembler added errata NOP
  2436                           
  2437                           ; BSR set to: 0
  2438                           ;main.c: 1137:                 if (prevFL < 2){
  2439  002CB8  BF8F               	btfsc	(_prevFL+1)& (0+255),7,b
  2440  002CBA  EF6B  F016         	goto	u3770
  2441  002CBE  518F               	movf	(_prevFL+1)& (0+255),w,b
  2442  002CC0  E107               	bnz	u3771
  2443  002CC2  0E02               	movlw	2
  2444  002CC4  5D8E               	subwf	_prevFL& (0+255),w,b
  2445  002CC6  B0D8               	btfsc	status,0,c
  2446  002CC8  EF68  F016         	goto	u3771
  2447  002CCC  EF6B  F016         	goto	u3770
  2448  002CD0                     u3771:
  2449  002CD0  FFFF               	dw	65535	; assembler added errata NOP
  2450  002CD2  EFC0  F016         	goto	l456
  2451  002CD6                     u3770:
  2452  002CD6  FFFF               	dw	65535	; assembler added errata NOP
  2453  002CD8                     l451:
  2454  002CD8  FFFF               	dw	65535	; assembler added errata NOP
  2455                           
  2456                           ;main.c: 1139:                         LATCbits.LC1 = 0;
  2457  002CDA  928B               	bcf	139,1,c	;volatile
  2458                           
  2459                           ;main.c: 1141:                     }while(!PORTDbits.RD5);
  2460  002CDC  AA83               	btfss	131,5,c	;volatile
  2461  002CDE  EF73  F016         	goto	u3781
  2462  002CE2  EF76  F016         	goto	u3780
  2463  002CE6                     u3781:
  2464  002CE6  FFFF               	dw	65535	; assembler added errata NOP
  2465  002CE8  EF6C  F016         	goto	l451
  2466  002CEC                     u3780:
  2467  002CEC  FFFF               	dw	65535	; assembler added errata NOP
  2468  002CEE                     
  2469                           ;main.c: 1142:                     LATCbits.LC1 = 1;
  2470  002CEE  828B               	bsf	139,1,c	;volatile
  2471  002CF0                     
  2472                           ;main.c: 1143:                     nowFL = 2;
  2473  002CF0  0E00               	movlw	0
  2474  002CF2  0101               	movlb	1	; () banked
  2475  002CF4  6FD9               	movwf	(_nowFL+1)& (0+255),b
  2476  002CF6  0E02               	movlw	2
  2477  002CF8  6FD8               	movwf	_nowFL& (0+255),b
  2478  002CFA                     
  2479                           ; BSR set to: 1
  2480                           ;main.c: 1144:                     LATDbits.LD1 = 1;
  2481  002CFA  828C               	bsf	140,1,c	;volatile
  2482  002CFC                     
  2483                           ; BSR set to: 1
  2484                           ;main.c: 1145:                     dataPanelUp();
  2485  002CFC  ECDA  F012         	call	_dataPanelUp	;wreg free
  2486  002D00                     
  2487                           ;main.c: 1146:                     LATDbits.LD1 = 0;
  2488  002D00  928C               	bcf	140,1,c	;volatile
  2489  002D02                     
  2490                           ;main.c: 1147:                     _delay((unsigned long)((300)*(20000000/4000.0)));
  2491  002D02  0E06               	movlw	6
  2492  002D04  6E78               	movwf	(??_modeControl+1)^0,c
  2493  002D06  0EB6               	movlw	182
  2494  002D08  6E77               	movwf	??_modeControl^0,c
  2495  002D0A  0EF9               	movlw	249
  2496  002D0C                     u4497:
  2497  002D0C  FFFF               	dw	65535	; errata NOP
  2498  002D0E  2EE8               	decfsz	wreg,f,c
  2499  002D10  D7FD               	bra	u4497
  2500  002D12  2E77               	decfsz	??_modeControl^0,f,c
  2501  002D14  D7FB               	bra	u4497
  2502  002D16  2E78               	decfsz	(??_modeControl+1)^0,f,c
  2503  002D18  D7F9               	bra	u4497
  2504  002D1A                     
  2505                           ;main.c: 1149:                     if (tasksUp == 0 && modeUp_F == 1){
  2506  002D1A  507B               	movf	_tasksUp^0,w,c
  2507  002D1C  107C               	iorwf	(_tasksUp+1)^0,w,c
  2508  002D1E  A4D8               	btfss	status,2,c
  2509  002D20  EF94  F016         	goto	u3791
  2510  002D24  EF97  F016         	goto	u3790
  2511  002D28                     u3791:
  2512  002D28  FFFF               	dw	65535	; assembler added errata NOP
  2513  002D2A  EFA6  F016         	goto	l4588
  2514  002D2E                     u3790:
  2515  002D2E  FFFF               	dw	65535	; assembler added errata NOP
  2516  002D30  0101               	movlb	1	; () banked
  2517  002D32  05D6               	decf	_modeUp_F& (0+255),w,b
  2518  002D34  11D7               	iorwf	(_modeUp_F+1)& (0+255),w,b
  2519  002D36  A4D8               	btfss	status,2,c
  2520  002D38  EFA0  F016         	goto	u3801
  2521  002D3C  EFA3  F016         	goto	u3800
  2522  002D40                     u3801:
  2523  002D40  FFFF               	dw	65535	; assembler added errata NOP
  2524  002D42  EFA6  F016         	goto	l4588
  2525  002D46                     u3800:
  2526  002D46  FFFF               	dw	65535	; assembler added errata NOP
  2527  002D48  EF7A  F019         	goto	l491
  2528  002D4C                     l4588:
  2529  002D4C  FFFF               	dw	65535	; assembler added errata NOP
  2530                           
  2531                           ;main.c: 1152:                     if (tasksDown == 0 && modeDown_F == 1){
  2532  002D4E  507D               	movf	_tasksDown^0,w,c
  2533  002D50  107E               	iorwf	(_tasksDown+1)^0,w,c
  2534  002D52  A4D8               	btfss	status,2,c
  2535  002D54  EFAE  F016         	goto	u3811
  2536  002D58  EFB1  F016         	goto	u3810
  2537  002D5C                     u3811:
  2538  002D5C  FFFF               	dw	65535	; assembler added errata NOP
  2539  002D5E  EF9D  F015         	goto	l4512
  2540  002D62                     u3810:
  2541  002D62  FFFF               	dw	65535	; assembler added errata NOP
  2542  002D64  0100               	movlb	0	; () banked
  2543  002D66  058C               	decf	_modeDown_F& (0+255),w,b
  2544  002D68  118D               	iorwf	(_modeDown_F+1)& (0+255),w,b
  2545  002D6A  A4D8               	btfss	status,2,c
  2546  002D6C  EFBA  F016         	goto	u3821
  2547  002D70  EFBD  F016         	goto	u3820
  2548  002D74                     u3821:
  2549  002D74  FFFF               	dw	65535	; assembler added errata NOP
  2550  002D76  EF9D  F015         	goto	l4512
  2551  002D7A                     u3820:
  2552  002D7A  FFFF               	dw	65535	; assembler added errata NOP
  2553  002D7C  EF7A  F019         	goto	l491
  2554  002D80                     l456:
  2555  002D80  FFFF               	dw	65535	; assembler added errata NOP
  2556                           
  2557                           ;main.c: 1160:                         LATCbits.LC0 = 0;
  2558  002D82  908B               	bcf	139,0,c	;volatile
  2559                           
  2560                           ;main.c: 1161:                     }while(!PORTDbits.RD5);
  2561  002D84  AA83               	btfss	131,5,c	;volatile
  2562  002D86  EFC7  F016         	goto	u3831
  2563  002D8A  EFCA  F016         	goto	u3830
  2564  002D8E                     u3831:
  2565  002D8E  FFFF               	dw	65535	; assembler added errata NOP
  2566  002D90  EFC0  F016         	goto	l456
  2567  002D94                     u3830:
  2568  002D94  FFFF               	dw	65535	; assembler added errata NOP
  2569  002D96                     
  2570                           ;main.c: 1162:                     LATCbits.LC0 = 1;
  2571  002D96  808B               	bsf	139,0,c	;volatile
  2572  002D98                     
  2573                           ;main.c: 1163:                     nowFL = 2;
  2574  002D98  0E00               	movlw	0
  2575  002D9A  0101               	movlb	1	; () banked
  2576  002D9C  6FD9               	movwf	(_nowFL+1)& (0+255),b
  2577  002D9E  0E02               	movlw	2
  2578  002DA0  6FD8               	movwf	_nowFL& (0+255),b
  2579  002DA2                     
  2580                           ; BSR set to: 1
  2581                           ;main.c: 1164:                     LATDbits.LD1 = 1;
  2582  002DA2  828C               	bsf	140,1,c	;volatile
  2583  002DA4                     
  2584                           ; BSR set to: 1
  2585                           ;main.c: 1165:                     dataPanelUp();
  2586  002DA4  ECDA  F012         	call	_dataPanelUp	;wreg free
  2587  002DA8                     
  2588                           ;main.c: 1166:                     LATDbits.LD1 = 0;
  2589  002DA8  928C               	bcf	140,1,c	;volatile
  2590  002DAA                     
  2591                           ;main.c: 1167:                     _delay((unsigned long)((300)*(20000000/4000.0)));
  2592  002DAA  0E06               	movlw	6
  2593  002DAC  6E78               	movwf	(??_modeControl+1)^0,c
  2594  002DAE  0EB6               	movlw	182
  2595  002DB0  6E77               	movwf	??_modeControl^0,c
  2596  002DB2  0EF9               	movlw	249
  2597  002DB4                     u4507:
  2598  002DB4  FFFF               	dw	65535	; errata NOP
  2599  002DB6  2EE8               	decfsz	wreg,f,c
  2600  002DB8  D7FD               	bra	u4507
  2601  002DBA  2E77               	decfsz	??_modeControl^0,f,c
  2602  002DBC  D7FB               	bra	u4507
  2603  002DBE  2E78               	decfsz	(??_modeControl+1)^0,f,c
  2604  002DC0  D7F9               	bra	u4507
  2605  002DC2                     
  2606                           ;main.c: 1169:                     if (tasksUp == 0 && modeUp_F == 1){
  2607  002DC2  507B               	movf	_tasksUp^0,w,c
  2608  002DC4  107C               	iorwf	(_tasksUp+1)^0,w,c
  2609  002DC6  A4D8               	btfss	status,2,c
  2610  002DC8  EFE8  F016         	goto	u3841
  2611  002DCC  EFEB  F016         	goto	u3840
  2612  002DD0                     u3841:
  2613  002DD0  FFFF               	dw	65535	; assembler added errata NOP
  2614  002DD2  EFFA  F016         	goto	l4612
  2615  002DD6                     u3840:
  2616  002DD6  FFFF               	dw	65535	; assembler added errata NOP
  2617  002DD8  0101               	movlb	1	; () banked
  2618  002DDA  05D6               	decf	_modeUp_F& (0+255),w,b
  2619  002DDC  11D7               	iorwf	(_modeUp_F+1)& (0+255),w,b
  2620  002DDE  A4D8               	btfss	status,2,c
  2621  002DE0  EFF4  F016         	goto	u3851
  2622  002DE4  EFF7  F016         	goto	u3850
  2623  002DE8                     u3851:
  2624  002DE8  FFFF               	dw	65535	; assembler added errata NOP
  2625  002DEA  EFFA  F016         	goto	l4612
  2626  002DEE                     u3850:
  2627  002DEE  FFFF               	dw	65535	; assembler added errata NOP
  2628  002DF0  EF7A  F019         	goto	l491
  2629  002DF4                     l4612:
  2630  002DF4  FFFF               	dw	65535	; assembler added errata NOP
  2631                           
  2632                           ;main.c: 1172:                     if (tasksDown == 0 && modeDown_F == 1){
  2633  002DF6  507D               	movf	_tasksDown^0,w,c
  2634  002DF8  107E               	iorwf	(_tasksDown+1)^0,w,c
  2635  002DFA  A4D8               	btfss	status,2,c
  2636  002DFC  EF02  F017         	goto	u3861
  2637  002E00  EF05  F017         	goto	u3860
  2638  002E04                     u3861:
  2639  002E04  FFFF               	dw	65535	; assembler added errata NOP
  2640  002E06  EF9D  F015         	goto	l4512
  2641  002E0A                     u3860:
  2642  002E0A  FFFF               	dw	65535	; assembler added errata NOP
  2643  002E0C  0100               	movlb	0	; () banked
  2644  002E0E  058C               	decf	_modeDown_F& (0+255),w,b
  2645  002E10  118D               	iorwf	(_modeDown_F+1)& (0+255),w,b
  2646  002E12  A4D8               	btfss	status,2,c
  2647  002E14  EF0E  F017         	goto	u3871
  2648  002E18  EF11  F017         	goto	u3870
  2649  002E1C                     u3871:
  2650  002E1C  FFFF               	dw	65535	; assembler added errata NOP
  2651  002E1E  EF9D  F015         	goto	l4512
  2652  002E22                     u3870:
  2653  002E22  FFFF               	dw	65535	; assembler added errata NOP
  2654  002E24  EF7A  F019         	goto	l491
  2655  002E28                     l4620:
  2656  002E28  FFFF               	dw	65535	; assembler added errata NOP
  2657                           
  2658                           ;main.c: 1183:             nowFL = 3;
  2659  002E2A  0E00               	movlw	0
  2660  002E2C  0101               	movlb	1	; () banked
  2661  002E2E  6FD9               	movwf	(_nowFL+1)& (0+255),b
  2662  002E30  0E03               	movlw	3
  2663  002E32  6FD8               	movwf	_nowFL& (0+255),b
  2664  002E34                     
  2665                           ; BSR set to: 1
  2666                           ;main.c: 1184:             LCD_Set_Cursor(2,1);
  2667  002E34  0E01               	movlw	1
  2668  002E36  6E06               	movwf	LCD_Set_Cursor@COL^0,c
  2669  002E38  0E02               	movlw	2
  2670  002E3A  ECF4  F004         	call	_LCD_Set_Cursor
  2671  002E3E                     
  2672                           ;main.c: 1185:             LCD_Write_String("Move-to floor3");
  2673  002E3E  0E94               	movlw	low STR_41
  2674  002E40  6E06               	movwf	LCD_Write_String@Str^0,c
  2675  002E42  0E7E               	movlw	high STR_41
  2676  002E44  6E07               	movwf	(LCD_Write_String@Str+1)^0,c
  2677  002E46  EC32  F005         	call	_LCD_Write_String	;wreg free
  2678  002E4A                     
  2679                           ;main.c: 1186:             if (prevFL == 3) {
  2680  002E4A  0E03               	movlw	3
  2681  002E4C  0100               	movlb	0	; () banked
  2682  002E4E  198E               	xorwf	_prevFL& (0+255),w,b
  2683  002E50  118F               	iorwf	(_prevFL+1)& (0+255),w,b
  2684  002E52  A4D8               	btfss	status,2,c
  2685  002E54  EF2E  F017         	goto	u3881
  2686  002E58  EF31  F017         	goto	u3880
  2687  002E5C                     u3881:
  2688  002E5C  FFFF               	dw	65535	; assembler added errata NOP
  2689  002E5E  EF75  F017         	goto	l4650
  2690  002E62                     u3880:
  2691  002E62  FFFF               	dw	65535	; assembler added errata NOP
  2692  002E64                     
  2693                           ; BSR set to: 0
  2694                           ;main.c: 1188:                 LATDbits.LD2 = 1;
  2695  002E64  848C               	bsf	140,2,c	;volatile
  2696  002E66                     
  2697                           ; BSR set to: 0
  2698                           ;main.c: 1189:                 dataPanelUp();
  2699  002E66  ECDA  F012         	call	_dataPanelUp	;wreg free
  2700  002E6A                     
  2701                           ;main.c: 1190:                 LATDbits.LD2 = 0;
  2702  002E6A  948C               	bcf	140,2,c	;volatile
  2703  002E6C                     
  2704                           ;main.c: 1191:                 _delay((unsigned long)((300)*(20000000/4000.0)));
  2705  002E6C  0E06               	movlw	6
  2706  002E6E  6E78               	movwf	(??_modeControl+1)^0,c
  2707  002E70  0EB6               	movlw	182
  2708  002E72  6E77               	movwf	??_modeControl^0,c
  2709  002E74  0EF9               	movlw	249
  2710  002E76                     u4517:
  2711  002E76  FFFF               	dw	65535	; errata NOP
  2712  002E78  2EE8               	decfsz	wreg,f,c
  2713  002E7A  D7FD               	bra	u4517
  2714  002E7C  2E77               	decfsz	??_modeControl^0,f,c
  2715  002E7E  D7FB               	bra	u4517
  2716  002E80  2E78               	decfsz	(??_modeControl+1)^0,f,c
  2717  002E82  D7F9               	bra	u4517
  2718  002E84                     
  2719                           ;main.c: 1193:                 if (tasksUp == 0 && modeUp_F == 1){
  2720  002E84  507B               	movf	_tasksUp^0,w,c
  2721  002E86  107C               	iorwf	(_tasksUp+1)^0,w,c
  2722  002E88  A4D8               	btfss	status,2,c
  2723  002E8A  EF49  F017         	goto	u3891
  2724  002E8E  EF4C  F017         	goto	u3890
  2725  002E92                     u3891:
  2726  002E92  FFFF               	dw	65535	; assembler added errata NOP
  2727  002E94  EF5B  F017         	goto	l4642
  2728  002E98                     u3890:
  2729  002E98  FFFF               	dw	65535	; assembler added errata NOP
  2730  002E9A  0101               	movlb	1	; () banked
  2731  002E9C  05D6               	decf	_modeUp_F& (0+255),w,b
  2732  002E9E  11D7               	iorwf	(_modeUp_F+1)& (0+255),w,b
  2733  002EA0  A4D8               	btfss	status,2,c
  2734  002EA2  EF55  F017         	goto	u3901
  2735  002EA6  EF58  F017         	goto	u3900
  2736  002EAA                     u3901:
  2737  002EAA  FFFF               	dw	65535	; assembler added errata NOP
  2738  002EAC  EF5B  F017         	goto	l4642
  2739  002EB0                     u3900:
  2740  002EB0  FFFF               	dw	65535	; assembler added errata NOP
  2741  002EB2  EF7A  F019         	goto	l491
  2742  002EB6                     l4642:
  2743  002EB6  FFFF               	dw	65535	; assembler added errata NOP
  2744                           
  2745                           ;main.c: 1196:                 if (tasksDown == 0 && modeDown_F == 1){
  2746  002EB8  507D               	movf	_tasksDown^0,w,c
  2747  002EBA  107E               	iorwf	(_tasksDown+1)^0,w,c
  2748  002EBC  A4D8               	btfss	status,2,c
  2749  002EBE  EF63  F017         	goto	u3911
  2750  002EC2  EF66  F017         	goto	u3910
  2751  002EC6                     u3911:
  2752  002EC6  FFFF               	dw	65535	; assembler added errata NOP
  2753  002EC8  EF9D  F015         	goto	l4512
  2754  002ECC                     u3910:
  2755  002ECC  FFFF               	dw	65535	; assembler added errata NOP
  2756  002ECE  0100               	movlb	0	; () banked
  2757  002ED0  058C               	decf	_modeDown_F& (0+255),w,b
  2758  002ED2  118D               	iorwf	(_modeDown_F+1)& (0+255),w,b
  2759  002ED4  A4D8               	btfss	status,2,c
  2760  002ED6  EF6F  F017         	goto	u3921
  2761  002EDA  EF72  F017         	goto	u3920
  2762  002EDE                     u3921:
  2763  002EDE  FFFF               	dw	65535	; assembler added errata NOP
  2764  002EE0  EF9D  F015         	goto	l4512
  2765  002EE4                     u3920:
  2766  002EE4  FFFF               	dw	65535	; assembler added errata NOP
  2767  002EE6  EF7A  F019         	goto	l491
  2768  002EEA                     l4650:
  2769  002EEA  FFFF               	dw	65535	; assembler added errata NOP
  2770                           
  2771                           ; BSR set to: 0
  2772                           ;main.c: 1202:                 if (prevFL < 3){
  2773  002EEC  BF8F               	btfsc	(_prevFL+1)& (0+255),7,b
  2774  002EEE  EF85  F017         	goto	u3930
  2775  002EF2  518F               	movf	(_prevFL+1)& (0+255),w,b
  2776  002EF4  E107               	bnz	u3931
  2777  002EF6  0E03               	movlw	3
  2778  002EF8  5D8E               	subwf	_prevFL& (0+255),w,b
  2779  002EFA  B0D8               	btfsc	status,0,c
  2780  002EFC  EF82  F017         	goto	u3931
  2781  002F00  EF85  F017         	goto	u3930
  2782  002F04                     u3931:
  2783  002F04  FFFF               	dw	65535	; assembler added errata NOP
  2784  002F06  EFDA  F017         	goto	l471
  2785  002F0A                     u3930:
  2786  002F0A  FFFF               	dw	65535	; assembler added errata NOP
  2787  002F0C                     l466:
  2788  002F0C  FFFF               	dw	65535	; assembler added errata NOP
  2789                           
  2790                           ;main.c: 1204:                         LATCbits.LC1 = 0;
  2791  002F0E  928B               	bcf	139,1,c	;volatile
  2792                           
  2793                           ;main.c: 1205:                     }while(!PORTDbits.RD6);
  2794  002F10  AC83               	btfss	131,6,c	;volatile
  2795  002F12  EF8D  F017         	goto	u3941
  2796  002F16  EF90  F017         	goto	u3940
  2797  002F1A                     u3941:
  2798  002F1A  FFFF               	dw	65535	; assembler added errata NOP
  2799  002F1C  EF86  F017         	goto	l466
  2800  002F20                     u3940:
  2801  002F20  FFFF               	dw	65535	; assembler added errata NOP
  2802  002F22                     
  2803                           ;main.c: 1206:                     LATCbits.LC1 = 1;
  2804  002F22  828B               	bsf	139,1,c	;volatile
  2805  002F24                     
  2806                           ;main.c: 1207:                     nowFL = 3;
  2807  002F24  0E00               	movlw	0
  2808  002F26  0101               	movlb	1	; () banked
  2809  002F28  6FD9               	movwf	(_nowFL+1)& (0+255),b
  2810  002F2A  0E03               	movlw	3
  2811  002F2C  6FD8               	movwf	_nowFL& (0+255),b
  2812  002F2E                     
  2813                           ; BSR set to: 1
  2814                           ;main.c: 1208:                     LATDbits.LD2 = 1;
  2815  002F2E  848C               	bsf	140,2,c	;volatile
  2816  002F30                     
  2817                           ; BSR set to: 1
  2818                           ;main.c: 1209:                     dataPanelUp();
  2819  002F30  ECDA  F012         	call	_dataPanelUp	;wreg free
  2820  002F34                     
  2821                           ;main.c: 1210:                     LATDbits.LD2 = 0;
  2822  002F34  948C               	bcf	140,2,c	;volatile
  2823  002F36                     
  2824                           ;main.c: 1211:                     _delay((unsigned long)((300)*(20000000/4000.0)));
  2825  002F36  0E06               	movlw	6
  2826  002F38  6E78               	movwf	(??_modeControl+1)^0,c
  2827  002F3A  0EB6               	movlw	182
  2828  002F3C  6E77               	movwf	??_modeControl^0,c
  2829  002F3E  0EF9               	movlw	249
  2830  002F40                     u4527:
  2831  002F40  FFFF               	dw	65535	; errata NOP
  2832  002F42  2EE8               	decfsz	wreg,f,c
  2833  002F44  D7FD               	bra	u4527
  2834  002F46  2E77               	decfsz	??_modeControl^0,f,c
  2835  002F48  D7FB               	bra	u4527
  2836  002F4A  2E78               	decfsz	(??_modeControl+1)^0,f,c
  2837  002F4C  D7F9               	bra	u4527
  2838  002F4E                     
  2839                           ;main.c: 1213:                     if (tasksUp == 0 && modeUp_F == 1){
  2840  002F4E  507B               	movf	_tasksUp^0,w,c
  2841  002F50  107C               	iorwf	(_tasksUp+1)^0,w,c
  2842  002F52  A4D8               	btfss	status,2,c
  2843  002F54  EFAE  F017         	goto	u3951
  2844  002F58  EFB1  F017         	goto	u3950
  2845  002F5C                     u3951:
  2846  002F5C  FFFF               	dw	65535	; assembler added errata NOP
  2847  002F5E  EFC0  F017         	goto	l4668
  2848  002F62                     u3950:
  2849  002F62  FFFF               	dw	65535	; assembler added errata NOP
  2850  002F64  0101               	movlb	1	; () banked
  2851  002F66  05D6               	decf	_modeUp_F& (0+255),w,b
  2852  002F68  11D7               	iorwf	(_modeUp_F+1)& (0+255),w,b
  2853  002F6A  A4D8               	btfss	status,2,c
  2854  002F6C  EFBA  F017         	goto	u3961
  2855  002F70  EFBD  F017         	goto	u3960
  2856  002F74                     u3961:
  2857  002F74  FFFF               	dw	65535	; assembler added errata NOP
  2858  002F76  EFC0  F017         	goto	l4668
  2859  002F7A                     u3960:
  2860  002F7A  FFFF               	dw	65535	; assembler added errata NOP
  2861  002F7C  EF7A  F019         	goto	l491
  2862  002F80                     l4668:
  2863  002F80  FFFF               	dw	65535	; assembler added errata NOP
  2864                           
  2865                           ;main.c: 1216:                     if (tasksDown == 0 && modeDown_F == 1){
  2866  002F82  507D               	movf	_tasksDown^0,w,c
  2867  002F84  107E               	iorwf	(_tasksDown+1)^0,w,c
  2868  002F86  A4D8               	btfss	status,2,c
  2869  002F88  EFC8  F017         	goto	u3971
  2870  002F8C  EFCB  F017         	goto	u3970
  2871  002F90                     u3971:
  2872  002F90  FFFF               	dw	65535	; assembler added errata NOP
  2873  002F92  EF9D  F015         	goto	l4512
  2874  002F96                     u3970:
  2875  002F96  FFFF               	dw	65535	; assembler added errata NOP
  2876  002F98  0100               	movlb	0	; () banked
  2877  002F9A  058C               	decf	_modeDown_F& (0+255),w,b
  2878  002F9C  118D               	iorwf	(_modeDown_F+1)& (0+255),w,b
  2879  002F9E  A4D8               	btfss	status,2,c
  2880  002FA0  EFD4  F017         	goto	u3981
  2881  002FA4  EFD7  F017         	goto	u3980
  2882  002FA8                     u3981:
  2883  002FA8  FFFF               	dw	65535	; assembler added errata NOP
  2884  002FAA  EF9D  F015         	goto	l4512
  2885  002FAE                     u3980:
  2886  002FAE  FFFF               	dw	65535	; assembler added errata NOP
  2887  002FB0  EF7A  F019         	goto	l491
  2888  002FB4                     l471:
  2889  002FB4  FFFF               	dw	65535	; assembler added errata NOP
  2890                           
  2891                           ;main.c: 1224:                         LATCbits.LC0 = 0;
  2892  002FB6  908B               	bcf	139,0,c	;volatile
  2893                           
  2894                           ;main.c: 1225:                     }while(!PORTDbits.RD6);
  2895  002FB8  AC83               	btfss	131,6,c	;volatile
  2896  002FBA  EFE1  F017         	goto	u3991
  2897  002FBE  EFE4  F017         	goto	u3990
  2898  002FC2                     u3991:
  2899  002FC2  FFFF               	dw	65535	; assembler added errata NOP
  2900  002FC4  EFDA  F017         	goto	l471
  2901  002FC8                     u3990:
  2902  002FC8  FFFF               	dw	65535	; assembler added errata NOP
  2903  002FCA                     
  2904                           ;main.c: 1226:                     LATCbits.LC0 = 1;
  2905  002FCA  808B               	bsf	139,0,c	;volatile
  2906  002FCC                     
  2907                           ;main.c: 1227:                     nowFL = 3;
  2908  002FCC  0E00               	movlw	0
  2909  002FCE  0101               	movlb	1	; () banked
  2910  002FD0  6FD9               	movwf	(_nowFL+1)& (0+255),b
  2911  002FD2  0E03               	movlw	3
  2912  002FD4  6FD8               	movwf	_nowFL& (0+255),b
  2913  002FD6                     
  2914                           ; BSR set to: 1
  2915                           ;main.c: 1228:                     LATDbits.LD2 = 1;
  2916  002FD6  848C               	bsf	140,2,c	;volatile
  2917  002FD8                     
  2918                           ; BSR set to: 1
  2919                           ;main.c: 1229:                     dataPanelUp();
  2920  002FD8  ECDA  F012         	call	_dataPanelUp	;wreg free
  2921  002FDC                     
  2922                           ;main.c: 1230:                     LATDbits.LD2 = 0;
  2923  002FDC  948C               	bcf	140,2,c	;volatile
  2924  002FDE                     
  2925                           ;main.c: 1231:                     _delay((unsigned long)((300)*(20000000/4000.0)));
  2926  002FDE  0E06               	movlw	6
  2927  002FE0  6E78               	movwf	(??_modeControl+1)^0,c
  2928  002FE2  0EB6               	movlw	182
  2929  002FE4  6E77               	movwf	??_modeControl^0,c
  2930  002FE6  0EF9               	movlw	249
  2931  002FE8                     u4537:
  2932  002FE8  FFFF               	dw	65535	; errata NOP
  2933  002FEA  2EE8               	decfsz	wreg,f,c
  2934  002FEC  D7FD               	bra	u4537
  2935  002FEE  2E77               	decfsz	??_modeControl^0,f,c
  2936  002FF0  D7FB               	bra	u4537
  2937  002FF2  2E78               	decfsz	(??_modeControl+1)^0,f,c
  2938  002FF4  D7F9               	bra	u4537
  2939  002FF6                     
  2940                           ;main.c: 1233:                     if (tasksUp == 0 && modeUp_F == 1){
  2941  002FF6  507B               	movf	_tasksUp^0,w,c
  2942  002FF8  107C               	iorwf	(_tasksUp+1)^0,w,c
  2943  002FFA  A4D8               	btfss	status,2,c
  2944  002FFC  EF02  F018         	goto	u4001
  2945  003000  EF05  F018         	goto	u4000
  2946  003004                     u4001:
  2947  003004  FFFF               	dw	65535	; assembler added errata NOP
  2948  003006  EF14  F018         	goto	l4692
  2949  00300A                     u4000:
  2950  00300A  FFFF               	dw	65535	; assembler added errata NOP
  2951  00300C  0101               	movlb	1	; () banked
  2952  00300E  05D6               	decf	_modeUp_F& (0+255),w,b
  2953  003010  11D7               	iorwf	(_modeUp_F+1)& (0+255),w,b
  2954  003012  A4D8               	btfss	status,2,c
  2955  003014  EF0E  F018         	goto	u4011
  2956  003018  EF11  F018         	goto	u4010
  2957  00301C                     u4011:
  2958  00301C  FFFF               	dw	65535	; assembler added errata NOP
  2959  00301E  EF14  F018         	goto	l4692
  2960  003022                     u4010:
  2961  003022  FFFF               	dw	65535	; assembler added errata NOP
  2962  003024  EF7A  F019         	goto	l491
  2963  003028                     l4692:
  2964  003028  FFFF               	dw	65535	; assembler added errata NOP
  2965                           
  2966                           ;main.c: 1236:                     if (tasksDown == 0 && modeDown_F == 1){
  2967  00302A  507D               	movf	_tasksDown^0,w,c
  2968  00302C  107E               	iorwf	(_tasksDown+1)^0,w,c
  2969  00302E  A4D8               	btfss	status,2,c
  2970  003030  EF1C  F018         	goto	u4021
  2971  003034  EF1F  F018         	goto	u4020
  2972  003038                     u4021:
  2973  003038  FFFF               	dw	65535	; assembler added errata NOP
  2974  00303A  EF9D  F015         	goto	l4512
  2975  00303E                     u4020:
  2976  00303E  FFFF               	dw	65535	; assembler added errata NOP
  2977  003040  0100               	movlb	0	; () banked
  2978  003042  058C               	decf	_modeDown_F& (0+255),w,b
  2979  003044  118D               	iorwf	(_modeDown_F+1)& (0+255),w,b
  2980  003046  A4D8               	btfss	status,2,c
  2981  003048  EF28  F018         	goto	u4031
  2982  00304C  EF2B  F018         	goto	u4030
  2983  003050                     u4031:
  2984  003050  FFFF               	dw	65535	; assembler added errata NOP
  2985  003052  EF9D  F015         	goto	l4512
  2986  003056                     u4030:
  2987  003056  FFFF               	dw	65535	; assembler added errata NOP
  2988  003058  EF7A  F019         	goto	l491
  2989  00305C                     l4700:
  2990  00305C  FFFF               	dw	65535	; assembler added errata NOP
  2991                           
  2992                           ;main.c: 1247:             LCD_Set_Cursor(2,1);
  2993  00305E  0E01               	movlw	1
  2994  003060  6E06               	movwf	LCD_Set_Cursor@COL^0,c
  2995  003062  0E02               	movlw	2
  2996  003064  ECF4  F004         	call	_LCD_Set_Cursor
  2997  003068                     
  2998                           ;main.c: 1248:             LCD_Write_String("Move-to floor4");
  2999  003068  0EB2               	movlw	low STR_42
  3000  00306A  6E06               	movwf	LCD_Write_String@Str^0,c
  3001  00306C  0E7E               	movlw	high STR_42
  3002  00306E  6E07               	movwf	(LCD_Write_String@Str+1)^0,c
  3003  003070  EC32  F005         	call	_LCD_Write_String	;wreg free
  3004  003074                     
  3005                           ;main.c: 1250:             if(modeUp_F){
  3006  003074  0101               	movlb	1	; () banked
  3007  003076  51D6               	movf	_modeUp_F& (0+255),w,b
  3008  003078  11D7               	iorwf	(_modeUp_F+1)& (0+255),w,b
  3009  00307A  B4D8               	btfsc	status,2,c
  3010  00307C  EF42  F018         	goto	u4041
  3011  003080  EF45  F018         	goto	u4040
  3012  003084                     u4041:
  3013  003084  FFFF               	dw	65535	; assembler added errata NOP
  3014  003086  EF4B  F018         	goto	l4708
  3015  00308A                     u4040:
  3016  00308A  FFFF               	dw	65535	; assembler added errata NOP
  3017  00308C                     
  3018                           ; BSR set to: 1
  3019                           ;main.c: 1251:                 select_mode = 0;
  3020  00308C  0E00               	movlw	0
  3021  00308E  0100               	movlb	0	; () banked
  3022  003090  6FE2               	movwf	(modeControl@select_mode+1)& (0+255),b
  3023  003092  0E00               	movlw	0
  3024  003094  6FE1               	movwf	modeControl@select_mode& (0+255),b
  3025  003096                     l4708:
  3026  003096  FFFF               	dw	65535	; assembler added errata NOP
  3027                           
  3028                           ;main.c: 1254:             if (prevFL == 4) {
  3029  003098  0E04               	movlw	4
  3030  00309A  0100               	movlb	0	; () banked
  3031  00309C  198E               	xorwf	_prevFL& (0+255),w,b
  3032  00309E  118F               	iorwf	(_prevFL+1)& (0+255),w,b
  3033  0030A0  A4D8               	btfss	status,2,c
  3034  0030A2  EF55  F018         	goto	u4051
  3035  0030A6  EF58  F018         	goto	u4050
  3036  0030AA                     u4051:
  3037  0030AA  FFFF               	dw	65535	; assembler added errata NOP
  3038  0030AC  EFA1  F018         	goto	l4734
  3039  0030B0                     u4050:
  3040  0030B0  FFFF               	dw	65535	; assembler added errata NOP
  3041  0030B2                     
  3042                           ; BSR set to: 0
  3043                           ;main.c: 1255:                 nowFL = 4;
  3044  0030B2  0E00               	movlw	0
  3045  0030B4  0101               	movlb	1	; () banked
  3046  0030B6  6FD9               	movwf	(_nowFL+1)& (0+255),b
  3047  0030B8  0E04               	movlw	4
  3048  0030BA  6FD8               	movwf	_nowFL& (0+255),b
  3049  0030BC                     
  3050                           ; BSR set to: 1
  3051                           ;main.c: 1256:                 LATDbits.LD3 = 1;
  3052  0030BC  868C               	bsf	140,3,c	;volatile
  3053  0030BE                     
  3054                           ; BSR set to: 1
  3055                           ;main.c: 1257:                 dataPanelUp();
  3056  0030BE  ECDA  F012         	call	_dataPanelUp	;wreg free
  3057  0030C2                     
  3058                           ;main.c: 1258:                 LATDbits.LD3 = 0;
  3059  0030C2  968C               	bcf	140,3,c	;volatile
  3060  0030C4                     
  3061                           ;main.c: 1259:                 _delay((unsigned long)((300)*(20000000/4000.0)));
  3062  0030C4  0E06               	movlw	6
  3063  0030C6  6E78               	movwf	(??_modeControl+1)^0,c
  3064  0030C8  0EB6               	movlw	182
  3065  0030CA  6E77               	movwf	??_modeControl^0,c
  3066  0030CC  0EF9               	movlw	249
  3067  0030CE                     u4547:
  3068  0030CE  FFFF               	dw	65535	; errata NOP
  3069  0030D0  2EE8               	decfsz	wreg,f,c
  3070  0030D2  D7FD               	bra	u4547
  3071  0030D4  2E77               	decfsz	??_modeControl^0,f,c
  3072  0030D6  D7FB               	bra	u4547
  3073  0030D8  2E78               	decfsz	(??_modeControl+1)^0,f,c
  3074  0030DA  D7F9               	bra	u4547
  3075  0030DC                     
  3076                           ;main.c: 1260:                 if (tasksUp == 0 && modeUp_F == 1){
  3077  0030DC  507B               	movf	_tasksUp^0,w,c
  3078  0030DE  107C               	iorwf	(_tasksUp+1)^0,w,c
  3079  0030E0  A4D8               	btfss	status,2,c
  3080  0030E2  EF75  F018         	goto	u4061
  3081  0030E6  EF78  F018         	goto	u4060
  3082  0030EA                     u4061:
  3083  0030EA  FFFF               	dw	65535	; assembler added errata NOP
  3084  0030EC  EF87  F018         	goto	l4726
  3085  0030F0                     u4060:
  3086  0030F0  FFFF               	dw	65535	; assembler added errata NOP
  3087  0030F2  0101               	movlb	1	; () banked
  3088  0030F4  05D6               	decf	_modeUp_F& (0+255),w,b
  3089  0030F6  11D7               	iorwf	(_modeUp_F+1)& (0+255),w,b
  3090  0030F8  A4D8               	btfss	status,2,c
  3091  0030FA  EF81  F018         	goto	u4071
  3092  0030FE  EF84  F018         	goto	u4070
  3093  003102                     u4071:
  3094  003102  FFFF               	dw	65535	; assembler added errata NOP
  3095  003104  EF87  F018         	goto	l4726
  3096  003108                     u4070:
  3097  003108  FFFF               	dw	65535	; assembler added errata NOP
  3098  00310A  EF7A  F019         	goto	l491
  3099  00310E                     l4726:
  3100  00310E  FFFF               	dw	65535	; assembler added errata NOP
  3101                           
  3102                           ;main.c: 1263:                 if (tasksDown == 0 && modeDown_F == 1){
  3103  003110  507D               	movf	_tasksDown^0,w,c
  3104  003112  107E               	iorwf	(_tasksDown+1)^0,w,c
  3105  003114  A4D8               	btfss	status,2,c
  3106  003116  EF8F  F018         	goto	u4081
  3107  00311A  EF92  F018         	goto	u4080
  3108  00311E                     u4081:
  3109  00311E  FFFF               	dw	65535	; assembler added errata NOP
  3110  003120  EF9D  F015         	goto	l4512
  3111  003124                     u4080:
  3112  003124  FFFF               	dw	65535	; assembler added errata NOP
  3113  003126  0100               	movlb	0	; () banked
  3114  003128  058C               	decf	_modeDown_F& (0+255),w,b
  3115  00312A  118D               	iorwf	(_modeDown_F+1)& (0+255),w,b
  3116  00312C  A4D8               	btfss	status,2,c
  3117  00312E  EF9B  F018         	goto	u4091
  3118  003132  EF9E  F018         	goto	u4090
  3119  003136                     u4091:
  3120  003136  FFFF               	dw	65535	; assembler added errata NOP
  3121  003138  EF9D  F015         	goto	l4512
  3122  00313C                     u4090:
  3123  00313C  FFFF               	dw	65535	; assembler added errata NOP
  3124  00313E  EF7A  F019         	goto	l491
  3125  003142                     l4734:
  3126  003142  FFFF               	dw	65535	; assembler added errata NOP
  3127                           
  3128                           ; BSR set to: 0
  3129                           ;main.c: 1270:                 if (prevFL < 4){
  3130  003144  BF8F               	btfsc	(_prevFL+1)& (0+255),7,b
  3131  003146  EFB1  F018         	goto	u4100
  3132  00314A  518F               	movf	(_prevFL+1)& (0+255),w,b
  3133  00314C  E107               	bnz	u4101
  3134  00314E  0E04               	movlw	4
  3135  003150  5D8E               	subwf	_prevFL& (0+255),w,b
  3136  003152  B0D8               	btfsc	status,0,c
  3137  003154  EFAE  F018         	goto	u4101
  3138  003158  EFB1  F018         	goto	u4100
  3139  00315C                     u4101:
  3140  00315C  FFFF               	dw	65535	; assembler added errata NOP
  3141  00315E  EF06  F019         	goto	l487
  3142  003162                     u4100:
  3143  003162  FFFF               	dw	65535	; assembler added errata NOP
  3144  003164                     l482:
  3145  003164  FFFF               	dw	65535	; assembler added errata NOP
  3146                           
  3147                           ;main.c: 1272:                         LATCbits.LC1 = 0;
  3148  003166  928B               	bcf	139,1,c	;volatile
  3149                           
  3150                           ;main.c: 1273:                     }while(!PORTDbits.RD7);
  3151  003168  AE83               	btfss	131,7,c	;volatile
  3152  00316A  EFB9  F018         	goto	u4111
  3153  00316E  EFBC  F018         	goto	u4110
  3154  003172                     u4111:
  3155  003172  FFFF               	dw	65535	; assembler added errata NOP
  3156  003174  EFB2  F018         	goto	l482
  3157  003178                     u4110:
  3158  003178  FFFF               	dw	65535	; assembler added errata NOP
  3159  00317A                     
  3160                           ;main.c: 1274:                     LATCbits.LC1 = 1;
  3161  00317A  828B               	bsf	139,1,c	;volatile
  3162  00317C                     
  3163                           ;main.c: 1275:                     nowFL = 4;
  3164  00317C  0E00               	movlw	0
  3165  00317E  0101               	movlb	1	; () banked
  3166  003180  6FD9               	movwf	(_nowFL+1)& (0+255),b
  3167  003182  0E04               	movlw	4
  3168  003184  6FD8               	movwf	_nowFL& (0+255),b
  3169  003186                     
  3170                           ; BSR set to: 1
  3171                           ;main.c: 1276:                     LATDbits.LD3 = 1;
  3172  003186  868C               	bsf	140,3,c	;volatile
  3173  003188                     
  3174                           ; BSR set to: 1
  3175                           ;main.c: 1277:                     dataPanelUp();
  3176  003188  ECDA  F012         	call	_dataPanelUp	;wreg free
  3177  00318C                     
  3178                           ;main.c: 1278:                     LATDbits.LD3 = 0;
  3179  00318C  968C               	bcf	140,3,c	;volatile
  3180  00318E                     
  3181                           ;main.c: 1279:                     _delay((unsigned long)((300)*(20000000/4000.0)));
  3182  00318E  0E06               	movlw	6
  3183  003190  6E78               	movwf	(??_modeControl+1)^0,c
  3184  003192  0EB6               	movlw	182
  3185  003194  6E77               	movwf	??_modeControl^0,c
  3186  003196  0EF9               	movlw	249
  3187  003198                     u4557:
  3188  003198  FFFF               	dw	65535	; errata NOP
  3189  00319A  2EE8               	decfsz	wreg,f,c
  3190  00319C  D7FD               	bra	u4557
  3191  00319E  2E77               	decfsz	??_modeControl^0,f,c
  3192  0031A0  D7FB               	bra	u4557
  3193  0031A2  2E78               	decfsz	(??_modeControl+1)^0,f,c
  3194  0031A4  D7F9               	bra	u4557
  3195  0031A6                     
  3196                           ;main.c: 1280:                     if (tasksUp == 0 && modeUp_F == 1){
  3197  0031A6  507B               	movf	_tasksUp^0,w,c
  3198  0031A8  107C               	iorwf	(_tasksUp+1)^0,w,c
  3199  0031AA  A4D8               	btfss	status,2,c
  3200  0031AC  EFDA  F018         	goto	u4121
  3201  0031B0  EFDD  F018         	goto	u4120
  3202  0031B4                     u4121:
  3203  0031B4  FFFF               	dw	65535	; assembler added errata NOP
  3204  0031B6  EFEC  F018         	goto	l4752
  3205  0031BA                     u4120:
  3206  0031BA  FFFF               	dw	65535	; assembler added errata NOP
  3207  0031BC  0101               	movlb	1	; () banked
  3208  0031BE  05D6               	decf	_modeUp_F& (0+255),w,b
  3209  0031C0  11D7               	iorwf	(_modeUp_F+1)& (0+255),w,b
  3210  0031C2  A4D8               	btfss	status,2,c
  3211  0031C4  EFE6  F018         	goto	u4131
  3212  0031C8  EFE9  F018         	goto	u4130
  3213  0031CC                     u4131:
  3214  0031CC  FFFF               	dw	65535	; assembler added errata NOP
  3215  0031CE  EFEC  F018         	goto	l4752
  3216  0031D2                     u4130:
  3217  0031D2  FFFF               	dw	65535	; assembler added errata NOP
  3218  0031D4  EF7A  F019         	goto	l491
  3219  0031D8                     l4752:
  3220  0031D8  FFFF               	dw	65535	; assembler added errata NOP
  3221                           
  3222                           ;main.c: 1283:                     if (tasksDown == 0 && modeDown_F == 1){
  3223  0031DA  507D               	movf	_tasksDown^0,w,c
  3224  0031DC  107E               	iorwf	(_tasksDown+1)^0,w,c
  3225  0031DE  A4D8               	btfss	status,2,c
  3226  0031E0  EFF4  F018         	goto	u4141
  3227  0031E4  EFF7  F018         	goto	u4140
  3228  0031E8                     u4141:
  3229  0031E8  FFFF               	dw	65535	; assembler added errata NOP
  3230  0031EA  EF9D  F015         	goto	l4512
  3231  0031EE                     u4140:
  3232  0031EE  FFFF               	dw	65535	; assembler added errata NOP
  3233  0031F0  0100               	movlb	0	; () banked
  3234  0031F2  058C               	decf	_modeDown_F& (0+255),w,b
  3235  0031F4  118D               	iorwf	(_modeDown_F+1)& (0+255),w,b
  3236  0031F6  A4D8               	btfss	status,2,c
  3237  0031F8  EF00  F019         	goto	u4151
  3238  0031FC  EF03  F019         	goto	u4150
  3239  003200                     u4151:
  3240  003200  FFFF               	dw	65535	; assembler added errata NOP
  3241  003202  EF9D  F015         	goto	l4512
  3242  003206                     u4150:
  3243  003206  FFFF               	dw	65535	; assembler added errata NOP
  3244  003208  EF7A  F019         	goto	l491
  3245  00320C                     l487:
  3246  00320C  FFFF               	dw	65535	; assembler added errata NOP
  3247                           
  3248                           ;main.c: 1291:                         LATCbits.LC0 = 0;
  3249  00320E  908B               	bcf	139,0,c	;volatile
  3250                           
  3251                           ;main.c: 1292:                     }while(!PORTDbits.RD7);
  3252  003210  AE83               	btfss	131,7,c	;volatile
  3253  003212  EF0D  F019         	goto	u4161
  3254  003216  EF10  F019         	goto	u4160
  3255  00321A                     u4161:
  3256  00321A  FFFF               	dw	65535	; assembler added errata NOP
  3257  00321C  EF06  F019         	goto	l487
  3258  003220                     u4160:
  3259  003220  FFFF               	dw	65535	; assembler added errata NOP
  3260  003222                     
  3261                           ;main.c: 1293:                     LATCbits.LC0 = 1;
  3262  003222  808B               	bsf	139,0,c	;volatile
  3263  003224                     
  3264                           ;main.c: 1294:                     nowFL = 4;
  3265  003224  0E00               	movlw	0
  3266  003226  0101               	movlb	1	; () banked
  3267  003228  6FD9               	movwf	(_nowFL+1)& (0+255),b
  3268  00322A  0E04               	movlw	4
  3269  00322C  6FD8               	movwf	_nowFL& (0+255),b
  3270  00322E                     
  3271                           ; BSR set to: 1
  3272                           ;main.c: 1295:                     LATDbits.LD3 = 1;
  3273  00322E  868C               	bsf	140,3,c	;volatile
  3274  003230                     
  3275                           ; BSR set to: 1
  3276                           ;main.c: 1296:                     dataPanelUp();
  3277  003230  ECDA  F012         	call	_dataPanelUp	;wreg free
  3278  003234                     
  3279                           ;main.c: 1297:                     LATDbits.LD3 = 0;
  3280  003234  968C               	bcf	140,3,c	;volatile
  3281  003236                     
  3282                           ;main.c: 1298:                     _delay((unsigned long)((300)*(20000000/4000.0)));
  3283  003236  0E06               	movlw	6
  3284  003238  6E78               	movwf	(??_modeControl+1)^0,c
  3285  00323A  0EB6               	movlw	182
  3286  00323C  6E77               	movwf	??_modeControl^0,c
  3287  00323E  0EF9               	movlw	249
  3288  003240                     u4567:
  3289  003240  FFFF               	dw	65535	; errata NOP
  3290  003242  2EE8               	decfsz	wreg,f,c
  3291  003244  D7FD               	bra	u4567
  3292  003246  2E77               	decfsz	??_modeControl^0,f,c
  3293  003248  D7FB               	bra	u4567
  3294  00324A  2E78               	decfsz	(??_modeControl+1)^0,f,c
  3295  00324C  D7F9               	bra	u4567
  3296  00324E                     
  3297                           ;main.c: 1299:                     if (tasksUp == 0 && modeUp_F == 1){
  3298  00324E  507B               	movf	_tasksUp^0,w,c
  3299  003250  107C               	iorwf	(_tasksUp+1)^0,w,c
  3300  003252  A4D8               	btfss	status,2,c
  3301  003254  EF2E  F019         	goto	u4171
  3302  003258  EF31  F019         	goto	u4170
  3303  00325C                     u4171:
  3304  00325C  FFFF               	dw	65535	; assembler added errata NOP
  3305  00325E  EF40  F019         	goto	l4776
  3306  003262                     u4170:
  3307  003262  FFFF               	dw	65535	; assembler added errata NOP
  3308  003264  0101               	movlb	1	; () banked
  3309  003266  05D6               	decf	_modeUp_F& (0+255),w,b
  3310  003268  11D7               	iorwf	(_modeUp_F+1)& (0+255),w,b
  3311  00326A  A4D8               	btfss	status,2,c
  3312  00326C  EF3A  F019         	goto	u4181
  3313  003270  EF3D  F019         	goto	u4180
  3314  003274                     u4181:
  3315  003274  FFFF               	dw	65535	; assembler added errata NOP
  3316  003276  EF40  F019         	goto	l4776
  3317  00327A                     u4180:
  3318  00327A  FFFF               	dw	65535	; assembler added errata NOP
  3319  00327C  EF7A  F019         	goto	l491
  3320  003280                     l4776:
  3321  003280  FFFF               	dw	65535	; assembler added errata NOP
  3322                           
  3323                           ;main.c: 1302:                     if (tasksDown == 0 && modeDown_F == 1){
  3324  003282  507D               	movf	_tasksDown^0,w,c
  3325  003284  107E               	iorwf	(_tasksDown+1)^0,w,c
  3326  003286  A4D8               	btfss	status,2,c
  3327  003288  EF48  F019         	goto	u4191
  3328  00328C  EF4B  F019         	goto	u4190
  3329  003290                     u4191:
  3330  003290  FFFF               	dw	65535	; assembler added errata NOP
  3331  003292  EF9D  F015         	goto	l4512
  3332  003296                     u4190:
  3333  003296  FFFF               	dw	65535	; assembler added errata NOP
  3334  003298  0100               	movlb	0	; () banked
  3335  00329A  058C               	decf	_modeDown_F& (0+255),w,b
  3336  00329C  118D               	iorwf	(_modeDown_F+1)& (0+255),w,b
  3337  00329E  A4D8               	btfss	status,2,c
  3338  0032A0  EF54  F019         	goto	u4201
  3339  0032A4  EF57  F019         	goto	u4200
  3340  0032A8                     u4201:
  3341  0032A8  FFFF               	dw	65535	; assembler added errata NOP
  3342  0032AA  EF9D  F015         	goto	l4512
  3343  0032AE                     u4200:
  3344  0032AE  FFFF               	dw	65535	; assembler added errata NOP
  3345  0032B0  EF7A  F019         	goto	l491
  3346  0032B4                     l4786:
  3347  0032B4  FFFF               	dw	65535	; assembler added errata NOP
  3348  0032B6  C090  F077         	movff	_call_init,??_modeControl
  3349  0032BA  C091  F078         	movff	_call_init+1,??_modeControl+1
  3350                           
  3351                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3352                           ; Switch size 1, requested type "simple"
  3353                           ; Number of cases is 1, Range of values is 0 to 0
  3354                           ; switch strategies available:
  3355                           ; Name         Instructions Cycles
  3356                           ; simple_byte            4     3 (average)
  3357                           ;	Chosen strategy is simple_byte
  3358  0032BE  5078               	movf	(??_modeControl+1)^0,w,c
  3359  0032C0  0A00               	xorlw	0	; case 0
  3360  0032C2  B4D8               	btfsc	status,2,c
  3361  0032C4  EF66  F019         	goto	l5100
  3362  0032C8  EF7A  F019         	goto	l491
  3363  0032CC                     l5100:
  3364  0032CC  FFFF               	dw	65535	; assembler added errata NOP
  3365                           
  3366                           ; Switch size 1, requested type "simple"
  3367                           ; Number of cases is 4, Range of values is 1 to 4
  3368                           ; switch strategies available:
  3369                           ; Name         Instructions Cycles
  3370                           ; simple_byte           13     7 (average)
  3371                           ;	Chosen strategy is simple_byte
  3372  0032CE  5077               	movf	??_modeControl^0,w,c
  3373  0032D0  0A01               	xorlw	1	; case 1
  3374  0032D2  B4D8               	btfsc	status,2,c
  3375  0032D4  EF3D  F015         	goto	l4484
  3376  0032D8  0A03               	xorlw	3	; case 2
  3377  0032DA  B4D8               	btfsc	status,2,c
  3378  0032DC  EFFA  F015         	goto	l4540
  3379  0032E0  0A01               	xorlw	1	; case 3
  3380  0032E2  B4D8               	btfsc	status,2,c
  3381  0032E4  EF14  F017         	goto	l4620
  3382  0032E8  0A07               	xorlw	7	; case 4
  3383  0032EA  B4D8               	btfsc	status,2,c
  3384  0032EC  EF2E  F018         	goto	l4700
  3385  0032F0  EF7A  F019         	goto	l491
  3386  0032F4                     l491:
  3387  0032F4  FFFF               	dw	65535	; assembler added errata NOP
  3388  0032F6  0012               	return		;funcret
  3389  0032F8  FFFF               	dw	65535	; errata NOP
  3390  0032FA                     __end_of_modeControl:
  3391                           	callstack 0
  3392                           
  3393 ;; *************** function _selectionMode *****************
  3394 ;; Defined at:
  3395 ;;		line 979 in file "main.c"
  3396 ;; Parameters:    Size  Location     Type
  3397 ;;  mode_s          2   32[BANK0 ] unsigned int 
  3398 ;; Auto vars:     Size  Location     Type
  3399 ;;  i               2  116[COMRAM] int 
  3400 ;;  i               2  114[COMRAM] int 
  3401 ;; Return value:  Size  Location     Type
  3402 ;;                  1    wreg      void 
  3403 ;; Registers used:
  3404 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3405 ;; Tracked objects:
  3406 ;;		On entry : 0/0
  3407 ;;		On exit  : 0/0
  3408 ;;		Unchanged: 0/0
  3409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3410 ;;      Params:         0       2       0       0       0       0       0
  3411 ;;      Locals:         4       0       0       0       0       0       0
  3412 ;;      Temps:          1       0       0       0       0       0       0
  3413 ;;      Totals:         5       2       0       0       0       0       0
  3414 ;;Total ram usage:        7 bytes
  3415 ;; Hardware stack levels used: 1
  3416 ;; Hardware stack levels required when called: 10
  3417 ;; This function calls:
  3418 ;;		_LCD_Clear
  3419 ;;		_LCD_Set_Cursor
  3420 ;;		_LCD_Write_String
  3421 ;;		_rutine_down
  3422 ;;		_rutine_up
  3423 ;;		_sprintf
  3424 ;; This function is called by:
  3425 ;;		_modeControl
  3426 ;; This function uses a non-reentrant model
  3427 ;;
  3428                           
  3429                           	psect	text2
  3430  001252                     __ptext2:
  3431                           	callstack 0
  3432  001252                     _selectionMode:
  3433                           	callstack 0
  3434  001252  FFFF               	dw	65535	; assembler added errata NOP
  3435  001254                     
  3436                           ;main.c: 980:     if (mode_s == 1){
  3437  001254  0100               	movlb	0	; () banked
  3438  001256  05DF               	decf	selectionMode@mode_s& (0+255),w,b
  3439  001258  11E0               	iorwf	(selectionMode@mode_s+1)& (0+255),w,b
  3440  00125A  A4D8               	btfss	status,2,c
  3441  00125C  EF32  F009         	goto	u3521
  3442  001260  EF35  F009         	goto	u3520
  3443  001264                     u3521:
  3444  001264  FFFF               	dw	65535	; assembler added errata NOP
  3445  001266  EF9A  F009         	goto	l4382
  3446  00126A                     u3520:
  3447  00126A  FFFF               	dw	65535	; assembler added errata NOP
  3448  00126C                     
  3449                           ; BSR set to: 0
  3450                           ;main.c: 982:         LATCbits.LC1 = 0;
  3451  00126C  928B               	bcf	139,1,c	;volatile
  3452  00126E                     
  3453                           ; BSR set to: 0
  3454                           ;main.c: 984:         LCD_Clear();
  3455  00126E  ECF4  F002         	call	_LCD_Clear	;wreg free
  3456                           
  3457                           ;main.c: 985:         LCD_Set_Cursor(1,1);
  3458  001272  0E01               	movlw	1
  3459  001274  6E06               	movwf	LCD_Set_Cursor@COL^0,c
  3460  001276  0E01               	movlw	1
  3461  001278  ECF4  F004         	call	_LCD_Set_Cursor
  3462  00127C                     
  3463                           ;main.c: 986:         LCD_Write_String("[Mode Up]");
  3464  00127C  0ECD               	movlw	low STR_33
  3465  00127E  6E06               	movwf	LCD_Write_String@Str^0,c
  3466  001280  0E7F               	movlw	high STR_33
  3467  001282  6E07               	movwf	(LCD_Write_String@Str+1)^0,c
  3468  001284  EC32  F005         	call	_LCD_Write_String	;wreg free
  3469  001288                     
  3470                           ;main.c: 987:         for (int i = 0; i < tasksUp; i++){
  3471  001288  0E00               	movlw	0
  3472  00128A  6E74               	movwf	(selectionMode@i+1)^0,c
  3473  00128C  0E00               	movlw	0
  3474  00128E  6E73               	movwf	selectionMode@i^0,c
  3475  001290  EF71  F009         	goto	l4374
  3476  001294                     l4364:
  3477  001294  FFFF               	dw	65535	; assembler added errata NOP
  3478                           
  3479                           ;main.c: 989:             sprintf(buffer, "%d", queueUp[i]);
  3480  001296  0E97               	movlw	low _buffer
  3481  001298  6E58               	movwf	sprintf@s^0,c
  3482  00129A  0E00               	movlw	high _buffer
  3483  00129C  6E59               	movwf	(sprintf@s+1)^0,c
  3484  00129E  0EFC               	movlw	low STR_6
  3485  0012A0  6E5A               	movwf	sprintf@fmt^0,c
  3486  0012A2  0E7F               	movlw	high STR_6
  3487  0012A4  6E5B               	movwf	(sprintf@fmt+1)^0,c
  3488  0012A6  90D8               	bcf	status,0,c
  3489  0012A8  3473               	rlcf	selectionMode@i^0,w,c
  3490  0012AA  6ED9               	movwf	fsr2l,c
  3491  0012AC  3474               	rlcf	(selectionMode@i+1)^0,w,c
  3492  0012AE  6EDA               	movwf	fsr2h,c
  3493  0012B0  0E00               	movlw	low _queueUp
  3494  0012B2  26D9               	addwf	fsr2l,f,c
  3495  0012B4  0E02               	movlw	high _queueUp
  3496  0012B6  22DA               	addwfc	fsr2h,f,c
  3497  0012B8  CFDE F05C          	movff	postinc2,?_sprintf+4
  3498  0012BC  CFDD F05D          	movff	postdec2,?_sprintf+5
  3499  0012C0  ECE9  F003         	call	_sprintf	;wreg free
  3500  0012C4                     
  3501                           ;main.c: 990:             LCD_Set_Cursor(2, pLCD);
  3502  0012C4  C0E3  F006         	movff	_pLCD,LCD_Set_Cursor@COL
  3503  0012C8  0E02               	movlw	2
  3504  0012CA  ECF4  F004         	call	_LCD_Set_Cursor
  3505  0012CE                     
  3506                           ;main.c: 991:             LCD_Write_String(buffer);
  3507  0012CE  0E97               	movlw	low _buffer
  3508  0012D0  6E06               	movwf	LCD_Write_String@Str^0,c
  3509  0012D2  0E00               	movlw	high _buffer
  3510  0012D4  6E07               	movwf	(LCD_Write_String@Str+1)^0,c
  3511  0012D6  EC32  F005         	call	_LCD_Write_String	;wreg free
  3512  0012DA                     
  3513                           ;main.c: 992:             pLCD++;
  3514  0012DA  0100               	movlb	0	; () banked
  3515  0012DC  2BE3               	incf	_pLCD& (0+255),f,b
  3516  0012DE                     
  3517                           ; BSR set to: 0
  3518                           ;main.c: 993:         }
  3519  0012DE  4A73               	infsnz	selectionMode@i^0,f,c
  3520  0012E0  2A74               	incf	(selectionMode@i+1)^0,f,c
  3521  0012E2                     l4374:
  3522  0012E2  FFFF               	dw	65535	; assembler added errata NOP
  3523  0012E4  507B               	movf	_tasksUp^0,w,c
  3524  0012E6  5C73               	subwf	selectionMode@i^0,w,c
  3525  0012E8  5074               	movf	(selectionMode@i+1)^0,w,c
  3526  0012EA  0A80               	xorlw	128
  3527  0012EC  6E72               	movwf	??_selectionMode^0,c
  3528  0012EE  507C               	movf	(_tasksUp+1)^0,w,c
  3529  0012F0  0A80               	xorlw	128
  3530  0012F2  5872               	subwfb	??_selectionMode^0,w,c
  3531  0012F4  A0D8               	btfss	status,0,c
  3532  0012F6  EF7F  F009         	goto	u3531
  3533  0012FA  EF82  F009         	goto	u3530
  3534  0012FE                     u3531:
  3535  0012FE  FFFF               	dw	65535	; assembler added errata NOP
  3536  001300  EF4A  F009         	goto	l4364
  3537  001304                     u3530:
  3538  001304  FFFF               	dw	65535	; assembler added errata NOP
  3539  001306                     
  3540                           ;main.c: 994:         pLCD = 1;
  3541  001306  0E01               	movlw	1
  3542  001308  0100               	movlb	0	; () banked
  3543  00130A  6FE3               	movwf	_pLCD& (0+255),b
  3544  00130C                     l4378:
  3545  00130C  FFFF               	dw	65535	; assembler added errata NOP
  3546                           
  3547                           ;main.c: 997:             if(rutine_up()){
  3548  00130E  ECF9  F00A         	call	_rutine_up	;wreg free
  3549  001312  5068               	movf	?_rutine_up^0,w,c
  3550  001314  1069               	iorwf	(?_rutine_up+1)^0,w,c
  3551  001316  B4D8               	btfsc	status,2,c
  3552  001318  EF90  F009         	goto	u3541
  3553  00131C  EF93  F009         	goto	u3540
  3554  001320                     u3541:
  3555  001320  FFFF               	dw	65535	; assembler added errata NOP
  3556  001322  EF86  F009         	goto	l4378
  3557  001326                     u3540:
  3558  001326  FFFF               	dw	65535	; assembler added errata NOP
  3559  001328                     
  3560                           ;main.c: 998:                 LATCbits.LC0 = 1;
  3561  001328  808B               	bsf	139,0,c	;volatile
  3562                           
  3563                           ;main.c: 999:                 LATCbits.LC1 = 1;
  3564  00132A  828B               	bsf	139,1,c	;volatile
  3565  00132C                     
  3566                           ;main.c: 1004:         LATCbits.LC0 = 1;
  3567  00132C  808B               	bsf	139,0,c	;volatile
  3568                           
  3569                           ;main.c: 1005:         LATCbits.LC1 = 1;
  3570  00132E  828B               	bsf	139,1,c	;volatile
  3571                           
  3572                           ;main.c: 1006:     }
  3573  001330  EF08  F00A         	goto	l428
  3574  001334                     l4382:
  3575  001334  FFFF               	dw	65535	; assembler added errata NOP
  3576                           
  3577                           ; BSR set to: 0
  3578  001336  51DF               	movf	selectionMode@mode_s& (0+255),w,b
  3579  001338  11E0               	iorwf	(selectionMode@mode_s+1)& (0+255),w,b
  3580  00133A  A4D8               	btfss	status,2,c
  3581  00133C  EFA2  F009         	goto	u3551
  3582  001340  EFA5  F009         	goto	u3550
  3583  001344                     u3551:
  3584  001344  FFFF               	dw	65535	; assembler added errata NOP
  3585  001346  EF08  F00A         	goto	l428
  3586  00134A                     u3550:
  3587  00134A  FFFF               	dw	65535	; assembler added errata NOP
  3588  00134C                     
  3589                           ; BSR set to: 0
  3590                           ;main.c: 1009:         LATCbits.LC0 = 0;
  3591  00134C  908B               	bcf	139,0,c	;volatile
  3592  00134E                     
  3593                           ; BSR set to: 0
  3594                           ;main.c: 1011:         LCD_Clear();
  3595  00134E  ECF4  F002         	call	_LCD_Clear	;wreg free
  3596                           
  3597                           ;main.c: 1012:         LCD_Set_Cursor(1,1);
  3598  001352  0E01               	movlw	1
  3599  001354  6E06               	movwf	LCD_Set_Cursor@COL^0,c
  3600  001356  0E01               	movlw	1
  3601  001358  ECF4  F004         	call	_LCD_Set_Cursor
  3602  00135C                     
  3603                           ;main.c: 1013:         LCD_Write_String("[Mode Down]");
  3604  00135C  0E7E               	movlw	low STR_35
  3605  00135E  6E06               	movwf	LCD_Write_String@Str^0,c
  3606  001360  0E7F               	movlw	high STR_35
  3607  001362  6E07               	movwf	(LCD_Write_String@Str+1)^0,c
  3608  001364  EC32  F005         	call	_LCD_Write_String	;wreg free
  3609  001368                     
  3610                           ;main.c: 1014:         for (int i = 0; i < tasksDown; i++){
  3611  001368  0E00               	movlw	0
  3612  00136A  6E76               	movwf	(selectionMode@i_670+1)^0,c
  3613  00136C  0E00               	movlw	0
  3614  00136E  6E75               	movwf	selectionMode@i_670^0,c
  3615  001370  EFE1  F009         	goto	l4402
  3616  001374                     l4392:
  3617  001374  FFFF               	dw	65535	; assembler added errata NOP
  3618                           
  3619                           ;main.c: 1016:             sprintf(buffer, "%d", queueDown[i]);
  3620  001376  0E97               	movlw	low _buffer
  3621  001378  6E58               	movwf	sprintf@s^0,c
  3622  00137A  0E00               	movlw	high _buffer
  3623  00137C  6E59               	movwf	(sprintf@s+1)^0,c
  3624  00137E  0EFC               	movlw	low STR_6
  3625  001380  6E5A               	movwf	sprintf@fmt^0,c
  3626  001382  0E7F               	movlw	high STR_6
  3627  001384  6E5B               	movwf	(sprintf@fmt+1)^0,c
  3628  001386  90D8               	bcf	status,0,c
  3629  001388  3475               	rlcf	selectionMode@i_670^0,w,c
  3630  00138A  6ED9               	movwf	fsr2l,c
  3631  00138C  3476               	rlcf	(selectionMode@i_670+1)^0,w,c
  3632  00138E  6EDA               	movwf	fsr2h,c
  3633  001390  0E00               	movlw	low _queueDown
  3634  001392  26D9               	addwf	fsr2l,f,c
  3635  001394  0E03               	movlw	high _queueDown
  3636  001396  22DA               	addwfc	fsr2h,f,c
  3637  001398  CFDE F05C          	movff	postinc2,?_sprintf+4
  3638  00139C  CFDD F05D          	movff	postdec2,?_sprintf+5
  3639  0013A0  ECE9  F003         	call	_sprintf	;wreg free
  3640  0013A4                     
  3641                           ;main.c: 1017:             LCD_Set_Cursor(2, pLCD);
  3642  0013A4  C0E3  F006         	movff	_pLCD,LCD_Set_Cursor@COL
  3643  0013A8  0E02               	movlw	2
  3644  0013AA  ECF4  F004         	call	_LCD_Set_Cursor
  3645  0013AE                     
  3646                           ;main.c: 1018:             LCD_Write_String(buffer);
  3647  0013AE  0E97               	movlw	low _buffer
  3648  0013B0  6E06               	movwf	LCD_Write_String@Str^0,c
  3649  0013B2  0E00               	movlw	high _buffer
  3650  0013B4  6E07               	movwf	(LCD_Write_String@Str+1)^0,c
  3651  0013B6  EC32  F005         	call	_LCD_Write_String	;wreg free
  3652  0013BA                     
  3653                           ;main.c: 1019:             pLCD++;
  3654  0013BA  0100               	movlb	0	; () banked
  3655  0013BC  2BE3               	incf	_pLCD& (0+255),f,b
  3656  0013BE                     
  3657                           ; BSR set to: 0
  3658                           ;main.c: 1020:         }
  3659  0013BE  4A75               	infsnz	selectionMode@i_670^0,f,c
  3660  0013C0  2A76               	incf	(selectionMode@i_670+1)^0,f,c
  3661  0013C2                     l4402:
  3662  0013C2  FFFF               	dw	65535	; assembler added errata NOP
  3663  0013C4  507D               	movf	_tasksDown^0,w,c
  3664  0013C6  5C75               	subwf	selectionMode@i_670^0,w,c
  3665  0013C8  5076               	movf	(selectionMode@i_670+1)^0,w,c
  3666  0013CA  0A80               	xorlw	128
  3667  0013CC  6E72               	movwf	??_selectionMode^0,c
  3668  0013CE  507E               	movf	(_tasksDown+1)^0,w,c
  3669  0013D0  0A80               	xorlw	128
  3670  0013D2  5872               	subwfb	??_selectionMode^0,w,c
  3671  0013D4  A0D8               	btfss	status,0,c
  3672  0013D6  EFEF  F009         	goto	u3561
  3673  0013DA  EFF2  F009         	goto	u3560
  3674  0013DE                     u3561:
  3675  0013DE  FFFF               	dw	65535	; assembler added errata NOP
  3676  0013E0  EFBA  F009         	goto	l4392
  3677  0013E4                     u3560:
  3678  0013E4  FFFF               	dw	65535	; assembler added errata NOP
  3679  0013E6                     
  3680                           ;main.c: 1021:         pLCD = 1;
  3681  0013E6  0E01               	movlw	1
  3682  0013E8  0100               	movlb	0	; () banked
  3683  0013EA  6FE3               	movwf	_pLCD& (0+255),b
  3684  0013EC                     l4406:
  3685  0013EC  FFFF               	dw	65535	; assembler added errata NOP
  3686                           
  3687                           ;main.c: 1024:             if(rutine_down()){
  3688  0013EE  EC36  F00E         	call	_rutine_down	;wreg free
  3689  0013F2  5068               	movf	?_rutine_down^0,w,c
  3690  0013F4  1069               	iorwf	(?_rutine_down+1)^0,w,c
  3691  0013F6  B4D8               	btfsc	status,2,c
  3692  0013F8  EF00  F00A         	goto	u3571
  3693  0013FC  EF03  F00A         	goto	u3570
  3694  001400                     u3571:
  3695  001400  FFFF               	dw	65535	; assembler added errata NOP
  3696  001402  EFF6  F009         	goto	l4406
  3697  001406                     u3570:
  3698  001406  FFFF               	dw	65535	; assembler added errata NOP
  3699  001408                     
  3700                           ;main.c: 1025:                 LATCbits.LC0 = 1;
  3701  001408  808B               	bsf	139,0,c	;volatile
  3702                           
  3703                           ;main.c: 1026:                 LATCbits.LC1 = 1;
  3704  00140A  828B               	bsf	139,1,c	;volatile
  3705  00140C                     
  3706                           ;main.c: 1031:         LATCbits.LC0 = 1;
  3707  00140C  808B               	bsf	139,0,c	;volatile
  3708                           
  3709                           ;main.c: 1032:         LATCbits.LC1 = 1;
  3710  00140E  828B               	bsf	139,1,c	;volatile
  3711  001410                     l428:
  3712  001410  FFFF               	dw	65535	; assembler added errata NOP
  3713  001412  0012               	return		;funcret
  3714  001414  FFFF               	dw	65535	; errata NOP
  3715  001416                     __end_of_selectionMode:
  3716                           	callstack 0
  3717                           
  3718 ;; *************** function _rutine_up *****************
  3719 ;; Defined at:
  3720 ;;		line 921 in file "main.c"
  3721 ;; Parameters:    Size  Location     Type
  3722 ;;		None
  3723 ;; Auto vars:     Size  Location     Type
  3724 ;;  re              2  109[COMRAM] int 
  3725 ;;  i               2  107[COMRAM] int 
  3726 ;; Return value:  Size  Location     Type
  3727 ;;                  2  103[COMRAM] int 
  3728 ;; Registers used:
  3729 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3730 ;; Tracked objects:
  3731 ;;		On entry : 0/0
  3732 ;;		On exit  : 0/0
  3733 ;;		Unchanged: 0/0
  3734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3735 ;;      Params:         2       0       0       0       0       0       0
  3736 ;;      Locals:         4       0       0       0       0       0       0
  3737 ;;      Temps:          2       0       0       0       0       0       0
  3738 ;;      Totals:         8       0       0       0       0       0       0
  3739 ;;Total ram usage:        8 bytes
  3740 ;; Hardware stack levels used: 1
  3741 ;; Hardware stack levels required when called: 9
  3742 ;; This function calls:
  3743 ;;		_LCD_Clear
  3744 ;;		_LCD_Set_Cursor
  3745 ;;		_LCD_Write_String
  3746 ;;		_controlCalls
  3747 ;;		_noRepeat
  3748 ;;		_sort_down
  3749 ;; This function is called by:
  3750 ;;		_selectionMode
  3751 ;; This function uses a non-reentrant model
  3752 ;;
  3753                           
  3754                           	psect	text3
  3755  0015F2                     __ptext3:
  3756                           	callstack 0
  3757  0015F2                     _rutine_up:
  3758                           	callstack 0
  3759  0015F2  FFFF               	dw	65535	; assembler added errata NOP
  3760  0015F4                     
  3761                           ;main.c: 924:     controlCalls();
  3762  0015F4  EC7D  F019         	call	_controlCalls	;wreg free
  3763  0015F8                     
  3764                           ;main.c: 925:     if (tasksUp == 0){
  3765  0015F8  507B               	movf	_tasksUp^0,w,c
  3766  0015FA  107C               	iorwf	(_tasksUp+1)^0,w,c
  3767  0015FC  A4D8               	btfss	status,2,c
  3768  0015FE  EF03  F00B         	goto	u3471
  3769  001602  EF06  F00B         	goto	u3470
  3770  001606                     u3471:
  3771  001606  FFFF               	dw	65535	; assembler added errata NOP
  3772  001608  EFFC  F00B         	goto	l4350
  3773  00160C                     u3470:
  3774  00160C  FFFF               	dw	65535	; assembler added errata NOP
  3775  00160E                     
  3776                           ;main.c: 926:         LCD_Clear();
  3777  00160E  ECF4  F002         	call	_LCD_Clear	;wreg free
  3778                           
  3779                           ;main.c: 927:         LCD_Set_Cursor(1,1);
  3780  001612  0E01               	movlw	1
  3781  001614  6E06               	movwf	LCD_Set_Cursor@COL^0,c
  3782  001616  0E01               	movlw	1
  3783  001618  ECF4  F004         	call	_LCD_Set_Cursor
  3784  00161C                     
  3785                           ;main.c: 928:         LCD_Write_String("End Up Mode");
  3786  00161C  0E96               	movlw	low STR_31
  3787  00161E  6E06               	movwf	LCD_Write_String@Str^0,c
  3788  001620  0E7F               	movlw	high STR_31
  3789  001622  6E07               	movwf	(LCD_Write_String@Str+1)^0,c
  3790  001624  EC32  F005         	call	_LCD_Write_String	;wreg free
  3791  001628                     
  3792                           ;main.c: 929:         _delay((unsigned long)((2000)*(20000000/4000.0)));
  3793  001628  0E27               	movlw	39
  3794  00162A  6E6B               	movwf	(??_rutine_up+1)^0,c
  3795  00162C  0E13               	movlw	19
  3796  00162E  6E6A               	movwf	??_rutine_up^0,c
  3797  001630  0E82               	movlw	130
  3798  001632                     u4577:
  3799  001632  FFFF               	dw	65535	; errata NOP
  3800  001634  2EE8               	decfsz	wreg,f,c
  3801  001636  D7FD               	bra	u4577
  3802  001638  2E6A               	decfsz	??_rutine_up^0,f,c
  3803  00163A  D7FB               	bra	u4577
  3804  00163C  2E6B               	decfsz	(??_rutine_up+1)^0,f,c
  3805  00163E  D7F9               	bra	u4577
  3806  001640                     
  3807                           ;main.c: 930:         if((tasksDown > 0) || callsD > 0){
  3808  001640  BE7E               	btfsc	(_tasksDown+1)^0,7,c
  3809  001642  EF2E  F00B         	goto	u3480
  3810  001646  507E               	movf	(_tasksDown+1)^0,w,c
  3811  001648  E106               	bnz	u3481
  3812  00164A  047D               	decf	_tasksDown^0,w,c
  3813  00164C  B0D8               	btfsc	status,0,c
  3814  00164E  EF2B  F00B         	goto	u3481
  3815  001652  EF2E  F00B         	goto	u3480
  3816  001656                     u3481:
  3817  001656  FFFF               	dw	65535	; assembler added errata NOP
  3818  001658  EF3E  F00B         	goto	l4308
  3819  00165C                     u3480:
  3820  00165C  FFFF               	dw	65535	; assembler added errata NOP
  3821  00165E  0100               	movlb	0	; () banked
  3822  001660  BF93               	btfsc	(_callsD+1)& (0+255),7,b
  3823  001662  EF3B  F00B         	goto	u3491
  3824  001666  5193               	movf	(_callsD+1)& (0+255),w,b
  3825  001668  E109               	bnz	u3490
  3826  00166A  0592               	decf	_callsD& (0+255),w,b
  3827  00166C  A0D8               	btfss	status,0,c
  3828  00166E  EF3B  F00B         	goto	u3491
  3829  001672  EF3E  F00B         	goto	u3490
  3830  001676                     u3491:
  3831  001676  FFFF               	dw	65535	; assembler added errata NOP
  3832  001678  EFE8  F00B         	goto	l4346
  3833  00167C                     u3490:
  3834  00167C                     l4308:
  3835  00167C  FFFF               	dw	65535	; assembler added errata NOP
  3836                           
  3837                           ;main.c: 931:             LCD_Set_Cursor(2,1);
  3838  00167E  0E01               	movlw	1
  3839  001680  6E06               	movwf	LCD_Set_Cursor@COL^0,c
  3840  001682  0E02               	movlw	2
  3841  001684  ECF4  F004         	call	_LCD_Set_Cursor
  3842  001688                     
  3843                           ;main.c: 932:             LCD_Write_String("callsInUp");
  3844  001688  0ED7               	movlw	low STR_32
  3845  00168A  6E06               	movwf	LCD_Write_String@Str^0,c
  3846  00168C  0E7F               	movlw	high STR_32
  3847  00168E  6E07               	movwf	(LCD_Write_String@Str+1)^0,c
  3848  001690  EC32  F005         	call	_LCD_Write_String	;wreg free
  3849  001694                     
  3850                           ;main.c: 933:             LCD_Clear();
  3851  001694  ECF4  F002         	call	_LCD_Clear	;wreg free
  3852  001698                     
  3853                           ;main.c: 935:             for(int i = 0; i < callsD; i++){
  3854  001698  0E00               	movlw	0
  3855  00169A  6E6D               	movwf	(rutine_up@i+1)^0,c
  3856  00169C  0E00               	movlw	0
  3857  00169E  6E6C               	movwf	rutine_up@i^0,c
  3858  0016A0  EF71  F00B         	goto	l4320
  3859  0016A4                     l4316:
  3860  0016A4  FFFF               	dw	65535	; assembler added errata NOP
  3861                           
  3862                           ; BSR set to: 0
  3863                           ;main.c: 936:                 queueDown[tasksDown + i] = callsInUp[i];
  3864  0016A6  90D8               	bcf	status,0,c
  3865  0016A8  346C               	rlcf	rutine_up@i^0,w,c
  3866  0016AA  6ED9               	movwf	fsr2l,c
  3867  0016AC  346D               	rlcf	(rutine_up@i+1)^0,w,c
  3868  0016AE  6EDA               	movwf	fsr2h,c
  3869  0016B0  0E00               	movlw	low _callsInUp
  3870  0016B2  26D9               	addwf	fsr2l,f,c
  3871  0016B4  0E04               	movlw	high _callsInUp
  3872  0016B6  22DA               	addwfc	fsr2h,f,c
  3873  0016B8  506C               	movf	rutine_up@i^0,w,c
  3874  0016BA  247D               	addwf	_tasksDown^0,w,c
  3875  0016BC  6E6A               	movwf	??_rutine_up^0,c
  3876  0016BE  506D               	movf	(rutine_up@i+1)^0,w,c
  3877  0016C0  207E               	addwfc	(_tasksDown+1)^0,w,c
  3878  0016C2  6E6B               	movwf	(??_rutine_up+1)^0,c
  3879  0016C4  90D8               	bcf	status,0,c
  3880  0016C6  366A               	rlcf	??_rutine_up^0,f,c
  3881  0016C8  366B               	rlcf	(??_rutine_up+1)^0,f,c
  3882  0016CA  0E00               	movlw	low _queueDown
  3883  0016CC  246A               	addwf	??_rutine_up^0,w,c
  3884  0016CE  6EE1               	movwf	fsr1l,c
  3885  0016D0  0E03               	movlw	high _queueDown
  3886  0016D2  206B               	addwfc	(??_rutine_up+1)^0,w,c
  3887  0016D4  6EE2               	movwf	fsr1h,c
  3888  0016D6  CFDE FFE6          	movff	postinc2,postinc1
  3889  0016DA  CFDD FFE5          	movff	postdec2,postdec1
  3890  0016DE                     
  3891                           ; BSR set to: 0
  3892                           ;main.c: 937:             }
  3893  0016DE  4A6C               	infsnz	rutine_up@i^0,f,c
  3894  0016E0  2A6D               	incf	(rutine_up@i+1)^0,f,c
  3895  0016E2                     l4320:
  3896  0016E2  FFFF               	dw	65535	; assembler added errata NOP
  3897  0016E4  0100               	movlb	0	; () banked
  3898  0016E6  5192               	movf	_callsD& (0+255),w,b
  3899  0016E8  5C6C               	subwf	rutine_up@i^0,w,c
  3900  0016EA  506D               	movf	(rutine_up@i+1)^0,w,c
  3901  0016EC  0A80               	xorlw	128
  3902  0016EE  6E6A               	movwf	??_rutine_up^0,c
  3903  0016F0  5193               	movf	(_callsD+1)& (0+255),w,b
  3904  0016F2  0A80               	xorlw	128
  3905  0016F4  586A               	subwfb	??_rutine_up^0,w,c
  3906  0016F6  A0D8               	btfss	status,0,c
  3907  0016F8  EF80  F00B         	goto	u3501
  3908  0016FC  EF83  F00B         	goto	u3500
  3909  001700                     u3501:
  3910  001700  FFFF               	dw	65535	; assembler added errata NOP
  3911  001702  EF52  F00B         	goto	l4316
  3912  001706                     u3500:
  3913  001706  FFFF               	dw	65535	; assembler added errata NOP
  3914  001708                     
  3915                           ; BSR set to: 0
  3916                           ;main.c: 939:             sort_down(&queueDown[0], tasksDown + callsD);
  3917  001708  0E00               	movlw	low _queueDown
  3918  00170A  6E01               	movwf	sort_down@p^0,c
  3919  00170C  0E03               	movlw	high _queueDown
  3920  00170E  6E02               	movwf	(sort_down@p+1)^0,c
  3921  001710  5192               	movf	_callsD& (0+255),w,b
  3922  001712  247D               	addwf	_tasksDown^0,w,c
  3923  001714  6E03               	movwf	sort_down@sizes^0,c
  3924  001716  5193               	movf	(_callsD+1)& (0+255),w,b
  3925  001718  207E               	addwfc	(_tasksDown+1)^0,w,c
  3926  00171A  6E04               	movwf	(sort_down@sizes+1)^0,c
  3927  00171C  EC1D  F00D         	call	_sort_down	;wreg free
  3928                           
  3929                           ;main.c: 940:             tasksDown = noRepeat(&queueDown[0], tasksDown + callsD);
  3930  001720  0E00               	movlw	low _queueDown
  3931  001722  6E01               	movwf	noRepeat@po^0,c
  3932  001724  0E03               	movlw	high _queueDown
  3933  001726  6E02               	movwf	(noRepeat@po+1)^0,c
  3934  001728  0100               	movlb	0	; () banked
  3935  00172A  5192               	movf	_callsD& (0+255),w,b
  3936  00172C  247D               	addwf	_tasksDown^0,w,c
  3937  00172E  6E03               	movwf	noRepeat@sixes^0,c
  3938  001730  5193               	movf	(_callsD+1)& (0+255),w,b
  3939  001732  207E               	addwfc	(_tasksDown+1)^0,w,c
  3940  001734  6E04               	movwf	(noRepeat@sixes+1)^0,c
  3941  001736  ECDA  F006         	call	_noRepeat	;wreg free
  3942  00173A  C001  F07D         	movff	?_noRepeat,_tasksDown
  3943  00173E  C002  F07E         	movff	?_noRepeat+1,_tasksDown+1
  3944  001742                     
  3945                           ;main.c: 955:             call_init = queueDown[0];
  3946  001742  C300  F090         	movff	_queueDown,_call_init
  3947  001746  C301  F091         	movff	_queueDown+1,_call_init+1
  3948  00174A                     
  3949                           ;main.c: 956:             for (int re = 0; re < tasksDown; re++){
  3950  00174A  0E00               	movlw	0
  3951  00174C  6E6F               	movwf	(rutine_up@re+1)^0,c
  3952  00174E  0E00               	movlw	0
  3953  001750  6E6E               	movwf	rutine_up@re^0,c
  3954  001752  EFC4  F00B         	goto	l4332
  3955  001756                     l4328:
  3956  001756  FFFF               	dw	65535	; assembler added errata NOP
  3957                           
  3958                           ;main.c: 957:                 queueDown[re] = queueDown[re + 1];
  3959  001758  90D8               	bcf	status,0,c
  3960  00175A  346E               	rlcf	rutine_up@re^0,w,c
  3961  00175C  6ED9               	movwf	fsr2l,c
  3962  00175E  346F               	rlcf	(rutine_up@re+1)^0,w,c
  3963  001760  6EDA               	movwf	fsr2h,c
  3964  001762  0E02               	movlw	low (_queueDown+2)
  3965  001764  26D9               	addwf	fsr2l,f,c
  3966  001766  0E03               	movlw	high (_queueDown+2)
  3967  001768  22DA               	addwfc	fsr2h,f,c
  3968  00176A  90D8               	bcf	status,0,c
  3969  00176C  346E               	rlcf	rutine_up@re^0,w,c
  3970  00176E  6EE1               	movwf	fsr1l,c
  3971  001770  346F               	rlcf	(rutine_up@re+1)^0,w,c
  3972  001772  6EE2               	movwf	fsr1h,c
  3973  001774  0E00               	movlw	low _queueDown
  3974  001776  26E1               	addwf	fsr1l,f,c
  3975  001778  0E03               	movlw	high _queueDown
  3976  00177A  22E2               	addwfc	fsr1h,f,c
  3977  00177C  CFDE FFE6          	movff	postinc2,postinc1
  3978  001780  CFDD FFE5          	movff	postdec2,postdec1
  3979  001784                     
  3980                           ;main.c: 958:             }
  3981  001784  4A6E               	infsnz	rutine_up@re^0,f,c
  3982  001786  2A6F               	incf	(rutine_up@re+1)^0,f,c
  3983  001788                     l4332:
  3984  001788  FFFF               	dw	65535	; assembler added errata NOP
  3985  00178A  507D               	movf	_tasksDown^0,w,c
  3986  00178C  5C6E               	subwf	rutine_up@re^0,w,c
  3987  00178E  506F               	movf	(rutine_up@re+1)^0,w,c
  3988  001790  0A80               	xorlw	128
  3989  001792  6E6A               	movwf	??_rutine_up^0,c
  3990  001794  507E               	movf	(_tasksDown+1)^0,w,c
  3991  001796  0A80               	xorlw	128
  3992  001798  586A               	subwfb	??_rutine_up^0,w,c
  3993  00179A  A0D8               	btfss	status,0,c
  3994  00179C  EFD2  F00B         	goto	u3511
  3995  0017A0  EFD5  F00B         	goto	u3510
  3996  0017A4                     u3511:
  3997  0017A4  FFFF               	dw	65535	; assembler added errata NOP
  3998  0017A6  EFAB  F00B         	goto	l4328
  3999  0017AA                     u3510:
  4000  0017AA  FFFF               	dw	65535	; assembler added errata NOP
  4001  0017AC                     
  4002                           ;main.c: 959:             tasksDown--;
  4003  0017AC  067D               	decf	_tasksDown^0,f,c
  4004  0017AE  A0D8               	btfss	status,0,c
  4005  0017B0  067E               	decf	(_tasksDown+1)^0,f,c
  4006  0017B2                     
  4007                           ;main.c: 962:             from_up_change = 1;
  4008  0017B2  0E00               	movlw	0
  4009  0017B4  0100               	movlb	0	; () banked
  4010  0017B6  6F8B               	movwf	(_from_up_change+1)& (0+255),b
  4011  0017B8  0E01               	movlw	1
  4012  0017BA  6F8A               	movwf	_from_up_change& (0+255),b
  4013  0017BC                     
  4014                           ; BSR set to: 0
  4015                           ;main.c: 963:             from_down_change = 0;
  4016  0017BC  0E00               	movlw	0
  4017  0017BE  6F89               	movwf	(_from_down_change+1)& (0+255),b
  4018  0017C0  0E00               	movlw	0
  4019  0017C2  6F88               	movwf	_from_down_change& (0+255),b
  4020  0017C4                     
  4021                           ; BSR set to: 0
  4022                           ;main.c: 964:             return 1;
  4023  0017C4  0E00               	movlw	0
  4024  0017C6  6E69               	movwf	(?_rutine_up+1)^0,c
  4025  0017C8  0E01               	movlw	1
  4026  0017CA  6E68               	movwf	?_rutine_up^0,c
  4027  0017CC  EF01  F00C         	goto	l407
  4028  0017D0                     l4346:
  4029  0017D0  FFFF               	dw	65535	; assembler added errata NOP
  4030                           
  4031                           ; BSR set to: 0
  4032                           ;main.c: 968:             call_init = 0;
  4033  0017D2  0E00               	movlw	0
  4034  0017D4  6F91               	movwf	(_call_init+1)& (0+255),b
  4035  0017D6  0E00               	movlw	0
  4036  0017D8  6F90               	movwf	_call_init& (0+255),b
  4037                           
  4038                           ;main.c: 969:             modeUp_F = 0;
  4039  0017DA  0E00               	movlw	0
  4040  0017DC  0101               	movlb	1	; () banked
  4041  0017DE  6FD7               	movwf	(_modeUp_F+1)& (0+255),b
  4042  0017E0  0E00               	movlw	0
  4043  0017E2  6FD6               	movwf	_modeUp_F& (0+255),b
  4044                           
  4045                           ;main.c: 970:             tasksUp = 0;
  4046  0017E4  0E00               	movlw	0
  4047  0017E6  6E7C               	movwf	(_tasksUp+1)^0,c
  4048  0017E8  0E00               	movlw	0
  4049  0017EA  6E7B               	movwf	_tasksUp^0,c
  4050                           
  4051                           ;main.c: 972:             return 1;
  4052  0017EC  0E00               	movlw	0
  4053  0017EE  6E69               	movwf	(?_rutine_up+1)^0,c
  4054  0017F0  0E01               	movlw	1
  4055  0017F2  6E68               	movwf	?_rutine_up^0,c
  4056  0017F4  EF01  F00C         	goto	l407
  4057  0017F8                     l4350:
  4058  0017F8  FFFF               	dw	65535	; assembler added errata NOP
  4059                           
  4060                           ;main.c: 975:     return 0;
  4061  0017FA  0E00               	movlw	0
  4062  0017FC  6E69               	movwf	(?_rutine_up+1)^0,c
  4063  0017FE  0E00               	movlw	0
  4064  001800  6E68               	movwf	?_rutine_up^0,c
  4065  001802                     l407:
  4066  001802  FFFF               	dw	65535	; assembler added errata NOP
  4067  001804  0012               	return		;funcret
  4068  001806  FFFF               	dw	65535	; errata NOP
  4069  001808                     __end_of_rutine_up:
  4070                           	callstack 0
  4071                           
  4072 ;; *************** function _rutine_down *****************
  4073 ;; Defined at:
  4074 ;;		line 861 in file "main.c"
  4075 ;; Parameters:    Size  Location     Type
  4076 ;;		None
  4077 ;; Auto vars:     Size  Location     Type
  4078 ;;  re              2  111[COMRAM] int 
  4079 ;;  i               2  107[COMRAM] int 
  4080 ;;  i               2  109[COMRAM] int 
  4081 ;; Return value:  Size  Location     Type
  4082 ;;                  2  103[COMRAM] int 
  4083 ;; Registers used:
  4084 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4085 ;; Tracked objects:
  4086 ;;		On entry : 0/0
  4087 ;;		On exit  : 0/0
  4088 ;;		Unchanged: 0/0
  4089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4090 ;;      Params:         2       0       0       0       0       0       0
  4091 ;;      Locals:         6       0       0       0       0       0       0
  4092 ;;      Temps:          2       0       0       0       0       0       0
  4093 ;;      Totals:        10       0       0       0       0       0       0
  4094 ;;Total ram usage:       10 bytes
  4095 ;; Hardware stack levels used: 1
  4096 ;; Hardware stack levels required when called: 9
  4097 ;; This function calls:
  4098 ;;		_LCD_Clear
  4099 ;;		_LCD_Set_Cursor
  4100 ;;		_LCD_Write_String
  4101 ;;		_controlCalls
  4102 ;;		_noRepeat
  4103 ;;		_sort
  4104 ;;		_sprintf
  4105 ;; This function is called by:
  4106 ;;		_selectionMode
  4107 ;; This function uses a non-reentrant model
  4108 ;;
  4109                           
  4110                           	psect	text4
  4111  001C6C                     __ptext4:
  4112                           	callstack 0
  4113  001C6C                     _rutine_down:
  4114                           	callstack 0
  4115  001C6C  FFFF               	dw	65535	; assembler added errata NOP
  4116  001C6E                     
  4117                           ;main.c: 865:     controlCalls();
  4118  001C6E  EC7D  F019         	call	_controlCalls	;wreg free
  4119  001C72                     
  4120                           ;main.c: 868:     if (tasksDown == 0){
  4121  001C72  507D               	movf	_tasksDown^0,w,c
  4122  001C74  107E               	iorwf	(_tasksDown+1)^0,w,c
  4123  001C76  A4D8               	btfss	status,2,c
  4124  001C78  EF40  F00E         	goto	u3411
  4125  001C7C  EF43  F00E         	goto	u3410
  4126  001C80                     u3411:
  4127  001C80  FFFF               	dw	65535	; assembler added errata NOP
  4128  001C82  EF8F  F00F         	goto	l4290
  4129  001C86                     u3410:
  4130  001C86  FFFF               	dw	65535	; assembler added errata NOP
  4131  001C88                     
  4132                           ;main.c: 869:         LCD_Clear();
  4133  001C88  ECF4  F002         	call	_LCD_Clear	;wreg free
  4134                           
  4135                           ;main.c: 870:         LCD_Set_Cursor(1,1);
  4136  001C8C  0E01               	movlw	1
  4137  001C8E  6E06               	movwf	LCD_Set_Cursor@COL^0,c
  4138  001C90  0E01               	movlw	1
  4139  001C92  ECF4  F004         	call	_LCD_Set_Cursor
  4140  001C96                     
  4141                           ;main.c: 871:         LCD_Write_String("End Down Mode");
  4142  001C96  0E24               	movlw	low STR_27
  4143  001C98  6E06               	movwf	LCD_Write_String@Str^0,c
  4144  001C9A  0E7F               	movlw	high STR_27
  4145  001C9C  6E07               	movwf	(LCD_Write_String@Str+1)^0,c
  4146  001C9E  EC32  F005         	call	_LCD_Write_String	;wreg free
  4147  001CA2                     
  4148                           ;main.c: 872:         _delay((unsigned long)((2000)*(20000000/4000.0)));
  4149  001CA2  0E27               	movlw	39
  4150  001CA4  6E6B               	movwf	(??_rutine_down+1)^0,c
  4151  001CA6  0E13               	movlw	19
  4152  001CA8  6E6A               	movwf	??_rutine_down^0,c
  4153  001CAA  0E82               	movlw	130
  4154  001CAC                     u4587:
  4155  001CAC  FFFF               	dw	65535	; errata NOP
  4156  001CAE  2EE8               	decfsz	wreg,f,c
  4157  001CB0  D7FD               	bra	u4587
  4158  001CB2  2E6A               	decfsz	??_rutine_down^0,f,c
  4159  001CB4  D7FB               	bra	u4587
  4160  001CB6  2E6B               	decfsz	(??_rutine_down+1)^0,f,c
  4161  001CB8  D7F9               	bra	u4587
  4162  001CBA                     
  4163                           ;main.c: 873:         if((tasksUp > 0) || callsU > 0){
  4164  001CBA  BE7C               	btfsc	(_tasksUp+1)^0,7,c
  4165  001CBC  EF6B  F00E         	goto	u3420
  4166  001CC0  507C               	movf	(_tasksUp+1)^0,w,c
  4167  001CC2  E106               	bnz	u3421
  4168  001CC4  047B               	decf	_tasksUp^0,w,c
  4169  001CC6  B0D8               	btfsc	status,0,c
  4170  001CC8  EF68  F00E         	goto	u3421
  4171  001CCC  EF6B  F00E         	goto	u3420
  4172  001CD0                     u3421:
  4173  001CD0  FFFF               	dw	65535	; assembler added errata NOP
  4174  001CD2  EF7B  F00E         	goto	l4220
  4175  001CD6                     u3420:
  4176  001CD6  FFFF               	dw	65535	; assembler added errata NOP
  4177  001CD8  0100               	movlb	0	; () banked
  4178  001CDA  BF95               	btfsc	(_callsU+1)& (0+255),7,b
  4179  001CDC  EF78  F00E         	goto	u3431
  4180  001CE0  5195               	movf	(_callsU+1)& (0+255),w,b
  4181  001CE2  E109               	bnz	u3430
  4182  001CE4  0594               	decf	_callsU& (0+255),w,b
  4183  001CE6  A0D8               	btfss	status,0,c
  4184  001CE8  EF78  F00E         	goto	u3431
  4185  001CEC  EF7B  F00E         	goto	u3430
  4186  001CF0                     u3431:
  4187  001CF0  FFFF               	dw	65535	; assembler added errata NOP
  4188  001CF2  EF74  F00F         	goto	l4276
  4189  001CF6                     u3430:
  4190  001CF6                     l4220:
  4191  001CF6  FFFF               	dw	65535	; assembler added errata NOP
  4192                           
  4193                           ;main.c: 874:             LCD_Set_Cursor(2,1);
  4194  001CF8  0E01               	movlw	1
  4195  001CFA  6E06               	movwf	LCD_Set_Cursor@COL^0,c
  4196  001CFC  0E02               	movlw	2
  4197  001CFE  ECF4  F004         	call	_LCD_Set_Cursor
  4198  001D02                     
  4199                           ;main.c: 875:             LCD_Write_String("callsInDown");
  4200  001D02  0EC4               	movlw	low (STR_30+3)
  4201  001D04  6E06               	movwf	LCD_Write_String@Str^0,c
  4202  001D06  0E7E               	movlw	high (STR_30+3)
  4203  001D08  6E07               	movwf	(LCD_Write_String@Str+1)^0,c
  4204  001D0A  EC32  F005         	call	_LCD_Write_String	;wreg free
  4205  001D0E                     
  4206                           ;main.c: 876:             LCD_Clear();
  4207  001D0E  ECF4  F002         	call	_LCD_Clear	;wreg free
  4208  001D12                     
  4209                           ;main.c: 879:             for(int i = 0; i < callsU; i++){
  4210  001D12  0E00               	movlw	0
  4211  001D14  6E6F               	movwf	(rutine_down@i+1)^0,c
  4212  001D16  0E00               	movlw	0
  4213  001D18  6E6E               	movwf	rutine_down@i^0,c
  4214  001D1A  EFAE  F00E         	goto	l4232
  4215  001D1E                     l4228:
  4216  001D1E  FFFF               	dw	65535	; assembler added errata NOP
  4217                           
  4218                           ; BSR set to: 0
  4219                           ;main.c: 880:                 queueUp[tasksUp + i] = callsInDown[i];
  4220  001D20  90D8               	bcf	status,0,c
  4221  001D22  346E               	rlcf	rutine_down@i^0,w,c
  4222  001D24  6ED9               	movwf	fsr2l,c
  4223  001D26  346F               	rlcf	(rutine_down@i+1)^0,w,c
  4224  001D28  6EDA               	movwf	fsr2h,c
  4225  001D2A  0E00               	movlw	low _callsInDown
  4226  001D2C  26D9               	addwf	fsr2l,f,c
  4227  001D2E  0E05               	movlw	high _callsInDown
  4228  001D30  22DA               	addwfc	fsr2h,f,c
  4229  001D32  506E               	movf	rutine_down@i^0,w,c
  4230  001D34  247B               	addwf	_tasksUp^0,w,c
  4231  001D36  6E6A               	movwf	??_rutine_down^0,c
  4232  001D38  506F               	movf	(rutine_down@i+1)^0,w,c
  4233  001D3A  207C               	addwfc	(_tasksUp+1)^0,w,c
  4234  001D3C  6E6B               	movwf	(??_rutine_down+1)^0,c
  4235  001D3E  90D8               	bcf	status,0,c
  4236  001D40  366A               	rlcf	??_rutine_down^0,f,c
  4237  001D42  366B               	rlcf	(??_rutine_down+1)^0,f,c
  4238  001D44  0E00               	movlw	low _queueUp
  4239  001D46  246A               	addwf	??_rutine_down^0,w,c
  4240  001D48  6EE1               	movwf	fsr1l,c
  4241  001D4A  0E02               	movlw	high _queueUp
  4242  001D4C  206B               	addwfc	(??_rutine_down+1)^0,w,c
  4243  001D4E  6EE2               	movwf	fsr1h,c
  4244  001D50  CFDE FFE6          	movff	postinc2,postinc1
  4245  001D54  CFDD FFE5          	movff	postdec2,postdec1
  4246  001D58                     
  4247                           ; BSR set to: 0
  4248                           ;main.c: 881:             }
  4249  001D58  4A6E               	infsnz	rutine_down@i^0,f,c
  4250  001D5A  2A6F               	incf	(rutine_down@i+1)^0,f,c
  4251  001D5C                     l4232:
  4252  001D5C  FFFF               	dw	65535	; assembler added errata NOP
  4253  001D5E  0100               	movlb	0	; () banked
  4254  001D60  5194               	movf	_callsU& (0+255),w,b
  4255  001D62  5C6E               	subwf	rutine_down@i^0,w,c
  4256  001D64  506F               	movf	(rutine_down@i+1)^0,w,c
  4257  001D66  0A80               	xorlw	128
  4258  001D68  6E6A               	movwf	??_rutine_down^0,c
  4259  001D6A  5195               	movf	(_callsU+1)& (0+255),w,b
  4260  001D6C  0A80               	xorlw	128
  4261  001D6E  586A               	subwfb	??_rutine_down^0,w,c
  4262  001D70  A0D8               	btfss	status,0,c
  4263  001D72  EFBD  F00E         	goto	u3441
  4264  001D76  EFC0  F00E         	goto	u3440
  4265  001D7A                     u3441:
  4266  001D7A  FFFF               	dw	65535	; assembler added errata NOP
  4267  001D7C  EF8F  F00E         	goto	l4228
  4268  001D80                     u3440:
  4269  001D80  FFFF               	dw	65535	; assembler added errata NOP
  4270  001D82                     
  4271                           ; BSR set to: 0
  4272                           ;main.c: 883:             sort(&queueUp[0], tasksUp + callsU);
  4273  001D82  0E00               	movlw	low _queueUp
  4274  001D84  6E01               	movwf	sort@p^0,c
  4275  001D86  0E02               	movlw	high _queueUp
  4276  001D88  6E02               	movwf	(sort@p+1)^0,c
  4277  001D8A  5194               	movf	_callsU& (0+255),w,b
  4278  001D8C  247B               	addwf	_tasksUp^0,w,c
  4279  001D8E  6E03               	movwf	sort@sizes^0,c
  4280  001D90  5195               	movf	(_callsU+1)& (0+255),w,b
  4281  001D92  207C               	addwfc	(_tasksUp+1)^0,w,c
  4282  001D94  6E04               	movwf	(sort@sizes+1)^0,c
  4283  001D96  EC04  F00C         	call	_sort	;wreg free
  4284                           
  4285                           ;main.c: 884:             tasksUp = noRepeat(&queueDown[0], tasksUp + callsU);
  4286  001D9A  0E00               	movlw	low _queueDown
  4287  001D9C  6E01               	movwf	noRepeat@po^0,c
  4288  001D9E  0E03               	movlw	high _queueDown
  4289  001DA0  6E02               	movwf	(noRepeat@po+1)^0,c
  4290  001DA2  0100               	movlb	0	; () banked
  4291  001DA4  5194               	movf	_callsU& (0+255),w,b
  4292  001DA6  247B               	addwf	_tasksUp^0,w,c
  4293  001DA8  6E03               	movwf	noRepeat@sixes^0,c
  4294  001DAA  5195               	movf	(_callsU+1)& (0+255),w,b
  4295  001DAC  207C               	addwfc	(_tasksUp+1)^0,w,c
  4296  001DAE  6E04               	movwf	(noRepeat@sixes+1)^0,c
  4297  001DB0  ECDA  F006         	call	_noRepeat	;wreg free
  4298  001DB4  C001  F07B         	movff	?_noRepeat,_tasksUp
  4299  001DB8  C002  F07C         	movff	?_noRepeat+1,_tasksUp+1
  4300  001DBC                     
  4301                           ;main.c: 886:             for (int i = 0; i < tasksUp; i++){
  4302  001DBC  0E00               	movlw	0
  4303  001DBE  6E6D               	movwf	(rutine_down@i_654+1)^0,c
  4304  001DC0  0E00               	movlw	0
  4305  001DC2  6E6C               	movwf	rutine_down@i_654^0,c
  4306  001DC4  EF0B  F00F         	goto	l4248
  4307  001DC8                     l4238:
  4308  001DC8  FFFF               	dw	65535	; assembler added errata NOP
  4309                           
  4310                           ;main.c: 888:                     sprintf(buffer, "%d", queueUp[i]);
  4311  001DCA  0E97               	movlw	low _buffer
  4312  001DCC  6E58               	movwf	sprintf@s^0,c
  4313  001DCE  0E00               	movlw	high _buffer
  4314  001DD0  6E59               	movwf	(sprintf@s+1)^0,c
  4315  001DD2  0EFC               	movlw	low STR_6
  4316  001DD4  6E5A               	movwf	sprintf@fmt^0,c
  4317  001DD6  0E7F               	movlw	high STR_6
  4318  001DD8  6E5B               	movwf	(sprintf@fmt+1)^0,c
  4319  001DDA  90D8               	bcf	status,0,c
  4320  001DDC  346C               	rlcf	rutine_down@i_654^0,w,c
  4321  001DDE  6ED9               	movwf	fsr2l,c
  4322  001DE0  346D               	rlcf	(rutine_down@i_654+1)^0,w,c
  4323  001DE2  6EDA               	movwf	fsr2h,c
  4324  001DE4  0E00               	movlw	low _queueUp
  4325  001DE6  26D9               	addwf	fsr2l,f,c
  4326  001DE8  0E02               	movlw	high _queueUp
  4327  001DEA  22DA               	addwfc	fsr2h,f,c
  4328  001DEC  CFDE F05C          	movff	postinc2,?_sprintf+4
  4329  001DF0  CFDD F05D          	movff	postdec2,?_sprintf+5
  4330  001DF4  ECE9  F003         	call	_sprintf	;wreg free
  4331  001DF8                     
  4332                           ;main.c: 889:                     LCD_Set_Cursor(2, pLCD);
  4333  001DF8  C0E3  F006         	movff	_pLCD,LCD_Set_Cursor@COL
  4334  001DFC  0E02               	movlw	2
  4335  001DFE  ECF4  F004         	call	_LCD_Set_Cursor
  4336  001E02                     
  4337                           ;main.c: 890:                     LCD_Write_String(buffer);
  4338  001E02  0E97               	movlw	low _buffer
  4339  001E04  6E06               	movwf	LCD_Write_String@Str^0,c
  4340  001E06  0E00               	movlw	high _buffer
  4341  001E08  6E07               	movwf	(LCD_Write_String@Str+1)^0,c
  4342  001E0A  EC32  F005         	call	_LCD_Write_String	;wreg free
  4343  001E0E                     
  4344                           ;main.c: 891:                     pLCD++;
  4345  001E0E  0100               	movlb	0	; () banked
  4346  001E10  2BE3               	incf	_pLCD& (0+255),f,b
  4347  001E12                     
  4348                           ; BSR set to: 0
  4349                           ;main.c: 892:             }
  4350  001E12  4A6C               	infsnz	rutine_down@i_654^0,f,c
  4351  001E14  2A6D               	incf	(rutine_down@i_654+1)^0,f,c
  4352  001E16                     l4248:
  4353  001E16  FFFF               	dw	65535	; assembler added errata NOP
  4354  001E18  507B               	movf	_tasksUp^0,w,c
  4355  001E1A  5C6C               	subwf	rutine_down@i_654^0,w,c
  4356  001E1C  506D               	movf	(rutine_down@i_654+1)^0,w,c
  4357  001E1E  0A80               	xorlw	128
  4358  001E20  6E6A               	movwf	??_rutine_down^0,c
  4359  001E22  507C               	movf	(_tasksUp+1)^0,w,c
  4360  001E24  0A80               	xorlw	128
  4361  001E26  586A               	subwfb	??_rutine_down^0,w,c
  4362  001E28  A0D8               	btfss	status,0,c
  4363  001E2A  EF19  F00F         	goto	u3451
  4364  001E2E  EF1C  F00F         	goto	u3450
  4365  001E32                     u3451:
  4366  001E32  FFFF               	dw	65535	; assembler added errata NOP
  4367  001E34  EFE4  F00E         	goto	l4238
  4368  001E38                     u3450:
  4369  001E38  FFFF               	dw	65535	; assembler added errata NOP
  4370  001E3A                     
  4371                           ;main.c: 893:             pLCD = 1;
  4372  001E3A  0E01               	movlw	1
  4373  001E3C  0100               	movlb	0	; () banked
  4374  001E3E  6FE3               	movwf	_pLCD& (0+255),b
  4375  001E40                     
  4376                           ; BSR set to: 0
  4377                           ;main.c: 894:             _delay((unsigned long)((2000)*(20000000/4000.0)));
  4378  001E40  0E27               	movlw	39
  4379  001E42  6E6B               	movwf	(??_rutine_down+1)^0,c
  4380  001E44  0E13               	movlw	19
  4381  001E46  6E6A               	movwf	??_rutine_down^0,c
  4382  001E48  0E82               	movlw	130
  4383  001E4A                     u4597:
  4384  001E4A  FFFF               	dw	65535	; errata NOP
  4385  001E4C  2EE8               	decfsz	wreg,f,c
  4386  001E4E  D7FD               	bra	u4597
  4387  001E50  2E6A               	decfsz	??_rutine_down^0,f,c
  4388  001E52  D7FB               	bra	u4597
  4389  001E54  2E6B               	decfsz	(??_rutine_down+1)^0,f,c
  4390  001E56  D7F9               	bra	u4597
  4391  001E58                     
  4392                           ;main.c: 895:             call_init = queueUp[0];
  4393  001E58  C200  F090         	movff	_queueUp,_call_init
  4394  001E5C  C201  F091         	movff	_queueUp+1,_call_init+1
  4395  001E60                     
  4396                           ;main.c: 896:             for (int re = 0; re < tasksUp; re++){
  4397  001E60  0E00               	movlw	0
  4398  001E62  6E71               	movwf	(rutine_down@re+1)^0,c
  4399  001E64  0E00               	movlw	0
  4400  001E66  6E70               	movwf	rutine_down@re^0,c
  4401  001E68  EF4F  F00F         	goto	l4262
  4402  001E6C                     l4258:
  4403  001E6C  FFFF               	dw	65535	; assembler added errata NOP
  4404                           
  4405                           ;main.c: 897:                 queueDown[re] = queueDown[re + 1];
  4406  001E6E  90D8               	bcf	status,0,c
  4407  001E70  3470               	rlcf	rutine_down@re^0,w,c
  4408  001E72  6ED9               	movwf	fsr2l,c
  4409  001E74  3471               	rlcf	(rutine_down@re+1)^0,w,c
  4410  001E76  6EDA               	movwf	fsr2h,c
  4411  001E78  0E02               	movlw	low (_queueDown+2)
  4412  001E7A  26D9               	addwf	fsr2l,f,c
  4413  001E7C  0E03               	movlw	high (_queueDown+2)
  4414  001E7E  22DA               	addwfc	fsr2h,f,c
  4415  001E80  90D8               	bcf	status,0,c
  4416  001E82  3470               	rlcf	rutine_down@re^0,w,c
  4417  001E84  6EE1               	movwf	fsr1l,c
  4418  001E86  3471               	rlcf	(rutine_down@re+1)^0,w,c
  4419  001E88  6EE2               	movwf	fsr1h,c
  4420  001E8A  0E00               	movlw	low _queueDown
  4421  001E8C  26E1               	addwf	fsr1l,f,c
  4422  001E8E  0E03               	movlw	high _queueDown
  4423  001E90  22E2               	addwfc	fsr1h,f,c
  4424  001E92  CFDE FFE6          	movff	postinc2,postinc1
  4425  001E96  CFDD FFE5          	movff	postdec2,postdec1
  4426  001E9A                     
  4427                           ;main.c: 898:             }
  4428  001E9A  4A70               	infsnz	rutine_down@re^0,f,c
  4429  001E9C  2A71               	incf	(rutine_down@re+1)^0,f,c
  4430  001E9E                     l4262:
  4431  001E9E  FFFF               	dw	65535	; assembler added errata NOP
  4432  001EA0  507B               	movf	_tasksUp^0,w,c
  4433  001EA2  5C70               	subwf	rutine_down@re^0,w,c
  4434  001EA4  5071               	movf	(rutine_down@re+1)^0,w,c
  4435  001EA6  0A80               	xorlw	128
  4436  001EA8  6E6A               	movwf	??_rutine_down^0,c
  4437  001EAA  507C               	movf	(_tasksUp+1)^0,w,c
  4438  001EAC  0A80               	xorlw	128
  4439  001EAE  586A               	subwfb	??_rutine_down^0,w,c
  4440  001EB0  A0D8               	btfss	status,0,c
  4441  001EB2  EF5D  F00F         	goto	u3461
  4442  001EB6  EF60  F00F         	goto	u3460
  4443  001EBA                     u3461:
  4444  001EBA  FFFF               	dw	65535	; assembler added errata NOP
  4445  001EBC  EF36  F00F         	goto	l4258
  4446  001EC0                     u3460:
  4447  001EC0  FFFF               	dw	65535	; assembler added errata NOP
  4448  001EC2                     
  4449                           ;main.c: 899:             tasksUp--;
  4450  001EC2  067B               	decf	_tasksUp^0,f,c
  4451  001EC4  A0D8               	btfss	status,0,c
  4452  001EC6  067C               	decf	(_tasksUp+1)^0,f,c
  4453  001EC8                     
  4454                           ;main.c: 902:             from_down_change = 1;
  4455  001EC8  0E00               	movlw	0
  4456  001ECA  0100               	movlb	0	; () banked
  4457  001ECC  6F89               	movwf	(_from_down_change+1)& (0+255),b
  4458  001ECE  0E01               	movlw	1
  4459  001ED0  6F88               	movwf	_from_down_change& (0+255),b
  4460  001ED2                     
  4461                           ; BSR set to: 0
  4462                           ;main.c: 903:             from_up_change = 0;
  4463  001ED2  0E00               	movlw	0
  4464  001ED4  6F8B               	movwf	(_from_up_change+1)& (0+255),b
  4465  001ED6  0E00               	movlw	0
  4466  001ED8  6F8A               	movwf	_from_up_change& (0+255),b
  4467  001EDA                     l4270:
  4468  001EDA  FFFF               	dw	65535	; assembler added errata NOP
  4469                           
  4470                           ; BSR set to: 0
  4471                           ;main.c: 904:             return 1;
  4472  001EDC  0E00               	movlw	0
  4473  001EDE  6E69               	movwf	(?_rutine_down+1)^0,c
  4474  001EE0  0E01               	movlw	1
  4475  001EE2  6E68               	movwf	?_rutine_down^0,c
  4476  001EE4  EF94  F00F         	goto	l393
  4477  001EE8                     l4276:
  4478  001EE8  FFFF               	dw	65535	; assembler added errata NOP
  4479                           
  4480                           ; BSR set to: 0
  4481                           ;main.c: 908:             LCD_Set_Cursor(2,1);
  4482  001EEA  0E01               	movlw	1
  4483  001EEC  6E06               	movwf	LCD_Set_Cursor@COL^0,c
  4484  001EEE  0E02               	movlw	2
  4485  001EF0  ECF4  F004         	call	_LCD_Set_Cursor
  4486  001EF4                     
  4487                           ;main.c: 909:             LCD_Write_String("No callsInDown");
  4488  001EF4  0EC1               	movlw	low STR_30
  4489  001EF6  6E06               	movwf	LCD_Write_String@Str^0,c
  4490  001EF8  0E7E               	movlw	high STR_30
  4491  001EFA  6E07               	movwf	(LCD_Write_String@Str+1)^0,c
  4492  001EFC  EC32  F005         	call	_LCD_Write_String	;wreg free
  4493  001F00                     
  4494                           ;main.c: 911:             call_init = 0;
  4495  001F00  0E00               	movlw	0
  4496  001F02  0100               	movlb	0	; () banked
  4497  001F04  6F91               	movwf	(_call_init+1)& (0+255),b
  4498  001F06  0E00               	movlw	0
  4499  001F08  6F90               	movwf	_call_init& (0+255),b
  4500  001F0A                     
  4501                           ; BSR set to: 0
  4502                           ;main.c: 912:             modeDown_F = 0;
  4503  001F0A  0E00               	movlw	0
  4504  001F0C  6F8D               	movwf	(_modeDown_F+1)& (0+255),b
  4505  001F0E  0E00               	movlw	0
  4506  001F10  6F8C               	movwf	_modeDown_F& (0+255),b
  4507  001F12                     
  4508                           ; BSR set to: 0
  4509                           ;main.c: 913:             tasksDown = 0;
  4510  001F12  0E00               	movlw	0
  4511  001F14  6E7E               	movwf	(_tasksDown+1)^0,c
  4512  001F16  0E00               	movlw	0
  4513  001F18  6E7D               	movwf	_tasksDown^0,c
  4514  001F1A  EF6D  F00F         	goto	l4270
  4515  001F1E                     l4290:
  4516  001F1E  FFFF               	dw	65535	; assembler added errata NOP
  4517                           
  4518                           ;main.c: 918:     return 0;
  4519  001F20  0E00               	movlw	0
  4520  001F22  6E69               	movwf	(?_rutine_down+1)^0,c
  4521  001F24  0E00               	movlw	0
  4522  001F26  6E68               	movwf	?_rutine_down^0,c
  4523  001F28                     l393:
  4524  001F28  FFFF               	dw	65535	; assembler added errata NOP
  4525  001F2A  0012               	return		;funcret
  4526  001F2C  FFFF               	dw	65535	; errata NOP
  4527  001F2E                     __end_of_rutine_down:
  4528                           	callstack 0
  4529                           
  4530 ;; *************** function _controlCalls *****************
  4531 ;; Defined at:
  4532 ;;		line 519 in file "main.c"
  4533 ;; Parameters:    Size  Location     Type
  4534 ;;		None
  4535 ;; Auto vars:     Size  Location     Type
  4536 ;;  i_8             2   14[BANK0 ] int 
  4537 ;;  i1              2   30[BANK0 ] int 
  4538 ;;  i_7             2   12[BANK0 ] int 
  4539 ;;  i1              2   28[BANK0 ] int 
  4540 ;;  i_6             2   10[BANK0 ] int 
  4541 ;;  i1              2   26[BANK0 ] int 
  4542 ;;  i_5             2    8[BANK0 ] int 
  4543 ;;  i1              2   24[BANK0 ] int 
  4544 ;;  i_4             2    6[BANK0 ] int 
  4545 ;;  i1              2   22[BANK0 ] int 
  4546 ;;  i_3             2    4[BANK0 ] int 
  4547 ;;  i1              2   20[BANK0 ] int 
  4548 ;;  i_2             2    2[BANK0 ] int 
  4549 ;;  i1              2   18[BANK0 ] int 
  4550 ;;  i_1             2    0[BANK0 ] int 
  4551 ;;  i1              2   16[BANK0 ] int 
  4552 ;; Return value:  Size  Location     Type
  4553 ;;                  1    wreg      void 
  4554 ;; Registers used:
  4555 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4556 ;; Tracked objects:
  4557 ;;		On entry : 0/0
  4558 ;;		On exit  : 0/0
  4559 ;;		Unchanged: 0/0
  4560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4561 ;;      Params:         0       0       0       0       0       0       0
  4562 ;;      Locals:         0      32       0       0       0       0       0
  4563 ;;      Temps:          2       0       0       0       0       0       0
  4564 ;;      Totals:         2      32       0       0       0       0       0
  4565 ;;Total ram usage:       34 bytes
  4566 ;; Hardware stack levels used: 1
  4567 ;; Hardware stack levels required when called: 8
  4568 ;; This function calls:
  4569 ;;		_LCD_Clear
  4570 ;;		_LCD_Set_Cursor
  4571 ;;		_LCD_Write_String
  4572 ;;		_dataPanelUp
  4573 ;;		_sprintf
  4574 ;; This function is called by:
  4575 ;;		_rutine_down
  4576 ;;		_rutine_up
  4577 ;; This function uses a non-reentrant model
  4578 ;;
  4579                           
  4580                           	psect	text5
  4581  0032FA                     __ptext5:
  4582                           	callstack 0
  4583  0032FA                     _controlCalls:
  4584                           	callstack 0
  4585  0032FA  FFFF               	dw	65535	; assembler added errata NOP
  4586  0032FC                     
  4587                           ;main.c: 521:         if(PORTDbits.RD4){
  4588  0032FC  A883               	btfss	131,4,c	;volatile
  4589  0032FE  EF83  F019         	goto	u3071
  4590  003302  EF86  F019         	goto	u3070
  4591  003306                     u3071:
  4592  003306  FFFF               	dw	65535	; assembler added errata NOP
  4593  003308  EF0D  F01B         	goto	l3872
  4594  00330C                     u3070:
  4595  00330C  FFFF               	dw	65535	; assembler added errata NOP
  4596  00330E                     
  4597                           ;main.c: 522:             nowFL = 1;
  4598  00330E  0E00               	movlw	0
  4599  003310  0101               	movlb	1	; () banked
  4600  003312  6FD9               	movwf	(_nowFL+1)& (0+255),b
  4601  003314  0E01               	movlw	1
  4602  003316  6FD8               	movwf	_nowFL& (0+255),b
  4603  003318                     
  4604                           ; BSR set to: 1
  4605                           ;main.c: 523:             if (queueUp[0] == 1) {
  4606  003318  0102               	movlb	2	; () banked
  4607  00331A  0500               	decf	_queueUp& (0+255),w,b
  4608  00331C  1101               	iorwf	(_queueUp+1)& (0+255),w,b
  4609  00331E  A4D8               	btfss	status,2,c
  4610  003320  EF94  F019         	goto	u3081
  4611  003324  EF97  F019         	goto	u3080
  4612  003328                     u3081:
  4613  003328  FFFF               	dw	65535	; assembler added errata NOP
  4614  00332A  EF5B  F01A         	goto	l3826
  4615  00332E                     u3080:
  4616  00332E  FFFF               	dw	65535	; assembler added errata NOP
  4617  003330                     
  4618                           ; BSR set to: 2
  4619                           ;main.c: 525:                 prevFL = 1;
  4620  003330  0E00               	movlw	0
  4621  003332  0100               	movlb	0	; () banked
  4622  003334  6F8F               	movwf	(_prevFL+1)& (0+255),b
  4623  003336  0E01               	movlw	1
  4624  003338  6F8E               	movwf	_prevFL& (0+255),b
  4625  00333A                     
  4626                           ; BSR set to: 0
  4627                           ;main.c: 526:                 LATCbits.LC1 = 1;
  4628  00333A  828B               	bsf	139,1,c	;volatile
  4629                           
  4630                           ;main.c: 528:                 for (int i1 = 0; i1 < tasksUp; i1++) {
  4631  00333C  0E00               	movlw	0
  4632  00333E  6FD0               	movwf	(controlCalls@i1+1)& (0+255),b
  4633  003340  0E00               	movlw	0
  4634  003342  6FCF               	movwf	controlCalls@i1& (0+255),b
  4635  003344  EFBD  F019         	goto	l3780
  4636  003348                     l3776:
  4637  003348  FFFF               	dw	65535	; assembler added errata NOP
  4638                           
  4639                           ; BSR set to: 0
  4640                           ;main.c: 529:                     queueUp[i1] = queueUp[i1 + 1];
  4641  00334A  90D8               	bcf	status,0,c
  4642  00334C  35CF               	rlcf	controlCalls@i1& (0+255),w,b
  4643  00334E  6ED9               	movwf	fsr2l,c
  4644  003350  35D0               	rlcf	(controlCalls@i1+1)& (0+255),w,b
  4645  003352  6EDA               	movwf	fsr2h,c
  4646  003354  0E02               	movlw	low (_queueUp+2)
  4647  003356  26D9               	addwf	fsr2l,f,c
  4648  003358  0E02               	movlw	high (_queueUp+2)
  4649  00335A  22DA               	addwfc	fsr2h,f,c
  4650  00335C  90D8               	bcf	status,0,c
  4651  00335E  35CF               	rlcf	controlCalls@i1& (0+255),w,b
  4652  003360  6EE1               	movwf	fsr1l,c
  4653  003362  35D0               	rlcf	(controlCalls@i1+1)& (0+255),w,b
  4654  003364  6EE2               	movwf	fsr1h,c
  4655  003366  0E00               	movlw	low _queueUp
  4656  003368  26E1               	addwf	fsr1l,f,c
  4657  00336A  0E02               	movlw	high _queueUp
  4658  00336C  22E2               	addwfc	fsr1h,f,c
  4659  00336E  CFDE FFE6          	movff	postinc2,postinc1
  4660  003372  CFDD FFE5          	movff	postdec2,postdec1
  4661  003376                     
  4662                           ; BSR set to: 0
  4663                           ;main.c: 530:                 }
  4664  003376  4BCF               	infsnz	controlCalls@i1& (0+255),f,b
  4665  003378  2BD0               	incf	(controlCalls@i1+1)& (0+255),f,b
  4666  00337A                     l3780:
  4667  00337A  FFFF               	dw	65535	; assembler added errata NOP
  4668                           
  4669                           ; BSR set to: 0
  4670  00337C  507B               	movf	_tasksUp^0,w,c
  4671  00337E  5DCF               	subwf	controlCalls@i1& (0+255),w,b
  4672  003380  51D0               	movf	(controlCalls@i1+1)& (0+255),w,b
  4673  003382  0A80               	xorlw	128
  4674  003384  6E66               	movwf	??_controlCalls^0,c
  4675  003386  507C               	movf	(_tasksUp+1)^0,w,c
  4676  003388  0A80               	xorlw	128
  4677  00338A  5866               	subwfb	??_controlCalls^0,w,c
  4678  00338C  A0D8               	btfss	status,0,c
  4679  00338E  EFCB  F019         	goto	u3091
  4680  003392  EFCE  F019         	goto	u3090
  4681  003396                     u3091:
  4682  003396  FFFF               	dw	65535	; assembler added errata NOP
  4683  003398  EFA4  F019         	goto	l3776
  4684  00339C                     u3090:
  4685  00339C  FFFF               	dw	65535	; assembler added errata NOP
  4686  00339E                     
  4687                           ; BSR set to: 0
  4688                           ;main.c: 531:                 tasksUp--;
  4689  00339E  067B               	decf	_tasksUp^0,f,c
  4690  0033A0  A0D8               	btfss	status,0,c
  4691  0033A2  067C               	decf	(_tasksUp+1)^0,f,c
  4692  0033A4                     
  4693                           ; BSR set to: 0
  4694                           ;main.c: 534:                 LCD_Clear();
  4695  0033A4  ECF4  F002         	call	_LCD_Clear	;wreg free
  4696  0033A8                     
  4697                           ;main.c: 535:                 LCD_Set_Cursor(1,1);
  4698  0033A8  0E01               	movlw	1
  4699  0033AA  6E06               	movwf	LCD_Set_Cursor@COL^0,c
  4700  0033AC  0E01               	movlw	1
  4701  0033AE  ECF4  F004         	call	_LCD_Set_Cursor
  4702  0033B2                     
  4703                           ;main.c: 536:                 LCD_Write_String("Up: Stop FL1");
  4704  0033B2  0E32               	movlw	low STR_5
  4705  0033B4  6E06               	movwf	LCD_Write_String@Str^0,c
  4706  0033B6  0E7F               	movlw	high STR_5
  4707  0033B8  6E07               	movwf	(LCD_Write_String@Str+1)^0,c
  4708  0033BA  EC32  F005         	call	_LCD_Write_String	;wreg free
  4709  0033BE                     
  4710                           ;main.c: 539:                 for (int i_1 = 0; i_1 < tasksUp; i_1++){
  4711  0033BE  0E00               	movlw	0
  4712  0033C0  0100               	movlb	0	; () banked
  4713  0033C2  6FC0               	movwf	(controlCalls@i_1+1)& (0+255),b
  4714  0033C4  0E00               	movlw	0
  4715  0033C6  6FBF               	movwf	controlCalls@i_1& (0+255),b
  4716  0033C8  EF0D  F01A         	goto	l3802
  4717  0033CC                     l3792:
  4718  0033CC  FFFF               	dw	65535	; assembler added errata NOP
  4719                           
  4720                           ; BSR set to: 0
  4721                           ;main.c: 541:                     sprintf(buffer, "%d", queueUp[i_1]);
  4722  0033CE  0E97               	movlw	low _buffer
  4723  0033D0  6E58               	movwf	sprintf@s^0,c
  4724  0033D2  0E00               	movlw	high _buffer
  4725  0033D4  6E59               	movwf	(sprintf@s+1)^0,c
  4726  0033D6  0EFC               	movlw	low STR_6
  4727  0033D8  6E5A               	movwf	sprintf@fmt^0,c
  4728  0033DA  0E7F               	movlw	high STR_6
  4729  0033DC  6E5B               	movwf	(sprintf@fmt+1)^0,c
  4730  0033DE  90D8               	bcf	status,0,c
  4731  0033E0  35BF               	rlcf	controlCalls@i_1& (0+255),w,b
  4732  0033E2  6ED9               	movwf	fsr2l,c
  4733  0033E4  35C0               	rlcf	(controlCalls@i_1+1)& (0+255),w,b
  4734  0033E6  6EDA               	movwf	fsr2h,c
  4735  0033E8  0E00               	movlw	low _queueUp
  4736  0033EA  26D9               	addwf	fsr2l,f,c
  4737  0033EC  0E02               	movlw	high _queueUp
  4738  0033EE  22DA               	addwfc	fsr2h,f,c
  4739  0033F0  CFDE F05C          	movff	postinc2,?_sprintf+4
  4740  0033F4  CFDD F05D          	movff	postdec2,?_sprintf+5
  4741  0033F8  ECE9  F003         	call	_sprintf	;wreg free
  4742  0033FC                     
  4743                           ;main.c: 542:                     LCD_Set_Cursor(2, pLCD);
  4744  0033FC  C0E3  F006         	movff	_pLCD,LCD_Set_Cursor@COL
  4745  003400  0E02               	movlw	2
  4746  003402  ECF4  F004         	call	_LCD_Set_Cursor
  4747  003406                     
  4748                           ;main.c: 543:                     LCD_Write_String(buffer);
  4749  003406  0E97               	movlw	low _buffer
  4750  003408  6E06               	movwf	LCD_Write_String@Str^0,c
  4751  00340A  0E00               	movlw	high _buffer
  4752  00340C  6E07               	movwf	(LCD_Write_String@Str+1)^0,c
  4753  00340E  EC32  F005         	call	_LCD_Write_String	;wreg free
  4754  003412                     
  4755                           ;main.c: 544:                     pLCD++;
  4756  003412  0100               	movlb	0	; () banked
  4757  003414  2BE3               	incf	_pLCD& (0+255),f,b
  4758  003416                     
  4759                           ; BSR set to: 0
  4760                           ;main.c: 545:                 }
  4761  003416  4BBF               	infsnz	controlCalls@i_1& (0+255),f,b
  4762  003418  2BC0               	incf	(controlCalls@i_1+1)& (0+255),f,b
  4763  00341A                     l3802:
  4764  00341A  FFFF               	dw	65535	; assembler added errata NOP
  4765                           
  4766                           ; BSR set to: 0
  4767  00341C  507B               	movf	_tasksUp^0,w,c
  4768  00341E  5DBF               	subwf	controlCalls@i_1& (0+255),w,b
  4769  003420  51C0               	movf	(controlCalls@i_1+1)& (0+255),w,b
  4770  003422  0A80               	xorlw	128
  4771  003424  6E66               	movwf	??_controlCalls^0,c
  4772  003426  507C               	movf	(_tasksUp+1)^0,w,c
  4773  003428  0A80               	xorlw	128
  4774  00342A  5866               	subwfb	??_controlCalls^0,w,c
  4775  00342C  A0D8               	btfss	status,0,c
  4776  00342E  EF1B  F01A         	goto	u3101
  4777  003432  EF1E  F01A         	goto	u3100
  4778  003436                     u3101:
  4779  003436  FFFF               	dw	65535	; assembler added errata NOP
  4780  003438  EFE6  F019         	goto	l3792
  4781  00343C                     u3100:
  4782  00343C  FFFF               	dw	65535	; assembler added errata NOP
  4783  00343E                     
  4784                           ; BSR set to: 0
  4785                           ;main.c: 546:                 pLCD = 1;
  4786  00343E  0E01               	movlw	1
  4787  003440  6FE3               	movwf	_pLCD& (0+255),b
  4788  003442                     
  4789                           ; BSR set to: 0
  4790                           ;main.c: 547:                 _delay((unsigned long)((3000)*(20000000/4000.0)));
  4791  003442  0E3A               	movlw	58
  4792  003444  6E67               	movwf	(??_controlCalls+1)^0,c
  4793  003446  0E1C               	movlw	28
  4794  003448  6E66               	movwf	??_controlCalls^0,c
  4795  00344A  0EC4               	movlw	196
  4796  00344C                     u4607:
  4797  00344C  FFFF               	dw	65535	; errata NOP
  4798  00344E  2EE8               	decfsz	wreg,f,c
  4799  003450  D7FD               	bra	u4607
  4800  003452  2E66               	decfsz	??_controlCalls^0,f,c
  4801  003454  D7FB               	bra	u4607
  4802  003456  2E67               	decfsz	(??_controlCalls+1)^0,f,c
  4803  003458  D7F9               	bra	u4607
  4804  00345A                     
  4805                           ;main.c: 549:                 LATDbits.LD0 = 1;
  4806  00345A  808C               	bsf	140,0,c	;volatile
  4807  00345C                     
  4808                           ;main.c: 550:                 dataPanelUp();
  4809  00345C  ECDA  F012         	call	_dataPanelUp	;wreg free
  4810  003460                     
  4811                           ;main.c: 551:                 LATDbits.LD0 = 0;
  4812  003460  908C               	bcf	140,0,c	;volatile
  4813  003462                     
  4814                           ;main.c: 552:                 _delay((unsigned long)((300)*(20000000/4000.0)));
  4815  003462  0E06               	movlw	6
  4816  003464  6E67               	movwf	(??_controlCalls+1)^0,c
  4817  003466  0EB6               	movlw	182
  4818  003468  6E66               	movwf	??_controlCalls^0,c
  4819  00346A  0EF9               	movlw	249
  4820  00346C                     u4617:
  4821  00346C  FFFF               	dw	65535	; errata NOP
  4822  00346E  2EE8               	decfsz	wreg,f,c
  4823  003470  D7FD               	bra	u4617
  4824  003472  2E66               	decfsz	??_controlCalls^0,f,c
  4825  003474  D7FB               	bra	u4617
  4826  003476  2E67               	decfsz	(??_controlCalls+1)^0,f,c
  4827  003478  D7F9               	bra	u4617
  4828  00347A                     
  4829                           ;main.c: 554:                 if(tasksUp != 0){
  4830  00347A  507B               	movf	_tasksUp^0,w,c
  4831  00347C  107C               	iorwf	(_tasksUp+1)^0,w,c
  4832  00347E  B4D8               	btfsc	status,2,c
  4833  003480  EF44  F01A         	goto	u3111
  4834  003484  EF47  F01A         	goto	u3110
  4835  003488                     u3111:
  4836  003488  FFFF               	dw	65535	; assembler added errata NOP
  4837  00348A  EF4B  F01A         	goto	l3820
  4838  00348E                     u3110:
  4839  00348E  FFFF               	dw	65535	; assembler added errata NOP
  4840  003490                     
  4841                           ;main.c: 555:                     LATCbits.LC1 = 0;
  4842  003490  928B               	bcf	139,1,c	;volatile
  4843                           
  4844                           ;main.c: 556:                 } else {
  4845  003492  EF5B  F01A         	goto	l3826
  4846  003496                     l3820:
  4847  003496  FFFF               	dw	65535	; assembler added errata NOP
  4848                           
  4849                           ;main.c: 557:                     LCD_Clear();
  4850  003498  ECF4  F002         	call	_LCD_Clear	;wreg free
  4851                           
  4852                           ;main.c: 558:                     LCD_Set_Cursor(1,1);
  4853  00349C  0E01               	movlw	1
  4854  00349E  6E06               	movwf	LCD_Set_Cursor@COL^0,c
  4855  0034A0  0E01               	movlw	1
  4856  0034A2  ECF4  F004         	call	_LCD_Set_Cursor
  4857  0034A6                     
  4858                           ;main.c: 559:                     LCD_Write_String("Mode Up OFF");
  4859  0034A6  0E72               	movlw	low STR_7
  4860  0034A8  6E06               	movwf	LCD_Write_String@Str^0,c
  4861  0034AA  0E7F               	movlw	high STR_7
  4862  0034AC  6E07               	movwf	(LCD_Write_String@Str+1)^0,c
  4863  0034AE  EC32  F005         	call	_LCD_Write_String	;wreg free
  4864  0034B2  EFFD  F01F         	goto	l315
  4865  0034B6                     l3826:
  4866  0034B6  FFFF               	dw	65535	; assembler added errata NOP
  4867                           
  4868                           ;main.c: 565:             if (queueDown[0] == 1) {
  4869  0034B8  0103               	movlb	3	; () banked
  4870  0034BA  0500               	decf	_queueDown& (0+255),w,b
  4871  0034BC  1101               	iorwf	(_queueDown+1)& (0+255),w,b
  4872  0034BE  A4D8               	btfss	status,2,c
  4873  0034C0  EF64  F01A         	goto	u3121
  4874  0034C4  EF67  F01A         	goto	u3120
  4875  0034C8                     u3121:
  4876  0034C8  FFFF               	dw	65535	; assembler added errata NOP
  4877  0034CA  EF0D  F01B         	goto	l3872
  4878  0034CE                     u3120:
  4879  0034CE  FFFF               	dw	65535	; assembler added errata NOP
  4880  0034D0                     
  4881                           ; BSR set to: 3
  4882                           ;main.c: 567:                 prevFL = 1;
  4883  0034D0  0E00               	movlw	0
  4884  0034D2  0100               	movlb	0	; () banked
  4885  0034D4  6F8F               	movwf	(_prevFL+1)& (0+255),b
  4886  0034D6  0E01               	movlw	1
  4887  0034D8  6F8E               	movwf	_prevFL& (0+255),b
  4888  0034DA                     
  4889                           ; BSR set to: 0
  4890                           ;main.c: 568:                 LATCbits.LC0 = 1;
  4891  0034DA  808B               	bsf	139,0,c	;volatile
  4892                           
  4893                           ;main.c: 570:                 for (int i1 = 0; i1 < tasksDown; i1++) {
  4894  0034DC  0E00               	movlw	0
  4895  0034DE  6FD2               	movwf	(controlCalls@i1_616+1)& (0+255),b
  4896  0034E0  0E00               	movlw	0
  4897  0034E2  6FD1               	movwf	controlCalls@i1_616& (0+255),b
  4898  0034E4  EF8D  F01A         	goto	l3836
  4899  0034E8                     l3832:
  4900  0034E8  FFFF               	dw	65535	; assembler added errata NOP
  4901                           
  4902                           ; BSR set to: 0
  4903                           ;main.c: 571:                     queueDown[i1] = queueDown[i1 + 1];
  4904  0034EA  90D8               	bcf	status,0,c
  4905  0034EC  35D1               	rlcf	controlCalls@i1_616& (0+255),w,b
  4906  0034EE  6ED9               	movwf	fsr2l,c
  4907  0034F0  35D2               	rlcf	(controlCalls@i1_616+1)& (0+255),w,b
  4908  0034F2  6EDA               	movwf	fsr2h,c
  4909  0034F4  0E02               	movlw	low (_queueDown+2)
  4910  0034F6  26D9               	addwf	fsr2l,f,c
  4911  0034F8  0E03               	movlw	high (_queueDown+2)
  4912  0034FA  22DA               	addwfc	fsr2h,f,c
  4913  0034FC  90D8               	bcf	status,0,c
  4914  0034FE  35D1               	rlcf	controlCalls@i1_616& (0+255),w,b
  4915  003500  6EE1               	movwf	fsr1l,c
  4916  003502  35D2               	rlcf	(controlCalls@i1_616+1)& (0+255),w,b
  4917  003504  6EE2               	movwf	fsr1h,c
  4918  003506  0E00               	movlw	low _queueDown
  4919  003508  26E1               	addwf	fsr1l,f,c
  4920  00350A  0E03               	movlw	high _queueDown
  4921  00350C  22E2               	addwfc	fsr1h,f,c
  4922  00350E  CFDE FFE6          	movff	postinc2,postinc1
  4923  003512  CFDD FFE5          	movff	postdec2,postdec1
  4924  003516                     
  4925                           ; BSR set to: 0
  4926                           ;main.c: 572:                 }
  4927  003516  4BD1               	infsnz	controlCalls@i1_616& (0+255),f,b
  4928  003518  2BD2               	incf	(controlCalls@i1_616+1)& (0+255),f,b
  4929  00351A                     l3836:
  4930  00351A  FFFF               	dw	65535	; assembler added errata NOP
  4931                           
  4932                           ; BSR set to: 0
  4933  00351C  507D               	movf	_tasksDown^0,w,c
  4934  00351E  5DD1               	subwf	controlCalls@i1_616& (0+255),w,b
  4935  003520  51D2               	movf	(controlCalls@i1_616+1)& (0+255),w,b
  4936  003522  0A80               	xorlw	128
  4937  003524  6E66               	movwf	??_controlCalls^0,c
  4938  003526  507E               	movf	(_tasksDown+1)^0,w,c
  4939  003528  0A80               	xorlw	128
  4940  00352A  5866               	subwfb	??_controlCalls^0,w,c
  4941  00352C  A0D8               	btfss	status,0,c
  4942  00352E  EF9B  F01A         	goto	u3131
  4943  003532  EF9E  F01A         	goto	u3130
  4944  003536                     u3131:
  4945  003536  FFFF               	dw	65535	; assembler added errata NOP
  4946  003538  EF74  F01A         	goto	l3832
  4947  00353C                     u3130:
  4948  00353C  FFFF               	dw	65535	; assembler added errata NOP
  4949  00353E                     
  4950                           ; BSR set to: 0
  4951                           ;main.c: 573:                 tasksDown--;
  4952  00353E  067D               	decf	_tasksDown^0,f,c
  4953  003540  A0D8               	btfss	status,0,c
  4954  003542  067E               	decf	(_tasksDown+1)^0,f,c
  4955  003544                     
  4956                           ; BSR set to: 0
  4957                           ;main.c: 576:                 LCD_Clear();
  4958  003544  ECF4  F002         	call	_LCD_Clear	;wreg free
  4959  003548                     
  4960                           ;main.c: 577:                 LCD_Set_Cursor(1,1);
  4961  003548  0E01               	movlw	1
  4962  00354A  6E06               	movwf	LCD_Set_Cursor@COL^0,c
  4963  00354C  0E01               	movlw	1
  4964  00354E  ECF4  F004         	call	_LCD_Set_Cursor
  4965  003552                     
  4966                           ;main.c: 578:                 LCD_Write_String("Down: Stop FL1");
  4967  003552  0E49               	movlw	low STR_8
  4968  003554  6E06               	movwf	LCD_Write_String@Str^0,c
  4969  003556  0E7E               	movlw	high STR_8
  4970  003558  6E07               	movwf	(LCD_Write_String@Str+1)^0,c
  4971  00355A  EC32  F005         	call	_LCD_Write_String	;wreg free
  4972  00355E                     
  4973                           ;main.c: 581:                 for (int i_2 = 0; i_2 < tasksDown; i_2++){
  4974  00355E  0E00               	movlw	0
  4975  003560  0100               	movlb	0	; () banked
  4976  003562  6FC2               	movwf	(controlCalls@i_2+1)& (0+255),b
  4977  003564  0E00               	movlw	0
  4978  003566  6FC1               	movwf	controlCalls@i_2& (0+255),b
  4979  003568  EFDD  F01A         	goto	l3858
  4980  00356C                     l3848:
  4981  00356C  FFFF               	dw	65535	; assembler added errata NOP
  4982                           
  4983                           ; BSR set to: 0
  4984                           ;main.c: 583:                     sprintf(buffer, "%d", queueDown[i_2]);
  4985  00356E  0E97               	movlw	low _buffer
  4986  003570  6E58               	movwf	sprintf@s^0,c
  4987  003572  0E00               	movlw	high _buffer
  4988  003574  6E59               	movwf	(sprintf@s+1)^0,c
  4989  003576  0EFC               	movlw	low STR_6
  4990  003578  6E5A               	movwf	sprintf@fmt^0,c
  4991  00357A  0E7F               	movlw	high STR_6
  4992  00357C  6E5B               	movwf	(sprintf@fmt+1)^0,c
  4993  00357E  90D8               	bcf	status,0,c
  4994  003580  35C1               	rlcf	controlCalls@i_2& (0+255),w,b
  4995  003582  6ED9               	movwf	fsr2l,c
  4996  003584  35C2               	rlcf	(controlCalls@i_2+1)& (0+255),w,b
  4997  003586  6EDA               	movwf	fsr2h,c
  4998  003588  0E00               	movlw	low _queueDown
  4999  00358A  26D9               	addwf	fsr2l,f,c
  5000  00358C  0E03               	movlw	high _queueDown
  5001  00358E  22DA               	addwfc	fsr2h,f,c
  5002  003590  CFDE F05C          	movff	postinc2,?_sprintf+4
  5003  003594  CFDD F05D          	movff	postdec2,?_sprintf+5
  5004  003598  ECE9  F003         	call	_sprintf	;wreg free
  5005  00359C                     
  5006                           ;main.c: 584:                     LCD_Set_Cursor(2, pLCD);
  5007  00359C  C0E3  F006         	movff	_pLCD,LCD_Set_Cursor@COL
  5008  0035A0  0E02               	movlw	2
  5009  0035A2  ECF4  F004         	call	_LCD_Set_Cursor
  5010  0035A6                     
  5011                           ;main.c: 585:                     LCD_Write_String(buffer);
  5012  0035A6  0E97               	movlw	low _buffer
  5013  0035A8  6E06               	movwf	LCD_Write_String@Str^0,c
  5014  0035AA  0E00               	movlw	high _buffer
  5015  0035AC  6E07               	movwf	(LCD_Write_String@Str+1)^0,c
  5016  0035AE  EC32  F005         	call	_LCD_Write_String	;wreg free
  5017  0035B2                     
  5018                           ;main.c: 586:                     pLCD++;
  5019  0035B2  0100               	movlb	0	; () banked
  5020  0035B4  2BE3               	incf	_pLCD& (0+255),f,b
  5021  0035B6                     
  5022                           ; BSR set to: 0
  5023                           ;main.c: 587:                 }
  5024  0035B6  4BC1               	infsnz	controlCalls@i_2& (0+255),f,b
  5025  0035B8  2BC2               	incf	(controlCalls@i_2+1)& (0+255),f,b
  5026  0035BA                     l3858:
  5027  0035BA  FFFF               	dw	65535	; assembler added errata NOP
  5028                           
  5029                           ; BSR set to: 0
  5030  0035BC  507D               	movf	_tasksDown^0,w,c
  5031  0035BE  5DC1               	subwf	controlCalls@i_2& (0+255),w,b
  5032  0035C0  51C2               	movf	(controlCalls@i_2+1)& (0+255),w,b
  5033  0035C2  0A80               	xorlw	128
  5034  0035C4  6E66               	movwf	??_controlCalls^0,c
  5035  0035C6  507E               	movf	(_tasksDown+1)^0,w,c
  5036  0035C8  0A80               	xorlw	128
  5037  0035CA  5866               	subwfb	??_controlCalls^0,w,c
  5038  0035CC  A0D8               	btfss	status,0,c
  5039  0035CE  EFEB  F01A         	goto	u3141
  5040  0035D2  EFEE  F01A         	goto	u3140
  5041  0035D6                     u3141:
  5042  0035D6  FFFF               	dw	65535	; assembler added errata NOP
  5043  0035D8  EFB6  F01A         	goto	l3848
  5044  0035DC                     u3140:
  5045  0035DC  FFFF               	dw	65535	; assembler added errata NOP
  5046  0035DE                     
  5047                           ; BSR set to: 0
  5048                           ;main.c: 588:                 pLCD = 1;
  5049  0035DE  0E01               	movlw	1
  5050  0035E0  6FE3               	movwf	_pLCD& (0+255),b
  5051  0035E2                     
  5052                           ; BSR set to: 0
  5053                           ;main.c: 589:                 _delay((unsigned long)((3000)*(20000000/4000.0)));
  5054  0035E2  0E3A               	movlw	58
  5055  0035E4  6E67               	movwf	(??_controlCalls+1)^0,c
  5056  0035E6  0E1C               	movlw	28
  5057  0035E8  6E66               	movwf	??_controlCalls^0,c
  5058  0035EA  0EC4               	movlw	196
  5059  0035EC                     u4627:
  5060  0035EC  FFFF               	dw	65535	; errata NOP
  5061  0035EE  2EE8               	decfsz	wreg,f,c
  5062  0035F0  D7FD               	bra	u4627
  5063  0035F2  2E66               	decfsz	??_controlCalls^0,f,c
  5064  0035F4  D7FB               	bra	u4627
  5065  0035F6  2E67               	decfsz	(??_controlCalls+1)^0,f,c
  5066  0035F8  D7F9               	bra	u4627
  5067  0035FA                     
  5068                           ;main.c: 592:                 LATDbits.LD0 = 1;
  5069  0035FA  808C               	bsf	140,0,c	;volatile
  5070  0035FC                     
  5071                           ;main.c: 593:                 dataPanelUp();
  5072  0035FC  ECDA  F012         	call	_dataPanelUp	;wreg free
  5073  003600                     
  5074                           ;main.c: 594:                 LATDbits.LD0 = 0;
  5075  003600  908C               	bcf	140,0,c	;volatile
  5076  003602                     
  5077                           ;main.c: 595:                 _delay((unsigned long)((300)*(20000000/4000.0)));
  5078  003602  0E06               	movlw	6
  5079  003604  6E67               	movwf	(??_controlCalls+1)^0,c
  5080  003606  0EB6               	movlw	182
  5081  003608  6E66               	movwf	??_controlCalls^0,c
  5082  00360A  0EF9               	movlw	249
  5083  00360C                     u4637:
  5084  00360C  FFFF               	dw	65535	; errata NOP
  5085  00360E  2EE8               	decfsz	wreg,f,c
  5086  003610  D7FD               	bra	u4637
  5087  003612  2E66               	decfsz	??_controlCalls^0,f,c
  5088  003614  D7FB               	bra	u4637
  5089  003616  2E67               	decfsz	(??_controlCalls+1)^0,f,c
  5090  003618  D7F9               	bra	u4637
  5091  00361A                     l3872:
  5092  00361A  FFFF               	dw	65535	; assembler added errata NOP
  5093                           
  5094                           ;main.c: 601:         if(PORTDbits.RD5){
  5095  00361C  AA83               	btfss	131,5,c	;volatile
  5096  00361E  EF13  F01B         	goto	u3151
  5097  003622  EF16  F01B         	goto	u3150
  5098  003626                     u3151:
  5099  003626  FFFF               	dw	65535	; assembler added errata NOP
  5100  003628  EFBD  F01C         	goto	l323
  5101  00362C                     u3150:
  5102  00362C  FFFF               	dw	65535	; assembler added errata NOP
  5103  00362E                     
  5104                           ;main.c: 602:             nowFL = 2;
  5105  00362E  0E00               	movlw	0
  5106  003630  0101               	movlb	1	; () banked
  5107  003632  6FD9               	movwf	(_nowFL+1)& (0+255),b
  5108  003634  0E02               	movlw	2
  5109  003636  6FD8               	movwf	_nowFL& (0+255),b
  5110  003638                     
  5111                           ; BSR set to: 1
  5112                           ;main.c: 603:             if (queueUp[0] == 2) {
  5113  003638  0E02               	movlw	2
  5114  00363A  0102               	movlb	2	; () banked
  5115  00363C  1900               	xorwf	_queueUp& (0+255),w,b
  5116  00363E  1101               	iorwf	(_queueUp+1)& (0+255),w,b
  5117  003640  A4D8               	btfss	status,2,c
  5118  003642  EF25  F01B         	goto	u3161
  5119  003646  EF28  F01B         	goto	u3160
  5120  00364A                     u3161:
  5121  00364A  FFFF               	dw	65535	; assembler added errata NOP
  5122  00364C  EFEC  F01B         	goto	l3932
  5123  003650                     u3160:
  5124  003650  FFFF               	dw	65535	; assembler added errata NOP
  5125  003652                     
  5126                           ; BSR set to: 2
  5127                           ;main.c: 605:                 prevFL = 2;
  5128  003652  0E00               	movlw	0
  5129  003654  0100               	movlb	0	; () banked
  5130  003656  6F8F               	movwf	(_prevFL+1)& (0+255),b
  5131  003658  0E02               	movlw	2
  5132  00365A  6F8E               	movwf	_prevFL& (0+255),b
  5133  00365C                     
  5134                           ; BSR set to: 0
  5135                           ;main.c: 607:                 LATCbits.LC1 = 1;
  5136  00365C  828B               	bsf	139,1,c	;volatile
  5137                           
  5138                           ;main.c: 609:                 for (int i1 = 0; i1 < tasksUp; i1++) {
  5139  00365E  0E00               	movlw	0
  5140  003660  6FD4               	movwf	(controlCalls@i1_620+1)& (0+255),b
  5141  003662  0E00               	movlw	0
  5142  003664  6FD3               	movwf	controlCalls@i1_620& (0+255),b
  5143  003666  EF4E  F01B         	goto	l3886
  5144  00366A                     l3882:
  5145  00366A  FFFF               	dw	65535	; assembler added errata NOP
  5146                           
  5147                           ; BSR set to: 0
  5148                           ;main.c: 610:                     queueUp[i1] = queueUp[i1 + 1];
  5149  00366C  90D8               	bcf	status,0,c
  5150  00366E  35D3               	rlcf	controlCalls@i1_620& (0+255),w,b
  5151  003670  6ED9               	movwf	fsr2l,c
  5152  003672  35D4               	rlcf	(controlCalls@i1_620+1)& (0+255),w,b
  5153  003674  6EDA               	movwf	fsr2h,c
  5154  003676  0E02               	movlw	low (_queueUp+2)
  5155  003678  26D9               	addwf	fsr2l,f,c
  5156  00367A  0E02               	movlw	high (_queueUp+2)
  5157  00367C  22DA               	addwfc	fsr2h,f,c
  5158  00367E  90D8               	bcf	status,0,c
  5159  003680  35D3               	rlcf	controlCalls@i1_620& (0+255),w,b
  5160  003682  6EE1               	movwf	fsr1l,c
  5161  003684  35D4               	rlcf	(controlCalls@i1_620+1)& (0+255),w,b
  5162  003686  6EE2               	movwf	fsr1h,c
  5163  003688  0E00               	movlw	low _queueUp
  5164  00368A  26E1               	addwf	fsr1l,f,c
  5165  00368C  0E02               	movlw	high _queueUp
  5166  00368E  22E2               	addwfc	fsr1h,f,c
  5167  003690  CFDE FFE6          	movff	postinc2,postinc1
  5168  003694  CFDD FFE5          	movff	postdec2,postdec1
  5169  003698                     
  5170                           ; BSR set to: 0
  5171                           ;main.c: 611:                 }
  5172  003698  4BD3               	infsnz	controlCalls@i1_620& (0+255),f,b
  5173  00369A  2BD4               	incf	(controlCalls@i1_620+1)& (0+255),f,b
  5174  00369C                     l3886:
  5175  00369C  FFFF               	dw	65535	; assembler added errata NOP
  5176                           
  5177                           ; BSR set to: 0
  5178  00369E  507B               	movf	_tasksUp^0,w,c
  5179  0036A0  5DD3               	subwf	controlCalls@i1_620& (0+255),w,b
  5180  0036A2  51D4               	movf	(controlCalls@i1_620+1)& (0+255),w,b
  5181  0036A4  0A80               	xorlw	128
  5182  0036A6  6E66               	movwf	??_controlCalls^0,c
  5183  0036A8  507C               	movf	(_tasksUp+1)^0,w,c
  5184  0036AA  0A80               	xorlw	128
  5185  0036AC  5866               	subwfb	??_controlCalls^0,w,c
  5186  0036AE  A0D8               	btfss	status,0,c
  5187  0036B0  EF5C  F01B         	goto	u3171
  5188  0036B4  EF5F  F01B         	goto	u3170
  5189  0036B8                     u3171:
  5190  0036B8  FFFF               	dw	65535	; assembler added errata NOP
  5191  0036BA  EF35  F01B         	goto	l3882
  5192  0036BE                     u3170:
  5193  0036BE  FFFF               	dw	65535	; assembler added errata NOP
  5194  0036C0                     
  5195                           ; BSR set to: 0
  5196                           ;main.c: 612:                 tasksUp--;
  5197  0036C0  067B               	decf	_tasksUp^0,f,c
  5198  0036C2  A0D8               	btfss	status,0,c
  5199  0036C4  067C               	decf	(_tasksUp+1)^0,f,c
  5200  0036C6                     
  5201                           ; BSR set to: 0
  5202                           ;main.c: 615:                 LCD_Clear();
  5203  0036C6  ECF4  F002         	call	_LCD_Clear	;wreg free
  5204  0036CA                     
  5205                           ;main.c: 616:                 LCD_Set_Cursor(1,1);
  5206  0036CA  0E01               	movlw	1
  5207  0036CC  6E06               	movwf	LCD_Set_Cursor@COL^0,c
  5208  0036CE  0E01               	movlw	1
  5209  0036D0  ECF4  F004         	call	_LCD_Set_Cursor
  5210  0036D4                     
  5211                           ;main.c: 617:                 LCD_Write_String("Up: Stop FL2");
  5212  0036D4  0E3F               	movlw	low STR_10
  5213  0036D6  6E06               	movwf	LCD_Write_String@Str^0,c
  5214  0036D8  0E7F               	movlw	high STR_10
  5215  0036DA  6E07               	movwf	(LCD_Write_String@Str+1)^0,c
  5216  0036DC  EC32  F005         	call	_LCD_Write_String	;wreg free
  5217  0036E0                     
  5218                           ;main.c: 620:                 for (int i_3 = 0; i_3 < tasksUp; i_3++){
  5219  0036E0  0E00               	movlw	0
  5220  0036E2  0100               	movlb	0	; () banked
  5221  0036E4  6FC4               	movwf	(controlCalls@i_3+1)& (0+255),b
  5222  0036E6  0E00               	movlw	0
  5223  0036E8  6FC3               	movwf	controlCalls@i_3& (0+255),b
  5224  0036EA  EF9E  F01B         	goto	l3908
  5225  0036EE                     l3898:
  5226  0036EE  FFFF               	dw	65535	; assembler added errata NOP
  5227                           
  5228                           ; BSR set to: 0
  5229                           ;main.c: 622:                     sprintf(buffer, "%d", queueUp[i_3]);
  5230  0036F0  0E97               	movlw	low _buffer
  5231  0036F2  6E58               	movwf	sprintf@s^0,c
  5232  0036F4  0E00               	movlw	high _buffer
  5233  0036F6  6E59               	movwf	(sprintf@s+1)^0,c
  5234  0036F8  0EFC               	movlw	low STR_6
  5235  0036FA  6E5A               	movwf	sprintf@fmt^0,c
  5236  0036FC  0E7F               	movlw	high STR_6
  5237  0036FE  6E5B               	movwf	(sprintf@fmt+1)^0,c
  5238  003700  90D8               	bcf	status,0,c
  5239  003702  35C3               	rlcf	controlCalls@i_3& (0+255),w,b
  5240  003704  6ED9               	movwf	fsr2l,c
  5241  003706  35C4               	rlcf	(controlCalls@i_3+1)& (0+255),w,b
  5242  003708  6EDA               	movwf	fsr2h,c
  5243  00370A  0E00               	movlw	low _queueUp
  5244  00370C  26D9               	addwf	fsr2l,f,c
  5245  00370E  0E02               	movlw	high _queueUp
  5246  003710  22DA               	addwfc	fsr2h,f,c
  5247  003712  CFDE F05C          	movff	postinc2,?_sprintf+4
  5248  003716  CFDD F05D          	movff	postdec2,?_sprintf+5
  5249  00371A  ECE9  F003         	call	_sprintf	;wreg free
  5250  00371E                     
  5251                           ;main.c: 623:                     LCD_Set_Cursor(2, pLCD);
  5252  00371E  C0E3  F006         	movff	_pLCD,LCD_Set_Cursor@COL
  5253  003722  0E02               	movlw	2
  5254  003724  ECF4  F004         	call	_LCD_Set_Cursor
  5255  003728                     
  5256                           ;main.c: 624:                     LCD_Write_String(buffer);
  5257  003728  0E97               	movlw	low _buffer
  5258  00372A  6E06               	movwf	LCD_Write_String@Str^0,c
  5259  00372C  0E00               	movlw	high _buffer
  5260  00372E  6E07               	movwf	(LCD_Write_String@Str+1)^0,c
  5261  003730  EC32  F005         	call	_LCD_Write_String	;wreg free
  5262  003734                     
  5263                           ;main.c: 625:                     pLCD++;
  5264  003734  0100               	movlb	0	; () banked
  5265  003736  2BE3               	incf	_pLCD& (0+255),f,b
  5266  003738                     
  5267                           ; BSR set to: 0
  5268                           ;main.c: 626:                 }
  5269  003738  4BC3               	infsnz	controlCalls@i_3& (0+255),f,b
  5270  00373A  2BC4               	incf	(controlCalls@i_3+1)& (0+255),f,b
  5271  00373C                     l3908:
  5272  00373C  FFFF               	dw	65535	; assembler added errata NOP
  5273                           
  5274                           ; BSR set to: 0
  5275  00373E  507B               	movf	_tasksUp^0,w,c
  5276  003740  5DC3               	subwf	controlCalls@i_3& (0+255),w,b
  5277  003742  51C4               	movf	(controlCalls@i_3+1)& (0+255),w,b
  5278  003744  0A80               	xorlw	128
  5279  003746  6E66               	movwf	??_controlCalls^0,c
  5280  003748  507C               	movf	(_tasksUp+1)^0,w,c
  5281  00374A  0A80               	xorlw	128
  5282  00374C  5866               	subwfb	??_controlCalls^0,w,c
  5283  00374E  A0D8               	btfss	status,0,c
  5284  003750  EFAC  F01B         	goto	u3181
  5285  003754  EFAF  F01B         	goto	u3180
  5286  003758                     u3181:
  5287  003758  FFFF               	dw	65535	; assembler added errata NOP
  5288  00375A  EF77  F01B         	goto	l3898
  5289  00375E                     u3180:
  5290  00375E  FFFF               	dw	65535	; assembler added errata NOP
  5291  003760                     
  5292                           ; BSR set to: 0
  5293                           ;main.c: 627:                 pLCD = 1;
  5294  003760  0E01               	movlw	1
  5295  003762  6FE3               	movwf	_pLCD& (0+255),b
  5296  003764                     
  5297                           ; BSR set to: 0
  5298                           ;main.c: 628:                 _delay((unsigned long)((3000)*(20000000/4000.0)));
  5299  003764  0E3A               	movlw	58
  5300  003766  6E67               	movwf	(??_controlCalls+1)^0,c
  5301  003768  0E1C               	movlw	28
  5302  00376A  6E66               	movwf	??_controlCalls^0,c
  5303  00376C  0EC4               	movlw	196
  5304  00376E                     u4647:
  5305  00376E  FFFF               	dw	65535	; errata NOP
  5306  003770  2EE8               	decfsz	wreg,f,c
  5307  003772  D7FD               	bra	u4647
  5308  003774  2E66               	decfsz	??_controlCalls^0,f,c
  5309  003776  D7FB               	bra	u4647
  5310  003778  2E67               	decfsz	(??_controlCalls+1)^0,f,c
  5311  00377A  D7F9               	bra	u4647
  5312  00377C                     
  5313                           ;main.c: 630:                 LATDbits.LD1 = 1;
  5314  00377C  828C               	bsf	140,1,c	;volatile
  5315  00377E                     
  5316                           ;main.c: 631:                 dataPanelUp();
  5317  00377E  ECDA  F012         	call	_dataPanelUp	;wreg free
  5318  003782                     
  5319                           ;main.c: 632:                 LATDbits.LD1 = 0;
  5320  003782  928C               	bcf	140,1,c	;volatile
  5321  003784                     
  5322                           ;main.c: 633:                 _delay((unsigned long)((300)*(20000000/4000.0)));
  5323  003784  0E06               	movlw	6
  5324  003786  6E67               	movwf	(??_controlCalls+1)^0,c
  5325  003788  0EB6               	movlw	182
  5326  00378A  6E66               	movwf	??_controlCalls^0,c
  5327  00378C  0EF9               	movlw	249
  5328  00378E                     u4657:
  5329  00378E  FFFF               	dw	65535	; errata NOP
  5330  003790  2EE8               	decfsz	wreg,f,c
  5331  003792  D7FD               	bra	u4657
  5332  003794  2E66               	decfsz	??_controlCalls^0,f,c
  5333  003796  D7FB               	bra	u4657
  5334  003798  2E67               	decfsz	(??_controlCalls+1)^0,f,c
  5335  00379A  D7F9               	bra	u4657
  5336  00379C                     
  5337                           ;main.c: 636:                 if(tasksUp != 0){
  5338  00379C  507B               	movf	_tasksUp^0,w,c
  5339  00379E  107C               	iorwf	(_tasksUp+1)^0,w,c
  5340  0037A0  B4D8               	btfsc	status,2,c
  5341  0037A2  EFD5  F01B         	goto	u3191
  5342  0037A6  EFD8  F01B         	goto	u3190
  5343  0037AA                     u3191:
  5344  0037AA  FFFF               	dw	65535	; assembler added errata NOP
  5345  0037AC  EFDC  F01B         	goto	l3926
  5346  0037B0                     u3190:
  5347  0037B0  FFFF               	dw	65535	; assembler added errata NOP
  5348  0037B2                     
  5349                           ;main.c: 637:                     LATCbits.LC1 = 0;
  5350  0037B2  928B               	bcf	139,1,c	;volatile
  5351                           
  5352                           ;main.c: 638:                 } else {
  5353  0037B4  EFEC  F01B         	goto	l3932
  5354  0037B8                     l3926:
  5355  0037B8  FFFF               	dw	65535	; assembler added errata NOP
  5356                           
  5357                           ;main.c: 639:                     LCD_Clear();
  5358  0037BA  ECF4  F002         	call	_LCD_Clear	;wreg free
  5359                           
  5360                           ;main.c: 640:                     LCD_Set_Cursor(1,1);
  5361  0037BE  0E01               	movlw	1
  5362  0037C0  6E06               	movwf	LCD_Set_Cursor@COL^0,c
  5363  0037C2  0E01               	movlw	1
  5364  0037C4  ECF4  F004         	call	_LCD_Set_Cursor
  5365  0037C8                     
  5366                           ;main.c: 641:                     LCD_Write_String("Mode Up OFF");
  5367  0037C8  0E72               	movlw	low STR_7
  5368  0037CA  6E06               	movwf	LCD_Write_String@Str^0,c
  5369  0037CC  0E7F               	movlw	high STR_7
  5370  0037CE  6E07               	movwf	(LCD_Write_String@Str+1)^0,c
  5371  0037D0  EC32  F005         	call	_LCD_Write_String	;wreg free
  5372  0037D4  EFFD  F01F         	goto	l315
  5373  0037D8                     l3932:
  5374  0037D8  FFFF               	dw	65535	; assembler added errata NOP
  5375                           
  5376                           ;main.c: 646:             if (queueDown[0] == 2) {
  5377  0037DA  0E02               	movlw	2
  5378  0037DC  0103               	movlb	3	; () banked
  5379  0037DE  1900               	xorwf	_queueDown& (0+255),w,b
  5380  0037E0  1101               	iorwf	(_queueDown+1)& (0+255),w,b
  5381  0037E2  A4D8               	btfss	status,2,c
  5382  0037E4  EFF6  F01B         	goto	u3201
  5383  0037E8  EFF9  F01B         	goto	u3200
  5384  0037EC                     u3201:
  5385  0037EC  FFFF               	dw	65535	; assembler added errata NOP
  5386  0037EE  EFBD  F01C         	goto	l323
  5387  0037F2                     u3200:
  5388  0037F2  FFFF               	dw	65535	; assembler added errata NOP
  5389  0037F4                     
  5390                           ; BSR set to: 3
  5391                           ;main.c: 648:                 prevFL = 2;
  5392  0037F4  0E00               	movlw	0
  5393  0037F6  0100               	movlb	0	; () banked
  5394  0037F8  6F8F               	movwf	(_prevFL+1)& (0+255),b
  5395  0037FA  0E02               	movlw	2
  5396  0037FC  6F8E               	movwf	_prevFL& (0+255),b
  5397  0037FE                     
  5398                           ; BSR set to: 0
  5399                           ;main.c: 649:                 LATCbits.LC0 = 1;
  5400  0037FE  808B               	bsf	139,0,c	;volatile
  5401                           
  5402                           ;main.c: 651:                 for (int i1 = 0; i1 < tasksDown; i1++) {
  5403  003800  0E00               	movlw	0
  5404  003802  6FD6               	movwf	(controlCalls@i1_625+1)& (0+255),b
  5405  003804  0E00               	movlw	0
  5406  003806  6FD5               	movwf	controlCalls@i1_625& (0+255),b
  5407  003808  EF1F  F01C         	goto	l3942
  5408  00380C                     l3938:
  5409  00380C  FFFF               	dw	65535	; assembler added errata NOP
  5410                           
  5411                           ; BSR set to: 0
  5412                           ;main.c: 652:                     queueDown[i1] = queueDown[i1 + 1];
  5413  00380E  90D8               	bcf	status,0,c
  5414  003810  35D5               	rlcf	controlCalls@i1_625& (0+255),w,b
  5415  003812  6ED9               	movwf	fsr2l,c
  5416  003814  35D6               	rlcf	(controlCalls@i1_625+1)& (0+255),w,b
  5417  003816  6EDA               	movwf	fsr2h,c
  5418  003818  0E02               	movlw	low (_queueDown+2)
  5419  00381A  26D9               	addwf	fsr2l,f,c
  5420  00381C  0E03               	movlw	high (_queueDown+2)
  5421  00381E  22DA               	addwfc	fsr2h,f,c
  5422  003820  90D8               	bcf	status,0,c
  5423  003822  35D5               	rlcf	controlCalls@i1_625& (0+255),w,b
  5424  003824  6EE1               	movwf	fsr1l,c
  5425  003826  35D6               	rlcf	(controlCalls@i1_625+1)& (0+255),w,b
  5426  003828  6EE2               	movwf	fsr1h,c
  5427  00382A  0E00               	movlw	low _queueDown
  5428  00382C  26E1               	addwf	fsr1l,f,c
  5429  00382E  0E03               	movlw	high _queueDown
  5430  003830  22E2               	addwfc	fsr1h,f,c
  5431  003832  CFDE FFE6          	movff	postinc2,postinc1
  5432  003836  CFDD FFE5          	movff	postdec2,postdec1
  5433  00383A                     
  5434                           ; BSR set to: 0
  5435                           ;main.c: 653:                 }
  5436  00383A  4BD5               	infsnz	controlCalls@i1_625& (0+255),f,b
  5437  00383C  2BD6               	incf	(controlCalls@i1_625+1)& (0+255),f,b
  5438  00383E                     l3942:
  5439  00383E  FFFF               	dw	65535	; assembler added errata NOP
  5440                           
  5441                           ; BSR set to: 0
  5442  003840  507D               	movf	_tasksDown^0,w,c
  5443  003842  5DD5               	subwf	controlCalls@i1_625& (0+255),w,b
  5444  003844  51D6               	movf	(controlCalls@i1_625+1)& (0+255),w,b
  5445  003846  0A80               	xorlw	128
  5446  003848  6E66               	movwf	??_controlCalls^0,c
  5447  00384A  507E               	movf	(_tasksDown+1)^0,w,c
  5448  00384C  0A80               	xorlw	128
  5449  00384E  5866               	subwfb	??_controlCalls^0,w,c
  5450  003850  A0D8               	btfss	status,0,c
  5451  003852  EF2D  F01C         	goto	u3211
  5452  003856  EF30  F01C         	goto	u3210
  5453  00385A                     u3211:
  5454  00385A  FFFF               	dw	65535	; assembler added errata NOP
  5455  00385C  EF06  F01C         	goto	l3938
  5456  003860                     u3210:
  5457  003860  FFFF               	dw	65535	; assembler added errata NOP
  5458  003862                     
  5459                           ; BSR set to: 0
  5460                           ;main.c: 654:                 tasksDown--;
  5461  003862  067D               	decf	_tasksDown^0,f,c
  5462  003864  A0D8               	btfss	status,0,c
  5463  003866  067E               	decf	(_tasksDown+1)^0,f,c
  5464  003868                     
  5465                           ; BSR set to: 0
  5466                           ;main.c: 657:                 LCD_Clear();
  5467  003868  ECF4  F002         	call	_LCD_Clear	;wreg free
  5468  00386C                     
  5469                           ;main.c: 658:                 LCD_Set_Cursor(1,1);
  5470  00386C  0E01               	movlw	1
  5471  00386E  6E06               	movwf	LCD_Set_Cursor@COL^0,c
  5472  003870  0E01               	movlw	1
  5473  003872  ECF4  F004         	call	_LCD_Set_Cursor
  5474  003876                     
  5475                           ;main.c: 659:                 LCD_Write_String("Down: Stop FL2");
  5476  003876  0E67               	movlw	low STR_13
  5477  003878  6E06               	movwf	LCD_Write_String@Str^0,c
  5478  00387A  0E7E               	movlw	high STR_13
  5479  00387C  6E07               	movwf	(LCD_Write_String@Str+1)^0,c
  5480  00387E  EC32  F005         	call	_LCD_Write_String	;wreg free
  5481  003882                     
  5482                           ;main.c: 662:                 for (int i_4 = 0; i_4 < tasksDown; i_4++){
  5483  003882  0E00               	movlw	0
  5484  003884  0100               	movlb	0	; () banked
  5485  003886  6FC6               	movwf	(controlCalls@i_4+1)& (0+255),b
  5486  003888  0E00               	movlw	0
  5487  00388A  6FC5               	movwf	controlCalls@i_4& (0+255),b
  5488  00388C  EF6F  F01C         	goto	l3964
  5489  003890                     l3954:
  5490  003890  FFFF               	dw	65535	; assembler added errata NOP
  5491                           
  5492                           ; BSR set to: 0
  5493                           ;main.c: 664:                     sprintf(buffer, "%d", queueDown[i_4]);
  5494  003892  0E97               	movlw	low _buffer
  5495  003894  6E58               	movwf	sprintf@s^0,c
  5496  003896  0E00               	movlw	high _buffer
  5497  003898  6E59               	movwf	(sprintf@s+1)^0,c
  5498  00389A  0EFC               	movlw	low STR_6
  5499  00389C  6E5A               	movwf	sprintf@fmt^0,c
  5500  00389E  0E7F               	movlw	high STR_6
  5501  0038A0  6E5B               	movwf	(sprintf@fmt+1)^0,c
  5502  0038A2  90D8               	bcf	status,0,c
  5503  0038A4  35C5               	rlcf	controlCalls@i_4& (0+255),w,b
  5504  0038A6  6ED9               	movwf	fsr2l,c
  5505  0038A8  35C6               	rlcf	(controlCalls@i_4+1)& (0+255),w,b
  5506  0038AA  6EDA               	movwf	fsr2h,c
  5507  0038AC  0E00               	movlw	low _queueDown
  5508  0038AE  26D9               	addwf	fsr2l,f,c
  5509  0038B0  0E03               	movlw	high _queueDown
  5510  0038B2  22DA               	addwfc	fsr2h,f,c
  5511  0038B4  CFDE F05C          	movff	postinc2,?_sprintf+4
  5512  0038B8  CFDD F05D          	movff	postdec2,?_sprintf+5
  5513  0038BC  ECE9  F003         	call	_sprintf	;wreg free
  5514  0038C0                     
  5515                           ;main.c: 665:                     LCD_Set_Cursor(2, pLCD);
  5516  0038C0  C0E3  F006         	movff	_pLCD,LCD_Set_Cursor@COL
  5517  0038C4  0E02               	movlw	2
  5518  0038C6  ECF4  F004         	call	_LCD_Set_Cursor
  5519  0038CA                     
  5520                           ;main.c: 666:                     LCD_Write_String(buffer);
  5521  0038CA  0E97               	movlw	low _buffer
  5522  0038CC  6E06               	movwf	LCD_Write_String@Str^0,c
  5523  0038CE  0E00               	movlw	high _buffer
  5524  0038D0  6E07               	movwf	(LCD_Write_String@Str+1)^0,c
  5525  0038D2  EC32  F005         	call	_LCD_Write_String	;wreg free
  5526  0038D6                     
  5527                           ;main.c: 667:                     pLCD++;
  5528  0038D6  0100               	movlb	0	; () banked
  5529  0038D8  2BE3               	incf	_pLCD& (0+255),f,b
  5530  0038DA                     
  5531                           ; BSR set to: 0
  5532                           ;main.c: 668:                 }
  5533  0038DA  4BC5               	infsnz	controlCalls@i_4& (0+255),f,b
  5534  0038DC  2BC6               	incf	(controlCalls@i_4+1)& (0+255),f,b
  5535  0038DE                     l3964:
  5536  0038DE  FFFF               	dw	65535	; assembler added errata NOP
  5537                           
  5538                           ; BSR set to: 0
  5539  0038E0  507D               	movf	_tasksDown^0,w,c
  5540  0038E2  5DC5               	subwf	controlCalls@i_4& (0+255),w,b
  5541  0038E4  51C6               	movf	(controlCalls@i_4+1)& (0+255),w,b
  5542  0038E6  0A80               	xorlw	128
  5543  0038E8  6E66               	movwf	??_controlCalls^0,c
  5544  0038EA  507E               	movf	(_tasksDown+1)^0,w,c
  5545  0038EC  0A80               	xorlw	128
  5546  0038EE  5866               	subwfb	??_controlCalls^0,w,c
  5547  0038F0  A0D8               	btfss	status,0,c
  5548  0038F2  EF7D  F01C         	goto	u3221
  5549  0038F6  EF80  F01C         	goto	u3220
  5550  0038FA                     u3221:
  5551  0038FA  FFFF               	dw	65535	; assembler added errata NOP
  5552  0038FC  EF48  F01C         	goto	l3954
  5553  003900                     u3220:
  5554  003900  FFFF               	dw	65535	; assembler added errata NOP
  5555  003902                     
  5556                           ; BSR set to: 0
  5557                           ;main.c: 669:                 pLCD = 1;
  5558  003902  0E01               	movlw	1
  5559  003904  6FE3               	movwf	_pLCD& (0+255),b
  5560  003906                     
  5561                           ; BSR set to: 0
  5562                           ;main.c: 670:                 _delay((unsigned long)((3000)*(20000000/4000.0)));
  5563  003906  0E3A               	movlw	58
  5564  003908  6E67               	movwf	(??_controlCalls+1)^0,c
  5565  00390A  0E1C               	movlw	28
  5566  00390C  6E66               	movwf	??_controlCalls^0,c
  5567  00390E  0EC4               	movlw	196
  5568  003910                     u4667:
  5569  003910  FFFF               	dw	65535	; errata NOP
  5570  003912  2EE8               	decfsz	wreg,f,c
  5571  003914  D7FD               	bra	u4667
  5572  003916  2E66               	decfsz	??_controlCalls^0,f,c
  5573  003918  D7FB               	bra	u4667
  5574  00391A  2E67               	decfsz	(??_controlCalls+1)^0,f,c
  5575  00391C  D7F9               	bra	u4667
  5576  00391E                     
  5577                           ;main.c: 672:                 LATDbits.LD1 = 1;
  5578  00391E  828C               	bsf	140,1,c	;volatile
  5579  003920                     
  5580                           ;main.c: 673:                 dataPanelUp();
  5581  003920  ECDA  F012         	call	_dataPanelUp	;wreg free
  5582  003924                     
  5583                           ;main.c: 674:                 LATDbits.LD1 = 0;
  5584  003924  928C               	bcf	140,1,c	;volatile
  5585  003926                     
  5586                           ;main.c: 675:                 _delay((unsigned long)((300)*(20000000/4000.0)));
  5587  003926  0E06               	movlw	6
  5588  003928  6E67               	movwf	(??_controlCalls+1)^0,c
  5589  00392A  0EB6               	movlw	182
  5590  00392C  6E66               	movwf	??_controlCalls^0,c
  5591  00392E  0EF9               	movlw	249
  5592  003930                     u4677:
  5593  003930  FFFF               	dw	65535	; errata NOP
  5594  003932  2EE8               	decfsz	wreg,f,c
  5595  003934  D7FD               	bra	u4677
  5596  003936  2E66               	decfsz	??_controlCalls^0,f,c
  5597  003938  D7FB               	bra	u4677
  5598  00393A  2E67               	decfsz	(??_controlCalls+1)^0,f,c
  5599  00393C  D7F9               	bra	u4677
  5600  00393E                     
  5601                           ;main.c: 679:                 if(tasksDown != 0){
  5602  00393E  507D               	movf	_tasksDown^0,w,c
  5603  003940  107E               	iorwf	(_tasksDown+1)^0,w,c
  5604  003942  B4D8               	btfsc	status,2,c
  5605  003944  EFA6  F01C         	goto	u3231
  5606  003948  EFA9  F01C         	goto	u3230
  5607  00394C                     u3231:
  5608  00394C  FFFF               	dw	65535	; assembler added errata NOP
  5609  00394E  EFAD  F01C         	goto	l3982
  5610  003952                     u3230:
  5611  003952  FFFF               	dw	65535	; assembler added errata NOP
  5612  003954                     
  5613                           ;main.c: 680:                     LATCbits.LC0 = 0;
  5614  003954  908B               	bcf	139,0,c	;volatile
  5615                           
  5616                           ;main.c: 681:                 } else {
  5617  003956  EFBD  F01C         	goto	l323
  5618  00395A                     l3982:
  5619  00395A  FFFF               	dw	65535	; assembler added errata NOP
  5620                           
  5621                           ;main.c: 682:                     LCD_Clear();
  5622  00395C  ECF4  F002         	call	_LCD_Clear	;wreg free
  5623                           
  5624                           ;main.c: 683:                     LCD_Set_Cursor(1,1);
  5625  003960  0E01               	movlw	1
  5626  003962  6E06               	movwf	LCD_Set_Cursor@COL^0,c
  5627  003964  0E01               	movlw	1
  5628  003966  ECF4  F004         	call	_LCD_Set_Cursor
  5629  00396A                     
  5630                           ;main.c: 684:                     LCD_Write_String("Mode Down OFF");
  5631  00396A  0E16               	movlw	low STR_15
  5632  00396C  6E06               	movwf	LCD_Write_String@Str^0,c
  5633  00396E  0E7F               	movlw	high STR_15
  5634  003970  6E07               	movwf	(LCD_Write_String@Str+1)^0,c
  5635  003972  EC32  F005         	call	_LCD_Write_String	;wreg free
  5636  003976  EFFD  F01F         	goto	l315
  5637  00397A                     l323:
  5638  00397A  FFFF               	dw	65535	; assembler added errata NOP
  5639                           
  5640                           ;main.c: 692:         if(PORTDbits.RD6){
  5641  00397C  AC83               	btfss	131,6,c	;volatile
  5642  00397E  EFC3  F01C         	goto	u3241
  5643  003982  EFC6  F01C         	goto	u3240
  5644  003986                     u3241:
  5645  003986  FFFF               	dw	65535	; assembler added errata NOP
  5646  003988  EF6D  F01E         	goto	l342
  5647  00398C                     u3240:
  5648  00398C  FFFF               	dw	65535	; assembler added errata NOP
  5649  00398E                     
  5650                           ;main.c: 693:             nowFL = 3;
  5651  00398E  0E00               	movlw	0
  5652  003990  0101               	movlb	1	; () banked
  5653  003992  6FD9               	movwf	(_nowFL+1)& (0+255),b
  5654  003994  0E03               	movlw	3
  5655  003996  6FD8               	movwf	_nowFL& (0+255),b
  5656  003998                     
  5657                           ; BSR set to: 1
  5658                           ;main.c: 694:             if (queueUp[0] == 3) {
  5659  003998  0E03               	movlw	3
  5660  00399A  0102               	movlb	2	; () banked
  5661  00399C  1900               	xorwf	_queueUp& (0+255),w,b
  5662  00399E  1101               	iorwf	(_queueUp+1)& (0+255),w,b
  5663  0039A0  A4D8               	btfss	status,2,c
  5664  0039A2  EFD5  F01C         	goto	u3251
  5665  0039A6  EFD8  F01C         	goto	u3250
  5666  0039AA                     u3251:
  5667  0039AA  FFFF               	dw	65535	; assembler added errata NOP
  5668  0039AC  EF9C  F01D         	goto	l4046
  5669  0039B0                     u3250:
  5670  0039B0  FFFF               	dw	65535	; assembler added errata NOP
  5671  0039B2                     
  5672                           ; BSR set to: 2
  5673                           ;main.c: 696:                 prevFL = 3;
  5674  0039B2  0E00               	movlw	0
  5675  0039B4  0100               	movlb	0	; () banked
  5676  0039B6  6F8F               	movwf	(_prevFL+1)& (0+255),b
  5677  0039B8  0E03               	movlw	3
  5678  0039BA  6F8E               	movwf	_prevFL& (0+255),b
  5679  0039BC                     
  5680                           ; BSR set to: 0
  5681                           ;main.c: 698:                 LATCbits.LC1 = 1;
  5682  0039BC  828B               	bsf	139,1,c	;volatile
  5683                           
  5684                           ;main.c: 700:                 for (int i1 = 0; i1 < tasksUp; i1++) {
  5685  0039BE  0E00               	movlw	0
  5686  0039C0  6FD8               	movwf	(controlCalls@i1_630+1)& (0+255),b
  5687  0039C2  0E00               	movlw	0
  5688  0039C4  6FD7               	movwf	controlCalls@i1_630& (0+255),b
  5689  0039C6  EFFE  F01C         	goto	l4000
  5690  0039CA                     l3996:
  5691  0039CA  FFFF               	dw	65535	; assembler added errata NOP
  5692                           
  5693                           ; BSR set to: 0
  5694                           ;main.c: 701:                     queueUp[i1] = queueUp[i1 + 1];
  5695  0039CC  90D8               	bcf	status,0,c
  5696  0039CE  35D7               	rlcf	controlCalls@i1_630& (0+255),w,b
  5697  0039D0  6ED9               	movwf	fsr2l,c
  5698  0039D2  35D8               	rlcf	(controlCalls@i1_630+1)& (0+255),w,b
  5699  0039D4  6EDA               	movwf	fsr2h,c
  5700  0039D6  0E02               	movlw	low (_queueUp+2)
  5701  0039D8  26D9               	addwf	fsr2l,f,c
  5702  0039DA  0E02               	movlw	high (_queueUp+2)
  5703  0039DC  22DA               	addwfc	fsr2h,f,c
  5704  0039DE  90D8               	bcf	status,0,c
  5705  0039E0  35D7               	rlcf	controlCalls@i1_630& (0+255),w,b
  5706  0039E2  6EE1               	movwf	fsr1l,c
  5707  0039E4  35D8               	rlcf	(controlCalls@i1_630+1)& (0+255),w,b
  5708  0039E6  6EE2               	movwf	fsr1h,c
  5709  0039E8  0E00               	movlw	low _queueUp
  5710  0039EA  26E1               	addwf	fsr1l,f,c
  5711  0039EC  0E02               	movlw	high _queueUp
  5712  0039EE  22E2               	addwfc	fsr1h,f,c
  5713  0039F0  CFDE FFE6          	movff	postinc2,postinc1
  5714  0039F4  CFDD FFE5          	movff	postdec2,postdec1
  5715  0039F8                     
  5716                           ; BSR set to: 0
  5717                           ;main.c: 702:                 }
  5718  0039F8  4BD7               	infsnz	controlCalls@i1_630& (0+255),f,b
  5719  0039FA  2BD8               	incf	(controlCalls@i1_630+1)& (0+255),f,b
  5720  0039FC                     l4000:
  5721  0039FC  FFFF               	dw	65535	; assembler added errata NOP
  5722                           
  5723                           ; BSR set to: 0
  5724  0039FE  507B               	movf	_tasksUp^0,w,c
  5725  003A00  5DD7               	subwf	controlCalls@i1_630& (0+255),w,b
  5726  003A02  51D8               	movf	(controlCalls@i1_630+1)& (0+255),w,b
  5727  003A04  0A80               	xorlw	128
  5728  003A06  6E66               	movwf	??_controlCalls^0,c
  5729  003A08  507C               	movf	(_tasksUp+1)^0,w,c
  5730  003A0A  0A80               	xorlw	128
  5731  003A0C  5866               	subwfb	??_controlCalls^0,w,c
  5732  003A0E  A0D8               	btfss	status,0,c
  5733  003A10  EF0C  F01D         	goto	u3261
  5734  003A14  EF0F  F01D         	goto	u3260
  5735  003A18                     u3261:
  5736  003A18  FFFF               	dw	65535	; assembler added errata NOP
  5737  003A1A  EFE5  F01C         	goto	l3996
  5738  003A1E                     u3260:
  5739  003A1E  FFFF               	dw	65535	; assembler added errata NOP
  5740  003A20                     
  5741                           ; BSR set to: 0
  5742                           ;main.c: 703:                 tasksUp--;
  5743  003A20  067B               	decf	_tasksUp^0,f,c
  5744  003A22  A0D8               	btfss	status,0,c
  5745  003A24  067C               	decf	(_tasksUp+1)^0,f,c
  5746  003A26                     
  5747                           ; BSR set to: 0
  5748                           ;main.c: 706:                 LCD_Clear();
  5749  003A26  ECF4  F002         	call	_LCD_Clear	;wreg free
  5750  003A2A                     
  5751                           ;main.c: 707:                 LCD_Set_Cursor(1,1);
  5752  003A2A  0E01               	movlw	1
  5753  003A2C  6E06               	movwf	LCD_Set_Cursor@COL^0,c
  5754  003A2E  0E01               	movlw	1
  5755  003A30  ECF4  F004         	call	_LCD_Set_Cursor
  5756  003A34                     
  5757                           ;main.c: 708:                 LCD_Write_String("Up: Stop FL3");
  5758  003A34  0E4C               	movlw	low STR_16
  5759  003A36  6E06               	movwf	LCD_Write_String@Str^0,c
  5760  003A38  0E7F               	movlw	high STR_16
  5761  003A3A  6E07               	movwf	(LCD_Write_String@Str+1)^0,c
  5762  003A3C  EC32  F005         	call	_LCD_Write_String	;wreg free
  5763  003A40                     
  5764                           ;main.c: 711:                 for (int i_5 = 0; i_5 < tasksUp; i_5++){
  5765  003A40  0E00               	movlw	0
  5766  003A42  0100               	movlb	0	; () banked
  5767  003A44  6FC8               	movwf	(controlCalls@i_5+1)& (0+255),b
  5768  003A46  0E00               	movlw	0
  5769  003A48  6FC7               	movwf	controlCalls@i_5& (0+255),b
  5770  003A4A  EF4E  F01D         	goto	l4022
  5771  003A4E                     l4012:
  5772  003A4E  FFFF               	dw	65535	; assembler added errata NOP
  5773                           
  5774                           ; BSR set to: 0
  5775                           ;main.c: 713:                     sprintf(buffer, "%d", queueUp[i_5]);
  5776  003A50  0E97               	movlw	low _buffer
  5777  003A52  6E58               	movwf	sprintf@s^0,c
  5778  003A54  0E00               	movlw	high _buffer
  5779  003A56  6E59               	movwf	(sprintf@s+1)^0,c
  5780  003A58  0EFC               	movlw	low STR_6
  5781  003A5A  6E5A               	movwf	sprintf@fmt^0,c
  5782  003A5C  0E7F               	movlw	high STR_6
  5783  003A5E  6E5B               	movwf	(sprintf@fmt+1)^0,c
  5784  003A60  90D8               	bcf	status,0,c
  5785  003A62  35C7               	rlcf	controlCalls@i_5& (0+255),w,b
  5786  003A64  6ED9               	movwf	fsr2l,c
  5787  003A66  35C8               	rlcf	(controlCalls@i_5+1)& (0+255),w,b
  5788  003A68  6EDA               	movwf	fsr2h,c
  5789  003A6A  0E00               	movlw	low _queueUp
  5790  003A6C  26D9               	addwf	fsr2l,f,c
  5791  003A6E  0E02               	movlw	high _queueUp
  5792  003A70  22DA               	addwfc	fsr2h,f,c
  5793  003A72  CFDE F05C          	movff	postinc2,?_sprintf+4
  5794  003A76  CFDD F05D          	movff	postdec2,?_sprintf+5
  5795  003A7A  ECE9  F003         	call	_sprintf	;wreg free
  5796  003A7E                     
  5797                           ;main.c: 714:                     LCD_Set_Cursor(2, pLCD);
  5798  003A7E  C0E3  F006         	movff	_pLCD,LCD_Set_Cursor@COL
  5799  003A82  0E02               	movlw	2
  5800  003A84  ECF4  F004         	call	_LCD_Set_Cursor
  5801  003A88                     
  5802                           ;main.c: 715:                     LCD_Write_String(buffer);
  5803  003A88  0E97               	movlw	low _buffer
  5804  003A8A  6E06               	movwf	LCD_Write_String@Str^0,c
  5805  003A8C  0E00               	movlw	high _buffer
  5806  003A8E  6E07               	movwf	(LCD_Write_String@Str+1)^0,c
  5807  003A90  EC32  F005         	call	_LCD_Write_String	;wreg free
  5808  003A94                     
  5809                           ;main.c: 716:                     pLCD++;
  5810  003A94  0100               	movlb	0	; () banked
  5811  003A96  2BE3               	incf	_pLCD& (0+255),f,b
  5812  003A98                     
  5813                           ; BSR set to: 0
  5814                           ;main.c: 717:                 }
  5815  003A98  4BC7               	infsnz	controlCalls@i_5& (0+255),f,b
  5816  003A9A  2BC8               	incf	(controlCalls@i_5+1)& (0+255),f,b
  5817  003A9C                     l4022:
  5818  003A9C  FFFF               	dw	65535	; assembler added errata NOP
  5819                           
  5820                           ; BSR set to: 0
  5821  003A9E  507B               	movf	_tasksUp^0,w,c
  5822  003AA0  5DC7               	subwf	controlCalls@i_5& (0+255),w,b
  5823  003AA2  51C8               	movf	(controlCalls@i_5+1)& (0+255),w,b
  5824  003AA4  0A80               	xorlw	128
  5825  003AA6  6E66               	movwf	??_controlCalls^0,c
  5826  003AA8  507C               	movf	(_tasksUp+1)^0,w,c
  5827  003AAA  0A80               	xorlw	128
  5828  003AAC  5866               	subwfb	??_controlCalls^0,w,c
  5829  003AAE  A0D8               	btfss	status,0,c
  5830  003AB0  EF5C  F01D         	goto	u3271
  5831  003AB4  EF5F  F01D         	goto	u3270
  5832  003AB8                     u3271:
  5833  003AB8  FFFF               	dw	65535	; assembler added errata NOP
  5834  003ABA  EF27  F01D         	goto	l4012
  5835  003ABE                     u3270:
  5836  003ABE  FFFF               	dw	65535	; assembler added errata NOP
  5837  003AC0                     
  5838                           ; BSR set to: 0
  5839                           ;main.c: 718:                 pLCD = 1;
  5840  003AC0  0E01               	movlw	1
  5841  003AC2  6FE3               	movwf	_pLCD& (0+255),b
  5842  003AC4                     
  5843                           ; BSR set to: 0
  5844                           ;main.c: 720:                 _delay((unsigned long)((3000)*(20000000/4000.0)));
  5845  003AC4  0E3A               	movlw	58
  5846  003AC6  6E67               	movwf	(??_controlCalls+1)^0,c
  5847  003AC8  0E1C               	movlw	28
  5848  003ACA  6E66               	movwf	??_controlCalls^0,c
  5849  003ACC  0EC4               	movlw	196
  5850  003ACE                     u4687:
  5851  003ACE  FFFF               	dw	65535	; errata NOP
  5852  003AD0  2EE8               	decfsz	wreg,f,c
  5853  003AD2  D7FD               	bra	u4687
  5854  003AD4  2E66               	decfsz	??_controlCalls^0,f,c
  5855  003AD6  D7FB               	bra	u4687
  5856  003AD8  2E67               	decfsz	(??_controlCalls+1)^0,f,c
  5857  003ADA  D7F9               	bra	u4687
  5858  003ADC                     
  5859                           ;main.c: 722:                 LATDbits.LD2 = 1;
  5860  003ADC  848C               	bsf	140,2,c	;volatile
  5861  003ADE                     
  5862                           ;main.c: 723:                 dataPanelUp();
  5863  003ADE  ECDA  F012         	call	_dataPanelUp	;wreg free
  5864  003AE2                     
  5865                           ;main.c: 724:                 LATDbits.LD2 = 0;
  5866  003AE2  948C               	bcf	140,2,c	;volatile
  5867  003AE4                     
  5868                           ;main.c: 725:                 _delay((unsigned long)((300)*(20000000/4000.0)));
  5869  003AE4  0E06               	movlw	6
  5870  003AE6  6E67               	movwf	(??_controlCalls+1)^0,c
  5871  003AE8  0EB6               	movlw	182
  5872  003AEA  6E66               	movwf	??_controlCalls^0,c
  5873  003AEC  0EF9               	movlw	249
  5874  003AEE                     u4697:
  5875  003AEE  FFFF               	dw	65535	; errata NOP
  5876  003AF0  2EE8               	decfsz	wreg,f,c
  5877  003AF2  D7FD               	bra	u4697
  5878  003AF4  2E66               	decfsz	??_controlCalls^0,f,c
  5879  003AF6  D7FB               	bra	u4697
  5880  003AF8  2E67               	decfsz	(??_controlCalls+1)^0,f,c
  5881  003AFA  D7F9               	bra	u4697
  5882  003AFC                     
  5883                           ;main.c: 728:                 if(tasksUp != 0){
  5884  003AFC  507B               	movf	_tasksUp^0,w,c
  5885  003AFE  107C               	iorwf	(_tasksUp+1)^0,w,c
  5886  003B00  B4D8               	btfsc	status,2,c
  5887  003B02  EF85  F01D         	goto	u3281
  5888  003B06  EF88  F01D         	goto	u3280
  5889  003B0A                     u3281:
  5890  003B0A  FFFF               	dw	65535	; assembler added errata NOP
  5891  003B0C  EF8C  F01D         	goto	l4040
  5892  003B10                     u3280:
  5893  003B10  FFFF               	dw	65535	; assembler added errata NOP
  5894  003B12                     
  5895                           ;main.c: 729:                     LATCbits.LC1 = 0;
  5896  003B12  928B               	bcf	139,1,c	;volatile
  5897                           
  5898                           ;main.c: 730:                 } else {
  5899  003B14  EF9C  F01D         	goto	l4046
  5900  003B18                     l4040:
  5901  003B18  FFFF               	dw	65535	; assembler added errata NOP
  5902                           
  5903                           ;main.c: 731:                     LCD_Clear();
  5904  003B1A  ECF4  F002         	call	_LCD_Clear	;wreg free
  5905                           
  5906                           ;main.c: 732:                     LCD_Set_Cursor(1,1);
  5907  003B1E  0E01               	movlw	1
  5908  003B20  6E06               	movwf	LCD_Set_Cursor@COL^0,c
  5909  003B22  0E01               	movlw	1
  5910  003B24  ECF4  F004         	call	_LCD_Set_Cursor
  5911  003B28                     
  5912                           ;main.c: 733:                     LCD_Write_String("Mode Up OFF");
  5913  003B28  0E72               	movlw	low STR_7
  5914  003B2A  6E06               	movwf	LCD_Write_String@Str^0,c
  5915  003B2C  0E7F               	movlw	high STR_7
  5916  003B2E  6E07               	movwf	(LCD_Write_String@Str+1)^0,c
  5917  003B30  EC32  F005         	call	_LCD_Write_String	;wreg free
  5918  003B34  EFFD  F01F         	goto	l315
  5919  003B38                     l4046:
  5920  003B38  FFFF               	dw	65535	; assembler added errata NOP
  5921                           
  5922                           ;main.c: 738:             if (queueDown[0] == 3) {
  5923  003B3A  0E03               	movlw	3
  5924  003B3C  0103               	movlb	3	; () banked
  5925  003B3E  1900               	xorwf	_queueDown& (0+255),w,b
  5926  003B40  1101               	iorwf	(_queueDown+1)& (0+255),w,b
  5927  003B42  A4D8               	btfss	status,2,c
  5928  003B44  EFA6  F01D         	goto	u3291
  5929  003B48  EFA9  F01D         	goto	u3290
  5930  003B4C                     u3291:
  5931  003B4C  FFFF               	dw	65535	; assembler added errata NOP
  5932  003B4E  EF6D  F01E         	goto	l342
  5933  003B52                     u3290:
  5934  003B52  FFFF               	dw	65535	; assembler added errata NOP
  5935  003B54                     
  5936                           ; BSR set to: 3
  5937                           ;main.c: 740:                 prevFL = 3;
  5938  003B54  0E00               	movlw	0
  5939  003B56  0100               	movlb	0	; () banked
  5940  003B58  6F8F               	movwf	(_prevFL+1)& (0+255),b
  5941  003B5A  0E03               	movlw	3
  5942  003B5C  6F8E               	movwf	_prevFL& (0+255),b
  5943  003B5E                     
  5944                           ; BSR set to: 0
  5945                           ;main.c: 741:                 LATCbits.LC0 = 1;
  5946  003B5E  808B               	bsf	139,0,c	;volatile
  5947                           
  5948                           ;main.c: 743:                 for (int i1 = 0; i1 < tasksDown; i1++) {
  5949  003B60  0E00               	movlw	0
  5950  003B62  6FDA               	movwf	(controlCalls@i1_635+1)& (0+255),b
  5951  003B64  0E00               	movlw	0
  5952  003B66  6FD9               	movwf	controlCalls@i1_635& (0+255),b
  5953  003B68  EFCF  F01D         	goto	l4056
  5954  003B6C                     l4052:
  5955  003B6C  FFFF               	dw	65535	; assembler added errata NOP
  5956                           
  5957                           ; BSR set to: 0
  5958                           ;main.c: 744:                     queueDown[i1] = queueDown[i1 + 1];
  5959  003B6E  90D8               	bcf	status,0,c
  5960  003B70  35D9               	rlcf	controlCalls@i1_635& (0+255),w,b
  5961  003B72  6ED9               	movwf	fsr2l,c
  5962  003B74  35DA               	rlcf	(controlCalls@i1_635+1)& (0+255),w,b
  5963  003B76  6EDA               	movwf	fsr2h,c
  5964  003B78  0E02               	movlw	low (_queueDown+2)
  5965  003B7A  26D9               	addwf	fsr2l,f,c
  5966  003B7C  0E03               	movlw	high (_queueDown+2)
  5967  003B7E  22DA               	addwfc	fsr2h,f,c
  5968  003B80  90D8               	bcf	status,0,c
  5969  003B82  35D9               	rlcf	controlCalls@i1_635& (0+255),w,b
  5970  003B84  6EE1               	movwf	fsr1l,c
  5971  003B86  35DA               	rlcf	(controlCalls@i1_635+1)& (0+255),w,b
  5972  003B88  6EE2               	movwf	fsr1h,c
  5973  003B8A  0E00               	movlw	low _queueDown
  5974  003B8C  26E1               	addwf	fsr1l,f,c
  5975  003B8E  0E03               	movlw	high _queueDown
  5976  003B90  22E2               	addwfc	fsr1h,f,c
  5977  003B92  CFDE FFE6          	movff	postinc2,postinc1
  5978  003B96  CFDD FFE5          	movff	postdec2,postdec1
  5979  003B9A                     
  5980                           ; BSR set to: 0
  5981                           ;main.c: 745:                 }
  5982  003B9A  4BD9               	infsnz	controlCalls@i1_635& (0+255),f,b
  5983  003B9C  2BDA               	incf	(controlCalls@i1_635+1)& (0+255),f,b
  5984  003B9E                     l4056:
  5985  003B9E  FFFF               	dw	65535	; assembler added errata NOP
  5986                           
  5987                           ; BSR set to: 0
  5988  003BA0  507D               	movf	_tasksDown^0,w,c
  5989  003BA2  5DD9               	subwf	controlCalls@i1_635& (0+255),w,b
  5990  003BA4  51DA               	movf	(controlCalls@i1_635+1)& (0+255),w,b
  5991  003BA6  0A80               	xorlw	128
  5992  003BA8  6E66               	movwf	??_controlCalls^0,c
  5993  003BAA  507E               	movf	(_tasksDown+1)^0,w,c
  5994  003BAC  0A80               	xorlw	128
  5995  003BAE  5866               	subwfb	??_controlCalls^0,w,c
  5996  003BB0  A0D8               	btfss	status,0,c
  5997  003BB2  EFDD  F01D         	goto	u3301
  5998  003BB6  EFE0  F01D         	goto	u3300
  5999  003BBA                     u3301:
  6000  003BBA  FFFF               	dw	65535	; assembler added errata NOP
  6001  003BBC  EFB6  F01D         	goto	l4052
  6002  003BC0                     u3300:
  6003  003BC0  FFFF               	dw	65535	; assembler added errata NOP
  6004  003BC2                     
  6005                           ; BSR set to: 0
  6006                           ;main.c: 746:                 tasksDown--;
  6007  003BC2  067D               	decf	_tasksDown^0,f,c
  6008  003BC4  A0D8               	btfss	status,0,c
  6009  003BC6  067E               	decf	(_tasksDown+1)^0,f,c
  6010  003BC8                     
  6011                           ; BSR set to: 0
  6012                           ;main.c: 749:                 LCD_Clear();
  6013  003BC8  ECF4  F002         	call	_LCD_Clear	;wreg free
  6014  003BCC                     
  6015                           ;main.c: 750:                 LCD_Set_Cursor(1,1);
  6016  003BCC  0E01               	movlw	1
  6017  003BCE  6E06               	movwf	LCD_Set_Cursor@COL^0,c
  6018  003BD0  0E01               	movlw	1
  6019  003BD2  ECF4  F004         	call	_LCD_Set_Cursor
  6020  003BD6                     
  6021                           ;main.c: 751:                 LCD_Write_String("Down: Stop FL3");
  6022  003BD6  0E85               	movlw	low STR_19
  6023  003BD8  6E06               	movwf	LCD_Write_String@Str^0,c
  6024  003BDA  0E7E               	movlw	high STR_19
  6025  003BDC  6E07               	movwf	(LCD_Write_String@Str+1)^0,c
  6026  003BDE  EC32  F005         	call	_LCD_Write_String	;wreg free
  6027  003BE2                     
  6028                           ;main.c: 753:                 for (int i_6 = 0; i_6 < tasksDown; i_6++){
  6029  003BE2  0E00               	movlw	0
  6030  003BE4  0100               	movlb	0	; () banked
  6031  003BE6  6FCA               	movwf	(controlCalls@i_6+1)& (0+255),b
  6032  003BE8  0E00               	movlw	0
  6033  003BEA  6FC9               	movwf	controlCalls@i_6& (0+255),b
  6034  003BEC  EF1F  F01E         	goto	l4078
  6035  003BF0                     l4068:
  6036  003BF0  FFFF               	dw	65535	; assembler added errata NOP
  6037                           
  6038                           ; BSR set to: 0
  6039                           ;main.c: 755:                     sprintf(buffer, "%d", queueDown[i_6]);
  6040  003BF2  0E97               	movlw	low _buffer
  6041  003BF4  6E58               	movwf	sprintf@s^0,c
  6042  003BF6  0E00               	movlw	high _buffer
  6043  003BF8  6E59               	movwf	(sprintf@s+1)^0,c
  6044  003BFA  0EFC               	movlw	low STR_6
  6045  003BFC  6E5A               	movwf	sprintf@fmt^0,c
  6046  003BFE  0E7F               	movlw	high STR_6
  6047  003C00  6E5B               	movwf	(sprintf@fmt+1)^0,c
  6048  003C02  90D8               	bcf	status,0,c
  6049  003C04  35C9               	rlcf	controlCalls@i_6& (0+255),w,b
  6050  003C06  6ED9               	movwf	fsr2l,c
  6051  003C08  35CA               	rlcf	(controlCalls@i_6+1)& (0+255),w,b
  6052  003C0A  6EDA               	movwf	fsr2h,c
  6053  003C0C  0E00               	movlw	low _queueDown
  6054  003C0E  26D9               	addwf	fsr2l,f,c
  6055  003C10  0E03               	movlw	high _queueDown
  6056  003C12  22DA               	addwfc	fsr2h,f,c
  6057  003C14  CFDE F05C          	movff	postinc2,?_sprintf+4
  6058  003C18  CFDD F05D          	movff	postdec2,?_sprintf+5
  6059  003C1C  ECE9  F003         	call	_sprintf	;wreg free
  6060  003C20                     
  6061                           ;main.c: 756:                     LCD_Set_Cursor(2, pLCD);
  6062  003C20  C0E3  F006         	movff	_pLCD,LCD_Set_Cursor@COL
  6063  003C24  0E02               	movlw	2
  6064  003C26  ECF4  F004         	call	_LCD_Set_Cursor
  6065  003C2A                     
  6066                           ;main.c: 757:                     LCD_Write_String(buffer);
  6067  003C2A  0E97               	movlw	low _buffer
  6068  003C2C  6E06               	movwf	LCD_Write_String@Str^0,c
  6069  003C2E  0E00               	movlw	high _buffer
  6070  003C30  6E07               	movwf	(LCD_Write_String@Str+1)^0,c
  6071  003C32  EC32  F005         	call	_LCD_Write_String	;wreg free
  6072  003C36                     
  6073                           ;main.c: 758:                     pLCD++;
  6074  003C36  0100               	movlb	0	; () banked
  6075  003C38  2BE3               	incf	_pLCD& (0+255),f,b
  6076  003C3A                     
  6077                           ; BSR set to: 0
  6078                           ;main.c: 759:                 }
  6079  003C3A  4BC9               	infsnz	controlCalls@i_6& (0+255),f,b
  6080  003C3C  2BCA               	incf	(controlCalls@i_6+1)& (0+255),f,b
  6081  003C3E                     l4078:
  6082  003C3E  FFFF               	dw	65535	; assembler added errata NOP
  6083                           
  6084                           ; BSR set to: 0
  6085  003C40  507D               	movf	_tasksDown^0,w,c
  6086  003C42  5DC9               	subwf	controlCalls@i_6& (0+255),w,b
  6087  003C44  51CA               	movf	(controlCalls@i_6+1)& (0+255),w,b
  6088  003C46  0A80               	xorlw	128
  6089  003C48  6E66               	movwf	??_controlCalls^0,c
  6090  003C4A  507E               	movf	(_tasksDown+1)^0,w,c
  6091  003C4C  0A80               	xorlw	128
  6092  003C4E  5866               	subwfb	??_controlCalls^0,w,c
  6093  003C50  A0D8               	btfss	status,0,c
  6094  003C52  EF2D  F01E         	goto	u3311
  6095  003C56  EF30  F01E         	goto	u3310
  6096  003C5A                     u3311:
  6097  003C5A  FFFF               	dw	65535	; assembler added errata NOP
  6098  003C5C  EFF8  F01D         	goto	l4068
  6099  003C60                     u3310:
  6100  003C60  FFFF               	dw	65535	; assembler added errata NOP
  6101  003C62                     
  6102                           ; BSR set to: 0
  6103                           ;main.c: 760:                 pLCD = 1;
  6104  003C62  0E01               	movlw	1
  6105  003C64  6FE3               	movwf	_pLCD& (0+255),b
  6106  003C66                     
  6107                           ; BSR set to: 0
  6108                           ;main.c: 761:                 _delay((unsigned long)((3000)*(20000000/4000.0)));
  6109  003C66  0E3A               	movlw	58
  6110  003C68  6E67               	movwf	(??_controlCalls+1)^0,c
  6111  003C6A  0E1C               	movlw	28
  6112  003C6C  6E66               	movwf	??_controlCalls^0,c
  6113  003C6E  0EC4               	movlw	196
  6114  003C70                     u4707:
  6115  003C70  FFFF               	dw	65535	; errata NOP
  6116  003C72  2EE8               	decfsz	wreg,f,c
  6117  003C74  D7FD               	bra	u4707
  6118  003C76  2E66               	decfsz	??_controlCalls^0,f,c
  6119  003C78  D7FB               	bra	u4707
  6120  003C7A  2E67               	decfsz	(??_controlCalls+1)^0,f,c
  6121  003C7C  D7F9               	bra	u4707
  6122  003C7E                     
  6123                           ;main.c: 763:                 LATDbits.LD2 = 1;
  6124  003C7E  848C               	bsf	140,2,c	;volatile
  6125  003C80                     
  6126                           ;main.c: 764:                 dataPanelUp();
  6127  003C80  ECDA  F012         	call	_dataPanelUp	;wreg free
  6128  003C84                     
  6129                           ;main.c: 765:                 LATDbits.LD2 = 0;
  6130  003C84  948C               	bcf	140,2,c	;volatile
  6131  003C86                     
  6132                           ;main.c: 766:                 _delay((unsigned long)((300)*(20000000/4000.0)));
  6133  003C86  0E06               	movlw	6
  6134  003C88  6E67               	movwf	(??_controlCalls+1)^0,c
  6135  003C8A  0EB6               	movlw	182
  6136  003C8C  6E66               	movwf	??_controlCalls^0,c
  6137  003C8E  0EF9               	movlw	249
  6138  003C90                     u4717:
  6139  003C90  FFFF               	dw	65535	; errata NOP
  6140  003C92  2EE8               	decfsz	wreg,f,c
  6141  003C94  D7FD               	bra	u4717
  6142  003C96  2E66               	decfsz	??_controlCalls^0,f,c
  6143  003C98  D7FB               	bra	u4717
  6144  003C9A  2E67               	decfsz	(??_controlCalls+1)^0,f,c
  6145  003C9C  D7F9               	bra	u4717
  6146  003C9E                     
  6147                           ;main.c: 769:                 if(tasksDown != 0){
  6148  003C9E  507D               	movf	_tasksDown^0,w,c
  6149  003CA0  107E               	iorwf	(_tasksDown+1)^0,w,c
  6150  003CA2  B4D8               	btfsc	status,2,c
  6151  003CA4  EF56  F01E         	goto	u3321
  6152  003CA8  EF59  F01E         	goto	u3320
  6153  003CAC                     u3321:
  6154  003CAC  FFFF               	dw	65535	; assembler added errata NOP
  6155  003CAE  EF5D  F01E         	goto	l4096
  6156  003CB2                     u3320:
  6157  003CB2  FFFF               	dw	65535	; assembler added errata NOP
  6158  003CB4                     
  6159                           ;main.c: 770:                     LATCbits.LC0 = 0;
  6160  003CB4  908B               	bcf	139,0,c	;volatile
  6161                           
  6162                           ;main.c: 771:                 } else {
  6163  003CB6  EF6D  F01E         	goto	l342
  6164  003CBA                     l4096:
  6165  003CBA  FFFF               	dw	65535	; assembler added errata NOP
  6166                           
  6167                           ;main.c: 772:                     LCD_Clear();
  6168  003CBC  ECF4  F002         	call	_LCD_Clear	;wreg free
  6169                           
  6170                           ;main.c: 773:                     LCD_Set_Cursor(1,1);
  6171  003CC0  0E01               	movlw	1
  6172  003CC2  6E06               	movwf	LCD_Set_Cursor@COL^0,c
  6173  003CC4  0E01               	movlw	1
  6174  003CC6  ECF4  F004         	call	_LCD_Set_Cursor
  6175  003CCA                     
  6176                           ;main.c: 774:                     LCD_Write_String("Mode Up OFF");
  6177  003CCA  0E72               	movlw	low STR_7
  6178  003CCC  6E06               	movwf	LCD_Write_String@Str^0,c
  6179  003CCE  0E7F               	movlw	high STR_7
  6180  003CD0  6E07               	movwf	(LCD_Write_String@Str+1)^0,c
  6181  003CD2  EC32  F005         	call	_LCD_Write_String	;wreg free
  6182  003CD6  EFFD  F01F         	goto	l315
  6183  003CDA                     l342:
  6184  003CDA  FFFF               	dw	65535	; assembler added errata NOP
  6185                           
  6186                           ;main.c: 780:         if(PORTDbits.RD7){
  6187  003CDC  AE83               	btfss	131,7,c	;volatile
  6188  003CDE  EF73  F01E         	goto	u3331
  6189  003CE2  EF76  F01E         	goto	u3330
  6190  003CE6                     u3331:
  6191  003CE6  FFFF               	dw	65535	; assembler added errata NOP
  6192  003CE8  EFFD  F01F         	goto	l315
  6193  003CEC                     u3330:
  6194  003CEC  FFFF               	dw	65535	; assembler added errata NOP
  6195  003CEE                     
  6196                           ;main.c: 781:             nowFL = 4;
  6197  003CEE  0E00               	movlw	0
  6198  003CF0  0101               	movlb	1	; () banked
  6199  003CF2  6FD9               	movwf	(_nowFL+1)& (0+255),b
  6200  003CF4  0E04               	movlw	4
  6201  003CF6  6FD8               	movwf	_nowFL& (0+255),b
  6202  003CF8                     
  6203                           ; BSR set to: 1
  6204                           ;main.c: 782:             if (queueUp[0] == 4) {
  6205  003CF8  0E04               	movlw	4
  6206  003CFA  0102               	movlb	2	; () banked
  6207  003CFC  1900               	xorwf	_queueUp& (0+255),w,b
  6208  003CFE  1101               	iorwf	(_queueUp+1)& (0+255),w,b
  6209  003D00  A4D8               	btfss	status,2,c
  6210  003D02  EF85  F01E         	goto	u3341
  6211  003D06  EF88  F01E         	goto	u3340
  6212  003D0A                     u3341:
  6213  003D0A  FFFF               	dw	65535	; assembler added errata NOP
  6214  003D0C  EF2E  F01F         	goto	l4150
  6215  003D10                     u3340:
  6216  003D10  FFFF               	dw	65535	; assembler added errata NOP
  6217  003D12                     
  6218                           ; BSR set to: 2
  6219                           ;main.c: 784:                 prevFL = 4;
  6220  003D12  0E00               	movlw	0
  6221  003D14  0100               	movlb	0	; () banked
  6222  003D16  6F8F               	movwf	(_prevFL+1)& (0+255),b
  6223  003D18  0E04               	movlw	4
  6224  003D1A  6F8E               	movwf	_prevFL& (0+255),b
  6225  003D1C                     
  6226                           ; BSR set to: 0
  6227                           ;main.c: 786:                 LATCbits.LC1 = 1;
  6228  003D1C  828B               	bsf	139,1,c	;volatile
  6229                           
  6230                           ;main.c: 788:                 for (int i1 = 0; i1 < tasksUp; i1++) {
  6231  003D1E  0E00               	movlw	0
  6232  003D20  6FDC               	movwf	(controlCalls@i1_640+1)& (0+255),b
  6233  003D22  0E00               	movlw	0
  6234  003D24  6FDB               	movwf	controlCalls@i1_640& (0+255),b
  6235  003D26  EFAE  F01E         	goto	l4114
  6236  003D2A                     l4110:
  6237  003D2A  FFFF               	dw	65535	; assembler added errata NOP
  6238                           
  6239                           ; BSR set to: 0
  6240                           ;main.c: 789:                     queueUp[i1] = queueUp[i1 + 1];
  6241  003D2C  90D8               	bcf	status,0,c
  6242  003D2E  35DB               	rlcf	controlCalls@i1_640& (0+255),w,b
  6243  003D30  6ED9               	movwf	fsr2l,c
  6244  003D32  35DC               	rlcf	(controlCalls@i1_640+1)& (0+255),w,b
  6245  003D34  6EDA               	movwf	fsr2h,c
  6246  003D36  0E02               	movlw	low (_queueUp+2)
  6247  003D38  26D9               	addwf	fsr2l,f,c
  6248  003D3A  0E02               	movlw	high (_queueUp+2)
  6249  003D3C  22DA               	addwfc	fsr2h,f,c
  6250  003D3E  90D8               	bcf	status,0,c
  6251  003D40  35DB               	rlcf	controlCalls@i1_640& (0+255),w,b
  6252  003D42  6EE1               	movwf	fsr1l,c
  6253  003D44  35DC               	rlcf	(controlCalls@i1_640+1)& (0+255),w,b
  6254  003D46  6EE2               	movwf	fsr1h,c
  6255  003D48  0E00               	movlw	low _queueUp
  6256  003D4A  26E1               	addwf	fsr1l,f,c
  6257  003D4C  0E02               	movlw	high _queueUp
  6258  003D4E  22E2               	addwfc	fsr1h,f,c
  6259  003D50  CFDE FFE6          	movff	postinc2,postinc1
  6260  003D54  CFDD FFE5          	movff	postdec2,postdec1
  6261  003D58                     
  6262                           ; BSR set to: 0
  6263                           ;main.c: 790:                 }
  6264  003D58  4BDB               	infsnz	controlCalls@i1_640& (0+255),f,b
  6265  003D5A  2BDC               	incf	(controlCalls@i1_640+1)& (0+255),f,b
  6266  003D5C                     l4114:
  6267  003D5C  FFFF               	dw	65535	; assembler added errata NOP
  6268                           
  6269                           ; BSR set to: 0
  6270  003D5E  507B               	movf	_tasksUp^0,w,c
  6271  003D60  5DDB               	subwf	controlCalls@i1_640& (0+255),w,b
  6272  003D62  51DC               	movf	(controlCalls@i1_640+1)& (0+255),w,b
  6273  003D64  0A80               	xorlw	128
  6274  003D66  6E66               	movwf	??_controlCalls^0,c
  6275  003D68  507C               	movf	(_tasksUp+1)^0,w,c
  6276  003D6A  0A80               	xorlw	128
  6277  003D6C  5866               	subwfb	??_controlCalls^0,w,c
  6278  003D6E  A0D8               	btfss	status,0,c
  6279  003D70  EFBC  F01E         	goto	u3351
  6280  003D74  EFBF  F01E         	goto	u3350
  6281  003D78                     u3351:
  6282  003D78  FFFF               	dw	65535	; assembler added errata NOP
  6283  003D7A  EF95  F01E         	goto	l4110
  6284  003D7E                     u3350:
  6285  003D7E  FFFF               	dw	65535	; assembler added errata NOP
  6286  003D80                     
  6287                           ; BSR set to: 0
  6288                           ;main.c: 791:                 tasksUp--;
  6289  003D80  067B               	decf	_tasksUp^0,f,c
  6290  003D82  A0D8               	btfss	status,0,c
  6291  003D84  067C               	decf	(_tasksUp+1)^0,f,c
  6292  003D86                     
  6293                           ; BSR set to: 0
  6294                           ;main.c: 794:                 LCD_Clear();
  6295  003D86  ECF4  F002         	call	_LCD_Clear	;wreg free
  6296  003D8A                     
  6297                           ;main.c: 795:                 LCD_Set_Cursor(1,1);
  6298  003D8A  0E01               	movlw	1
  6299  003D8C  6E06               	movwf	LCD_Set_Cursor@COL^0,c
  6300  003D8E  0E01               	movlw	1
  6301  003D90  ECF4  F004         	call	_LCD_Set_Cursor
  6302  003D94                     
  6303                           ;main.c: 796:                 LCD_Write_String("Up: Stop FL4");
  6304  003D94  0E59               	movlw	low STR_22
  6305  003D96  6E06               	movwf	LCD_Write_String@Str^0,c
  6306  003D98  0E7F               	movlw	high STR_22
  6307  003D9A  6E07               	movwf	(LCD_Write_String@Str+1)^0,c
  6308  003D9C  EC32  F005         	call	_LCD_Write_String	;wreg free
  6309  003DA0                     
  6310                           ;main.c: 798:                 for (int i_7 = 0; i_7 < tasksUp; i_7++){
  6311  003DA0  0E00               	movlw	0
  6312  003DA2  0100               	movlb	0	; () banked
  6313  003DA4  6FCC               	movwf	(controlCalls@i_7+1)& (0+255),b
  6314  003DA6  0E00               	movlw	0
  6315  003DA8  6FCB               	movwf	controlCalls@i_7& (0+255),b
  6316  003DAA  EFFE  F01E         	goto	l4136
  6317  003DAE                     l4126:
  6318  003DAE  FFFF               	dw	65535	; assembler added errata NOP
  6319                           
  6320                           ; BSR set to: 0
  6321                           ;main.c: 800:                     sprintf(buffer, "%d", queueUp[i_7]);
  6322  003DB0  0E97               	movlw	low _buffer
  6323  003DB2  6E58               	movwf	sprintf@s^0,c
  6324  003DB4  0E00               	movlw	high _buffer
  6325  003DB6  6E59               	movwf	(sprintf@s+1)^0,c
  6326  003DB8  0EFC               	movlw	low STR_6
  6327  003DBA  6E5A               	movwf	sprintf@fmt^0,c
  6328  003DBC  0E7F               	movlw	high STR_6
  6329  003DBE  6E5B               	movwf	(sprintf@fmt+1)^0,c
  6330  003DC0  90D8               	bcf	status,0,c
  6331  003DC2  35CB               	rlcf	controlCalls@i_7& (0+255),w,b
  6332  003DC4  6ED9               	movwf	fsr2l,c
  6333  003DC6  35CC               	rlcf	(controlCalls@i_7+1)& (0+255),w,b
  6334  003DC8  6EDA               	movwf	fsr2h,c
  6335  003DCA  0E00               	movlw	low _queueUp
  6336  003DCC  26D9               	addwf	fsr2l,f,c
  6337  003DCE  0E02               	movlw	high _queueUp
  6338  003DD0  22DA               	addwfc	fsr2h,f,c
  6339  003DD2  CFDE F05C          	movff	postinc2,?_sprintf+4
  6340  003DD6  CFDD F05D          	movff	postdec2,?_sprintf+5
  6341  003DDA  ECE9  F003         	call	_sprintf	;wreg free
  6342  003DDE                     
  6343                           ;main.c: 801:                     LCD_Set_Cursor(2, pLCD);
  6344  003DDE  C0E3  F006         	movff	_pLCD,LCD_Set_Cursor@COL
  6345  003DE2  0E02               	movlw	2
  6346  003DE4  ECF4  F004         	call	_LCD_Set_Cursor
  6347  003DE8                     
  6348                           ;main.c: 802:                     LCD_Write_String(buffer);
  6349  003DE8  0E97               	movlw	low _buffer
  6350  003DEA  6E06               	movwf	LCD_Write_String@Str^0,c
  6351  003DEC  0E00               	movlw	high _buffer
  6352  003DEE  6E07               	movwf	(LCD_Write_String@Str+1)^0,c
  6353  003DF0  EC32  F005         	call	_LCD_Write_String	;wreg free
  6354  003DF4                     
  6355                           ;main.c: 803:                     pLCD++;
  6356  003DF4  0100               	movlb	0	; () banked
  6357  003DF6  2BE3               	incf	_pLCD& (0+255),f,b
  6358  003DF8                     
  6359                           ; BSR set to: 0
  6360                           ;main.c: 804:                 }
  6361  003DF8  4BCB               	infsnz	controlCalls@i_7& (0+255),f,b
  6362  003DFA  2BCC               	incf	(controlCalls@i_7+1)& (0+255),f,b
  6363  003DFC                     l4136:
  6364  003DFC  FFFF               	dw	65535	; assembler added errata NOP
  6365                           
  6366                           ; BSR set to: 0
  6367  003DFE  507B               	movf	_tasksUp^0,w,c
  6368  003E00  5DCB               	subwf	controlCalls@i_7& (0+255),w,b
  6369  003E02  51CC               	movf	(controlCalls@i_7+1)& (0+255),w,b
  6370  003E04  0A80               	xorlw	128
  6371  003E06  6E66               	movwf	??_controlCalls^0,c
  6372  003E08  507C               	movf	(_tasksUp+1)^0,w,c
  6373  003E0A  0A80               	xorlw	128
  6374  003E0C  5866               	subwfb	??_controlCalls^0,w,c
  6375  003E0E  A0D8               	btfss	status,0,c
  6376  003E10  EF0C  F01F         	goto	u3361
  6377  003E14  EF0F  F01F         	goto	u3360
  6378  003E18                     u3361:
  6379  003E18  FFFF               	dw	65535	; assembler added errata NOP
  6380  003E1A  EFD7  F01E         	goto	l4126
  6381  003E1E                     u3360:
  6382  003E1E  FFFF               	dw	65535	; assembler added errata NOP
  6383  003E20                     
  6384                           ; BSR set to: 0
  6385                           ;main.c: 805:                 pLCD = 1;
  6386  003E20  0E01               	movlw	1
  6387  003E22  6FE3               	movwf	_pLCD& (0+255),b
  6388  003E24                     
  6389                           ; BSR set to: 0
  6390                           ;main.c: 806:                 _delay((unsigned long)((3000)*(20000000/4000.0)));
  6391  003E24  0E3A               	movlw	58
  6392  003E26  6E67               	movwf	(??_controlCalls+1)^0,c
  6393  003E28  0E1C               	movlw	28
  6394  003E2A  6E66               	movwf	??_controlCalls^0,c
  6395  003E2C  0EC4               	movlw	196
  6396  003E2E                     u4727:
  6397  003E2E  FFFF               	dw	65535	; errata NOP
  6398  003E30  2EE8               	decfsz	wreg,f,c
  6399  003E32  D7FD               	bra	u4727
  6400  003E34  2E66               	decfsz	??_controlCalls^0,f,c
  6401  003E36  D7FB               	bra	u4727
  6402  003E38  2E67               	decfsz	(??_controlCalls+1)^0,f,c
  6403  003E3A  D7F9               	bra	u4727
  6404  003E3C                     
  6405                           ;main.c: 808:                 LATDbits.LD3 = 1;
  6406  003E3C  868C               	bsf	140,3,c	;volatile
  6407  003E3E                     
  6408                           ;main.c: 809:                 dataPanelUp();
  6409  003E3E  ECDA  F012         	call	_dataPanelUp	;wreg free
  6410  003E42                     
  6411                           ;main.c: 810:                 LATDbits.LD3 = 0;
  6412  003E42  968C               	bcf	140,3,c	;volatile
  6413  003E44                     
  6414                           ;main.c: 811:                 _delay((unsigned long)((300)*(20000000/4000.0)));
  6415  003E44  0E06               	movlw	6
  6416  003E46  6E67               	movwf	(??_controlCalls+1)^0,c
  6417  003E48  0EB6               	movlw	182
  6418  003E4A  6E66               	movwf	??_controlCalls^0,c
  6419  003E4C  0EF9               	movlw	249
  6420  003E4E                     u4737:
  6421  003E4E  FFFF               	dw	65535	; errata NOP
  6422  003E50  2EE8               	decfsz	wreg,f,c
  6423  003E52  D7FD               	bra	u4737
  6424  003E54  2E66               	decfsz	??_controlCalls^0,f,c
  6425  003E56  D7FB               	bra	u4737
  6426  003E58  2E67               	decfsz	(??_controlCalls+1)^0,f,c
  6427  003E5A  D7F9               	bra	u4737
  6428  003E5C                     l4150:
  6429  003E5C  FFFF               	dw	65535	; assembler added errata NOP
  6430                           
  6431                           ;main.c: 817:             if (queueDown[0] == 4) {
  6432  003E5E  0E04               	movlw	4
  6433  003E60  0103               	movlb	3	; () banked
  6434  003E62  1900               	xorwf	_queueDown& (0+255),w,b
  6435  003E64  1101               	iorwf	(_queueDown+1)& (0+255),w,b
  6436  003E66  A4D8               	btfss	status,2,c
  6437  003E68  EF38  F01F         	goto	u3371
  6438  003E6C  EF3B  F01F         	goto	u3370
  6439  003E70                     u3371:
  6440  003E70  FFFF               	dw	65535	; assembler added errata NOP
  6441  003E72  EFFD  F01F         	goto	l315
  6442  003E76                     u3370:
  6443  003E76  FFFF               	dw	65535	; assembler added errata NOP
  6444  003E78                     
  6445                           ; BSR set to: 3
  6446                           ;main.c: 819:                 prevFL = 4;
  6447  003E78  0E00               	movlw	0
  6448  003E7A  0100               	movlb	0	; () banked
  6449  003E7C  6F8F               	movwf	(_prevFL+1)& (0+255),b
  6450  003E7E  0E04               	movlw	4
  6451  003E80  6F8E               	movwf	_prevFL& (0+255),b
  6452  003E82                     
  6453                           ; BSR set to: 0
  6454                           ;main.c: 820:                 LATCbits.LC0 = 1;
  6455  003E82  808B               	bsf	139,0,c	;volatile
  6456                           
  6457                           ;main.c: 822:                 for (int i1 = 0; i1 < tasksDown; i1++) {
  6458  003E84  0E00               	movlw	0
  6459  003E86  6FDE               	movwf	(controlCalls@i1_644+1)& (0+255),b
  6460  003E88  0E00               	movlw	0
  6461  003E8A  6FDD               	movwf	controlCalls@i1_644& (0+255),b
  6462  003E8C  EF61  F01F         	goto	l4160
  6463  003E90                     l4156:
  6464  003E90  FFFF               	dw	65535	; assembler added errata NOP
  6465                           
  6466                           ; BSR set to: 0
  6467                           ;main.c: 823:                     queueDown[i1] = queueDown[i1 + 1];
  6468  003E92  90D8               	bcf	status,0,c
  6469  003E94  35DD               	rlcf	controlCalls@i1_644& (0+255),w,b
  6470  003E96  6ED9               	movwf	fsr2l,c
  6471  003E98  35DE               	rlcf	(controlCalls@i1_644+1)& (0+255),w,b
  6472  003E9A  6EDA               	movwf	fsr2h,c
  6473  003E9C  0E02               	movlw	low (_queueDown+2)
  6474  003E9E  26D9               	addwf	fsr2l,f,c
  6475  003EA0  0E03               	movlw	high (_queueDown+2)
  6476  003EA2  22DA               	addwfc	fsr2h,f,c
  6477  003EA4  90D8               	bcf	status,0,c
  6478  003EA6  35DD               	rlcf	controlCalls@i1_644& (0+255),w,b
  6479  003EA8  6EE1               	movwf	fsr1l,c
  6480  003EAA  35DE               	rlcf	(controlCalls@i1_644+1)& (0+255),w,b
  6481  003EAC  6EE2               	movwf	fsr1h,c
  6482  003EAE  0E00               	movlw	low _queueDown
  6483  003EB0  26E1               	addwf	fsr1l,f,c
  6484  003EB2  0E03               	movlw	high _queueDown
  6485  003EB4  22E2               	addwfc	fsr1h,f,c
  6486  003EB6  CFDE FFE6          	movff	postinc2,postinc1
  6487  003EBA  CFDD FFE5          	movff	postdec2,postdec1
  6488  003EBE                     
  6489                           ; BSR set to: 0
  6490                           ;main.c: 824:                 }
  6491  003EBE  4BDD               	infsnz	controlCalls@i1_644& (0+255),f,b
  6492  003EC0  2BDE               	incf	(controlCalls@i1_644+1)& (0+255),f,b
  6493  003EC2                     l4160:
  6494  003EC2  FFFF               	dw	65535	; assembler added errata NOP
  6495                           
  6496                           ; BSR set to: 0
  6497  003EC4  507D               	movf	_tasksDown^0,w,c
  6498  003EC6  5DDD               	subwf	controlCalls@i1_644& (0+255),w,b
  6499  003EC8  51DE               	movf	(controlCalls@i1_644+1)& (0+255),w,b
  6500  003ECA  0A80               	xorlw	128
  6501  003ECC  6E66               	movwf	??_controlCalls^0,c
  6502  003ECE  507E               	movf	(_tasksDown+1)^0,w,c
  6503  003ED0  0A80               	xorlw	128
  6504  003ED2  5866               	subwfb	??_controlCalls^0,w,c
  6505  003ED4  A0D8               	btfss	status,0,c
  6506  003ED6  EF6F  F01F         	goto	u3381
  6507  003EDA  EF72  F01F         	goto	u3380
  6508  003EDE                     u3381:
  6509  003EDE  FFFF               	dw	65535	; assembler added errata NOP
  6510  003EE0  EF48  F01F         	goto	l4156
  6511  003EE4                     u3380:
  6512  003EE4  FFFF               	dw	65535	; assembler added errata NOP
  6513  003EE6                     
  6514                           ; BSR set to: 0
  6515                           ;main.c: 825:                 tasksDown--;
  6516  003EE6  067D               	decf	_tasksDown^0,f,c
  6517  003EE8  A0D8               	btfss	status,0,c
  6518  003EEA  067E               	decf	(_tasksDown+1)^0,f,c
  6519  003EEC                     
  6520                           ; BSR set to: 0
  6521                           ;main.c: 828:                 LCD_Clear();
  6522  003EEC  ECF4  F002         	call	_LCD_Clear	;wreg free
  6523  003EF0                     
  6524                           ;main.c: 829:                 LCD_Set_Cursor(1,1);
  6525  003EF0  0E01               	movlw	1
  6526  003EF2  6E06               	movwf	LCD_Set_Cursor@COL^0,c
  6527  003EF4  0E01               	movlw	1
  6528  003EF6  ECF4  F004         	call	_LCD_Set_Cursor
  6529  003EFA                     
  6530                           ;main.c: 830:                 LCD_Write_String("Down: Stop FL4");
  6531  003EFA  0EA3               	movlw	low STR_24
  6532  003EFC  6E06               	movwf	LCD_Write_String@Str^0,c
  6533  003EFE  0E7E               	movlw	high STR_24
  6534  003F00  6E07               	movwf	(LCD_Write_String@Str+1)^0,c
  6535  003F02  EC32  F005         	call	_LCD_Write_String	;wreg free
  6536  003F06                     
  6537                           ;main.c: 832:                 for (int i_8 = 0; i_8 < tasksDown; i_8++){
  6538  003F06  0E00               	movlw	0
  6539  003F08  0100               	movlb	0	; () banked
  6540  003F0A  6FCE               	movwf	(controlCalls@i_8+1)& (0+255),b
  6541  003F0C  0E00               	movlw	0
  6542  003F0E  6FCD               	movwf	controlCalls@i_8& (0+255),b
  6543  003F10  EFB1  F01F         	goto	l4182
  6544  003F14                     l4172:
  6545  003F14  FFFF               	dw	65535	; assembler added errata NOP
  6546                           
  6547                           ; BSR set to: 0
  6548                           ;main.c: 834:                     sprintf(buffer, "%d", queueDown[i_8]);
  6549  003F16  0E97               	movlw	low _buffer
  6550  003F18  6E58               	movwf	sprintf@s^0,c
  6551  003F1A  0E00               	movlw	high _buffer
  6552  003F1C  6E59               	movwf	(sprintf@s+1)^0,c
  6553  003F1E  0EFC               	movlw	low STR_6
  6554  003F20  6E5A               	movwf	sprintf@fmt^0,c
  6555  003F22  0E7F               	movlw	high STR_6
  6556  003F24  6E5B               	movwf	(sprintf@fmt+1)^0,c
  6557  003F26  90D8               	bcf	status,0,c
  6558  003F28  35CD               	rlcf	controlCalls@i_8& (0+255),w,b
  6559  003F2A  6ED9               	movwf	fsr2l,c
  6560  003F2C  35CE               	rlcf	(controlCalls@i_8+1)& (0+255),w,b
  6561  003F2E  6EDA               	movwf	fsr2h,c
  6562  003F30  0E00               	movlw	low _queueDown
  6563  003F32  26D9               	addwf	fsr2l,f,c
  6564  003F34  0E03               	movlw	high _queueDown
  6565  003F36  22DA               	addwfc	fsr2h,f,c
  6566  003F38  CFDE F05C          	movff	postinc2,?_sprintf+4
  6567  003F3C  CFDD F05D          	movff	postdec2,?_sprintf+5
  6568  003F40  ECE9  F003         	call	_sprintf	;wreg free
  6569  003F44                     
  6570                           ;main.c: 835:                     LCD_Set_Cursor(2, pLCD);
  6571  003F44  C0E3  F006         	movff	_pLCD,LCD_Set_Cursor@COL
  6572  003F48  0E02               	movlw	2
  6573  003F4A  ECF4  F004         	call	_LCD_Set_Cursor
  6574  003F4E                     
  6575                           ;main.c: 836:                     LCD_Write_String(buffer);
  6576  003F4E  0E97               	movlw	low _buffer
  6577  003F50  6E06               	movwf	LCD_Write_String@Str^0,c
  6578  003F52  0E00               	movlw	high _buffer
  6579  003F54  6E07               	movwf	(LCD_Write_String@Str+1)^0,c
  6580  003F56  EC32  F005         	call	_LCD_Write_String	;wreg free
  6581  003F5A                     
  6582                           ;main.c: 837:                     pLCD++;
  6583  003F5A  0100               	movlb	0	; () banked
  6584  003F5C  2BE3               	incf	_pLCD& (0+255),f,b
  6585  003F5E                     
  6586                           ; BSR set to: 0
  6587                           ;main.c: 838:                 }
  6588  003F5E  4BCD               	infsnz	controlCalls@i_8& (0+255),f,b
  6589  003F60  2BCE               	incf	(controlCalls@i_8+1)& (0+255),f,b
  6590  003F62                     l4182:
  6591  003F62  FFFF               	dw	65535	; assembler added errata NOP
  6592                           
  6593                           ; BSR set to: 0
  6594  003F64  507D               	movf	_tasksDown^0,w,c
  6595  003F66  5DCD               	subwf	controlCalls@i_8& (0+255),w,b
  6596  003F68  51CE               	movf	(controlCalls@i_8+1)& (0+255),w,b
  6597  003F6A  0A80               	xorlw	128
  6598  003F6C  6E66               	movwf	??_controlCalls^0,c
  6599  003F6E  507E               	movf	(_tasksDown+1)^0,w,c
  6600  003F70  0A80               	xorlw	128
  6601  003F72  5866               	subwfb	??_controlCalls^0,w,c
  6602  003F74  A0D8               	btfss	status,0,c
  6603  003F76  EFBF  F01F         	goto	u3391
  6604  003F7A  EFC2  F01F         	goto	u3390
  6605  003F7E                     u3391:
  6606  003F7E  FFFF               	dw	65535	; assembler added errata NOP
  6607  003F80  EF8A  F01F         	goto	l4172
  6608  003F84                     u3390:
  6609  003F84  FFFF               	dw	65535	; assembler added errata NOP
  6610  003F86                     
  6611                           ; BSR set to: 0
  6612                           ;main.c: 839:                 pLCD = 1;
  6613  003F86  0E01               	movlw	1
  6614  003F88  6FE3               	movwf	_pLCD& (0+255),b
  6615  003F8A                     
  6616                           ; BSR set to: 0
  6617                           ;main.c: 840:                 _delay((unsigned long)((3000)*(20000000/4000.0)));
  6618  003F8A  0E3A               	movlw	58
  6619  003F8C  6E67               	movwf	(??_controlCalls+1)^0,c
  6620  003F8E  0E1C               	movlw	28
  6621  003F90  6E66               	movwf	??_controlCalls^0,c
  6622  003F92  0EC4               	movlw	196
  6623  003F94                     u4747:
  6624  003F94  FFFF               	dw	65535	; errata NOP
  6625  003F96  2EE8               	decfsz	wreg,f,c
  6626  003F98  D7FD               	bra	u4747
  6627  003F9A  2E66               	decfsz	??_controlCalls^0,f,c
  6628  003F9C  D7FB               	bra	u4747
  6629  003F9E  2E67               	decfsz	(??_controlCalls+1)^0,f,c
  6630  003FA0  D7F9               	bra	u4747
  6631  003FA2                     
  6632                           ;main.c: 842:                 LATDbits.LD3 = 1;
  6633  003FA2  868C               	bsf	140,3,c	;volatile
  6634  003FA4                     
  6635                           ;main.c: 843:                 dataPanelUp();
  6636  003FA4  ECDA  F012         	call	_dataPanelUp	;wreg free
  6637  003FA8                     
  6638                           ;main.c: 844:                 LATDbits.LD3 = 0;
  6639  003FA8  968C               	bcf	140,3,c	;volatile
  6640  003FAA                     
  6641                           ;main.c: 845:                 _delay((unsigned long)((300)*(20000000/4000.0)));
  6642  003FAA  0E06               	movlw	6
  6643  003FAC  6E67               	movwf	(??_controlCalls+1)^0,c
  6644  003FAE  0EB6               	movlw	182
  6645  003FB0  6E66               	movwf	??_controlCalls^0,c
  6646  003FB2  0EF9               	movlw	249
  6647  003FB4                     u4757:
  6648  003FB4  FFFF               	dw	65535	; errata NOP
  6649  003FB6  2EE8               	decfsz	wreg,f,c
  6650  003FB8  D7FD               	bra	u4757
  6651  003FBA  2E66               	decfsz	??_controlCalls^0,f,c
  6652  003FBC  D7FB               	bra	u4757
  6653  003FBE  2E67               	decfsz	(??_controlCalls+1)^0,f,c
  6654  003FC0  D7F9               	bra	u4757
  6655  003FC2                     
  6656                           ;main.c: 848:                 if(tasksDown != 0){
  6657  003FC2  507D               	movf	_tasksDown^0,w,c
  6658  003FC4  107E               	iorwf	(_tasksDown+1)^0,w,c
  6659  003FC6  B4D8               	btfsc	status,2,c
  6660  003FC8  EFE8  F01F         	goto	u3401
  6661  003FCC  EFEB  F01F         	goto	u3400
  6662  003FD0                     u3401:
  6663  003FD0  FFFF               	dw	65535	; assembler added errata NOP
  6664  003FD2  EFEF  F01F         	goto	l4200
  6665  003FD6                     u3400:
  6666  003FD6  FFFF               	dw	65535	; assembler added errata NOP
  6667  003FD8                     
  6668                           ;main.c: 849:                     LATCbits.LC0 = 0;
  6669  003FD8  908B               	bcf	139,0,c	;volatile
  6670                           
  6671                           ;main.c: 850:                 } else {
  6672  003FDA  EFFD  F01F         	goto	l315
  6673  003FDE                     l4200:
  6674  003FDE  FFFF               	dw	65535	; assembler added errata NOP
  6675                           
  6676                           ;main.c: 851:                     LCD_Clear();
  6677  003FE0  ECF4  F002         	call	_LCD_Clear	;wreg free
  6678                           
  6679                           ;main.c: 852:                     LCD_Set_Cursor(1,1);
  6680  003FE4  0E01               	movlw	1
  6681  003FE6  6E06               	movwf	LCD_Set_Cursor@COL^0,c
  6682  003FE8  0E01               	movlw	1
  6683  003FEA  ECF4  F004         	call	_LCD_Set_Cursor
  6684  003FEE                     
  6685                           ;main.c: 853:                     LCD_Write_String("Mode Up OFF");
  6686  003FEE  0E72               	movlw	low STR_7
  6687  003FF0  6E06               	movwf	LCD_Write_String@Str^0,c
  6688  003FF2  0E7F               	movlw	high STR_7
  6689  003FF4  6E07               	movwf	(LCD_Write_String@Str+1)^0,c
  6690  003FF6  EC32  F005         	call	_LCD_Write_String	;wreg free
  6691  003FFA                     l315:
  6692  003FFA  FFFF               	dw	65535	; assembler added errata NOP
  6693  003FFC  0012               	return		;funcret
  6694  003FFE  FFFF               	dw	65535	; errata NOP
  6695  004000                     __end_of_controlCalls:
  6696                           	callstack 0
  6697                           
  6698 ;; *************** function _sprintf *****************
  6699 ;; Defined at:
  6700 ;;		line 9 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/nf_sprintf.c"
  6701 ;; Parameters:    Size  Location     Type
  6702 ;;  s               2   87[COMRAM] PTR unsigned char 
  6703 ;;		 -> buffer(40), 
  6704 ;;  fmt             2   89[COMRAM] PTR const unsigned char 
  6705 ;;		 -> STR_36(3), STR_34(3), STR_29(3), STR_25(3), 
  6706 ;;		 -> STR_23(3), STR_20(3), STR_17(3), STR_14(3), 
  6707 ;;		 -> STR_11(3), STR_9(3), STR_6(3), 
  6708 ;; Auto vars:     Size  Location     Type
  6709 ;;  f               6   95[COMRAM] struct _IO_FILE
  6710 ;;  ap              2   93[COMRAM] PTR void [1]
  6711 ;;		 -> ?_sprintf(2), 
  6712 ;;  ret             2    0        int 
  6713 ;; Return value:  Size  Location     Type
  6714 ;;                  2   87[COMRAM] int 
  6715 ;; Registers used:
  6716 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6717 ;; Tracked objects:
  6718 ;;		On entry : 0/0
  6719 ;;		On exit  : 0/0
  6720 ;;		Unchanged: 0/0
  6721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6722 ;;      Params:         6       0       0       0       0       0       0
  6723 ;;      Locals:         8       0       0       0       0       0       0
  6724 ;;      Temps:          0       0       0       0       0       0       0
  6725 ;;      Totals:        14       0       0       0       0       0       0
  6726 ;;Total ram usage:       14 bytes
  6727 ;; Hardware stack levels used: 1
  6728 ;; Hardware stack levels required when called: 7
  6729 ;; This function calls:
  6730 ;;		_vfprintf
  6731 ;; This function is called by:
  6732 ;;		_controlCalls
  6733 ;;		_rutine_down
  6734 ;;		_selectionMode
  6735 ;; This function uses a non-reentrant model
  6736 ;;
  6737                           
  6738                           	psect	text6
  6739  0007D2                     __ptext6:
  6740                           	callstack 0
  6741  0007D2                     _sprintf:
  6742                           	callstack 0
  6743  0007D2  FFFF               	dw	65535	; assembler added errata NOP
  6744  0007D4  0E5C               	movlw	low (?_sprintf+4)
  6745  0007D6  6E5E               	movwf	sprintf@ap^0,c
  6746  0007D8  0E00               	movlw	high (?_sprintf+4)
  6747  0007DA  6E5F               	movwf	(sprintf@ap+1)^0,c
  6748  0007DC  C058  F060         	movff	sprintf@s,sprintf@f
  6749  0007E0  C059  F061         	movff	sprintf@s+1,sprintf@f+1
  6750  0007E4  0E00               	movlw	0
  6751  0007E6  6E63               	movwf	(sprintf@f+3)^0,c
  6752  0007E8  0E00               	movlw	0
  6753  0007EA  6E62               	movwf	(sprintf@f+2)^0,c
  6754  0007EC  0E00               	movlw	0
  6755  0007EE  6E65               	movwf	(sprintf@f+5)^0,c
  6756  0007F0  0E00               	movlw	0
  6757  0007F2  6E64               	movwf	(sprintf@f+4)^0,c
  6758  0007F4  0E60               	movlw	low sprintf@f
  6759  0007F6  6E50               	movwf	vfprintf@fp^0,c
  6760  0007F8  0E00               	movlw	high sprintf@f
  6761  0007FA  6E51               	movwf	(vfprintf@fp+1)^0,c
  6762  0007FC  C05A  F052         	movff	sprintf@fmt,vfprintf@fmt
  6763  000800  C05B  F053         	movff	sprintf@fmt+1,vfprintf@fmt+1
  6764  000804  0E5E               	movlw	low sprintf@ap
  6765  000806  6E54               	movwf	vfprintf@ap^0,c
  6766  000808  0E00               	movlw	high sprintf@ap
  6767  00080A  6E55               	movwf	(vfprintf@ap+1)^0,c
  6768  00080C  EC48  F004         	call	_vfprintf	;wreg free
  6769  000810  5062               	movf	(sprintf@f+2)^0,w,c
  6770  000812  2458               	addwf	sprintf@s^0,w,c
  6771  000814  6ED9               	movwf	fsr2l,c
  6772  000816  5063               	movf	(sprintf@f+3)^0,w,c
  6773  000818  2059               	addwfc	(sprintf@s+1)^0,w,c
  6774  00081A  6EDA               	movwf	fsr2h,c
  6775  00081C  0E00               	movlw	0
  6776  00081E  6EDF               	movwf	indf2,c
  6777  000820  0012               	return		;funcret
  6778  000822  FFFF               	dw	65535	; errata NOP
  6779  000824                     __end_of_sprintf:
  6780                           	callstack 0
  6781                           
  6782 ;; *************** function _vfprintf *****************
  6783 ;; Defined at:
  6784 ;;		line 1390 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c"
  6785 ;; Parameters:    Size  Location     Type
  6786 ;;  fp              2   79[COMRAM] PTR struct _IO_FILE
  6787 ;;		 -> sprintf@f(6), 
  6788 ;;  fmt             2   81[COMRAM] PTR const unsigned char 
  6789 ;;		 -> STR_36(3), STR_34(3), STR_29(3), STR_25(3), 
  6790 ;;		 -> STR_23(3), STR_20(3), STR_17(3), STR_14(3), 
  6791 ;;		 -> STR_11(3), STR_9(3), STR_6(3), 
  6792 ;;  ap              2   83[COMRAM] PTR PTR void 
  6793 ;;		 -> sprintf@ap(2), 
  6794 ;; Auto vars:     Size  Location     Type
  6795 ;;  cfmt            2   85[COMRAM] PTR unsigned char 
  6796 ;;		 -> STR_36(3), STR_34(3), STR_29(3), STR_25(3), 
  6797 ;;		 -> STR_23(3), STR_20(3), STR_17(3), STR_14(3), 
  6798 ;;		 -> STR_11(3), STR_9(3), STR_6(3), 
  6799 ;; Return value:  Size  Location     Type
  6800 ;;                  2   79[COMRAM] int 
  6801 ;; Registers used:
  6802 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6803 ;; Tracked objects:
  6804 ;;		On entry : 0/0
  6805 ;;		On exit  : 0/0
  6806 ;;		Unchanged: 0/0
  6807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6808 ;;      Params:         6       0       0       0       0       0       0
  6809 ;;      Locals:         2       0       0       0       0       0       0
  6810 ;;      Temps:          0       0       0       0       0       0       0
  6811 ;;      Totals:         8       0       0       0       0       0       0
  6812 ;;Total ram usage:        8 bytes
  6813 ;; Hardware stack levels used: 1
  6814 ;; Hardware stack levels required when called: 6
  6815 ;; This function calls:
  6816 ;;		_vfpfcnvrt
  6817 ;; This function is called by:
  6818 ;;		_sprintf
  6819 ;; This function uses a non-reentrant model
  6820 ;;
  6821                           
  6822                           	psect	text7
  6823  000890                     __ptext7:
  6824                           	callstack 0
  6825  000890                     _vfprintf:
  6826                           	callstack 0
  6827  000890  FFFF               	dw	65535	; assembler added errata NOP
  6828  000892                     
  6829                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1390: int vfprintf(FILE *fp, 
      +                          const char *fmt, va_list ap);/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1
      +                          391: {;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1393:     char *cfmt;;/
      +                          opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1395:     cfmt = (char *)fmt;
  6830  000892  C052  F056         	movff	vfprintf@fmt,vfprintf@cfmt
  6831  000896  C053  F057         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  6832  00089A                     
  6833                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1396:     nout = 0;
  6834  00089A  0E00               	movlw	0
  6835  00089C  0100               	movlb	0	; () banked
  6836  00089E  6F81               	movwf	(_nout+1)& (0+255),b
  6837  0008A0  0E00               	movlw	0
  6838  0008A2  6F80               	movwf	_nout& (0+255),b
  6839                           
  6840                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1397:     while (*cfmt) {
  6841  0008A4  EF68  F004         	goto	l3630
  6842  0008A8                     l3628:
  6843  0008A8  FFFF               	dw	65535	; assembler added errata NOP
  6844                           
  6845                           ; BSR set to: 0
  6846                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1398:         nout += vfpfcnv
      +                          rt(fp, &cfmt, ap);
  6847  0008AA  C050  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  6848  0008AE  C051  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  6849  0008B2  0E56               	movlw	low vfprintf@cfmt
  6850  0008B4  6E42               	movwf	vfpfcnvrt@fmt^0,c
  6851  0008B6  0E00               	movlw	high vfprintf@cfmt
  6852  0008B8  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  6853  0008BA  C054  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  6854  0008BE  C055  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  6855  0008C2  EC0B  F00A         	call	_vfpfcnvrt	;wreg free
  6856  0008C6  5040               	movf	?_vfpfcnvrt^0,w,c
  6857  0008C8  0100               	movlb	0	; () banked
  6858  0008CA  2780               	addwf	_nout& (0+255),f,b
  6859  0008CC  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  6860  0008CE  2381               	addwfc	(_nout+1)& (0+255),f,b
  6861  0008D0                     l3630:
  6862  0008D0  FFFF               	dw	65535	; assembler added errata NOP
  6863                           
  6864                           ; BSR set to: 0
  6865                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1397:     while (*cfmt) {
  6866  0008D2  C056  FFF6         	movff	vfprintf@cfmt,tblptrl
  6867  0008D6  C057  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  6868  0008DA                     	if	0	;tblptru may be non-zero
  6869  0008DA                     	endif
  6870  0008DA                     	if	0	;tblptru may be non-zero
  6871  0008DA                     	endif
  6872  0008DA  0008               	tblrd		*
  6873  0008DC  FFFF               	dw	65535	; errata NOP
  6874  0008DE  50F5               	movf	tablat,w,c
  6875  0008E0  0900               	iorlw	0
  6876  0008E2  A4D8               	btfss	status,2,c
  6877  0008E4  EF76  F004         	goto	u2881
  6878  0008E8  EF79  F004         	goto	u2880
  6879  0008EC                     u2881:
  6880  0008EC  FFFF               	dw	65535	; assembler added errata NOP
  6881  0008EE  EF54  F004         	goto	l3628
  6882  0008F2                     u2880:
  6883  0008F2  FFFF               	dw	65535	; assembler added errata NOP
  6884  0008F4                     
  6885                           ; BSR set to: 0
  6886                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1400:     return nout;
  6887  0008F4  C080  F050         	movff	_nout,?_vfprintf
  6888  0008F8  C081  F051         	movff	_nout+1,?_vfprintf+1
  6889  0008FC                     
  6890                           ; BSR set to: 0
  6891  0008FC  0012               	return		;funcret
  6892  0008FE  FFFF               	dw	65535	; errata NOP
  6893  000900                     __end_of_vfprintf:
  6894                           	callstack 0
  6895                           
  6896 ;; *************** function _vfpfcnvrt *****************
  6897 ;; Defined at:
  6898 ;;		line 692 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c"
  6899 ;; Parameters:    Size  Location     Type
  6900 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  6901 ;;		 -> sprintf@f(6), 
  6902 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  6903 ;;		 -> vfprintf@cfmt(2), 
  6904 ;;  ap              2   67[COMRAM] PTR PTR void 
  6905 ;;		 -> sprintf@ap(2), 
  6906 ;; Auto vars:     Size  Location     Type
  6907 ;;  ll              8   71[COMRAM] long long 
  6908 ;;  llu             8    0        unsigned long long 
  6909 ;;  f               4    0        unsigned long long 
  6910 ;;  vp              3    0        PTR void 
  6911 ;;  ct              3    0        unsigned char [3]
  6912 ;;  cp              3    0        PTR unsigned char 
  6913 ;;  i               2    0        int 
  6914 ;;  done            2    0        int 
  6915 ;;  c               1    0        unsigned char 
  6916 ;; Return value:  Size  Location     Type
  6917 ;;                  2   63[COMRAM] int 
  6918 ;; Registers used:
  6919 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6920 ;; Tracked objects:
  6921 ;;		On entry : 0/0
  6922 ;;		On exit  : 0/0
  6923 ;;		Unchanged: 0/0
  6924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6925 ;;      Params:         6       0       0       0       0       0       0
  6926 ;;      Locals:         8       0       0       0       0       0       0
  6927 ;;      Temps:          2       0       0       0       0       0       0
  6928 ;;      Totals:        16       0       0       0       0       0       0
  6929 ;;Total ram usage:       16 bytes
  6930 ;; Hardware stack levels used: 1
  6931 ;; Hardware stack levels required when called: 5
  6932 ;; This function calls:
  6933 ;;		_dtoa
  6934 ;;		_fputc
  6935 ;; This function is called by:
  6936 ;;		_vfprintf
  6937 ;; This function uses a non-reentrant model
  6938 ;;
  6939                           
  6940                           	psect	text8
  6941  001416                     __ptext8:
  6942                           	callstack 0
  6943  001416                     _vfpfcnvrt:
  6944                           	callstack 0
  6945  001416  FFFF               	dw	65535	; assembler added errata NOP
  6946  001418                     
  6947                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 692: static int vfpfcnvrt(FIL
      +                          E *fp, char *fmt[], va_list ap);/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c
      +                          : 693: {;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 694:     char c, *cp,
      +                           ct[3];;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 695:     int done, i;;
      +                          /opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 696:     long long ll;;/opt/mi
      +                          crochip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 697:     unsigned long long llu;
  6948  001418  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6949  00141C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6950  001420  CFDE FFF6          	movff	postinc2,tblptrl
  6951  001424  CFDD FFF7          	movff	postdec2,tblptrh
  6952  001428                     	if	0	;tblptru may be non-zero
  6953  001428                     	endif
  6954  001428                     	if	0	;tblptru may be non-zero
  6955  001428                     	endif
  6956  001428  0008               	tblrd		*
  6957  00142A  FFFF               	dw	65535	; errata NOP
  6958  00142C  50F5               	movf	tablat,w,c
  6959  00142E  0A25               	xorlw	37
  6960  001430  A4D8               	btfss	status,2,c
  6961  001432  EF1D  F00A         	goto	u2651
  6962  001436  EF20  F00A         	goto	u2650
  6963  00143A                     u2651:
  6964  00143A  FFFF               	dw	65535	; assembler added errata NOP
  6965  00143C  EFD9  F00A         	goto	l3472
  6966  001440                     u2650:
  6967  001440  FFFF               	dw	65535	; assembler added errata NOP
  6968  001442                     
  6969                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 703:         ++*fmt;
  6970  001442  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6971  001446  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6972  00144A  2ADE               	incf	postinc2,f,c
  6973  00144C  0E00               	movlw	0
  6974  00144E  22DD               	addwfc	postdec2,f,c
  6975  001450                     
  6976                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 705:         flags = width = 
      +                          0;
  6977  001450  0E00               	movlw	0
  6978  001452  0100               	movlb	0	; () banked
  6979  001454  6F83               	movwf	(_width+1)& (0+255),b
  6980  001456  0E00               	movlw	0
  6981  001458  6F82               	movwf	_width& (0+255),b
  6982  00145A  C082  F086         	movff	_width,_flags
  6983  00145E  C083  F087         	movff	_width+1,_flags+1
  6984  001462                     
  6985                           ; BSR set to: 0
  6986                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 706:         prec = -1;
  6987  001462  6984               	setf	_prec& (0+255),b
  6988  001464  6985               	setf	(_prec+1)& (0+255),b
  6989  001466                     
  6990                           ; BSR set to: 0
  6991                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 847:         if ((*fmt[0] == 
      +                          'd') || (*fmt[0] == 'i')) {
  6992  001466  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6993  00146A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6994  00146E  CFDE FFF6          	movff	postinc2,tblptrl
  6995  001472  CFDD FFF7          	movff	postdec2,tblptrh
  6996  001476                     	if	0	;tblptru may be non-zero
  6997  001476                     	endif
  6998  001476                     	if	0	;tblptru may be non-zero
  6999  001476                     	endif
  7000  001476  0008               	tblrd		*
  7001  001478  FFFF               	dw	65535	; errata NOP
  7002  00147A  50F5               	movf	tablat,w,c
  7003  00147C  0A64               	xorlw	100
  7004  00147E  B4D8               	btfsc	status,2,c
  7005  001480  EF44  F00A         	goto	u2661
  7006  001484  EF47  F00A         	goto	u2660
  7007  001488                     u2661:
  7008  001488  FFFF               	dw	65535	; assembler added errata NOP
  7009  00148A  EF5C  F00A         	goto	l3450
  7010  00148E                     u2660:
  7011  00148E  FFFF               	dw	65535	; assembler added errata NOP
  7012  001490                     
  7013                           ; BSR set to: 0
  7014  001490  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7015  001494  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7016  001498  CFDE FFF6          	movff	postinc2,tblptrl
  7017  00149C  CFDD FFF7          	movff	postdec2,tblptrh
  7018  0014A0                     	if	0	;tblptru may be non-zero
  7019  0014A0                     	endif
  7020  0014A0                     	if	0	;tblptru may be non-zero
  7021  0014A0                     	endif
  7022  0014A0  0008               	tblrd		*
  7023  0014A2  FFFF               	dw	65535	; errata NOP
  7024  0014A4  50F5               	movf	tablat,w,c
  7025  0014A6  0A69               	xorlw	105
  7026  0014A8  A4D8               	btfss	status,2,c
  7027  0014AA  EF59  F00A         	goto	u2671
  7028  0014AE  EF5C  F00A         	goto	u2670
  7029  0014B2                     u2671:
  7030  0014B2  FFFF               	dw	65535	; assembler added errata NOP
  7031  0014B4  EF9D  F00A         	goto	l3456
  7032  0014B8                     u2670:
  7033  0014B8                     l3450:
  7034  0014B8  FFFF               	dw	65535	; assembler added errata NOP
  7035                           
  7036                           ; BSR set to: 0
  7037                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 849:             ++*fmt;
  7038  0014BA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7039  0014BE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7040  0014C2  2ADE               	incf	postinc2,f,c
  7041  0014C4  0E00               	movlw	0
  7042  0014C6  22DD               	addwfc	postdec2,f,c
  7043                           
  7044                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 850:             ll = (long l
      +                          ong)(*(int *)__va_arg(*(int **)ap, (int)0));
  7045  0014C8  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7046  0014CC  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7047  0014D0  CFDF F046          	movff	indf2,??_vfpfcnvrt
  7048  0014D4  0E02               	movlw	2
  7049  0014D6  26DE               	addwf	postinc2,f,c
  7050  0014D8  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  7051  0014DC  0E00               	movlw	0
  7052  0014DE  22DD               	addwfc	postdec2,f,c
  7053  0014E0  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7054  0014E4  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7055  0014E8  CFDE F048          	movff	postinc2,vfpfcnvrt@ll
  7056  0014EC  CFDD F049          	movff	postdec2,vfpfcnvrt@ll+1
  7057  0014F0  0E00               	movlw	0
  7058  0014F2  BE49               	btfsc	(vfpfcnvrt@ll+1)^0,7,c
  7059  0014F4  0EFF               	movlw	-1
  7060  0014F6  6E4A               	movwf	(vfpfcnvrt@ll+2)^0,c
  7061  0014F8  6E4B               	movwf	(vfpfcnvrt@ll+3)^0,c
  7062  0014FA  6E4C               	movwf	(vfpfcnvrt@ll+4)^0,c
  7063  0014FC  6E4D               	movwf	(vfpfcnvrt@ll+5)^0,c
  7064  0014FE  6E4E               	movwf	(vfpfcnvrt@ll+6)^0,c
  7065  001500  6E4F               	movwf	(vfpfcnvrt@ll+7)^0,c
  7066  001502                     
  7067                           ; BSR set to: 0
  7068                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 852:             return dtoa(
      +                          fp, ll);
  7069  001502  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  7070  001506  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  7071  00150A  C048  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  7072  00150E  C049  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  7073  001512  C04A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  7074  001516  C04B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  7075  00151A  C04C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  7076  00151E  C04D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  7077  001522  C04E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  7078  001526  C04F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  7079  00152A  EC97  F00F         	call	_dtoa	;wreg free
  7080  00152E  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  7081  001532  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  7082  001536  EFF6  F00A         	goto	l1253
  7083  00153A                     l3456:
  7084  00153A  FFFF               	dw	65535	; assembler added errata NOP
  7085                           
  7086                           ; BSR set to: 0
  7087                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1372:         if ((*fmt)[0] =
      +                          = '%') {
  7088  00153C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7089  001540  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7090  001544  CFDE FFF6          	movff	postinc2,tblptrl
  7091  001548  CFDD FFF7          	movff	postdec2,tblptrh
  7092  00154C                     	if	0	;tblptru may be non-zero
  7093  00154C                     	endif
  7094  00154C                     	if	0	;tblptru may be non-zero
  7095  00154C                     	endif
  7096  00154C  0008               	tblrd		*
  7097  00154E  FFFF               	dw	65535	; errata NOP
  7098  001550  50F5               	movf	tablat,w,c
  7099  001552  0A25               	xorlw	37
  7100  001554  A4D8               	btfss	status,2,c
  7101  001556  EFAF  F00A         	goto	u2681
  7102  00155A  EFB2  F00A         	goto	u2680
  7103  00155E                     u2681:
  7104  00155E  FFFF               	dw	65535	; assembler added errata NOP
  7105  001560  EFCB  F00A         	goto	l3466
  7106  001564                     u2680:
  7107  001564  FFFF               	dw	65535	; assembler added errata NOP
  7108  001566                     
  7109                           ; BSR set to: 0
  7110                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1373:             ++*fmt;
  7111  001566  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7112  00156A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7113  00156E  2ADE               	incf	postinc2,f,c
  7114  001570  0E00               	movlw	0
  7115  001572  22DD               	addwfc	postdec2,f,c
  7116  001574                     
  7117                           ; BSR set to: 0
  7118                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1374:             fputc((int)
      +                          '%', fp);
  7119  001574  0E00               	movlw	0
  7120  001576  6E02               	movwf	(fputc@c+1)^0,c
  7121  001578  0E25               	movlw	37
  7122  00157A  6E01               	movwf	fputc@c^0,c
  7123  00157C  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  7124  001580  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7125  001584  EC79  F005         	call	_fputc	;wreg free
  7126  001588                     l3462:
  7127  001588  FFFF               	dw	65535	; assembler added errata NOP
  7128                           
  7129                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1375:             return 1;
  7130  00158A  0E00               	movlw	0
  7131  00158C  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  7132  00158E  0E01               	movlw	1
  7133  001590  6E40               	movwf	?_vfpfcnvrt^0,c
  7134  001592  EFF6  F00A         	goto	l1253
  7135  001596                     l3466:
  7136  001596  FFFF               	dw	65535	; assembler added errata NOP
  7137                           
  7138                           ; BSR set to: 0
  7139                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1379:         ++*fmt;
  7140  001598  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7141  00159C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7142  0015A0  2ADE               	incf	postinc2,f,c
  7143  0015A2  0E00               	movlw	0
  7144  0015A4  22DD               	addwfc	postdec2,f,c
  7145  0015A6                     
  7146                           ; BSR set to: 0
  7147                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1380:         return 0;
  7148  0015A6  0E00               	movlw	0
  7149  0015A8  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  7150  0015AA  0E00               	movlw	0
  7151  0015AC  6E40               	movwf	?_vfpfcnvrt^0,c
  7152  0015AE  EFF6  F00A         	goto	l1253
  7153  0015B2                     l3472:
  7154  0015B2  FFFF               	dw	65535	; assembler added errata NOP
  7155                           
  7156                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1384:     fputc((int)(*fmt)[0
      +                          ], fp);
  7157  0015B4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7158  0015B8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7159  0015BC  CFDE FFF6          	movff	postinc2,tblptrl
  7160  0015C0  CFDD FFF7          	movff	postdec2,tblptrh
  7161  0015C4                     	if	0	;tblptru may be non-zero
  7162  0015C4                     	endif
  7163  0015C4                     	if	0	;tblptru may be non-zero
  7164  0015C4                     	endif
  7165  0015C4  0008               	tblrd		*
  7166  0015C6  FFFF               	dw	65535	; errata NOP
  7167  0015C8  50F5               	movf	tablat,w,c
  7168  0015CA  6E01               	movwf	fputc@c^0,c
  7169  0015CC  6A02               	clrf	(fputc@c+1)^0,c
  7170  0015CE  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  7171  0015D2  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7172  0015D6  EC79  F005         	call	_fputc	;wreg free
  7173  0015DA                     
  7174                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 1385:     ++*fmt;
  7175  0015DA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7176  0015DE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7177  0015E2  2ADE               	incf	postinc2,f,c
  7178  0015E4  0E00               	movlw	0
  7179  0015E6  22DD               	addwfc	postdec2,f,c
  7180  0015E8  EFC4  F00A         	goto	l3462
  7181  0015EC                     l1253:
  7182  0015EC  FFFF               	dw	65535	; assembler added errata NOP
  7183  0015EE  0012               	return		;funcret
  7184  0015F0  FFFF               	dw	65535	; errata NOP
  7185  0015F2                     __end_of_vfpfcnvrt:
  7186                           	callstack 0
  7187                           
  7188 ;; *************** function _dtoa *****************
  7189 ;; Defined at:
  7190 ;;		line 287 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c"
  7191 ;; Parameters:    Size  Location     Type
  7192 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  7193 ;;		 -> sprintf@f(6), 
  7194 ;;  d               8   29[COMRAM] long long 
  7195 ;; Auto vars:     Size  Location     Type
  7196 ;;  n               8   53[COMRAM] long long 
  7197 ;;  i               2   61[COMRAM] int 
  7198 ;;  s               2   51[COMRAM] int 
  7199 ;;  w               2   49[COMRAM] int 
  7200 ;;  p               2   47[COMRAM] int 
  7201 ;; Return value:  Size  Location     Type
  7202 ;;                  2   27[COMRAM] int 
  7203 ;; Registers used:
  7204 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7205 ;; Tracked objects:
  7206 ;;		On entry : 0/0
  7207 ;;		On exit  : 0/0
  7208 ;;		Unchanged: 0/0
  7209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7210 ;;      Params:        10       0       0       0       0       0       0
  7211 ;;      Locals:        18       0       0       0       0       0       0
  7212 ;;      Temps:          8       0       0       0       0       0       0
  7213 ;;      Totals:        36       0       0       0       0       0       0
  7214 ;;Total ram usage:       36 bytes
  7215 ;; Hardware stack levels used: 1
  7216 ;; Hardware stack levels required when called: 4
  7217 ;; This function calls:
  7218 ;;		___aodiv
  7219 ;;		___aomod
  7220 ;;		_abs
  7221 ;;		_pad
  7222 ;; This function is called by:
  7223 ;;		_vfpfcnvrt
  7224 ;; This function uses a non-reentrant model
  7225 ;;
  7226                           
  7227                           	psect	text9
  7228  001F2E                     __ptext9:
  7229                           	callstack 0
  7230  001F2E                     _dtoa:
  7231                           	callstack 0
  7232  001F2E  FFFF               	dw	65535	; assembler added errata NOP
  7233  001F30                     
  7234                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 287: static int dtoa(FILE *fp
      +                          , long long d);/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 288: {;/opt/mic
      +                          rochip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 289:     int i, p, s, w;;/opt/microchi
      +                          p/xc8/v2.32/pic/sources/c99/common/doprnt.c: 290:     long long n;;/opt/microchip/xc8/v2
      +                          .32/pic/sources/c99/common/doprnt.c: 293:     n = d;
  7235  001F30  C01E  F036         	movff	dtoa@d,dtoa@n
  7236  001F34  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  7237  001F38  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  7238  001F3C  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  7239  001F40  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  7240  001F44  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  7241  001F48  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  7242  001F4C  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  7243  001F50                     
  7244                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 294:     s = n < 0 ? 1 : 0;
  7245  001F50  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  7246  001F52  EFAD  F00F         	goto	u2501
  7247  001F56  EFB1  F00F         	goto	u2500
  7248  001F5A                     u2501:
  7249  001F5A  FFFF               	dw	65535	; assembler added errata NOP
  7250  001F5C  0E01               	movlw	1
  7251  001F5E  EFB3  F00F         	goto	u2510
  7252  001F62                     u2500:
  7253  001F62  FFFF               	dw	65535	; assembler added errata NOP
  7254  001F64  0E00               	movlw	0
  7255  001F66                     u2510:
  7256  001F66  FFFF               	dw	65535	; assembler added errata NOP
  7257  001F68  6E34               	movwf	dtoa@s^0,c
  7258  001F6A  6A35               	clrf	(dtoa@s+1)^0,c
  7259                           
  7260                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 295:     if (s) {
  7261  001F6C  5034               	movf	dtoa@s^0,w,c
  7262  001F6E  1035               	iorwf	(dtoa@s+1)^0,w,c
  7263  001F70  B4D8               	btfsc	status,2,c
  7264  001F72  EFBD  F00F         	goto	u2521
  7265  001F76  EFC0  F00F         	goto	u2520
  7266  001F7A                     u2521:
  7267  001F7A  FFFF               	dw	65535	; assembler added errata NOP
  7268  001F7C  EFD1  F00F         	goto	l3370
  7269  001F80                     u2520:
  7270  001F80  FFFF               	dw	65535	; assembler added errata NOP
  7271  001F82                     
  7272                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 296:         n = -n;
  7273  001F82  1E3D               	comf	(dtoa@n+7)^0,f,c
  7274  001F84  1E3C               	comf	(dtoa@n+6)^0,f,c
  7275  001F86  1E3B               	comf	(dtoa@n+5)^0,f,c
  7276  001F88  1E3A               	comf	(dtoa@n+4)^0,f,c
  7277  001F8A  1E39               	comf	(dtoa@n+3)^0,f,c
  7278  001F8C  1E38               	comf	(dtoa@n+2)^0,f,c
  7279  001F8E  1E37               	comf	(dtoa@n+1)^0,f,c
  7280  001F90  6C36               	negf	dtoa@n^0,c
  7281  001F92  0E00               	movlw	0
  7282  001F94  2237               	addwfc	(dtoa@n+1)^0,f,c
  7283  001F96  2238               	addwfc	(dtoa@n+2)^0,f,c
  7284  001F98  2239               	addwfc	(dtoa@n+3)^0,f,c
  7285  001F9A  223A               	addwfc	(dtoa@n+4)^0,f,c
  7286  001F9C  223B               	addwfc	(dtoa@n+5)^0,f,c
  7287  001F9E  223C               	addwfc	(dtoa@n+6)^0,f,c
  7288  001FA0  223D               	addwfc	(dtoa@n+7)^0,f,c
  7289  001FA2                     l3370:
  7290  001FA2  FFFF               	dw	65535	; assembler added errata NOP
  7291                           
  7292                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 300:     if (!(prec < 0)) {
  7293  001FA4  0100               	movlb	0	; () banked
  7294  001FA6  BF85               	btfsc	(_prec+1)& (0+255),7,b
  7295  001FA8  EFD8  F00F         	goto	u2531
  7296  001FAC  EFDB  F00F         	goto	u2530
  7297  001FB0                     u2531:
  7298  001FB0  FFFF               	dw	65535	; assembler added errata NOP
  7299  001FB2  EFDD  F00F         	goto	l3374
  7300  001FB6                     u2530:
  7301  001FB6  FFFF               	dw	65535	; assembler added errata NOP
  7302  001FB8                     
  7303                           ; BSR set to: 0
  7304                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 301:         flags &= ~(1 << 
      +                          1);
  7305  001FB8  9386               	bcf	_flags& (0+255),1,b
  7306  001FBA                     l3374:
  7307  001FBA  FFFF               	dw	65535	; assembler added errata NOP
  7308                           
  7309                           ; BSR set to: 0
  7310                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 303:     p = (0 < prec) ? pre
      +                          c : 1;
  7311  001FBC  BF85               	btfsc	(_prec+1)& (0+255),7,b
  7312  001FBE  EFEC  F00F         	goto	u2540
  7313  001FC2  5185               	movf	(_prec+1)& (0+255),w,b
  7314  001FC4  E106               	bnz	u2541
  7315  001FC6  0584               	decf	_prec& (0+255),w,b
  7316  001FC8  B0D8               	btfsc	status,0,c
  7317  001FCA  EFE9  F00F         	goto	u2541
  7318  001FCE  EFEC  F00F         	goto	u2540
  7319  001FD2                     u2541:
  7320  001FD2  FFFF               	dw	65535	; assembler added errata NOP
  7321  001FD4  EFF3  F00F         	goto	l1226
  7322  001FD8                     u2540:
  7323  001FD8  FFFF               	dw	65535	; assembler added errata NOP
  7324  001FDA                     
  7325                           ; BSR set to: 0
  7326  001FDA  0E00               	movlw	0
  7327  001FDC  6E31               	movwf	(dtoa@p+1)^0,c
  7328  001FDE  0E01               	movlw	1
  7329  001FE0  6E30               	movwf	dtoa@p^0,c
  7330  001FE2  EFF8  F00F         	goto	l1228
  7331  001FE6                     l1226:
  7332  001FE6  FFFF               	dw	65535	; assembler added errata NOP
  7333                           
  7334                           ; BSR set to: 0
  7335  001FE8  C084  F030         	movff	_prec,dtoa@p
  7336  001FEC  C085  F031         	movff	_prec+1,dtoa@p+1
  7337  001FF0                     l1228:
  7338  001FF0  FFFF               	dw	65535	; assembler added errata NOP
  7339                           
  7340                           ; BSR set to: 0
  7341                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 304:     w = width;
  7342  001FF2  C082  F032         	movff	_width,dtoa@w
  7343  001FF6  C083  F033         	movff	_width+1,dtoa@w+1
  7344  001FFA                     
  7345                           ; BSR set to: 0
  7346                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 305:     if (s || (flags & (1
      +                           << 2))) {
  7347  001FFA  5034               	movf	dtoa@s^0,w,c
  7348  001FFC  1035               	iorwf	(dtoa@s+1)^0,w,c
  7349  001FFE  A4D8               	btfss	status,2,c
  7350  002000  EF04  F010         	goto	u2551
  7351  002004  EF07  F010         	goto	u2550
  7352  002008                     u2551:
  7353  002008  FFFF               	dw	65535	; assembler added errata NOP
  7354  00200A  EF10  F010         	goto	l3382
  7355  00200E                     u2550:
  7356  00200E  FFFF               	dw	65535	; assembler added errata NOP
  7357  002010                     
  7358                           ; BSR set to: 0
  7359  002010  A586               	btfss	_flags& (0+255),2,b
  7360  002012  EF0D  F010         	goto	u2561
  7361  002016  EF10  F010         	goto	u2560
  7362  00201A                     u2561:
  7363  00201A  FFFF               	dw	65535	; assembler added errata NOP
  7364  00201C  EF14  F010         	goto	l3384
  7365  002020                     u2560:
  7366  002020                     l3382:
  7367  002020  FFFF               	dw	65535	; assembler added errata NOP
  7368                           
  7369                           ; BSR set to: 0
  7370                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 306:         --w;
  7371  002022  0632               	decf	dtoa@w^0,f,c
  7372  002024  A0D8               	btfss	status,0,c
  7373  002026  0633               	decf	(dtoa@w+1)^0,f,c
  7374  002028                     l3384:
  7375  002028  FFFF               	dw	65535	; assembler added errata NOP
  7376                           
  7377                           ; BSR set to: 0
  7378                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 310:     i = sizeof(dbuf) - 1
      +                          ;
  7379  00202A  0E00               	movlw	0
  7380  00202C  6E3F               	movwf	(dtoa@i+1)^0,c
  7381  00202E  0E1F               	movlw	31
  7382  002030  6E3E               	movwf	dtoa@i^0,c
  7383  002032                     
  7384                           ; BSR set to: 0
  7385                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 311:     dbuf[i] = '\0';
  7386  002032  0E00               	movlw	0
  7387  002034  0101               	movlb	1	; () banked
  7388  002036  6FF9               	movwf	(_dbuf+31)& (0+255),b
  7389                           
  7390                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 312:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7391  002038  EF9B  F010         	goto	l3398
  7392  00203C                     l3388:
  7393  00203C  FFFF               	dw	65535	; assembler added errata NOP
  7394                           
  7395                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 313:         --i;
  7396  00203E  063E               	decf	dtoa@i^0,f,c
  7397  002040  A0D8               	btfss	status,0,c
  7398  002042  063F               	decf	(dtoa@i+1)^0,f,c
  7399  002044                     
  7400                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 314:         dbuf[i] = (char)
      +                          ((int)'0' + abs(n % 10));
  7401  002044  0EDA               	movlw	low _dbuf
  7402  002046  243E               	addwf	dtoa@i^0,w,c
  7403  002048  6ED9               	movwf	fsr2l,c
  7404  00204A  0E01               	movlw	high _dbuf
  7405  00204C  203F               	addwfc	(dtoa@i+1)^0,w,c
  7406  00204E  6EDA               	movwf	fsr2h,c
  7407  002050  C036  F001         	movff	dtoa@n,___aomod@dividend
  7408  002054  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  7409  002058  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  7410  00205C  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  7411  002060  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  7412  002064  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  7413  002068  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  7414  00206C  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  7415  002070  0E0A               	movlw	10
  7416  002072  6E09               	movwf	___aomod@divisor^0,c
  7417  002074  0E00               	movlw	0
  7418  002076  6E0A               	movwf	(___aomod@divisor+1)^0,c
  7419  002078  0E00               	movlw	0
  7420  00207A  6E0B               	movwf	(___aomod@divisor+2)^0,c
  7421  00207C  0E00               	movlw	0
  7422  00207E  6E0C               	movwf	(___aomod@divisor+3)^0,c
  7423  002080  0E00               	movlw	0
  7424  002082  6E0D               	movwf	(___aomod@divisor+4)^0,c
  7425  002084  0E00               	movlw	0
  7426  002086  6E0E               	movwf	(___aomod@divisor+5)^0,c
  7427  002088  0E00               	movlw	0
  7428  00208A  6E0F               	movwf	(___aomod@divisor+6)^0,c
  7429  00208C  0E00               	movlw	0
  7430  00208E  6E10               	movwf	(___aomod@divisor+7)^0,c
  7431  002090  EC87  F007         	call	___aomod	;wreg free
  7432  002094  C001  F026         	movff	?___aomod,??_dtoa
  7433  002098  C002  F027         	movff	?___aomod+1,??_dtoa+1
  7434  00209C  C003  F028         	movff	?___aomod+2,??_dtoa+2
  7435  0020A0  C004  F029         	movff	?___aomod+3,??_dtoa+3
  7436  0020A4  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  7437  0020A8  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  7438  0020AC  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  7439  0020B0  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  7440  0020B4  C026  F013         	movff	??_dtoa,abs@a
  7441  0020B8  C028  F014         	movff	??_dtoa+2,abs@a+1
  7442  0020BC  EC9B  F003         	call	_abs	;wreg free
  7443  0020C0  5013               	movf	?_abs^0,w,c
  7444  0020C2  0F30               	addlw	48
  7445  0020C4  6EDF               	movwf	indf2,c
  7446  0020C6                     
  7447                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 315:         --p;
  7448  0020C6  0630               	decf	dtoa@p^0,f,c
  7449  0020C8  A0D8               	btfss	status,0,c
  7450  0020CA  0631               	decf	(dtoa@p+1)^0,f,c
  7451  0020CC                     
  7452                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 316:         --w;
  7453  0020CC  0632               	decf	dtoa@w^0,f,c
  7454  0020CE  A0D8               	btfss	status,0,c
  7455  0020D0  0633               	decf	(dtoa@w+1)^0,f,c
  7456  0020D2                     
  7457                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 317:         n = n / 10;
  7458  0020D2  C036  F001         	movff	dtoa@n,___aodiv@dividend
  7459  0020D6  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  7460  0020DA  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  7461  0020DE  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  7462  0020E2  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  7463  0020E6  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  7464  0020EA  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  7465  0020EE  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  7466  0020F2  0E0A               	movlw	10
  7467  0020F4  6E09               	movwf	___aodiv@divisor^0,c
  7468  0020F6  0E00               	movlw	0
  7469  0020F8  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  7470  0020FA  0E00               	movlw	0
  7471  0020FC  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  7472  0020FE  0E00               	movlw	0
  7473  002100  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  7474  002102  0E00               	movlw	0
  7475  002104  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  7476  002106  0E00               	movlw	0
  7477  002108  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  7478  00210A  0E00               	movlw	0
  7479  00210C  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  7480  00210E  0E00               	movlw	0
  7481  002110  6E10               	movwf	(___aodiv@divisor+7)^0,c
  7482  002112  EC4F  F008         	call	___aodiv	;wreg free
  7483  002116  C001  F036         	movff	?___aodiv,dtoa@n
  7484  00211A  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  7485  00211E  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  7486  002122  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  7487  002126  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  7488  00212A  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  7489  00212E  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  7490  002132  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  7491  002136                     l3398:
  7492  002136  FFFF               	dw	65535	; assembler added errata NOP
  7493                           
  7494                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 312:     while (!(i < 1) && (
      +                          n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  7495  002138  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  7496  00213A  EFA7  F010         	goto	u2571
  7497  00213E  503F               	movf	(dtoa@i+1)^0,w,c
  7498  002140  E109               	bnz	u2570
  7499  002142  043E               	decf	dtoa@i^0,w,c
  7500  002144  A0D8               	btfss	status,0,c
  7501  002146  EFA7  F010         	goto	u2571
  7502  00214A  EFAA  F010         	goto	u2570
  7503  00214E                     u2571:
  7504  00214E  FFFF               	dw	65535	; assembler added errata NOP
  7505  002150  EFE3  F010         	goto	l3408
  7506  002154                     u2570:
  7507  002154  FFFF               	dw	65535	; assembler added errata NOP
  7508  002156  5036               	movf	dtoa@n^0,w,c
  7509  002158  1037               	iorwf	(dtoa@n+1)^0,w,c
  7510  00215A  1038               	iorwf	(dtoa@n+2)^0,w,c
  7511  00215C  1039               	iorwf	(dtoa@n+3)^0,w,c
  7512  00215E  103A               	iorwf	(dtoa@n+4)^0,w,c
  7513  002160  103B               	iorwf	(dtoa@n+5)^0,w,c
  7514  002162  103C               	iorwf	(dtoa@n+6)^0,w,c
  7515  002164  103D               	iorwf	(dtoa@n+7)^0,w,c
  7516  002166  A4D8               	btfss	status,2,c
  7517  002168  EFB8  F010         	goto	u2581
  7518  00216C  EFBB  F010         	goto	u2580
  7519  002170                     u2581:
  7520  002170  FFFF               	dw	65535	; assembler added errata NOP
  7521  002172  EF1E  F010         	goto	l3388
  7522  002176                     u2580:
  7523  002176  FFFF               	dw	65535	; assembler added errata NOP
  7524  002178  BE31               	btfsc	(dtoa@p+1)^0,7,c
  7525  00217A  EFCA  F010         	goto	u2590
  7526  00217E  5031               	movf	(dtoa@p+1)^0,w,c
  7527  002180  E106               	bnz	u2591
  7528  002182  0430               	decf	dtoa@p^0,w,c
  7529  002184  B0D8               	btfsc	status,0,c
  7530  002186  EFC7  F010         	goto	u2591
  7531  00218A  EFCA  F010         	goto	u2590
  7532  00218E                     u2591:
  7533  00218E  FFFF               	dw	65535	; assembler added errata NOP
  7534  002190  EF1E  F010         	goto	l3388
  7535  002194                     u2590:
  7536  002194  FFFF               	dw	65535	; assembler added errata NOP
  7537  002196  BE33               	btfsc	(dtoa@w+1)^0,7,c
  7538  002198  EFD6  F010         	goto	u2601
  7539  00219C  5033               	movf	(dtoa@w+1)^0,w,c
  7540  00219E  E109               	bnz	u2600
  7541  0021A0  0432               	decf	dtoa@w^0,w,c
  7542  0021A2  A0D8               	btfss	status,0,c
  7543  0021A4  EFD6  F010         	goto	u2601
  7544  0021A8  EFD9  F010         	goto	u2600
  7545  0021AC                     u2601:
  7546  0021AC  FFFF               	dw	65535	; assembler added errata NOP
  7547  0021AE  EFE3  F010         	goto	l3408
  7548  0021B2                     u2600:
  7549  0021B2  FFFF               	dw	65535	; assembler added errata NOP
  7550  0021B4  0100               	movlb	0	; () banked
  7551  0021B6  B386               	btfsc	_flags& (0+255),1,b
  7552  0021B8  EFE0  F010         	goto	u2611
  7553  0021BC  EFE3  F010         	goto	u2610
  7554  0021C0                     u2611:
  7555  0021C0  FFFF               	dw	65535	; assembler added errata NOP
  7556  0021C2  EF1E  F010         	goto	l3388
  7557  0021C6                     u2610:
  7558  0021C6                     l3408:
  7559  0021C6  FFFF               	dw	65535	; assembler added errata NOP
  7560                           
  7561                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 321:     if (s || (flags & (1
      +                           << 2))) {
  7562  0021C8  5034               	movf	dtoa@s^0,w,c
  7563  0021CA  1035               	iorwf	(dtoa@s+1)^0,w,c
  7564  0021CC  A4D8               	btfss	status,2,c
  7565  0021CE  EFEB  F010         	goto	u2621
  7566  0021D2  EFEE  F010         	goto	u2620
  7567  0021D6                     u2621:
  7568  0021D6  FFFF               	dw	65535	; assembler added errata NOP
  7569  0021D8  EFF8  F010         	goto	l3412
  7570  0021DC                     u2620:
  7571  0021DC  FFFF               	dw	65535	; assembler added errata NOP
  7572  0021DE  0100               	movlb	0	; () banked
  7573  0021E0  A586               	btfss	_flags& (0+255),2,b
  7574  0021E2  EFF5  F010         	goto	u2631
  7575  0021E6  EFF8  F010         	goto	u2630
  7576  0021EA                     u2631:
  7577  0021EA  FFFF               	dw	65535	; assembler added errata NOP
  7578  0021EC  EF1B  F011         	goto	l3422
  7579  0021F0                     u2630:
  7580  0021F0                     l3412:
  7581  0021F0  FFFF               	dw	65535	; assembler added errata NOP
  7582                           
  7583                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 322:         --i;
  7584  0021F2  063E               	decf	dtoa@i^0,f,c
  7585  0021F4  A0D8               	btfss	status,0,c
  7586  0021F6  063F               	decf	(dtoa@i+1)^0,f,c
  7587  0021F8                     
  7588                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 323:         dbuf[i] = s ? '-
      +                          ' : '+';
  7589  0021F8  5034               	movf	dtoa@s^0,w,c
  7590  0021FA  1035               	iorwf	(dtoa@s+1)^0,w,c
  7591  0021FC  A4D8               	btfss	status,2,c
  7592  0021FE  EF03  F011         	goto	u2641
  7593  002202  EF06  F011         	goto	u2640
  7594  002206                     u2641:
  7595  002206  FFFF               	dw	65535	; assembler added errata NOP
  7596  002208  EF0D  F011         	goto	l3418
  7597  00220C                     u2640:
  7598  00220C  FFFF               	dw	65535	; assembler added errata NOP
  7599  00220E  0E00               	movlw	0
  7600  002210  6E2F               	movwf	(_dtoa$1216+1)^0,c
  7601  002212  0E2B               	movlw	43
  7602  002214  6E2E               	movwf	_dtoa$1216^0,c
  7603  002216  EF12  F011         	goto	l3420
  7604  00221A                     l3418:
  7605  00221A  FFFF               	dw	65535	; assembler added errata NOP
  7606  00221C  0E00               	movlw	0
  7607  00221E  6E2F               	movwf	(_dtoa$1216+1)^0,c
  7608  002220  0E2D               	movlw	45
  7609  002222  6E2E               	movwf	_dtoa$1216^0,c
  7610  002224                     l3420:
  7611  002224  FFFF               	dw	65535	; assembler added errata NOP
  7612  002226  0EDA               	movlw	low _dbuf
  7613  002228  243E               	addwf	dtoa@i^0,w,c
  7614  00222A  6ED9               	movwf	fsr2l,c
  7615  00222C  0E01               	movlw	high _dbuf
  7616  00222E  203F               	addwfc	(dtoa@i+1)^0,w,c
  7617  002230  6EDA               	movwf	fsr2h,c
  7618  002232  C02E  FFDF         	movff	_dtoa$1216,indf2
  7619  002236                     l3422:
  7620  002236  FFFF               	dw	65535	; assembler added errata NOP
  7621                           
  7622                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 327:     return pad(fp, &dbuf
      +                          [i], w);
  7623  002238  C01C  F011         	movff	dtoa@fp,pad@fp
  7624  00223C  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  7625  002240  0EDA               	movlw	low _dbuf
  7626  002242  243E               	addwf	dtoa@i^0,w,c
  7627  002244  6E13               	movwf	pad@buf^0,c
  7628  002246  0E01               	movlw	high _dbuf
  7629  002248  203F               	addwfc	(dtoa@i+1)^0,w,c
  7630  00224A  6E14               	movwf	(pad@buf+1)^0,c
  7631  00224C  C032  F015         	movff	dtoa@w,pad@p
  7632  002250  C033  F016         	movff	dtoa@w+1,pad@p+1
  7633  002254  ECEA  F005         	call	_pad	;wreg free
  7634  002258  C011  F01C         	movff	?_pad,?_dtoa
  7635  00225C  C012  F01D         	movff	?_pad+1,?_dtoa+1
  7636  002260  0012               	return		;funcret
  7637  002262  FFFF               	dw	65535	; errata NOP
  7638  002264                     __end_of_dtoa:
  7639                           	callstack 0
  7640                           
  7641 ;; *************** function _pad *****************
  7642 ;; Defined at:
  7643 ;;		line 72 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c"
  7644 ;; Parameters:    Size  Location     Type
  7645 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  7646 ;;		 -> sprintf@f(6), 
  7647 ;;  buf             2   18[COMRAM] PTR unsigned char 
  7648 ;;		 -> dbuf(32), 
  7649 ;;  p               2   20[COMRAM] int 
  7650 ;; Auto vars:     Size  Location     Type
  7651 ;;  w               2   25[COMRAM] int 
  7652 ;;  i               2   23[COMRAM] int 
  7653 ;; Return value:  Size  Location     Type
  7654 ;;                  2   16[COMRAM] int 
  7655 ;; Registers used:
  7656 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7657 ;; Tracked objects:
  7658 ;;		On entry : 0/0
  7659 ;;		On exit  : 0/0
  7660 ;;		Unchanged: 0/0
  7661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7662 ;;      Params:         6       0       0       0       0       0       0
  7663 ;;      Locals:         4       0       0       0       0       0       0
  7664 ;;      Temps:          1       0       0       0       0       0       0
  7665 ;;      Totals:        11       0       0       0       0       0       0
  7666 ;;Total ram usage:       11 bytes
  7667 ;; Hardware stack levels used: 1
  7668 ;; Hardware stack levels required when called: 3
  7669 ;; This function calls:
  7670 ;;		_fputc
  7671 ;;		_fputs
  7672 ;;		_strlen
  7673 ;; This function is called by:
  7674 ;;		_dtoa
  7675 ;; This function uses a non-reentrant model
  7676 ;;
  7677                           
  7678                           	psect	text10
  7679  000BD4                     __ptext10:
  7680                           	callstack 0
  7681  000BD4                     _pad:
  7682                           	callstack 0
  7683  000BD4  FFFF               	dw	65535	; assembler added errata NOP
  7684  000BD6                     
  7685                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 72: static int pad(FILE *fp, 
      +                          char *buf, int p);/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 73: {;/opt/m
      +                          icrochip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 74:     int i, w;;/opt/microchip/xc8
      +                          /v2.32/pic/sources/c99/common/doprnt.c: 77:     if (flags & (1 << 0)) {
  7686  000BD6  0100               	movlb	0	; () banked
  7687  000BD8  A186               	btfss	_flags& (0+255),0,b
  7688  000BDA  EFF1  F005         	goto	u2451
  7689  000BDE  EFF4  F005         	goto	u2450
  7690  000BE2                     u2451:
  7691  000BE2  FFFF               	dw	65535	; assembler added errata NOP
  7692  000BE4  EFFF  F005         	goto	l3334
  7693  000BE8                     u2450:
  7694  000BE8  FFFF               	dw	65535	; assembler added errata NOP
  7695  000BEA                     
  7696                           ; BSR set to: 0
  7697                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 78:         fputs((const char
      +                           *)buf, fp);
  7698  000BEA  C013  F00A         	movff	pad@buf,fputs@s
  7699  000BEE  C014  F00B         	movff	pad@buf+1,fputs@s+1
  7700  000BF2  C011  F00C         	movff	pad@fp,fputs@fp
  7701  000BF6  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  7702  000BFA  ECC1  F003         	call	_fputs	;wreg free
  7703  000BFE                     l3334:
  7704  000BFE  FFFF               	dw	65535	; assembler added errata NOP
  7705                           
  7706                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 82:     w = (p < 0) ? 0 : p;
  7707  000C00  BE16               	btfsc	(pad@p+1)^0,7,c
  7708  000C02  EF05  F006         	goto	u2461
  7709  000C06  EF08  F006         	goto	u2460
  7710  000C0A                     u2461:
  7711  000C0A  FFFF               	dw	65535	; assembler added errata NOP
  7712  000C0C  EF0F  F006         	goto	l3338
  7713  000C10                     u2460:
  7714  000C10  FFFF               	dw	65535	; assembler added errata NOP
  7715  000C12  C015  F01A         	movff	pad@p,pad@w
  7716  000C16  C016  F01B         	movff	pad@p+1,pad@w+1
  7717  000C1A  EF14  F006         	goto	l1215
  7718  000C1E                     l3338:
  7719  000C1E  FFFF               	dw	65535	; assembler added errata NOP
  7720  000C20  0E00               	movlw	0
  7721  000C22  6E1B               	movwf	(pad@w+1)^0,c
  7722  000C24  0E00               	movlw	0
  7723  000C26  6E1A               	movwf	pad@w^0,c
  7724  000C28                     l1215:
  7725  000C28  FFFF               	dw	65535	; assembler added errata NOP
  7726                           
  7727                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 83:     i = 0;
  7728  000C2A  0E00               	movlw	0
  7729  000C2C  6E19               	movwf	(pad@i+1)^0,c
  7730  000C2E  0E00               	movlw	0
  7731  000C30  6E18               	movwf	pad@i^0,c
  7732                           
  7733                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  7734  000C32  EF28  F006         	goto	l3344
  7735  000C36                     l3340:
  7736  000C36  FFFF               	dw	65535	; assembler added errata NOP
  7737                           
  7738                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 85:         fputc(' ', fp);
  7739  000C38  0E00               	movlw	0
  7740  000C3A  6E02               	movwf	(fputc@c+1)^0,c
  7741  000C3C  0E20               	movlw	32
  7742  000C3E  6E01               	movwf	fputc@c^0,c
  7743  000C40  C011  F003         	movff	pad@fp,fputc@fp
  7744  000C44  C012  F004         	movff	pad@fp+1,fputc@fp+1
  7745  000C48  EC79  F005         	call	_fputc	;wreg free
  7746  000C4C                     
  7747                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 86:         ++i;
  7748  000C4C  4A18               	infsnz	pad@i^0,f,c
  7749  000C4E  2A19               	incf	(pad@i+1)^0,f,c
  7750  000C50                     l3344:
  7751  000C50  FFFF               	dw	65535	; assembler added errata NOP
  7752                           
  7753                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 84:     while (i < w) {
  7754  000C52  501A               	movf	pad@w^0,w,c
  7755  000C54  5C18               	subwf	pad@i^0,w,c
  7756  000C56  5019               	movf	(pad@i+1)^0,w,c
  7757  000C58  0A80               	xorlw	128
  7758  000C5A  6E17               	movwf	??_pad^0,c
  7759  000C5C  501B               	movf	(pad@w+1)^0,w,c
  7760  000C5E  0A80               	xorlw	128
  7761  000C60  5817               	subwfb	??_pad^0,w,c
  7762  000C62  A0D8               	btfss	status,0,c
  7763  000C64  EF36  F006         	goto	u2471
  7764  000C68  EF39  F006         	goto	u2470
  7765  000C6C                     u2471:
  7766  000C6C  FFFF               	dw	65535	; assembler added errata NOP
  7767  000C6E  EF1B  F006         	goto	l3340
  7768  000C72                     u2470:
  7769  000C72  FFFF               	dw	65535	; assembler added errata NOP
  7770  000C74                     
  7771                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 90:     if (!(flags & (1 << 0
      +                          ))) {
  7772  000C74  0100               	movlb	0	; () banked
  7773  000C76  B186               	btfsc	_flags& (0+255),0,b
  7774  000C78  EF40  F006         	goto	u2481
  7775  000C7C  EF43  F006         	goto	u2480
  7776  000C80                     u2481:
  7777  000C80  FFFF               	dw	65535	; assembler added errata NOP
  7778  000C82  EF4E  F006         	goto	l3348
  7779  000C86                     u2480:
  7780  000C86  FFFF               	dw	65535	; assembler added errata NOP
  7781  000C88                     
  7782                           ; BSR set to: 0
  7783                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 91:         fputs((const char
      +                           *)buf, fp);
  7784  000C88  C013  F00A         	movff	pad@buf,fputs@s
  7785  000C8C  C014  F00B         	movff	pad@buf+1,fputs@s+1
  7786  000C90  C011  F00C         	movff	pad@fp,fputs@fp
  7787  000C94  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  7788  000C98  ECC1  F003         	call	_fputs	;wreg free
  7789  000C9C                     l3348:
  7790  000C9C  FFFF               	dw	65535	; assembler added errata NOP
  7791                           
  7792                           ;/opt/microchip/xc8/v2.32/pic/sources/c99/common/doprnt.c: 94:     return (int)(strlen(b
      +                          uf) + (size_t)w);
  7793  000C9E  C013  F001         	movff	pad@buf,strlen@s
  7794  000CA2  C014  F002         	movff	pad@buf+1,strlen@s+1
  7795  000CA6  EC7A  F003         	call	_strlen	;wreg free
  7796  000CAA  501A               	movf	pad@w^0,w,c
  7797  000CAC  2401               	addwf	?_strlen^0,w,c
  7798  000CAE  6E11               	movwf	?_pad^0,c
  7799  000CB0  501B               	movf	(pad@w+1)^0,w,c
  7800  000CB2  2002               	addwfc	(?_strlen+1)^0,w,c
  7801  000CB4  6E12               	movwf	(?_pad+1)^0,c
  7802  000CB6  0012               	return		;funcret
  7803  000CB8  FFFF               	dw	65535	; errata NOP
  7804  000CBA                     __end_of_pad:
  7805                           	callstack 0
  7806                           
  7807 ;; *************** function _strlen *****************
  7808 ;; Defined at:
  7809 ;;		line 5 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/strlen.c"
  7810 ;; Parameters:    Size  Location     Type
  7811 ;;  s               2    0[COMRAM] PTR const unsigned char 
  7812 ;;		 -> dbuf(32), 
  7813 ;; Auto vars:     Size  Location     Type
  7814 ;;  a               2    2[COMRAM] PTR const unsigned char 
  7815 ;;		 -> dbuf(32), 
  7816 ;; Return value:  Size  Location     Type
  7817 ;;                  2    0[COMRAM] unsigned int 
  7818 ;; Registers used:
  7819 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7820 ;; Tracked objects:
  7821 ;;		On entry : 0/0
  7822 ;;		On exit  : 0/0
  7823 ;;		Unchanged: 0/0
  7824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7825 ;;      Params:         2       0       0       0       0       0       0
  7826 ;;      Locals:         2       0       0       0       0       0       0
  7827 ;;      Temps:          0       0       0       0       0       0       0
  7828 ;;      Totals:         4       0       0       0       0       0       0
  7829 ;;Total ram usage:        4 bytes
  7830 ;; Hardware stack levels used: 1
  7831 ;; This function calls:
  7832 ;;		Nothing
  7833 ;; This function is called by:
  7834 ;;		_pad
  7835 ;; This function uses a non-reentrant model
  7836 ;;
  7837                           
  7838                           	psect	text11
  7839  0006F4                     __ptext11:
  7840                           	callstack 0
  7841  0006F4                     _strlen:
  7842                           	callstack 0
  7843  0006F4  FFFF               	dw	65535	; assembler added errata NOP
  7844  0006F6  C001  F003         	movff	strlen@s,strlen@a
  7845  0006FA  C002  F004         	movff	strlen@s+1,strlen@a+1
  7846  0006FE  EF84  F003         	goto	l3242
  7847  000702                     l3240:
  7848  000702  FFFF               	dw	65535	; assembler added errata NOP
  7849  000704  4A01               	infsnz	strlen@s^0,f,c
  7850  000706  2A02               	incf	(strlen@s+1)^0,f,c
  7851  000708                     l3242:
  7852  000708  FFFF               	dw	65535	; assembler added errata NOP
  7853  00070A  C001  FFD9         	movff	strlen@s,fsr2l
  7854  00070E  C002  FFDA         	movff	strlen@s+1,fsr2h
  7855  000712  50DF               	movf	indf2,w,c
  7856  000714  A4D8               	btfss	status,2,c
  7857  000716  EF8F  F003         	goto	u2311
  7858  00071A  EF92  F003         	goto	u2310
  7859  00071E                     u2311:
  7860  00071E  FFFF               	dw	65535	; assembler added errata NOP
  7861  000720  EF81  F003         	goto	l3240
  7862  000724                     u2310:
  7863  000724  FFFF               	dw	65535	; assembler added errata NOP
  7864  000726  5003               	movf	strlen@a^0,w,c
  7865  000728  5C01               	subwf	strlen@s^0,w,c
  7866  00072A  6E01               	movwf	?_strlen^0,c
  7867  00072C  5004               	movf	(strlen@a+1)^0,w,c
  7868  00072E  5802               	subwfb	(strlen@s+1)^0,w,c
  7869  000730  6E02               	movwf	(?_strlen+1)^0,c
  7870  000732  0012               	return		;funcret
  7871  000734  FFFF               	dw	65535	; errata NOP
  7872  000736                     __end_of_strlen:
  7873                           	callstack 0
  7874                           
  7875 ;; *************** function _fputs *****************
  7876 ;; Defined at:
  7877 ;;		line 8 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/nf_fputs.c"
  7878 ;; Parameters:    Size  Location     Type
  7879 ;;  s               2    9[COMRAM] PTR const unsigned char 
  7880 ;;		 -> dbuf(32), 
  7881 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  7882 ;;		 -> sprintf@f(6), 
  7883 ;; Auto vars:     Size  Location     Type
  7884 ;;  i               2   14[COMRAM] int 
  7885 ;;  c               1   13[COMRAM] unsigned char 
  7886 ;; Return value:  Size  Location     Type
  7887 ;;                  2    9[COMRAM] int 
  7888 ;; Registers used:
  7889 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7890 ;; Tracked objects:
  7891 ;;		On entry : 0/0
  7892 ;;		On exit  : 0/0
  7893 ;;		Unchanged: 0/0
  7894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7895 ;;      Params:         4       0       0       0       0       0       0
  7896 ;;      Locals:         3       0       0       0       0       0       0
  7897 ;;      Temps:          0       0       0       0       0       0       0
  7898 ;;      Totals:         7       0       0       0       0       0       0
  7899 ;;Total ram usage:        7 bytes
  7900 ;; Hardware stack levels used: 1
  7901 ;; Hardware stack levels required when called: 2
  7902 ;; This function calls:
  7903 ;;		_fputc
  7904 ;; This function is called by:
  7905 ;;		_pad
  7906 ;; This function uses a non-reentrant model
  7907 ;;
  7908                           
  7909                           	psect	text12
  7910  000782                     __ptext12:
  7911                           	callstack 0
  7912  000782                     _fputs:
  7913                           	callstack 0
  7914  000782  FFFF               	dw	65535	; assembler added errata NOP
  7915  000784  0E00               	movlw	0
  7916  000786  6E10               	movwf	(fputs@i+1)^0,c
  7917  000788  0E00               	movlw	0
  7918  00078A  6E0F               	movwf	fputs@i^0,c
  7919  00078C  EFD4  F003         	goto	l3236
  7920  000790                     l3232:
  7921  000790  FFFF               	dw	65535	; assembler added errata NOP
  7922  000792  C00E  F001         	movff	fputs@c,fputc@c
  7923  000796  6A02               	clrf	(fputc@c+1)^0,c
  7924  000798  C00C  F003         	movff	fputs@fp,fputc@fp
  7925  00079C  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  7926  0007A0  EC79  F005         	call	_fputc	;wreg free
  7927  0007A4  4A0F               	infsnz	fputs@i^0,f,c
  7928  0007A6  2A10               	incf	(fputs@i+1)^0,f,c
  7929  0007A8                     l3236:
  7930  0007A8  FFFF               	dw	65535	; assembler added errata NOP
  7931  0007AA  500F               	movf	fputs@i^0,w,c
  7932  0007AC  240A               	addwf	fputs@s^0,w,c
  7933  0007AE  6ED9               	movwf	fsr2l,c
  7934  0007B0  5010               	movf	(fputs@i+1)^0,w,c
  7935  0007B2  200B               	addwfc	(fputs@s+1)^0,w,c
  7936  0007B4  6EDA               	movwf	fsr2h,c
  7937  0007B6  50DF               	movf	indf2,w,c
  7938  0007B8  6E0E               	movwf	fputs@c^0,c
  7939  0007BA  500E               	movf	fputs@c^0,w,c
  7940  0007BC  A4D8               	btfss	status,2,c
  7941  0007BE  EFE3  F003         	goto	u2301
  7942  0007C2  EFE6  F003         	goto	u2300
  7943  0007C6                     u2301:
  7944  0007C6  FFFF               	dw	65535	; assembler added errata NOP
  7945  0007C8  EFC8  F003         	goto	l3232
  7946  0007CC                     u2300:
  7947  0007CC  FFFF               	dw	65535	; assembler added errata NOP
  7948  0007CE  0012               	return		;funcret
  7949  0007D0  FFFF               	dw	65535	; errata NOP
  7950  0007D2                     __end_of_fputs:
  7951                           	callstack 0
  7952                           
  7953 ;; *************** function _fputc *****************
  7954 ;; Defined at:
  7955 ;;		line 8 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/nf_fputc.c"
  7956 ;; Parameters:    Size  Location     Type
  7957 ;;  c               2    0[COMRAM] int 
  7958 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
  7959 ;;		 -> sprintf@f(6), 
  7960 ;; Auto vars:     Size  Location     Type
  7961 ;;		None
  7962 ;; Return value:  Size  Location     Type
  7963 ;;                  2    0[COMRAM] int 
  7964 ;; Registers used:
  7965 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  7966 ;; Tracked objects:
  7967 ;;		On entry : 0/0
  7968 ;;		On exit  : 0/0
  7969 ;;		Unchanged: 0/0
  7970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7971 ;;      Params:         4       0       0       0       0       0       0
  7972 ;;      Locals:         0       0       0       0       0       0       0
  7973 ;;      Temps:          5       0       0       0       0       0       0
  7974 ;;      Totals:         9       0       0       0       0       0       0
  7975 ;;Total ram usage:        9 bytes
  7976 ;; Hardware stack levels used: 1
  7977 ;; Hardware stack levels required when called: 1
  7978 ;; This function calls:
  7979 ;;		_putch
  7980 ;; This function is called by:
  7981 ;;		_pad
  7982 ;;		_vfpfcnvrt
  7983 ;;		_fputs
  7984 ;; This function uses a non-reentrant model
  7985 ;;
  7986                           
  7987                           	psect	text13
  7988  000AF2                     __ptext13:
  7989                           	callstack 0
  7990  000AF2                     _fputc:
  7991                           	callstack 0
  7992  000AF2  FFFF               	dw	65535	; assembler added errata NOP
  7993  000AF4  5003               	movf	fputc@fp^0,w,c
  7994  000AF6  1004               	iorwf	(fputc@fp+1)^0,w,c
  7995  000AF8  B4D8               	btfsc	status,2,c
  7996  000AFA  EF81  F005         	goto	u2251
  7997  000AFE  EF84  F005         	goto	u2250
  7998  000B02                     u2251:
  7999  000B02  FFFF               	dw	65535	; assembler added errata NOP
  8000  000B04  EF8F  F005         	goto	l3208
  8001  000B08                     u2250:
  8002  000B08  FFFF               	dw	65535	; assembler added errata NOP
  8003  000B0A  5003               	movf	fputc@fp^0,w,c
  8004  000B0C  1004               	iorwf	(fputc@fp+1)^0,w,c
  8005  000B0E  A4D8               	btfss	status,2,c
  8006  000B10  EF8C  F005         	goto	u2261
  8007  000B14  EF8F  F005         	goto	u2260
  8008  000B18                     u2261:
  8009  000B18  FFFF               	dw	65535	; assembler added errata NOP
  8010  000B1A  EF95  F005         	goto	l3210
  8011  000B1E                     u2260:
  8012  000B1E                     l3208:
  8013  000B1E  FFFF               	dw	65535	; assembler added errata NOP
  8014  000B20  5001               	movf	fputc@c^0,w,c
  8015  000B22  ECE5  F002         	call	_putch
  8016  000B26  EFE7  F005         	goto	l1279
  8017  000B2A                     l3210:
  8018  000B2A  FFFF               	dw	65535	; assembler added errata NOP
  8019  000B2C  EE20 F004          	lfsr	2,4
  8020  000B30  5003               	movf	fputc@fp^0,w,c
  8021  000B32  26D9               	addwf	fsr2l,f,c
  8022  000B34  5004               	movf	(fputc@fp+1)^0,w,c
  8023  000B36  22DA               	addwfc	fsr2h,f,c
  8024  000B38  50DE               	movf	postinc2,w,c
  8025  000B3A  10DE               	iorwf	postinc2,w,c
  8026  000B3C  B4D8               	btfsc	status,2,c
  8027  000B3E  EFA3  F005         	goto	u2271
  8028  000B42  EFA6  F005         	goto	u2270
  8029  000B46                     u2271:
  8030  000B46  FFFF               	dw	65535	; assembler added errata NOP
  8031  000B48  EFC3  F005         	goto	l3214
  8032  000B4C                     u2270:
  8033  000B4C  FFFF               	dw	65535	; assembler added errata NOP
  8034  000B4E  EE20 F004          	lfsr	2,4
  8035  000B52  5003               	movf	fputc@fp^0,w,c
  8036  000B54  26D9               	addwf	fsr2l,f,c
  8037  000B56  5004               	movf	(fputc@fp+1)^0,w,c
  8038  000B58  22DA               	addwfc	fsr2h,f,c
  8039  000B5A  EE10 F002          	lfsr	1,2
  8040  000B5E  5003               	movf	fputc@fp^0,w,c
  8041  000B60  26E1               	addwf	fsr1l,f,c
  8042  000B62  5004               	movf	(fputc@fp+1)^0,w,c
  8043  000B64  22E2               	addwfc	fsr1h,f,c
  8044  000B66  50DE               	movf	postinc2,w,c
  8045  000B68  5CE6               	subwf	postinc1,w,c
  8046  000B6A  50E6               	movf	postinc1,w,c
  8047  000B6C  0A80               	xorlw	128
  8048  000B6E  6E09               	movwf	(??_fputc+4)^0,c
  8049  000B70  50DE               	movf	postinc2,w,c
  8050  000B72  0A80               	xorlw	128
  8051  000B74  5809               	subwfb	(??_fputc+4)^0,w,c
  8052  000B76  B0D8               	btfsc	status,0,c
  8053  000B78  EFC0  F005         	goto	u2281
  8054  000B7C  EFC3  F005         	goto	u2280
  8055  000B80                     u2281:
  8056  000B80  FFFF               	dw	65535	; assembler added errata NOP
  8057  000B82  EFE7  F005         	goto	l1279
  8058  000B86                     u2280:
  8059  000B86                     l3214:
  8060  000B86  FFFF               	dw	65535	; assembler added errata NOP
  8061  000B88  EE20 F002          	lfsr	2,2
  8062  000B8C  5003               	movf	fputc@fp^0,w,c
  8063  000B8E  26D9               	addwf	fsr2l,f,c
  8064  000B90  5004               	movf	(fputc@fp+1)^0,w,c
  8065  000B92  22DA               	addwfc	fsr2h,f,c
  8066  000B94  CFDE F005          	movff	postinc2,??_fputc
  8067  000B98  CFDD F006          	movff	postdec2,??_fputc+1
  8068  000B9C  C003  FFD9         	movff	fputc@fp,fsr2l
  8069  000BA0  C004  FFDA         	movff	fputc@fp+1,fsr2h
  8070  000BA4  CFDE F007          	movff	postinc2,??_fputc+2
  8071  000BA8  CFDD F008          	movff	postdec2,??_fputc+3
  8072  000BAC  5005               	movf	??_fputc^0,w,c
  8073  000BAE  2407               	addwf	(??_fputc+2)^0,w,c
  8074  000BB0  6ED9               	movwf	fsr2l,c
  8075  000BB2  5006               	movf	(??_fputc+1)^0,w,c
  8076  000BB4  2008               	addwfc	(??_fputc+3)^0,w,c
  8077  000BB6  6EDA               	movwf	fsr2h,c
  8078  000BB8  C001  FFDF         	movff	fputc@c,indf2
  8079  000BBC  EE20 F002          	lfsr	2,2
  8080  000BC0  5003               	movf	fputc@fp^0,w,c
  8081  000BC2  26D9               	addwf	fsr2l,f,c
  8082  000BC4  5004               	movf	(fputc@fp+1)^0,w,c
  8083  000BC6  22DA               	addwfc	fsr2h,f,c
  8084  000BC8  2ADE               	incf	postinc2,f,c
  8085  000BCA  0E00               	movlw	0
  8086  000BCC  22DD               	addwfc	postdec2,f,c
  8087  000BCE                     l1279:
  8088  000BCE  FFFF               	dw	65535	; assembler added errata NOP
  8089  000BD0  0012               	return		;funcret
  8090  000BD2  FFFF               	dw	65535	; errata NOP
  8091  000BD4                     __end_of_fputc:
  8092                           	callstack 0
  8093                           
  8094 ;; *************** function _putch *****************
  8095 ;; Defined at:
  8096 ;;		line 7 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/putch.c"
  8097 ;; Parameters:    Size  Location     Type
  8098 ;;  c               1    wreg     unsigned char 
  8099 ;; Auto vars:     Size  Location     Type
  8100 ;;  c               1    0[COMRAM] unsigned char 
  8101 ;; Return value:  Size  Location     Type
  8102 ;;                  1    wreg      void 
  8103 ;; Registers used:
  8104 ;;		wreg
  8105 ;; Tracked objects:
  8106 ;;		On entry : 0/0
  8107 ;;		On exit  : 0/0
  8108 ;;		Unchanged: 0/0
  8109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8110 ;;      Params:         0       0       0       0       0       0       0
  8111 ;;      Locals:         0       0       0       0       0       0       0
  8112 ;;      Temps:          0       0       0       0       0       0       0
  8113 ;;      Totals:         0       0       0       0       0       0       0
  8114 ;;Total ram usage:        0 bytes
  8115 ;; Hardware stack levels used: 1
  8116 ;; This function calls:
  8117 ;;		Nothing
  8118 ;; This function is called by:
  8119 ;;		_fputc
  8120 ;; This function uses a non-reentrant model
  8121 ;;
  8122                           
  8123                           	psect	text14
  8124  0005CA                     __ptext14:
  8125                           	callstack 0
  8126  0005CA                     _putch:
  8127                           	callstack 0
  8128  0005CA  FFFF               	dw	65535	; assembler added errata NOP
  8129  0005CC  0012               	return		;funcret
  8130  0005CE  FFFF               	dw	65535	; errata NOP
  8131  0005D0                     __end_of_putch:
  8132                           	callstack 0
  8133                           
  8134 ;; *************** function _abs *****************
  8135 ;; Defined at:
  8136 ;;		line 1 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/abs.c"
  8137 ;; Parameters:    Size  Location     Type
  8138 ;;  a               2   18[COMRAM] int 
  8139 ;; Auto vars:     Size  Location     Type
  8140 ;;		None
  8141 ;; Return value:  Size  Location     Type
  8142 ;;                  2   18[COMRAM] int 
  8143 ;; Registers used:
  8144 ;;		wreg, status,2, status,0
  8145 ;; Tracked objects:
  8146 ;;		On entry : 0/0
  8147 ;;		On exit  : 0/0
  8148 ;;		Unchanged: 0/0
  8149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8150 ;;      Params:         2       0       0       0       0       0       0
  8151 ;;      Locals:         0       0       0       0       0       0       0
  8152 ;;      Temps:          2       0       0       0       0       0       0
  8153 ;;      Totals:         4       0       0       0       0       0       0
  8154 ;;Total ram usage:        4 bytes
  8155 ;; Hardware stack levels used: 1
  8156 ;; This function calls:
  8157 ;;		Nothing
  8158 ;; This function is called by:
  8159 ;;		_dtoa
  8160 ;; This function uses a non-reentrant model
  8161 ;;
  8162                           
  8163                           	psect	text15
  8164  000736                     __ptext15:
  8165                           	callstack 0
  8166  000736                     _abs:
  8167                           	callstack 0
  8168  000736  FFFF               	dw	65535	; assembler added errata NOP
  8169  000738  BE14               	btfsc	(abs@a+1)^0,7,c
  8170  00073A  EFAA  F003         	goto	u2490
  8171  00073E  5014               	movf	(abs@a+1)^0,w,c
  8172  000740  E106               	bnz	u2491
  8173  000742  0413               	decf	abs@a^0,w,c
  8174  000744  B0D8               	btfsc	status,0,c
  8175  000746  EFA7  F003         	goto	u2491
  8176  00074A  EFAA  F003         	goto	u2490
  8177  00074E                     u2491:
  8178  00074E  FFFF               	dw	65535	; assembler added errata NOP
  8179  000750  EFB9  F003         	goto	l1264
  8180  000754                     u2490:
  8181  000754  FFFF               	dw	65535	; assembler added errata NOP
  8182  000756  C013  F015         	movff	abs@a,??_abs
  8183  00075A  C014  F016         	movff	abs@a+1,??_abs+1
  8184  00075E  1E15               	comf	??_abs^0,f,c
  8185  000760  1E16               	comf	(??_abs+1)^0,f,c
  8186  000762  4A15               	infsnz	??_abs^0,f,c
  8187  000764  2A16               	incf	(??_abs+1)^0,f,c
  8188  000766  C015  F013         	movff	??_abs,?_abs
  8189  00076A  C016  F014         	movff	??_abs+1,?_abs+1
  8190  00076E  EFBE  F003         	goto	l1267
  8191  000772                     l1264:
  8192  000772  FFFF               	dw	65535	; assembler added errata NOP
  8193  000774  C013  F013         	movff	abs@a,?_abs
  8194  000778  C014  F014         	movff	abs@a+1,?_abs+1
  8195  00077C                     l1267:
  8196  00077C  FFFF               	dw	65535	; assembler added errata NOP
  8197  00077E  0012               	return		;funcret
  8198  000780  FFFF               	dw	65535	; errata NOP
  8199  000782                     __end_of_abs:
  8200                           	callstack 0
  8201                           
  8202 ;; *************** function ___aomod *****************
  8203 ;; Defined at:
  8204 ;;		line 9 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/aomod.c"
  8205 ;; Parameters:    Size  Location     Type
  8206 ;;  dividend        8    0[COMRAM] long long 
  8207 ;;  divisor         8    8[COMRAM] long long 
  8208 ;; Auto vars:     Size  Location     Type
  8209 ;;  sign            1   17[COMRAM] unsigned char 
  8210 ;;  counter         1   16[COMRAM] unsigned char 
  8211 ;; Return value:  Size  Location     Type
  8212 ;;                  8    0[COMRAM] long long 
  8213 ;; Registers used:
  8214 ;;		wreg, status,2, status,0
  8215 ;; Tracked objects:
  8216 ;;		On entry : 0/0
  8217 ;;		On exit  : 0/0
  8218 ;;		Unchanged: 0/0
  8219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8220 ;;      Params:        16       0       0       0       0       0       0
  8221 ;;      Locals:         2       0       0       0       0       0       0
  8222 ;;      Temps:          0       0       0       0       0       0       0
  8223 ;;      Totals:        18       0       0       0       0       0       0
  8224 ;;Total ram usage:       18 bytes
  8225 ;; Hardware stack levels used: 1
  8226 ;; This function calls:
  8227 ;;		Nothing
  8228 ;; This function is called by:
  8229 ;;		_dtoa
  8230 ;; This function uses a non-reentrant model
  8231 ;;
  8232                           
  8233                           	psect	text16
  8234  000F0E                     __ptext16:
  8235                           	callstack 0
  8236  000F0E                     ___aomod:
  8237                           	callstack 0
  8238  000F0E  FFFF               	dw	65535	; assembler added errata NOP
  8239  000F10  0E00               	movlw	0
  8240  000F12  6E12               	movwf	___aomod@sign^0,c
  8241  000F14  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
  8242  000F16  EF92  F007         	goto	u2390
  8243  000F1A  EF8F  F007         	goto	u2391
  8244  000F1E                     u2391:
  8245  000F1E  FFFF               	dw	65535	; assembler added errata NOP
  8246  000F20  EFA5  F007         	goto	l3302
  8247  000F24                     u2390:
  8248  000F24  FFFF               	dw	65535	; assembler added errata NOP
  8249  000F26  1E08               	comf	(___aomod@dividend+7)^0,f,c
  8250  000F28  1E07               	comf	(___aomod@dividend+6)^0,f,c
  8251  000F2A  1E06               	comf	(___aomod@dividend+5)^0,f,c
  8252  000F2C  1E05               	comf	(___aomod@dividend+4)^0,f,c
  8253  000F2E  1E04               	comf	(___aomod@dividend+3)^0,f,c
  8254  000F30  1E03               	comf	(___aomod@dividend+2)^0,f,c
  8255  000F32  1E02               	comf	(___aomod@dividend+1)^0,f,c
  8256  000F34  6C01               	negf	___aomod@dividend^0,c
  8257  000F36  0E00               	movlw	0
  8258  000F38  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  8259  000F3A  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  8260  000F3C  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  8261  000F3E  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  8262  000F40  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  8263  000F42  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  8264  000F44  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  8265  000F46  0E01               	movlw	1
  8266  000F48  6E12               	movwf	___aomod@sign^0,c
  8267  000F4A                     l3302:
  8268  000F4A  FFFF               	dw	65535	; assembler added errata NOP
  8269  000F4C  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
  8270  000F4E  EFAE  F007         	goto	u2400
  8271  000F52  EFAB  F007         	goto	u2401
  8272  000F56                     u2401:
  8273  000F56  FFFF               	dw	65535	; assembler added errata NOP
  8274  000F58  EFBF  F007         	goto	l3306
  8275  000F5C                     u2400:
  8276  000F5C  FFFF               	dw	65535	; assembler added errata NOP
  8277  000F5E  1E10               	comf	(___aomod@divisor+7)^0,f,c
  8278  000F60  1E0F               	comf	(___aomod@divisor+6)^0,f,c
  8279  000F62  1E0E               	comf	(___aomod@divisor+5)^0,f,c
  8280  000F64  1E0D               	comf	(___aomod@divisor+4)^0,f,c
  8281  000F66  1E0C               	comf	(___aomod@divisor+3)^0,f,c
  8282  000F68  1E0B               	comf	(___aomod@divisor+2)^0,f,c
  8283  000F6A  1E0A               	comf	(___aomod@divisor+1)^0,f,c
  8284  000F6C  6C09               	negf	___aomod@divisor^0,c
  8285  000F6E  0E00               	movlw	0
  8286  000F70  220A               	addwfc	(___aomod@divisor+1)^0,f,c
  8287  000F72  220B               	addwfc	(___aomod@divisor+2)^0,f,c
  8288  000F74  220C               	addwfc	(___aomod@divisor+3)^0,f,c
  8289  000F76  220D               	addwfc	(___aomod@divisor+4)^0,f,c
  8290  000F78  220E               	addwfc	(___aomod@divisor+5)^0,f,c
  8291  000F7A  220F               	addwfc	(___aomod@divisor+6)^0,f,c
  8292  000F7C  2210               	addwfc	(___aomod@divisor+7)^0,f,c
  8293  000F7E                     l3306:
  8294  000F7E  FFFF               	dw	65535	; assembler added errata NOP
  8295  000F80  5009               	movf	___aomod@divisor^0,w,c
  8296  000F82  100A               	iorwf	(___aomod@divisor+1)^0,w,c
  8297  000F84  100B               	iorwf	(___aomod@divisor+2)^0,w,c
  8298  000F86  100C               	iorwf	(___aomod@divisor+3)^0,w,c
  8299  000F88  100D               	iorwf	(___aomod@divisor+4)^0,w,c
  8300  000F8A  100E               	iorwf	(___aomod@divisor+5)^0,w,c
  8301  000F8C  100F               	iorwf	(___aomod@divisor+6)^0,w,c
  8302  000F8E  1010               	iorwf	(___aomod@divisor+7)^0,w,c
  8303  000F90  B4D8               	btfsc	status,2,c
  8304  000F92  EFCD  F007         	goto	u2411
  8305  000F96  EFD0  F007         	goto	u2410
  8306  000F9A                     u2411:
  8307  000F9A  FFFF               	dw	65535	; assembler added errata NOP
  8308  000F9C  EF21  F008         	goto	l3322
  8309  000FA0                     u2410:
  8310  000FA0  FFFF               	dw	65535	; assembler added errata NOP
  8311  000FA2  0E01               	movlw	1
  8312  000FA4  6E11               	movwf	___aomod@counter^0,c
  8313  000FA6  EFE0  F007         	goto	l3312
  8314  000FAA                     l3310:
  8315  000FAA  FFFF               	dw	65535	; assembler added errata NOP
  8316  000FAC  90D8               	bcf	status,0,c
  8317  000FAE  3609               	rlcf	___aomod@divisor^0,f,c
  8318  000FB0  360A               	rlcf	(___aomod@divisor+1)^0,f,c
  8319  000FB2  360B               	rlcf	(___aomod@divisor+2)^0,f,c
  8320  000FB4  360C               	rlcf	(___aomod@divisor+3)^0,f,c
  8321  000FB6  360D               	rlcf	(___aomod@divisor+4)^0,f,c
  8322  000FB8  360E               	rlcf	(___aomod@divisor+5)^0,f,c
  8323  000FBA  360F               	rlcf	(___aomod@divisor+6)^0,f,c
  8324  000FBC  3610               	rlcf	(___aomod@divisor+7)^0,f,c
  8325  000FBE  2A11               	incf	___aomod@counter^0,f,c
  8326  000FC0                     l3312:
  8327  000FC0  FFFF               	dw	65535	; assembler added errata NOP
  8328  000FC2  AE10               	btfss	(___aomod@divisor+7)^0,7,c
  8329  000FC4  EFE6  F007         	goto	u2421
  8330  000FC8  EFE9  F007         	goto	u2420
  8331  000FCC                     u2421:
  8332  000FCC  FFFF               	dw	65535	; assembler added errata NOP
  8333  000FCE  EFD5  F007         	goto	l3310
  8334  000FD2                     u2420:
  8335  000FD2  FFFF               	dw	65535	; assembler added errata NOP
  8336  000FD4                     l3314:
  8337  000FD4  FFFF               	dw	65535	; assembler added errata NOP
  8338  000FD6  5009               	movf	___aomod@divisor^0,w,c
  8339  000FD8  5C01               	subwf	___aomod@dividend^0,w,c
  8340  000FDA  500A               	movf	(___aomod@divisor+1)^0,w,c
  8341  000FDC  5802               	subwfb	(___aomod@dividend+1)^0,w,c
  8342  000FDE  500B               	movf	(___aomod@divisor+2)^0,w,c
  8343  000FE0  5803               	subwfb	(___aomod@dividend+2)^0,w,c
  8344  000FE2  500C               	movf	(___aomod@divisor+3)^0,w,c
  8345  000FE4  5804               	subwfb	(___aomod@dividend+3)^0,w,c
  8346  000FE6  500D               	movf	(___aomod@divisor+4)^0,w,c
  8347  000FE8  5805               	subwfb	(___aomod@dividend+4)^0,w,c
  8348  000FEA  500E               	movf	(___aomod@divisor+5)^0,w,c
  8349  000FEC  5806               	subwfb	(___aomod@dividend+5)^0,w,c
  8350  000FEE  500F               	movf	(___aomod@divisor+6)^0,w,c
  8351  000FF0  5807               	subwfb	(___aomod@dividend+6)^0,w,c
  8352  000FF2  5010               	movf	(___aomod@divisor+7)^0,w,c
  8353  000FF4  5808               	subwfb	(___aomod@dividend+7)^0,w,c
  8354  000FF6  A0D8               	btfss	status,0,c
  8355  000FF8  EF00  F008         	goto	u2431
  8356  000FFC  EF03  F008         	goto	u2430
  8357  001000                     u2431:
  8358  001000  FFFF               	dw	65535	; assembler added errata NOP
  8359  001002  EF14  F008         	goto	l3318
  8360  001006                     u2430:
  8361  001006  FFFF               	dw	65535	; assembler added errata NOP
  8362  001008  5009               	movf	___aomod@divisor^0,w,c
  8363  00100A  5E01               	subwf	___aomod@dividend^0,f,c
  8364  00100C  500A               	movf	(___aomod@divisor+1)^0,w,c
  8365  00100E  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
  8366  001010  500B               	movf	(___aomod@divisor+2)^0,w,c
  8367  001012  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
  8368  001014  500C               	movf	(___aomod@divisor+3)^0,w,c
  8369  001016  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
  8370  001018  500D               	movf	(___aomod@divisor+4)^0,w,c
  8371  00101A  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
  8372  00101C  500E               	movf	(___aomod@divisor+5)^0,w,c
  8373  00101E  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
  8374  001020  500F               	movf	(___aomod@divisor+6)^0,w,c
  8375  001022  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
  8376  001024  5010               	movf	(___aomod@divisor+7)^0,w,c
  8377  001026  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
  8378  001028                     l3318:
  8379  001028  FFFF               	dw	65535	; assembler added errata NOP
  8380  00102A  90D8               	bcf	status,0,c
  8381  00102C  3210               	rrcf	(___aomod@divisor+7)^0,f,c
  8382  00102E  320F               	rrcf	(___aomod@divisor+6)^0,f,c
  8383  001030  320E               	rrcf	(___aomod@divisor+5)^0,f,c
  8384  001032  320D               	rrcf	(___aomod@divisor+4)^0,f,c
  8385  001034  320C               	rrcf	(___aomod@divisor+3)^0,f,c
  8386  001036  320B               	rrcf	(___aomod@divisor+2)^0,f,c
  8387  001038  320A               	rrcf	(___aomod@divisor+1)^0,f,c
  8388  00103A  3209               	rrcf	___aomod@divisor^0,f,c
  8389  00103C  2E11               	decfsz	___aomod@counter^0,f,c
  8390  00103E  EFEA  F007         	goto	l3314
  8391  001042                     l3322:
  8392  001042  FFFF               	dw	65535	; assembler added errata NOP
  8393  001044  5012               	movf	___aomod@sign^0,w,c
  8394  001046  B4D8               	btfsc	status,2,c
  8395  001048  EF28  F008         	goto	u2441
  8396  00104C  EF2B  F008         	goto	u2440
  8397  001050                     u2441:
  8398  001050  FFFF               	dw	65535	; assembler added errata NOP
  8399  001052  EF3C  F008         	goto	l3326
  8400  001056                     u2440:
  8401  001056  FFFF               	dw	65535	; assembler added errata NOP
  8402  001058  1E08               	comf	(___aomod@dividend+7)^0,f,c
  8403  00105A  1E07               	comf	(___aomod@dividend+6)^0,f,c
  8404  00105C  1E06               	comf	(___aomod@dividend+5)^0,f,c
  8405  00105E  1E05               	comf	(___aomod@dividend+4)^0,f,c
  8406  001060  1E04               	comf	(___aomod@dividend+3)^0,f,c
  8407  001062  1E03               	comf	(___aomod@dividend+2)^0,f,c
  8408  001064  1E02               	comf	(___aomod@dividend+1)^0,f,c
  8409  001066  6C01               	negf	___aomod@dividend^0,c
  8410  001068  0E00               	movlw	0
  8411  00106A  2202               	addwfc	(___aomod@dividend+1)^0,f,c
  8412  00106C  2203               	addwfc	(___aomod@dividend+2)^0,f,c
  8413  00106E  2204               	addwfc	(___aomod@dividend+3)^0,f,c
  8414  001070  2205               	addwfc	(___aomod@dividend+4)^0,f,c
  8415  001072  2206               	addwfc	(___aomod@dividend+5)^0,f,c
  8416  001074  2207               	addwfc	(___aomod@dividend+6)^0,f,c
  8417  001076  2208               	addwfc	(___aomod@dividend+7)^0,f,c
  8418  001078                     l3326:
  8419  001078  FFFF               	dw	65535	; assembler added errata NOP
  8420  00107A  C001  F001         	movff	___aomod@dividend,?___aomod
  8421  00107E  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
  8422  001082  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
  8423  001086  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
  8424  00108A  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
  8425  00108E  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
  8426  001092  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
  8427  001096  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
  8428  00109A  0012               	return		;funcret
  8429  00109C  FFFF               	dw	65535	; errata NOP
  8430  00109E                     __end_of___aomod:
  8431                           	callstack 0
  8432                           
  8433 ;; *************** function ___aodiv *****************
  8434 ;; Defined at:
  8435 ;;		line 9 in file "/opt/microchip/xc8/v2.32/pic/sources/c99/common/aodiv.c"
  8436 ;; Parameters:    Size  Location     Type
  8437 ;;  dividend        8    0[COMRAM] long long 
  8438 ;;  divisor         8    8[COMRAM] long long 
  8439 ;; Auto vars:     Size  Location     Type
  8440 ;;  quotient        8   18[COMRAM] long long 
  8441 ;;  sign            1   17[COMRAM] unsigned char 
  8442 ;;  counter         1   16[COMRAM] unsigned char 
  8443 ;; Return value:  Size  Location     Type
  8444 ;;                  8    0[COMRAM] long long 
  8445 ;; Registers used:
  8446 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  8447 ;; Tracked objects:
  8448 ;;		On entry : 0/0
  8449 ;;		On exit  : 0/0
  8450 ;;		Unchanged: 0/0
  8451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8452 ;;      Params:        16       0       0       0       0       0       0
  8453 ;;      Locals:        10       0       0       0       0       0       0
  8454 ;;      Temps:          0       0       0       0       0       0       0
  8455 ;;      Totals:        26       0       0       0       0       0       0
  8456 ;;Total ram usage:       26 bytes
  8457 ;; Hardware stack levels used: 1
  8458 ;; This function calls:
  8459 ;;		Nothing
  8460 ;; This function is called by:
  8461 ;;		_dtoa
  8462 ;; This function uses a non-reentrant model
  8463 ;;
  8464                           
  8465                           	psect	text17
  8466  00109E                     __ptext17:
  8467                           	callstack 0
  8468  00109E                     ___aodiv:
  8469                           	callstack 0
  8470  00109E  FFFF               	dw	65535	; assembler added errata NOP
  8471  0010A0  0E00               	movlw	0
  8472  0010A2  6E12               	movwf	___aodiv@sign^0,c
  8473  0010A4  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
  8474  0010A6  EF5A  F008         	goto	u2320
  8475  0010AA  EF57  F008         	goto	u2321
  8476  0010AE                     u2321:
  8477  0010AE  FFFF               	dw	65535	; assembler added errata NOP
  8478  0010B0  EF6D  F008         	goto	l3258
  8479  0010B4                     u2320:
  8480  0010B4  FFFF               	dw	65535	; assembler added errata NOP
  8481  0010B6  1E10               	comf	(___aodiv@divisor+7)^0,f,c
  8482  0010B8  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
  8483  0010BA  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
  8484  0010BC  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
  8485  0010BE  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
  8486  0010C0  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
  8487  0010C2  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
  8488  0010C4  6C09               	negf	___aodiv@divisor^0,c
  8489  0010C6  0E00               	movlw	0
  8490  0010C8  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
  8491  0010CA  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
  8492  0010CC  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
  8493  0010CE  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
  8494  0010D0  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
  8495  0010D2  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
  8496  0010D4  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
  8497  0010D6  0E01               	movlw	1
  8498  0010D8  6E12               	movwf	___aodiv@sign^0,c
  8499  0010DA                     l3258:
  8500  0010DA  FFFF               	dw	65535	; assembler added errata NOP
  8501  0010DC  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
  8502  0010DE  EF76  F008         	goto	u2330
  8503  0010E2  EF73  F008         	goto	u2331
  8504  0010E6                     u2331:
  8505  0010E6  FFFF               	dw	65535	; assembler added errata NOP
  8506  0010E8  EF89  F008         	goto	l3264
  8507  0010EC                     u2330:
  8508  0010EC  FFFF               	dw	65535	; assembler added errata NOP
  8509  0010EE  1E08               	comf	(___aodiv@dividend+7)^0,f,c
  8510  0010F0  1E07               	comf	(___aodiv@dividend+6)^0,f,c
  8511  0010F2  1E06               	comf	(___aodiv@dividend+5)^0,f,c
  8512  0010F4  1E05               	comf	(___aodiv@dividend+4)^0,f,c
  8513  0010F6  1E04               	comf	(___aodiv@dividend+3)^0,f,c
  8514  0010F8  1E03               	comf	(___aodiv@dividend+2)^0,f,c
  8515  0010FA  1E02               	comf	(___aodiv@dividend+1)^0,f,c
  8516  0010FC  6C01               	negf	___aodiv@dividend^0,c
  8517  0010FE  0E00               	movlw	0
  8518  001100  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
  8519  001102  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
  8520  001104  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
  8521  001106  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
  8522  001108  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
  8523  00110A  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
  8524  00110C  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
  8525  00110E  0E01               	movlw	1
  8526  001110  1A12               	xorwf	___aodiv@sign^0,f,c
  8527  001112                     l3264:
  8528  001112  FFFF               	dw	65535	; assembler added errata NOP
  8529  001114  EE20  F013         	lfsr	2,___aodiv@quotient
  8530  001118  0E07               	movlw	7
  8531  00111A                     u2341:
  8532  00111A  6ADE               	clrf	postinc2,c
  8533  00111C  06E8               	decf	wreg,f,c
  8534  00111E  E2FD               	bc	u2341
  8535  001120  5009               	movf	___aodiv@divisor^0,w,c
  8536  001122  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
  8537  001124  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
  8538  001126  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
  8539  001128  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
  8540  00112A  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
  8541  00112C  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
  8542  00112E  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
  8543  001130  B4D8               	btfsc	status,2,c
  8544  001132  EF9D  F008         	goto	u2351
  8545  001136  EFA0  F008         	goto	u2350
  8546  00113A                     u2351:
  8547  00113A  FFFF               	dw	65535	; assembler added errata NOP
  8548  00113C  EFFB  F008         	goto	l3286
  8549  001140                     u2350:
  8550  001140  FFFF               	dw	65535	; assembler added errata NOP
  8551  001142  0E01               	movlw	1
  8552  001144  6E11               	movwf	___aodiv@counter^0,c
  8553  001146  EFB0  F008         	goto	l3272
  8554  00114A                     l3270:
  8555  00114A  FFFF               	dw	65535	; assembler added errata NOP
  8556  00114C  90D8               	bcf	status,0,c
  8557  00114E  3609               	rlcf	___aodiv@divisor^0,f,c
  8558  001150  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
  8559  001152  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
  8560  001154  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
  8561  001156  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
  8562  001158  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
  8563  00115A  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
  8564  00115C  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
  8565  00115E  2A11               	incf	___aodiv@counter^0,f,c
  8566  001160                     l3272:
  8567  001160  FFFF               	dw	65535	; assembler added errata NOP
  8568  001162  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
  8569  001164  EFB6  F008         	goto	u2361
  8570  001168  EFB9  F008         	goto	u2360
  8571  00116C                     u2361:
  8572  00116C  FFFF               	dw	65535	; assembler added errata NOP
  8573  00116E  EFA5  F008         	goto	l3270
  8574  001172                     u2360:
  8575  001172  FFFF               	dw	65535	; assembler added errata NOP
  8576  001174                     l3274:
  8577  001174  FFFF               	dw	65535	; assembler added errata NOP
  8578  001176  90D8               	bcf	status,0,c
  8579  001178  3613               	rlcf	___aodiv@quotient^0,f,c
  8580  00117A  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
  8581  00117C  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
  8582  00117E  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
  8583  001180  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
  8584  001182  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
  8585  001184  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
  8586  001186  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
  8587  001188  5009               	movf	___aodiv@divisor^0,w,c
  8588  00118A  5C01               	subwf	___aodiv@dividend^0,w,c
  8589  00118C  500A               	movf	(___aodiv@divisor+1)^0,w,c
  8590  00118E  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
  8591  001190  500B               	movf	(___aodiv@divisor+2)^0,w,c
  8592  001192  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
  8593  001194  500C               	movf	(___aodiv@divisor+3)^0,w,c
  8594  001196  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
  8595  001198  500D               	movf	(___aodiv@divisor+4)^0,w,c
  8596  00119A  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
  8597  00119C  500E               	movf	(___aodiv@divisor+5)^0,w,c
  8598  00119E  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
  8599  0011A0  500F               	movf	(___aodiv@divisor+6)^0,w,c
  8600  0011A2  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
  8601  0011A4  5010               	movf	(___aodiv@divisor+7)^0,w,c
  8602  0011A6  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
  8603  0011A8  A0D8               	btfss	status,0,c
  8604  0011AA  EFD9  F008         	goto	u2371
  8605  0011AE  EFDC  F008         	goto	u2370
  8606  0011B2                     u2371:
  8607  0011B2  FFFF               	dw	65535	; assembler added errata NOP
  8608  0011B4  EFEE  F008         	goto	l3282
  8609  0011B8                     u2370:
  8610  0011B8  FFFF               	dw	65535	; assembler added errata NOP
  8611  0011BA  5009               	movf	___aodiv@divisor^0,w,c
  8612  0011BC  5E01               	subwf	___aodiv@dividend^0,f,c
  8613  0011BE  500A               	movf	(___aodiv@divisor+1)^0,w,c
  8614  0011C0  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
  8615  0011C2  500B               	movf	(___aodiv@divisor+2)^0,w,c
  8616  0011C4  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
  8617  0011C6  500C               	movf	(___aodiv@divisor+3)^0,w,c
  8618  0011C8  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
  8619  0011CA  500D               	movf	(___aodiv@divisor+4)^0,w,c
  8620  0011CC  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
  8621  0011CE  500E               	movf	(___aodiv@divisor+5)^0,w,c
  8622  0011D0  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
  8623  0011D2  500F               	movf	(___aodiv@divisor+6)^0,w,c
  8624  0011D4  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
  8625  0011D6  5010               	movf	(___aodiv@divisor+7)^0,w,c
  8626  0011D8  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
  8627  0011DA  8013               	bsf	___aodiv@quotient^0,0,c
  8628  0011DC                     l3282:
  8629  0011DC  FFFF               	dw	65535	; assembler added errata NOP
  8630  0011DE  90D8               	bcf	status,0,c
  8631  0011E0  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
  8632  0011E2  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
  8633  0011E4  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
  8634  0011E6  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
  8635  0011E8  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
  8636  0011EA  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
  8637  0011EC  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
  8638  0011EE  3209               	rrcf	___aodiv@divisor^0,f,c
  8639  0011F0  2E11               	decfsz	___aodiv@counter^0,f,c
  8640  0011F2  EFBA  F008         	goto	l3274
  8641  0011F6                     l3286:
  8642  0011F6  FFFF               	dw	65535	; assembler added errata NOP
  8643  0011F8  5012               	movf	___aodiv@sign^0,w,c
  8644  0011FA  B4D8               	btfsc	status,2,c
  8645  0011FC  EF02  F009         	goto	u2381
  8646  001200  EF05  F009         	goto	u2380
  8647  001204                     u2381:
  8648  001204  FFFF               	dw	65535	; assembler added errata NOP
  8649  001206  EF16  F009         	goto	l3290
  8650  00120A                     u2380:
  8651  00120A  FFFF               	dw	65535	; assembler added errata NOP
  8652  00120C  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
  8653  00120E  1E19               	comf	(___aodiv@quotient+6)^0,f,c
  8654  001210  1E18               	comf	(___aodiv@quotient+5)^0,f,c
  8655  001212  1E17               	comf	(___aodiv@quotient+4)^0,f,c
  8656  001214  1E16               	comf	(___aodiv@quotient+3)^0,f,c
  8657  001216  1E15               	comf	(___aodiv@quotient+2)^0,f,c
  8658  001218  1E14               	comf	(___aodiv@quotient+1)^0,f,c
  8659  00121A  6C13               	negf	___aodiv@quotient^0,c
  8660  00121C  0E00               	movlw	0
  8661  00121E  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
  8662  001220  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
  8663  001222  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
  8664  001224  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
  8665  001226  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
  8666  001228  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
  8667  00122A  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
  8668  00122C                     l3290:
  8669  00122C  FFFF               	dw	65535	; assembler added errata NOP
  8670  00122E  C013  F001         	movff	___aodiv@quotient,?___aodiv
  8671  001232  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
  8672  001236  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
  8673  00123A  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
  8674  00123E  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
  8675  001242  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
  8676  001246  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
  8677  00124A  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
  8678  00124E  0012               	return		;funcret
  8679  001250  FFFF               	dw	65535	; errata NOP
  8680  001252                     __end_of___aodiv:
  8681                           	callstack 0
  8682                           
  8683 ;; *************** function _dataPanelUp *****************
  8684 ;; Defined at:
  8685 ;;		line 402 in file "main.c"
  8686 ;; Parameters:    Size  Location     Type
  8687 ;;		None
  8688 ;; Auto vars:     Size  Location     Type
  8689 ;;		None
  8690 ;; Return value:  Size  Location     Type
  8691 ;;                  1    wreg      void 
  8692 ;; Registers used:
  8693 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8694 ;; Tracked objects:
  8695 ;;		On entry : 0/0
  8696 ;;		On exit  : 0/0
  8697 ;;		Unchanged: 0/0
  8698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8699 ;;      Params:         0       0       0       0       0       0       0
  8700 ;;      Locals:         0       0       0       0       0       0       0
  8701 ;;      Temps:          2       0       0       0       0       0       0
  8702 ;;      Totals:         2       0       0       0       0       0       0
  8703 ;;Total ram usage:        2 bytes
  8704 ;; Hardware stack levels used: 1
  8705 ;; Hardware stack levels required when called: 6
  8706 ;; This function calls:
  8707 ;;		_LCD_Clear
  8708 ;;		_LCD_Set_Cursor
  8709 ;;		_LCD_Write_String
  8710 ;;		_noRepeat
  8711 ;;		_sort
  8712 ;;		_sort_down
  8713 ;; This function is called by:
  8714 ;;		_controlCalls
  8715 ;;		_modeControl
  8716 ;; This function uses a non-reentrant model
  8717 ;;
  8718                           
  8719                           	psect	text18
  8720  0025B4                     __ptext18:
  8721                           	callstack 0
  8722  0025B4                     _dataPanelUp:
  8723                           	callstack 0
  8724  0025B4  FFFF               	dw	65535	; assembler added errata NOP
  8725  0025B6                     
  8726                           ;main.c: 406:     _delay((unsigned long)((300)*(20000000/4000.0)));
  8727  0025B6  0E06               	movlw	6
  8728  0025B8  6E14               	movwf	(??_dataPanelUp+1)^0,c
  8729  0025BA  0EB6               	movlw	182
  8730  0025BC  6E13               	movwf	??_dataPanelUp^0,c
  8731  0025BE  0EF9               	movlw	249
  8732  0025C0                     u4767:
  8733  0025C0  FFFF               	dw	65535	; errata NOP
  8734  0025C2  2EE8               	decfsz	wreg,f,c
  8735  0025C4  D7FD               	bra	u4767
  8736  0025C6  2E13               	decfsz	??_dataPanelUp^0,f,c
  8737  0025C8  D7FB               	bra	u4767
  8738  0025CA  2E14               	decfsz	(??_dataPanelUp+1)^0,f,c
  8739  0025CC  D7F9               	bra	u4767
  8740  0025CE                     l3634:
  8741  0025CE  FFFF               	dw	65535	; assembler added errata NOP
  8742                           
  8743                           ;main.c: 408:         if (PORTAbits.RA0) {
  8744  0025D0  A080               	btfss	128,0,c	;volatile
  8745  0025D2  EFED  F012         	goto	u2891
  8746  0025D6  EFF0  F012         	goto	u2890
  8747  0025DA                     u2891:
  8748  0025DA  FFFF               	dw	65535	; assembler added errata NOP
  8749  0025DC  EF50  F013         	goto	l3662
  8750  0025E0                     u2890:
  8751  0025E0  FFFF               	dw	65535	; assembler added errata NOP
  8752  0025E2                     
  8753                           ;main.c: 410:             LCD_Clear();
  8754  0025E2  ECF4  F002         	call	_LCD_Clear	;wreg free
  8755                           
  8756                           ;main.c: 411:             LCD_Set_Cursor(1,1);
  8757  0025E6  0E01               	movlw	1
  8758  0025E8  6E06               	movwf	LCD_Set_Cursor@COL^0,c
  8759  0025EA  0E01               	movlw	1
  8760  0025EC  ECF4  F004         	call	_LCD_Set_Cursor
  8761  0025F0                     
  8762                           ;main.c: 412:             LCD_Write_String("BtnPn1 Press!");
  8763  0025F0  0ED0               	movlw	low STR_1
  8764  0025F2  6E06               	movwf	LCD_Write_String@Str^0,c
  8765  0025F4  0E7E               	movlw	high STR_1
  8766  0025F6  6E07               	movwf	(LCD_Write_String@Str+1)^0,c
  8767  0025F8  EC32  F005         	call	_LCD_Write_String	;wreg free
  8768  0025FC                     
  8769                           ;main.c: 414:                 if(modeUp_F){
  8770  0025FC  0101               	movlb	1	; () banked
  8771  0025FE  51D6               	movf	_modeUp_F& (0+255),w,b
  8772  002600  11D7               	iorwf	(_modeUp_F+1)& (0+255),w,b
  8773  002602  B4D8               	btfsc	status,2,c
  8774  002604  EF06  F013         	goto	u2901
  8775  002608  EF09  F013         	goto	u2900
  8776  00260C                     u2901:
  8777  00260C  FFFF               	dw	65535	; assembler added errata NOP
  8778  00260E  EF3D  F013         	goto	l3652
  8779  002612                     u2900:
  8780  002612  FFFF               	dw	65535	; assembler added errata NOP
  8781  002614                     
  8782                           ; BSR set to: 1
  8783                           ;main.c: 415:                     if (nowFL < 1) {
  8784  002614  BFD9               	btfsc	(_nowFL+1)& (0+255),7,b
  8785  002616  EF18  F013         	goto	u2910
  8786  00261A  51D9               	movf	(_nowFL+1)& (0+255),w,b
  8787  00261C  E106               	bnz	u2911
  8788  00261E  05D8               	decf	_nowFL& (0+255),w,b
  8789  002620  B0D8               	btfsc	status,0,c
  8790  002622  EF15  F013         	goto	u2911
  8791  002626  EF18  F013         	goto	u2910
  8792  00262A                     u2911:
  8793  00262A  FFFF               	dw	65535	; assembler added errata NOP
  8794  00262C  EF2B  F013         	goto	l3648
  8795  002630                     u2910:
  8796  002630  FFFF               	dw	65535	; assembler added errata NOP
  8797  002632                     l3644:
  8798  002632  FFFF               	dw	65535	; assembler added errata NOP
  8799                           
  8800                           ; BSR set to: 1
  8801                           ;main.c: 416:                         queueUp[tasksUp] = 1;
  8802  002634  90D8               	bcf	status,0,c
  8803  002636  347B               	rlcf	_tasksUp^0,w,c
  8804  002638  6ED9               	movwf	fsr2l,c
  8805  00263A  347C               	rlcf	(_tasksUp+1)^0,w,c
  8806  00263C  6EDA               	movwf	fsr2h,c
  8807  00263E  0E00               	movlw	low _queueUp
  8808  002640  26D9               	addwf	fsr2l,f,c
  8809  002642  0E02               	movlw	high _queueUp
  8810  002644  22DA               	addwfc	fsr2h,f,c
  8811  002646  0E01               	movlw	1
  8812  002648  6EDE               	movwf	postinc2,c
  8813  00264A  0E00               	movlw	0
  8814  00264C  6EDD               	movwf	postdec2,c
  8815  00264E                     
  8816                           ; BSR set to: 1
  8817                           ;main.c: 417:                         tasksUp++;
  8818  00264E  4A7B               	infsnz	_tasksUp^0,f,c
  8819  002650  2A7C               	incf	(_tasksUp+1)^0,f,c
  8820                           
  8821                           ;main.c: 418:                     } else {
  8822  002652  EF50  F013         	goto	l3662
  8823  002656                     l3648:
  8824  002656  FFFF               	dw	65535	; assembler added errata NOP
  8825                           
  8826                           ; BSR set to: 1
  8827                           ;main.c: 419:                         queueDown[tasksDown] = 1;
  8828  002658  90D8               	bcf	status,0,c
  8829  00265A  347D               	rlcf	_tasksDown^0,w,c
  8830  00265C  6ED9               	movwf	fsr2l,c
  8831  00265E  347E               	rlcf	(_tasksDown+1)^0,w,c
  8832  002660  6EDA               	movwf	fsr2h,c
  8833  002662  0E00               	movlw	low _queueDown
  8834  002664  26D9               	addwf	fsr2l,f,c
  8835  002666  0E03               	movlw	high _queueDown
  8836  002668  22DA               	addwfc	fsr2h,f,c
  8837  00266A  0E01               	movlw	1
  8838  00266C  6EDE               	movwf	postinc2,c
  8839  00266E  0E00               	movlw	0
  8840  002670  6EDD               	movwf	postdec2,c
  8841  002672                     
  8842                           ; BSR set to: 1
  8843                           ;main.c: 420:                         tasksDown++;
  8844  002672  4A7D               	infsnz	_tasksDown^0,f,c
  8845  002674  2A7E               	incf	(_tasksDown+1)^0,f,c
  8846  002676  EF50  F013         	goto	l3662
  8847  00267A                     l3652:
  8848  00267A  FFFF               	dw	65535	; assembler added errata NOP
  8849                           
  8850                           ; BSR set to: 1
  8851                           ;main.c: 423:                     if (nowFL > 1) {
  8852  00267C  BFD9               	btfsc	(_nowFL+1)& (0+255),7,b
  8853  00267E  EF4A  F013         	goto	u2921
  8854  002682  51D9               	movf	(_nowFL+1)& (0+255),w,b
  8855  002684  E10A               	bnz	u2920
  8856  002686  0E02               	movlw	2
  8857  002688  5DD8               	subwf	_nowFL& (0+255),w,b
  8858  00268A  A0D8               	btfss	status,0,c
  8859  00268C  EF4A  F013         	goto	u2921
  8860  002690  EF4D  F013         	goto	u2920
  8861  002694                     u2921:
  8862  002694  FFFF               	dw	65535	; assembler added errata NOP
  8863  002696  EF19  F013         	goto	l3644
  8864  00269A                     u2920:
  8865  00269A  FFFF               	dw	65535	; assembler added errata NOP
  8866  00269C  EF2B  F013         	goto	l3648
  8867  0026A0                     l3662:
  8868  0026A0  FFFF               	dw	65535	; assembler added errata NOP
  8869                           
  8870                           ;main.c: 433:         if (PORTAbits.RA1) {
  8871  0026A2  A280               	btfss	128,1,c	;volatile
  8872  0026A4  EF56  F013         	goto	u2931
  8873  0026A8  EF59  F013         	goto	u2930
  8874  0026AC                     u2931:
  8875  0026AC  FFFF               	dw	65535	; assembler added errata NOP
  8876  0026AE  EFBA  F013         	goto	l3690
  8877  0026B2                     u2930:
  8878  0026B2  FFFF               	dw	65535	; assembler added errata NOP
  8879  0026B4                     
  8880                           ;main.c: 435:             LCD_Clear();
  8881  0026B4  ECF4  F002         	call	_LCD_Clear	;wreg free
  8882                           
  8883                           ;main.c: 436:             LCD_Set_Cursor(1,1);
  8884  0026B8  0E01               	movlw	1
  8885  0026BA  6E06               	movwf	LCD_Set_Cursor@COL^0,c
  8886  0026BC  0E01               	movlw	1
  8887  0026BE  ECF4  F004         	call	_LCD_Set_Cursor
  8888  0026C2                     
  8889                           ;main.c: 437:             LCD_Write_String("BtnPn2 Press!");
  8890  0026C2  0EDE               	movlw	low STR_2
  8891  0026C4  6E06               	movwf	LCD_Write_String@Str^0,c
  8892  0026C6  0E7E               	movlw	high STR_2
  8893  0026C8  6E07               	movwf	(LCD_Write_String@Str+1)^0,c
  8894  0026CA  EC32  F005         	call	_LCD_Write_String	;wreg free
  8895  0026CE                     
  8896                           ;main.c: 439:                 if(modeUp_F){
  8897  0026CE  0101               	movlb	1	; () banked
  8898  0026D0  51D6               	movf	_modeUp_F& (0+255),w,b
  8899  0026D2  11D7               	iorwf	(_modeUp_F+1)& (0+255),w,b
  8900  0026D4  B4D8               	btfsc	status,2,c
  8901  0026D6  EF6F  F013         	goto	u2941
  8902  0026DA  EF72  F013         	goto	u2940
  8903  0026DE                     u2941:
  8904  0026DE  FFFF               	dw	65535	; assembler added errata NOP
  8905  0026E0  EFA7  F013         	goto	l3680
  8906  0026E4                     u2940:
  8907  0026E4  FFFF               	dw	65535	; assembler added errata NOP
  8908  0026E6                     
  8909                           ; BSR set to: 1
  8910                           ;main.c: 440:                     if (nowFL < 2) {
  8911  0026E6  BFD9               	btfsc	(_nowFL+1)& (0+255),7,b
  8912  0026E8  EF82  F013         	goto	u2950
  8913  0026EC  51D9               	movf	(_nowFL+1)& (0+255),w,b
  8914  0026EE  E107               	bnz	u2951
  8915  0026F0  0E02               	movlw	2
  8916  0026F2  5DD8               	subwf	_nowFL& (0+255),w,b
  8917  0026F4  B0D8               	btfsc	status,0,c
  8918  0026F6  EF7F  F013         	goto	u2951
  8919  0026FA  EF82  F013         	goto	u2950
  8920  0026FE                     u2951:
  8921  0026FE  FFFF               	dw	65535	; assembler added errata NOP
  8922  002700  EF95  F013         	goto	l3676
  8923  002704                     u2950:
  8924  002704  FFFF               	dw	65535	; assembler added errata NOP
  8925  002706                     l3672:
  8926  002706  FFFF               	dw	65535	; assembler added errata NOP
  8927                           
  8928                           ; BSR set to: 1
  8929                           ;main.c: 441:                         queueUp[tasksUp] = 2;
  8930  002708  90D8               	bcf	status,0,c
  8931  00270A  347B               	rlcf	_tasksUp^0,w,c
  8932  00270C  6ED9               	movwf	fsr2l,c
  8933  00270E  347C               	rlcf	(_tasksUp+1)^0,w,c
  8934  002710  6EDA               	movwf	fsr2h,c
  8935  002712  0E00               	movlw	low _queueUp
  8936  002714  26D9               	addwf	fsr2l,f,c
  8937  002716  0E02               	movlw	high _queueUp
  8938  002718  22DA               	addwfc	fsr2h,f,c
  8939  00271A  0E02               	movlw	2
  8940  00271C  6EDE               	movwf	postinc2,c
  8941  00271E  0E00               	movlw	0
  8942  002720  6EDD               	movwf	postdec2,c
  8943  002722                     
  8944                           ; BSR set to: 1
  8945                           ;main.c: 442:                         tasksUp++;
  8946  002722  4A7B               	infsnz	_tasksUp^0,f,c
  8947  002724  2A7C               	incf	(_tasksUp+1)^0,f,c
  8948                           
  8949                           ;main.c: 443:                     } else {
  8950  002726  EFBA  F013         	goto	l3690
  8951  00272A                     l3676:
  8952  00272A  FFFF               	dw	65535	; assembler added errata NOP
  8953                           
  8954                           ; BSR set to: 1
  8955                           ;main.c: 444:                         queueDown[tasksDown] = 2;
  8956  00272C  90D8               	bcf	status,0,c
  8957  00272E  347D               	rlcf	_tasksDown^0,w,c
  8958  002730  6ED9               	movwf	fsr2l,c
  8959  002732  347E               	rlcf	(_tasksDown+1)^0,w,c
  8960  002734  6EDA               	movwf	fsr2h,c
  8961  002736  0E00               	movlw	low _queueDown
  8962  002738  26D9               	addwf	fsr2l,f,c
  8963  00273A  0E03               	movlw	high _queueDown
  8964  00273C  22DA               	addwfc	fsr2h,f,c
  8965  00273E  0E02               	movlw	2
  8966  002740  6EDE               	movwf	postinc2,c
  8967  002742  0E00               	movlw	0
  8968  002744  6EDD               	movwf	postdec2,c
  8969  002746                     
  8970                           ; BSR set to: 1
  8971                           ;main.c: 445:                         tasksDown++;
  8972  002746  4A7D               	infsnz	_tasksDown^0,f,c
  8973  002748  2A7E               	incf	(_tasksDown+1)^0,f,c
  8974  00274A  EFBA  F013         	goto	l3690
  8975  00274E                     l3680:
  8976  00274E  FFFF               	dw	65535	; assembler added errata NOP
  8977                           
  8978                           ; BSR set to: 1
  8979                           ;main.c: 448:                     if (nowFL > 2) {
  8980  002750  BFD9               	btfsc	(_nowFL+1)& (0+255),7,b
  8981  002752  EFB4  F013         	goto	u2961
  8982  002756  51D9               	movf	(_nowFL+1)& (0+255),w,b
  8983  002758  E10A               	bnz	u2960
  8984  00275A  0E03               	movlw	3
  8985  00275C  5DD8               	subwf	_nowFL& (0+255),w,b
  8986  00275E  A0D8               	btfss	status,0,c
  8987  002760  EFB4  F013         	goto	u2961
  8988  002764  EFB7  F013         	goto	u2960
  8989  002768                     u2961:
  8990  002768  FFFF               	dw	65535	; assembler added errata NOP
  8991  00276A  EF83  F013         	goto	l3672
  8992  00276E                     u2960:
  8993  00276E  FFFF               	dw	65535	; assembler added errata NOP
  8994  002770  EF95  F013         	goto	l3676
  8995  002774                     l3690:
  8996  002774  FFFF               	dw	65535	; assembler added errata NOP
  8997                           
  8998                           ;main.c: 458:         if (PORTAbits.RA2) {
  8999  002776  A480               	btfss	128,2,c	;volatile
  9000  002778  EFC0  F013         	goto	u2971
  9001  00277C  EFC3  F013         	goto	u2970
  9002  002780                     u2971:
  9003  002780  FFFF               	dw	65535	; assembler added errata NOP
  9004  002782  EF24  F014         	goto	l3718
  9005  002786                     u2970:
  9006  002786  FFFF               	dw	65535	; assembler added errata NOP
  9007  002788                     
  9008                           ;main.c: 460:             LCD_Clear();
  9009  002788  ECF4  F002         	call	_LCD_Clear	;wreg free
  9010                           
  9011                           ;main.c: 461:             LCD_Set_Cursor(1,1);
  9012  00278C  0E01               	movlw	1
  9013  00278E  6E06               	movwf	LCD_Set_Cursor@COL^0,c
  9014  002790  0E01               	movlw	1
  9015  002792  ECF4  F004         	call	_LCD_Set_Cursor
  9016  002796                     
  9017                           ;main.c: 462:             LCD_Write_String("BtnPn3 Press!");
  9018  002796  0EEC               	movlw	low STR_3
  9019  002798  6E06               	movwf	LCD_Write_String@Str^0,c
  9020  00279A  0E7E               	movlw	high STR_3
  9021  00279C  6E07               	movwf	(LCD_Write_String@Str+1)^0,c
  9022  00279E  EC32  F005         	call	_LCD_Write_String	;wreg free
  9023  0027A2                     
  9024                           ;main.c: 464:                 if(modeUp_F){
  9025  0027A2  0101               	movlb	1	; () banked
  9026  0027A4  51D6               	movf	_modeUp_F& (0+255),w,b
  9027  0027A6  11D7               	iorwf	(_modeUp_F+1)& (0+255),w,b
  9028  0027A8  B4D8               	btfsc	status,2,c
  9029  0027AA  EFD9  F013         	goto	u2981
  9030  0027AE  EFDC  F013         	goto	u2980
  9031  0027B2                     u2981:
  9032  0027B2  FFFF               	dw	65535	; assembler added errata NOP
  9033  0027B4  EF11  F014         	goto	l3708
  9034  0027B8                     u2980:
  9035  0027B8  FFFF               	dw	65535	; assembler added errata NOP
  9036  0027BA                     
  9037                           ; BSR set to: 1
  9038                           ;main.c: 465:                     if (nowFL < 3) {
  9039  0027BA  BFD9               	btfsc	(_nowFL+1)& (0+255),7,b
  9040  0027BC  EFEC  F013         	goto	u2990
  9041  0027C0  51D9               	movf	(_nowFL+1)& (0+255),w,b
  9042  0027C2  E107               	bnz	u2991
  9043  0027C4  0E03               	movlw	3
  9044  0027C6  5DD8               	subwf	_nowFL& (0+255),w,b
  9045  0027C8  B0D8               	btfsc	status,0,c
  9046  0027CA  EFE9  F013         	goto	u2991
  9047  0027CE  EFEC  F013         	goto	u2990
  9048  0027D2                     u2991:
  9049  0027D2  FFFF               	dw	65535	; assembler added errata NOP
  9050  0027D4  EFFF  F013         	goto	l3704
  9051  0027D8                     u2990:
  9052  0027D8  FFFF               	dw	65535	; assembler added errata NOP
  9053  0027DA                     l3700:
  9054  0027DA  FFFF               	dw	65535	; assembler added errata NOP
  9055                           
  9056                           ; BSR set to: 1
  9057                           ;main.c: 466:                         queueUp[tasksUp] = 3;
  9058  0027DC  90D8               	bcf	status,0,c
  9059  0027DE  347B               	rlcf	_tasksUp^0,w,c
  9060  0027E0  6ED9               	movwf	fsr2l,c
  9061  0027E2  347C               	rlcf	(_tasksUp+1)^0,w,c
  9062  0027E4  6EDA               	movwf	fsr2h,c
  9063  0027E6  0E00               	movlw	low _queueUp
  9064  0027E8  26D9               	addwf	fsr2l,f,c
  9065  0027EA  0E02               	movlw	high _queueUp
  9066  0027EC  22DA               	addwfc	fsr2h,f,c
  9067  0027EE  0E03               	movlw	3
  9068  0027F0  6EDE               	movwf	postinc2,c
  9069  0027F2  0E00               	movlw	0
  9070  0027F4  6EDD               	movwf	postdec2,c
  9071  0027F6                     
  9072                           ; BSR set to: 1
  9073                           ;main.c: 467:                         tasksUp++;
  9074  0027F6  4A7B               	infsnz	_tasksUp^0,f,c
  9075  0027F8  2A7C               	incf	(_tasksUp+1)^0,f,c
  9076                           
  9077                           ;main.c: 468:                     } else {
  9078  0027FA  EF24  F014         	goto	l3718
  9079  0027FE                     l3704:
  9080  0027FE  FFFF               	dw	65535	; assembler added errata NOP
  9081                           
  9082                           ; BSR set to: 1
  9083                           ;main.c: 469:                         queueDown[tasksDown] = 3;
  9084  002800  90D8               	bcf	status,0,c
  9085  002802  347D               	rlcf	_tasksDown^0,w,c
  9086  002804  6ED9               	movwf	fsr2l,c
  9087  002806  347E               	rlcf	(_tasksDown+1)^0,w,c
  9088  002808  6EDA               	movwf	fsr2h,c
  9089  00280A  0E00               	movlw	low _queueDown
  9090  00280C  26D9               	addwf	fsr2l,f,c
  9091  00280E  0E03               	movlw	high _queueDown
  9092  002810  22DA               	addwfc	fsr2h,f,c
  9093  002812  0E03               	movlw	3
  9094  002814  6EDE               	movwf	postinc2,c
  9095  002816  0E00               	movlw	0
  9096  002818  6EDD               	movwf	postdec2,c
  9097  00281A                     
  9098                           ; BSR set to: 1
  9099                           ;main.c: 470:                         tasksDown++;
  9100  00281A  4A7D               	infsnz	_tasksDown^0,f,c
  9101  00281C  2A7E               	incf	(_tasksDown+1)^0,f,c
  9102  00281E  EF24  F014         	goto	l3718
  9103  002822                     l3708:
  9104  002822  FFFF               	dw	65535	; assembler added errata NOP
  9105                           
  9106                           ; BSR set to: 1
  9107                           ;main.c: 473:                     if (nowFL > 3) {
  9108  002824  BFD9               	btfsc	(_nowFL+1)& (0+255),7,b
  9109  002826  EF1E  F014         	goto	u3001
  9110  00282A  51D9               	movf	(_nowFL+1)& (0+255),w,b
  9111  00282C  E10A               	bnz	u3000
  9112  00282E  0E04               	movlw	4
  9113  002830  5DD8               	subwf	_nowFL& (0+255),w,b
  9114  002832  A0D8               	btfss	status,0,c
  9115  002834  EF1E  F014         	goto	u3001
  9116  002838  EF21  F014         	goto	u3000
  9117  00283C                     u3001:
  9118  00283C  FFFF               	dw	65535	; assembler added errata NOP
  9119  00283E  EFED  F013         	goto	l3700
  9120  002842                     u3000:
  9121  002842  FFFF               	dw	65535	; assembler added errata NOP
  9122  002844  EFFF  F013         	goto	l3704
  9123  002848                     l3718:
  9124  002848  FFFF               	dw	65535	; assembler added errata NOP
  9125                           
  9126                           ;main.c: 483:         if (PORTAbits.RA3) {
  9127  00284A  A680               	btfss	128,3,c	;volatile
  9128  00284C  EF2A  F014         	goto	u3011
  9129  002850  EF2D  F014         	goto	u3010
  9130  002854                     u3011:
  9131  002854  FFFF               	dw	65535	; assembler added errata NOP
  9132  002856  EF8E  F014         	goto	l3746
  9133  00285A                     u3010:
  9134  00285A  FFFF               	dw	65535	; assembler added errata NOP
  9135  00285C                     
  9136                           ;main.c: 484:             LCD_Clear();
  9137  00285C  ECF4  F002         	call	_LCD_Clear	;wreg free
  9138                           
  9139                           ;main.c: 485:             LCD_Set_Cursor(1,1);
  9140  002860  0E01               	movlw	1
  9141  002862  6E06               	movwf	LCD_Set_Cursor@COL^0,c
  9142  002864  0E01               	movlw	1
  9143  002866  ECF4  F004         	call	_LCD_Set_Cursor
  9144  00286A                     
  9145                           ;main.c: 486:             LCD_Write_String("BtnPn4 Press!");
  9146  00286A  0EFA               	movlw	low STR_4
  9147  00286C  6E06               	movwf	LCD_Write_String@Str^0,c
  9148  00286E  0E7E               	movlw	high STR_4
  9149  002870  6E07               	movwf	(LCD_Write_String@Str+1)^0,c
  9150  002872  EC32  F005         	call	_LCD_Write_String	;wreg free
  9151  002876                     
  9152                           ;main.c: 488:                 if(modeUp_F){
  9153  002876  0101               	movlb	1	; () banked
  9154  002878  51D6               	movf	_modeUp_F& (0+255),w,b
  9155  00287A  11D7               	iorwf	(_modeUp_F+1)& (0+255),w,b
  9156  00287C  B4D8               	btfsc	status,2,c
  9157  00287E  EF43  F014         	goto	u3021
  9158  002882  EF46  F014         	goto	u3020
  9159  002886                     u3021:
  9160  002886  FFFF               	dw	65535	; assembler added errata NOP
  9161  002888  EF7B  F014         	goto	l3736
  9162  00288C                     u3020:
  9163  00288C  FFFF               	dw	65535	; assembler added errata NOP
  9164  00288E                     
  9165                           ; BSR set to: 1
  9166                           ;main.c: 489:                     if (nowFL < 4) {
  9167  00288E  BFD9               	btfsc	(_nowFL+1)& (0+255),7,b
  9168  002890  EF56  F014         	goto	u3030
  9169  002894  51D9               	movf	(_nowFL+1)& (0+255),w,b
  9170  002896  E107               	bnz	u3031
  9171  002898  0E04               	movlw	4
  9172  00289A  5DD8               	subwf	_nowFL& (0+255),w,b
  9173  00289C  B0D8               	btfsc	status,0,c
  9174  00289E  EF53  F014         	goto	u3031
  9175  0028A2  EF56  F014         	goto	u3030
  9176  0028A6                     u3031:
  9177  0028A6  FFFF               	dw	65535	; assembler added errata NOP
  9178  0028A8  EF69  F014         	goto	l3732
  9179  0028AC                     u3030:
  9180  0028AC  FFFF               	dw	65535	; assembler added errata NOP
  9181  0028AE                     l3728:
  9182  0028AE  FFFF               	dw	65535	; assembler added errata NOP
  9183                           
  9184                           ; BSR set to: 1
  9185                           ;main.c: 490:                         queueUp[tasksUp] = 4;
  9186  0028B0  90D8               	bcf	status,0,c
  9187  0028B2  347B               	rlcf	_tasksUp^0,w,c
  9188  0028B4  6ED9               	movwf	fsr2l,c
  9189  0028B6  347C               	rlcf	(_tasksUp+1)^0,w,c
  9190  0028B8  6EDA               	movwf	fsr2h,c
  9191  0028BA  0E00               	movlw	low _queueUp
  9192  0028BC  26D9               	addwf	fsr2l,f,c
  9193  0028BE  0E02               	movlw	high _queueUp
  9194  0028C0  22DA               	addwfc	fsr2h,f,c
  9195  0028C2  0E04               	movlw	4
  9196  0028C4  6EDE               	movwf	postinc2,c
  9197  0028C6  0E00               	movlw	0
  9198  0028C8  6EDD               	movwf	postdec2,c
  9199  0028CA                     
  9200                           ; BSR set to: 1
  9201                           ;main.c: 491:                         tasksUp++;
  9202  0028CA  4A7B               	infsnz	_tasksUp^0,f,c
  9203  0028CC  2A7C               	incf	(_tasksUp+1)^0,f,c
  9204                           
  9205                           ;main.c: 492:                     } else {
  9206  0028CE  EF8E  F014         	goto	l3746
  9207  0028D2                     l3732:
  9208  0028D2  FFFF               	dw	65535	; assembler added errata NOP
  9209                           
  9210                           ; BSR set to: 1
  9211                           ;main.c: 493:                         queueDown[tasksDown] = 4;
  9212  0028D4  90D8               	bcf	status,0,c
  9213  0028D6  347D               	rlcf	_tasksDown^0,w,c
  9214  0028D8  6ED9               	movwf	fsr2l,c
  9215  0028DA  347E               	rlcf	(_tasksDown+1)^0,w,c
  9216  0028DC  6EDA               	movwf	fsr2h,c
  9217  0028DE  0E00               	movlw	low _queueDown
  9218  0028E0  26D9               	addwf	fsr2l,f,c
  9219  0028E2  0E03               	movlw	high _queueDown
  9220  0028E4  22DA               	addwfc	fsr2h,f,c
  9221  0028E6  0E04               	movlw	4
  9222  0028E8  6EDE               	movwf	postinc2,c
  9223  0028EA  0E00               	movlw	0
  9224  0028EC  6EDD               	movwf	postdec2,c
  9225  0028EE                     
  9226                           ; BSR set to: 1
  9227                           ;main.c: 494:                         tasksDown++;
  9228  0028EE  4A7D               	infsnz	_tasksDown^0,f,c
  9229  0028F0  2A7E               	incf	(_tasksDown+1)^0,f,c
  9230  0028F2  EF8E  F014         	goto	l3746
  9231  0028F6                     l3736:
  9232  0028F6  FFFF               	dw	65535	; assembler added errata NOP
  9233                           
  9234                           ; BSR set to: 1
  9235                           ;main.c: 497:                     if (nowFL > 4) {
  9236  0028F8  BFD9               	btfsc	(_nowFL+1)& (0+255),7,b
  9237  0028FA  EF88  F014         	goto	u3041
  9238  0028FE  51D9               	movf	(_nowFL+1)& (0+255),w,b
  9239  002900  E10A               	bnz	u3040
  9240  002902  0E05               	movlw	5
  9241  002904  5DD8               	subwf	_nowFL& (0+255),w,b
  9242  002906  A0D8               	btfss	status,0,c
  9243  002908  EF88  F014         	goto	u3041
  9244  00290C  EF8B  F014         	goto	u3040
  9245  002910                     u3041:
  9246  002910  FFFF               	dw	65535	; assembler added errata NOP
  9247  002912  EF57  F014         	goto	l3728
  9248  002916                     u3040:
  9249  002916  FFFF               	dw	65535	; assembler added errata NOP
  9250  002918  EF69  F014         	goto	l3732
  9251  00291C                     l3746:
  9252  00291C  FFFF               	dw	65535	; assembler added errata NOP
  9253                           
  9254                           ;main.c: 506:     } while (!PORTAbits.RA4);
  9255  00291E  A880               	btfss	128,4,c	;volatile
  9256  002920  EF94  F014         	goto	u3051
  9257  002924  EF97  F014         	goto	u3050
  9258  002928                     u3051:
  9259  002928  FFFF               	dw	65535	; assembler added errata NOP
  9260  00292A  EFE7  F012         	goto	l3634
  9261  00292E                     u3050:
  9262  00292E  FFFF               	dw	65535	; assembler added errata NOP
  9263  002930                     
  9264                           ;main.c: 509:     if(modeUp_F){
  9265  002930  0101               	movlb	1	; () banked
  9266  002932  51D6               	movf	_modeUp_F& (0+255),w,b
  9267  002934  11D7               	iorwf	(_modeUp_F+1)& (0+255),w,b
  9268  002936  B4D8               	btfsc	status,2,c
  9269  002938  EFA0  F014         	goto	u3061
  9270  00293C  EFA3  F014         	goto	u3060
  9271  002940                     u3061:
  9272  002940  FFFF               	dw	65535	; assembler added errata NOP
  9273  002942  EFBE  F014         	goto	l3752
  9274  002946                     u3060:
  9275  002946  FFFF               	dw	65535	; assembler added errata NOP
  9276  002948                     
  9277                           ; BSR set to: 1
  9278                           ;main.c: 510:         sort(&queueUp[0], tasksUp);
  9279  002948  0E00               	movlw	low _queueUp
  9280  00294A  6E01               	movwf	sort@p^0,c
  9281  00294C  0E02               	movlw	high _queueUp
  9282  00294E  6E02               	movwf	(sort@p+1)^0,c
  9283  002950  C07B  F003         	movff	_tasksUp,sort@sizes
  9284  002954  C07C  F004         	movff	_tasksUp+1,sort@sizes+1
  9285  002958  EC04  F00C         	call	_sort	;wreg free
  9286                           
  9287                           ;main.c: 511:         tasksUp = noRepeat(&queueUp[0], tasksUp);
  9288  00295C  0E00               	movlw	low _queueUp
  9289  00295E  6E01               	movwf	noRepeat@po^0,c
  9290  002960  0E02               	movlw	high _queueUp
  9291  002962  6E02               	movwf	(noRepeat@po+1)^0,c
  9292  002964  C07B  F003         	movff	_tasksUp,noRepeat@sixes
  9293  002968  C07C  F004         	movff	_tasksUp+1,noRepeat@sixes+1
  9294  00296C  ECDA  F006         	call	_noRepeat	;wreg free
  9295  002970  C001  F07B         	movff	?_noRepeat,_tasksUp
  9296  002974  C002  F07C         	movff	?_noRepeat+1,_tasksUp+1
  9297                           
  9298                           ;main.c: 512:     } else {
  9299  002978  EFD7  F014         	goto	l302
  9300  00297C                     l3752:
  9301  00297C  FFFF               	dw	65535	; assembler added errata NOP
  9302                           
  9303                           ; BSR set to: 1
  9304                           ;main.c: 513:         sort_down(&queueDown[0], tasksDown);
  9305  00297E  0E00               	movlw	low _queueDown
  9306  002980  6E01               	movwf	sort_down@p^0,c
  9307  002982  0E03               	movlw	high _queueDown
  9308  002984  6E02               	movwf	(sort_down@p+1)^0,c
  9309  002986  C07D  F003         	movff	_tasksDown,sort_down@sizes
  9310  00298A  C07E  F004         	movff	_tasksDown+1,sort_down@sizes+1
  9311  00298E  EC1D  F00D         	call	_sort_down	;wreg free
  9312                           
  9313                           ;main.c: 514:         tasksDown = noRepeat(&queueDown[0], tasksDown);
  9314  002992  0E00               	movlw	low _queueDown
  9315  002994  6E01               	movwf	noRepeat@po^0,c
  9316  002996  0E03               	movlw	high _queueDown
  9317  002998  6E02               	movwf	(noRepeat@po+1)^0,c
  9318  00299A  C07D  F003         	movff	_tasksDown,noRepeat@sixes
  9319  00299E  C07E  F004         	movff	_tasksDown+1,noRepeat@sixes+1
  9320  0029A2  ECDA  F006         	call	_noRepeat	;wreg free
  9321  0029A6  C001  F07D         	movff	?_noRepeat,_tasksDown
  9322  0029AA  C002  F07E         	movff	?_noRepeat+1,_tasksDown+1
  9323  0029AE                     l302:
  9324  0029AE  FFFF               	dw	65535	; assembler added errata NOP
  9325  0029B0  0012               	return		;funcret
  9326  0029B2  FFFF               	dw	65535	; errata NOP
  9327  0029B4                     __end_of_dataPanelUp:
  9328                           	callstack 0
  9329                           
  9330 ;; *************** function _sort_down *****************
  9331 ;; Defined at:
  9332 ;;		line 355 in file "main.c"
  9333 ;; Parameters:    Size  Location     Type
  9334 ;;  p               2    0[COMRAM] PTR int 
  9335 ;;		 -> queueDown(200), 
  9336 ;;  sizes           2    2[COMRAM] int 
  9337 ;; Auto vars:     Size  Location     Type
  9338 ;;  k               2  206[BANK1 ] int 
  9339 ;;  h               2  212[BANK1 ] int 
  9340 ;;  j               2  208[BANK1 ] int 
  9341 ;;  result        200    0[BANK1 ] int [100]
  9342 ;;  temp            2  210[BANK1 ] int 
  9343 ;;  sizesMod        2  204[BANK1 ] int 
  9344 ;;  nums            2  202[BANK1 ] int 
  9345 ;;  pos             2  200[BANK1 ] int 
  9346 ;; Return value:  Size  Location     Type
  9347 ;;                  1    wreg      void 
  9348 ;; Registers used:
  9349 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9350 ;; Tracked objects:
  9351 ;;		On entry : 0/0
  9352 ;;		On exit  : 0/0
  9353 ;;		Unchanged: 0/0
  9354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9355 ;;      Params:         4       0       0       0       0       0       0
  9356 ;;      Locals:         0       0     214       0       0       0       0
  9357 ;;      Temps:          5       0       0       0       0       0       0
  9358 ;;      Totals:         9       0     214       0       0       0       0
  9359 ;;Total ram usage:      223 bytes
  9360 ;; Hardware stack levels used: 1
  9361 ;; This function calls:
  9362 ;;		Nothing
  9363 ;; This function is called by:
  9364 ;;		_dataPanelUp
  9365 ;;		_rutine_up
  9366 ;; This function uses a non-reentrant model
  9367 ;;
  9368                           
  9369                           	psect	text19
  9370  001A3A                     __ptext19:
  9371                           	callstack 0
  9372  001A3A                     _sort_down:
  9373                           	callstack 0
  9374  001A3A  FFFF               	dw	65535	; assembler added errata NOP
  9375  001A3C                     
  9376                           ;main.c: 356:     int temp, nums = 0, pos = 0, sizesMod = sizes;
  9377  001A3C  0E00               	movlw	0
  9378  001A3E  0101               	movlb	1	; () banked
  9379  001A40  6FCB               	movwf	(sort_down@nums+1)& (0+255),b
  9380  001A42  0E00               	movlw	0
  9381  001A44  6FCA               	movwf	sort_down@nums& (0+255),b
  9382  001A46  0E00               	movlw	0
  9383  001A48  6FC9               	movwf	(sort_down@pos+1)& (0+255),b
  9384  001A4A  0E00               	movlw	0
  9385  001A4C  6FC8               	movwf	sort_down@pos& (0+255),b
  9386  001A4E                     
  9387                           ; BSR set to: 1
  9388  001A4E  C003  F1CC         	movff	sort_down@sizes,sort_down@sizesMod
  9389  001A52  C004  F1CD         	movff	sort_down@sizes+1,sort_down@sizesMod+1
  9390  001A56                     l3584:
  9391  001A56  FFFF               	dw	65535	; assembler added errata NOP
  9392                           
  9393                           ; BSR set to: 1
  9394                           ;main.c: 363:         temp = *(p + 0);
  9395  001A58  C001  FFD9         	movff	sort_down@p,fsr2l
  9396  001A5C  C002  FFDA         	movff	sort_down@p+1,fsr2h
  9397  001A60  CFDE F1D2          	movff	postinc2,sort_down@temp
  9398  001A64  CFDD F1D3          	movff	postdec2,sort_down@temp+1
  9399  001A68                     
  9400                           ; BSR set to: 1
  9401                           ;main.c: 365:         for (int h = 0; h < sizesMod; h++) {
  9402  001A68  0E00               	movlw	0
  9403  001A6A  6FD5               	movwf	(sort_down@h+1)& (0+255),b
  9404  001A6C  0E00               	movlw	0
  9405  001A6E  6FD4               	movwf	sort_down@h& (0+255),b
  9406  001A70  EF85  F00D         	goto	l3600
  9407  001A74                     l3588:
  9408  001A74  FFFF               	dw	65535	; assembler added errata NOP
  9409                           
  9410                           ; BSR set to: 1
  9411                           ;main.c: 367:             if (*(p + h) == temp) {
  9412  001A76  90D8               	bcf	status,0,c
  9413  001A78  35D4               	rlcf	sort_down@h& (0+255),w,b
  9414  001A7A  6ED9               	movwf	fsr2l,c
  9415  001A7C  35D5               	rlcf	(sort_down@h+1)& (0+255),w,b
  9416  001A7E  6EDA               	movwf	fsr2h,c
  9417  001A80  5001               	movf	sort_down@p^0,w,c
  9418  001A82  26D9               	addwf	fsr2l,f,c
  9419  001A84  5002               	movf	(sort_down@p+1)^0,w,c
  9420  001A86  22DA               	addwfc	fsr2h,f,c
  9421  001A88  51D2               	movf	sort_down@temp& (0+255),w,b
  9422  001A8A  18DE               	xorwf	postinc2,w,c
  9423  001A8C  E107               	bnz	u2821
  9424  001A8E  51D3               	movf	(sort_down@temp+1)& (0+255),w,b
  9425  001A90  18DE               	xorwf	postinc2,w,c
  9426  001A92  A4D8               	btfss	status,2,c
  9427  001A94  EF4E  F00D         	goto	u2821
  9428  001A98  EF51  F00D         	goto	u2820
  9429  001A9C                     u2821:
  9430  001A9C  FFFF               	dw	65535	; assembler added errata NOP
  9431  001A9E  EF56  F00D         	goto	l3592
  9432  001AA2                     u2820:
  9433  001AA2  FFFF               	dw	65535	; assembler added errata NOP
  9434  001AA4                     
  9435                           ; BSR set to: 1
  9436                           ;main.c: 369:                 pos = h;
  9437  001AA4  C1D4  F1C8         	movff	sort_down@h,sort_down@pos
  9438  001AA8  C1D5  F1C9         	movff	sort_down@h+1,sort_down@pos+1
  9439  001AAC                     l3592:
  9440  001AAC  FFFF               	dw	65535	; assembler added errata NOP
  9441                           
  9442                           ; BSR set to: 1
  9443                           ;main.c: 371:             if (*(p + h) > temp) {
  9444  001AAE  90D8               	bcf	status,0,c
  9445  001AB0  35D4               	rlcf	sort_down@h& (0+255),w,b
  9446  001AB2  6ED9               	movwf	fsr2l,c
  9447  001AB4  35D5               	rlcf	(sort_down@h+1)& (0+255),w,b
  9448  001AB6  6EDA               	movwf	fsr2h,c
  9449  001AB8  5001               	movf	sort_down@p^0,w,c
  9450  001ABA  26D9               	addwf	fsr2l,f,c
  9451  001ABC  5002               	movf	(sort_down@p+1)^0,w,c
  9452  001ABE  22DA               	addwfc	fsr2h,f,c
  9453  001AC0  50DE               	movf	postinc2,w,c
  9454  001AC2  5DD2               	subwf	sort_down@temp& (0+255),w,b
  9455  001AC4  51D3               	movf	(sort_down@temp+1)& (0+255),w,b
  9456  001AC6  0A80               	xorlw	128
  9457  001AC8  6E07               	movwf	(??_sort_down+2)^0,c
  9458  001ACA  50DE               	movf	postinc2,w,c
  9459  001ACC  0A80               	xorlw	128
  9460  001ACE  5807               	subwfb	(??_sort_down+2)^0,w,c
  9461  001AD0  B0D8               	btfsc	status,0,c
  9462  001AD2  EF6D  F00D         	goto	u2831
  9463  001AD6  EF70  F00D         	goto	u2830
  9464  001ADA                     u2831:
  9465  001ADA  FFFF               	dw	65535	; assembler added errata NOP
  9466  001ADC  EF82  F00D         	goto	l3598
  9467  001AE0                     u2830:
  9468  001AE0  FFFF               	dw	65535	; assembler added errata NOP
  9469  001AE2                     
  9470                           ; BSR set to: 1
  9471                           ;main.c: 374:                 temp = *(p + h);
  9472  001AE2  90D8               	bcf	status,0,c
  9473  001AE4  35D4               	rlcf	sort_down@h& (0+255),w,b
  9474  001AE6  6ED9               	movwf	fsr2l,c
  9475  001AE8  35D5               	rlcf	(sort_down@h+1)& (0+255),w,b
  9476  001AEA  6EDA               	movwf	fsr2h,c
  9477  001AEC  5001               	movf	sort_down@p^0,w,c
  9478  001AEE  26D9               	addwf	fsr2l,f,c
  9479  001AF0  5002               	movf	(sort_down@p+1)^0,w,c
  9480  001AF2  22DA               	addwfc	fsr2h,f,c
  9481  001AF4  CFDE F1D2          	movff	postinc2,sort_down@temp
  9482  001AF8  CFDD F1D3          	movff	postdec2,sort_down@temp+1
  9483  001AFC                     
  9484                           ; BSR set to: 1
  9485                           ;main.c: 375:                 pos = h;
  9486  001AFC  C1D4  F1C8         	movff	sort_down@h,sort_down@pos
  9487  001B00  C1D5  F1C9         	movff	sort_down@h+1,sort_down@pos+1
  9488  001B04                     l3598:
  9489  001B04  FFFF               	dw	65535	; assembler added errata NOP
  9490                           
  9491                           ; BSR set to: 1
  9492                           ;main.c: 384:         }
  9493  001B06  4BD4               	infsnz	sort_down@h& (0+255),f,b
  9494  001B08  2BD5               	incf	(sort_down@h+1)& (0+255),f,b
  9495  001B0A                     l3600:
  9496  001B0A  FFFF               	dw	65535	; assembler added errata NOP
  9497                           
  9498                           ; BSR set to: 1
  9499  001B0C  51CC               	movf	sort_down@sizesMod& (0+255),w,b
  9500  001B0E  5DD4               	subwf	sort_down@h& (0+255),w,b
  9501  001B10  51D5               	movf	(sort_down@h+1)& (0+255),w,b
  9502  001B12  0A80               	xorlw	128
  9503  001B14  6E05               	movwf	??_sort_down^0,c
  9504  001B16  51CD               	movf	(sort_down@sizesMod+1)& (0+255),w,b
  9505  001B18  0A80               	xorlw	128
  9506  001B1A  5805               	subwfb	??_sort_down^0,w,c
  9507  001B1C  A0D8               	btfss	status,0,c
  9508  001B1E  EF93  F00D         	goto	u2841
  9509  001B22  EF96  F00D         	goto	u2840
  9510  001B26                     u2841:
  9511  001B26  FFFF               	dw	65535	; assembler added errata NOP
  9512  001B28  EF3A  F00D         	goto	l3588
  9513  001B2C                     u2840:
  9514  001B2C  FFFF               	dw	65535	; assembler added errata NOP
  9515  001B2E                     
  9516                           ; BSR set to: 1
  9517                           ;main.c: 387:         for (int k = pos; k < sizesMod; k++) {
  9518  001B2E  C1C8  F1CE         	movff	sort_down@pos,sort_down@k
  9519  001B32  C1C9  F1CF         	movff	sort_down@pos+1,sort_down@k+1
  9520  001B36  EFC2  F00D         	goto	l3606
  9521  001B3A                     l3602:
  9522  001B3A  FFFF               	dw	65535	; assembler added errata NOP
  9523                           
  9524                           ; BSR set to: 1
  9525                           ;main.c: 388:             *(p + k) = *(p + (k + 1));
  9526  001B3C  C1CE  F005         	movff	sort_down@k,??_sort_down
  9527  001B40  C1CF  F006         	movff	sort_down@k+1,??_sort_down+1
  9528  001B44  90D8               	bcf	status,0,c
  9529  001B46  3605               	rlcf	??_sort_down^0,f,c
  9530  001B48  3606               	rlcf	(??_sort_down+1)^0,f,c
  9531  001B4A  C001  F007         	movff	sort_down@p,??_sort_down+2
  9532  001B4E  C002  F008         	movff	sort_down@p+1,??_sort_down+3
  9533  001B52  5005               	movf	??_sort_down^0,w,c
  9534  001B54  2607               	addwf	(??_sort_down+2)^0,f,c
  9535  001B56  5006               	movf	(??_sort_down+1)^0,w,c
  9536  001B58  2208               	addwfc	(??_sort_down+3)^0,f,c
  9537  001B5A  0E02               	movlw	2
  9538  001B5C  2407               	addwf	(??_sort_down+2)^0,w,c
  9539  001B5E  6ED9               	movwf	fsr2l,c
  9540  001B60  0E00               	movlw	0
  9541  001B62  2008               	addwfc	(??_sort_down+3)^0,w,c
  9542  001B64  6EDA               	movwf	fsr2h,c
  9543  001B66  90D8               	bcf	status,0,c
  9544  001B68  35CE               	rlcf	sort_down@k& (0+255),w,b
  9545  001B6A  6EE1               	movwf	fsr1l,c
  9546  001B6C  35CF               	rlcf	(sort_down@k+1)& (0+255),w,b
  9547  001B6E  6EE2               	movwf	fsr1h,c
  9548  001B70  5001               	movf	sort_down@p^0,w,c
  9549  001B72  26E1               	addwf	fsr1l,f,c
  9550  001B74  5002               	movf	(sort_down@p+1)^0,w,c
  9551  001B76  22E2               	addwfc	fsr1h,f,c
  9552  001B78  CFDE FFE6          	movff	postinc2,postinc1
  9553  001B7C  CFDD FFE5          	movff	postdec2,postdec1
  9554  001B80                     
  9555                           ; BSR set to: 1
  9556                           ;main.c: 389:         }
  9557  001B80  4BCE               	infsnz	sort_down@k& (0+255),f,b
  9558  001B82  2BCF               	incf	(sort_down@k+1)& (0+255),f,b
  9559  001B84                     l3606:
  9560  001B84  FFFF               	dw	65535	; assembler added errata NOP
  9561                           
  9562                           ; BSR set to: 1
  9563  001B86  51CC               	movf	sort_down@sizesMod& (0+255),w,b
  9564  001B88  5DCE               	subwf	sort_down@k& (0+255),w,b
  9565  001B8A  51CF               	movf	(sort_down@k+1)& (0+255),w,b
  9566  001B8C  0A80               	xorlw	128
  9567  001B8E  6E05               	movwf	??_sort_down^0,c
  9568  001B90  51CD               	movf	(sort_down@sizesMod+1)& (0+255),w,b
  9569  001B92  0A80               	xorlw	128
  9570  001B94  5805               	subwfb	??_sort_down^0,w,c
  9571  001B96  A0D8               	btfss	status,0,c
  9572  001B98  EFD0  F00D         	goto	u2851
  9573  001B9C  EFD3  F00D         	goto	u2850
  9574  001BA0                     u2851:
  9575  001BA0  FFFF               	dw	65535	; assembler added errata NOP
  9576  001BA2  EF9D  F00D         	goto	l3602
  9577  001BA6                     u2850:
  9578  001BA6  FFFF               	dw	65535	; assembler added errata NOP
  9579  001BA8                     
  9580                           ; BSR set to: 1
  9581                           ;main.c: 390:         result[nums] = temp;
  9582  001BA8  90D8               	bcf	status,0,c
  9583  001BAA  35CA               	rlcf	sort_down@nums& (0+255),w,b
  9584  001BAC  6ED9               	movwf	fsr2l,c
  9585  001BAE  35CB               	rlcf	(sort_down@nums+1)& (0+255),w,b
  9586  001BB0  6EDA               	movwf	fsr2h,c
  9587  001BB2  0E00               	movlw	low sort_down@result
  9588  001BB4  26D9               	addwf	fsr2l,f,c
  9589  001BB6  0E01               	movlw	high sort_down@result
  9590  001BB8  22DA               	addwfc	fsr2h,f,c
  9591  001BBA  C1D2  FFDE         	movff	sort_down@temp,postinc2
  9592  001BBE  C1D3  FFDD         	movff	sort_down@temp+1,postdec2
  9593  001BC2                     
  9594                           ; BSR set to: 1
  9595                           ;main.c: 391:         sizesMod--;
  9596  001BC2  07CC               	decf	sort_down@sizesMod& (0+255),f,b
  9597  001BC4  A0D8               	btfss	status,0,c
  9598  001BC6  07CD               	decf	(sort_down@sizesMod+1)& (0+255),f,b
  9599  001BC8                     
  9600                           ; BSR set to: 1
  9601                           ;main.c: 392:         nums++;
  9602  001BC8  4BCA               	infsnz	sort_down@nums& (0+255),f,b
  9603  001BCA  2BCB               	incf	(sort_down@nums+1)& (0+255),f,b
  9604  001BCC                     
  9605                           ; BSR set to: 1
  9606                           ;main.c: 393:     } while (nums <= sizes - 1);
  9607  001BCC  0EFF               	movlw	255
  9608  001BCE  6E05               	movwf	??_sort_down^0,c
  9609  001BD0  0EFF               	movlw	255
  9610  001BD2  6E06               	movwf	(??_sort_down+1)^0,c
  9611  001BD4  C003  F007         	movff	sort_down@sizes,??_sort_down+2
  9612  001BD8  C004  F008         	movff	sort_down@sizes+1,??_sort_down+3
  9613  001BDC  5005               	movf	??_sort_down^0,w,c
  9614  001BDE  2607               	addwf	(??_sort_down+2)^0,f,c
  9615  001BE0  5006               	movf	(??_sort_down+1)^0,w,c
  9616  001BE2  2208               	addwfc	(??_sort_down+3)^0,f,c
  9617  001BE4  51CA               	movf	sort_down@nums& (0+255),w,b
  9618  001BE6  5C07               	subwf	(??_sort_down+2)^0,w,c
  9619  001BE8  5008               	movf	(??_sort_down+3)^0,w,c
  9620  001BEA  0A80               	xorlw	128
  9621  001BEC  6E09               	movwf	(??_sort_down+4)^0,c
  9622  001BEE  51CB               	movf	(sort_down@nums+1)& (0+255),w,b
  9623  001BF0  0A80               	xorlw	128
  9624  001BF2  5809               	subwfb	(??_sort_down+4)^0,w,c
  9625  001BF4  B0D8               	btfsc	status,0,c
  9626  001BF6  EFFF  F00D         	goto	u2861
  9627  001BFA  EF02  F00E         	goto	u2860
  9628  001BFE                     u2861:
  9629  001BFE  FFFF               	dw	65535	; assembler added errata NOP
  9630  001C00  EF2B  F00D         	goto	l3584
  9631  001C04                     u2860:
  9632  001C04  FFFF               	dw	65535	; assembler added errata NOP
  9633  001C06                     
  9634                           ; BSR set to: 1
  9635                           ;main.c: 396:     for (int j = 0; j < sizes; j++) {
  9636  001C06  0E00               	movlw	0
  9637  001C08  6FD1               	movwf	(sort_down@j+1)& (0+255),b
  9638  001C0A  0E00               	movlw	0
  9639  001C0C  6FD0               	movwf	sort_down@j& (0+255),b
  9640  001C0E  EF22  F00E         	goto	l3622
  9641  001C12                     l3618:
  9642  001C12  FFFF               	dw	65535	; assembler added errata NOP
  9643                           
  9644                           ; BSR set to: 1
  9645                           ;main.c: 397:         *(p + j) = result[j];
  9646  001C14  90D8               	bcf	status,0,c
  9647  001C16  35D0               	rlcf	sort_down@j& (0+255),w,b
  9648  001C18  6ED9               	movwf	fsr2l,c
  9649  001C1A  35D1               	rlcf	(sort_down@j+1)& (0+255),w,b
  9650  001C1C  6EDA               	movwf	fsr2h,c
  9651  001C1E  0E00               	movlw	low sort_down@result
  9652  001C20  26D9               	addwf	fsr2l,f,c
  9653  001C22  0E01               	movlw	high sort_down@result
  9654  001C24  22DA               	addwfc	fsr2h,f,c
  9655  001C26  90D8               	bcf	status,0,c
  9656  001C28  35D0               	rlcf	sort_down@j& (0+255),w,b
  9657  001C2A  6EE1               	movwf	fsr1l,c
  9658  001C2C  35D1               	rlcf	(sort_down@j+1)& (0+255),w,b
  9659  001C2E  6EE2               	movwf	fsr1h,c
  9660  001C30  5001               	movf	sort_down@p^0,w,c
  9661  001C32  26E1               	addwf	fsr1l,f,c
  9662  001C34  5002               	movf	(sort_down@p+1)^0,w,c
  9663  001C36  22E2               	addwfc	fsr1h,f,c
  9664  001C38  CFDE FFE6          	movff	postinc2,postinc1
  9665  001C3C  CFDD FFE5          	movff	postdec2,postdec1
  9666  001C40                     
  9667                           ; BSR set to: 1
  9668                           ;main.c: 398:     }
  9669  001C40  4BD0               	infsnz	sort_down@j& (0+255),f,b
  9670  001C42  2BD1               	incf	(sort_down@j+1)& (0+255),f,b
  9671  001C44                     l3622:
  9672  001C44  FFFF               	dw	65535	; assembler added errata NOP
  9673                           
  9674                           ; BSR set to: 1
  9675  001C46  5003               	movf	sort_down@sizes^0,w,c
  9676  001C48  5DD0               	subwf	sort_down@j& (0+255),w,b
  9677  001C4A  51D1               	movf	(sort_down@j+1)& (0+255),w,b
  9678  001C4C  0A80               	xorlw	128
  9679  001C4E  6E05               	movwf	??_sort_down^0,c
  9680  001C50  5004               	movf	(sort_down@sizes+1)^0,w,c
  9681  001C52  0A80               	xorlw	128
  9682  001C54  5805               	subwfb	??_sort_down^0,w,c
  9683  001C56  A0D8               	btfss	status,0,c
  9684  001C58  EF30  F00E         	goto	u2871
  9685  001C5C  EF33  F00E         	goto	u2870
  9686  001C60                     u2871:
  9687  001C60  FFFF               	dw	65535	; assembler added errata NOP
  9688  001C62  EF09  F00E         	goto	l3618
  9689  001C66                     u2870:
  9690  001C66  FFFF               	dw	65535	; assembler added errata NOP
  9691  001C68                     
  9692                           ; BSR set to: 1
  9693  001C68  0012               	return		;funcret
  9694  001C6A  FFFF               	dw	65535	; errata NOP
  9695  001C6C                     __end_of_sort_down:
  9696                           	callstack 0
  9697                           
  9698 ;; *************** function _sort *****************
  9699 ;; Defined at:
  9700 ;;		line 313 in file "main.c"
  9701 ;; Parameters:    Size  Location     Type
  9702 ;;  p               2    0[COMRAM] PTR int 
  9703 ;;		 -> queueUp(200), 
  9704 ;;  sizes           2    2[COMRAM] int 
  9705 ;; Auto vars:     Size  Location     Type
  9706 ;;  k               2  206[BANK1 ] int 
  9707 ;;  h               2  212[BANK1 ] int 
  9708 ;;  j               2  208[BANK1 ] int 
  9709 ;;  result        200    0[BANK1 ] int [100]
  9710 ;;  temp            2  210[BANK1 ] int 
  9711 ;;  sizesMod        2  204[BANK1 ] int 
  9712 ;;  nums            2  202[BANK1 ] int 
  9713 ;;  pos             2  200[BANK1 ] int 
  9714 ;; Return value:  Size  Location     Type
  9715 ;;                  1    wreg      void 
  9716 ;; Registers used:
  9717 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  9718 ;; Tracked objects:
  9719 ;;		On entry : 0/0
  9720 ;;		On exit  : 0/0
  9721 ;;		Unchanged: 0/0
  9722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9723 ;;      Params:         4       0       0       0       0       0       0
  9724 ;;      Locals:         0       0     214       0       0       0       0
  9725 ;;      Temps:          5       0       0       0       0       0       0
  9726 ;;      Totals:         9       0     214       0       0       0       0
  9727 ;;Total ram usage:      223 bytes
  9728 ;; Hardware stack levels used: 1
  9729 ;; This function calls:
  9730 ;;		Nothing
  9731 ;; This function is called by:
  9732 ;;		_dataPanelUp
  9733 ;;		_rutine_down
  9734 ;;		_measureBtn
  9735 ;; This function uses a non-reentrant model
  9736 ;;
  9737                           
  9738                           	psect	text20
  9739  001808                     __ptext20:
  9740                           	callstack 0
  9741  001808                     _sort:
  9742                           	callstack 0
  9743  001808  FFFF               	dw	65535	; assembler added errata NOP
  9744  00180A                     
  9745                           ;main.c: 314:     int temp, nums = 0, pos = 0, sizesMod = sizes;
  9746  00180A  0E00               	movlw	0
  9747  00180C  0101               	movlb	1	; () banked
  9748  00180E  6FCB               	movwf	(sort@nums+1)& (0+255),b
  9749  001810  0E00               	movlw	0
  9750  001812  6FCA               	movwf	sort@nums& (0+255),b
  9751  001814  0E00               	movlw	0
  9752  001816  6FC9               	movwf	(sort@pos+1)& (0+255),b
  9753  001818  0E00               	movlw	0
  9754  00181A  6FC8               	movwf	sort@pos& (0+255),b
  9755  00181C                     
  9756                           ; BSR set to: 1
  9757  00181C  C003  F1CC         	movff	sort@sizes,sort@sizesMod
  9758  001820  C004  F1CD         	movff	sort@sizes+1,sort@sizesMod+1
  9759  001824                     l3512:
  9760  001824  FFFF               	dw	65535	; assembler added errata NOP
  9761                           
  9762                           ; BSR set to: 1
  9763                           ;main.c: 321:         temp = *(p + 0);
  9764  001826  C001  FFD9         	movff	sort@p,fsr2l
  9765  00182A  C002  FFDA         	movff	sort@p+1,fsr2h
  9766  00182E  CFDE F1D2          	movff	postinc2,sort@temp
  9767  001832  CFDD F1D3          	movff	postdec2,sort@temp+1
  9768  001836                     
  9769                           ; BSR set to: 1
  9770                           ;main.c: 323:         for (int h = 0; h < sizesMod; h++) {
  9771  001836  0E00               	movlw	0
  9772  001838  6FD5               	movwf	(sort@h+1)& (0+255),b
  9773  00183A  0E00               	movlw	0
  9774  00183C  6FD4               	movwf	sort@h& (0+255),b
  9775  00183E  EF6C  F00C         	goto	l3530
  9776  001842                     l3516:
  9777  001842  FFFF               	dw	65535	; assembler added errata NOP
  9778                           
  9779                           ; BSR set to: 1
  9780                           ;main.c: 325:             if (*(p + h) == temp) {
  9781  001844  90D8               	bcf	status,0,c
  9782  001846  35D4               	rlcf	sort@h& (0+255),w,b
  9783  001848  6ED9               	movwf	fsr2l,c
  9784  00184A  35D5               	rlcf	(sort@h+1)& (0+255),w,b
  9785  00184C  6EDA               	movwf	fsr2h,c
  9786  00184E  5001               	movf	sort@p^0,w,c
  9787  001850  26D9               	addwf	fsr2l,f,c
  9788  001852  5002               	movf	(sort@p+1)^0,w,c
  9789  001854  22DA               	addwfc	fsr2h,f,c
  9790  001856  51D2               	movf	sort@temp& (0+255),w,b
  9791  001858  18DE               	xorwf	postinc2,w,c
  9792  00185A  E107               	bnz	u2721
  9793  00185C  51D3               	movf	(sort@temp+1)& (0+255),w,b
  9794  00185E  18DE               	xorwf	postinc2,w,c
  9795  001860  A4D8               	btfss	status,2,c
  9796  001862  EF35  F00C         	goto	u2721
  9797  001866  EF38  F00C         	goto	u2720
  9798  00186A                     u2721:
  9799  00186A  FFFF               	dw	65535	; assembler added errata NOP
  9800  00186C  EF3D  F00C         	goto	l3522
  9801  001870                     u2720:
  9802  001870  FFFF               	dw	65535	; assembler added errata NOP
  9803  001872                     
  9804                           ; BSR set to: 1
  9805                           ;main.c: 327:                 pos = h;
  9806  001872  C1D4  F1C8         	movff	sort@h,sort@pos
  9807  001876  C1D5  F1C9         	movff	sort@h+1,sort@pos+1
  9808  00187A                     l3522:
  9809  00187A  FFFF               	dw	65535	; assembler added errata NOP
  9810                           
  9811                           ; BSR set to: 1
  9812                           ;main.c: 334:             if (*(p + h) < temp) {
  9813  00187C  90D8               	bcf	status,0,c
  9814  00187E  35D4               	rlcf	sort@h& (0+255),w,b
  9815  001880  6ED9               	movwf	fsr2l,c
  9816  001882  35D5               	rlcf	(sort@h+1)& (0+255),w,b
  9817  001884  6EDA               	movwf	fsr2h,c
  9818  001886  5001               	movf	sort@p^0,w,c
  9819  001888  26D9               	addwf	fsr2l,f,c
  9820  00188A  5002               	movf	(sort@p+1)^0,w,c
  9821  00188C  22DA               	addwfc	fsr2h,f,c
  9822  00188E  51D2               	movf	sort@temp& (0+255),w,b
  9823  001890  5CDE               	subwf	postinc2,w,c
  9824  001892  50DE               	movf	postinc2,w,c
  9825  001894  0A80               	xorlw	128
  9826  001896  6E07               	movwf	(??_sort+2)^0,c
  9827  001898  51D3               	movf	(sort@temp+1)& (0+255),w,b
  9828  00189A  0A80               	xorlw	128
  9829  00189C  5807               	subwfb	(??_sort+2)^0,w,c
  9830  00189E  B0D8               	btfsc	status,0,c
  9831  0018A0  EF54  F00C         	goto	u2731
  9832  0018A4  EF57  F00C         	goto	u2730
  9833  0018A8                     u2731:
  9834  0018A8  FFFF               	dw	65535	; assembler added errata NOP
  9835  0018AA  EF69  F00C         	goto	l3528
  9836  0018AE                     u2730:
  9837  0018AE  FFFF               	dw	65535	; assembler added errata NOP
  9838  0018B0                     
  9839                           ; BSR set to: 1
  9840                           ;main.c: 335:                 temp = *(p + h);
  9841  0018B0  90D8               	bcf	status,0,c
  9842  0018B2  35D4               	rlcf	sort@h& (0+255),w,b
  9843  0018B4  6ED9               	movwf	fsr2l,c
  9844  0018B6  35D5               	rlcf	(sort@h+1)& (0+255),w,b
  9845  0018B8  6EDA               	movwf	fsr2h,c
  9846  0018BA  5001               	movf	sort@p^0,w,c
  9847  0018BC  26D9               	addwf	fsr2l,f,c
  9848  0018BE  5002               	movf	(sort@p+1)^0,w,c
  9849  0018C0  22DA               	addwfc	fsr2h,f,c
  9850  0018C2  CFDE F1D2          	movff	postinc2,sort@temp
  9851  0018C6  CFDD F1D3          	movff	postdec2,sort@temp+1
  9852  0018CA                     
  9853                           ; BSR set to: 1
  9854                           ;main.c: 336:                 pos = h;
  9855  0018CA  C1D4  F1C8         	movff	sort@h,sort@pos
  9856  0018CE  C1D5  F1C9         	movff	sort@h+1,sort@pos+1
  9857  0018D2                     l3528:
  9858  0018D2  FFFF               	dw	65535	; assembler added errata NOP
  9859                           
  9860                           ; BSR set to: 1
  9861                           ;main.c: 338:         }
  9862  0018D4  4BD4               	infsnz	sort@h& (0+255),f,b
  9863  0018D6  2BD5               	incf	(sort@h+1)& (0+255),f,b
  9864  0018D8                     l3530:
  9865  0018D8  FFFF               	dw	65535	; assembler added errata NOP
  9866                           
  9867                           ; BSR set to: 1
  9868  0018DA  51CC               	movf	sort@sizesMod& (0+255),w,b
  9869  0018DC  5DD4               	subwf	sort@h& (0+255),w,b
  9870  0018DE  51D5               	movf	(sort@h+1)& (0+255),w,b
  9871  0018E0  0A80               	xorlw	128
  9872  0018E2  6E05               	movwf	??_sort^0,c
  9873  0018E4  51CD               	movf	(sort@sizesMod+1)& (0+255),w,b
  9874  0018E6  0A80               	xorlw	128
  9875  0018E8  5805               	subwfb	??_sort^0,w,c
  9876  0018EA  A0D8               	btfss	status,0,c
  9877  0018EC  EF7A  F00C         	goto	u2741
  9878  0018F0  EF7D  F00C         	goto	u2740
  9879  0018F4                     u2741:
  9880  0018F4  FFFF               	dw	65535	; assembler added errata NOP
  9881  0018F6  EF21  F00C         	goto	l3516
  9882  0018FA                     u2740:
  9883  0018FA  FFFF               	dw	65535	; assembler added errata NOP
  9884  0018FC                     
  9885                           ; BSR set to: 1
  9886                           ;main.c: 341:         for (int k = pos; k < sizesMod; k++) {
  9887  0018FC  C1C8  F1CE         	movff	sort@pos,sort@k
  9888  001900  C1C9  F1CF         	movff	sort@pos+1,sort@k+1
  9889  001904  EFA9  F00C         	goto	l3536
  9890  001908                     l3532:
  9891  001908  FFFF               	dw	65535	; assembler added errata NOP
  9892                           
  9893                           ; BSR set to: 1
  9894                           ;main.c: 342:             *(p + k) = *(p + (k + 1));
  9895  00190A  C1CE  F005         	movff	sort@k,??_sort
  9896  00190E  C1CF  F006         	movff	sort@k+1,??_sort+1
  9897  001912  90D8               	bcf	status,0,c
  9898  001914  3605               	rlcf	??_sort^0,f,c
  9899  001916  3606               	rlcf	(??_sort+1)^0,f,c
  9900  001918  C001  F007         	movff	sort@p,??_sort+2
  9901  00191C  C002  F008         	movff	sort@p+1,??_sort+3
  9902  001920  5005               	movf	??_sort^0,w,c
  9903  001922  2607               	addwf	(??_sort+2)^0,f,c
  9904  001924  5006               	movf	(??_sort+1)^0,w,c
  9905  001926  2208               	addwfc	(??_sort+3)^0,f,c
  9906  001928  0E02               	movlw	2
  9907  00192A  2407               	addwf	(??_sort+2)^0,w,c
  9908  00192C  6ED9               	movwf	fsr2l,c
  9909  00192E  0E00               	movlw	0
  9910  001930  2008               	addwfc	(??_sort+3)^0,w,c
  9911  001932  6EDA               	movwf	fsr2h,c
  9912  001934  90D8               	bcf	status,0,c
  9913  001936  35CE               	rlcf	sort@k& (0+255),w,b
  9914  001938  6EE1               	movwf	fsr1l,c
  9915  00193A  35CF               	rlcf	(sort@k+1)& (0+255),w,b
  9916  00193C  6EE2               	movwf	fsr1h,c
  9917  00193E  5001               	movf	sort@p^0,w,c
  9918  001940  26E1               	addwf	fsr1l,f,c
  9919  001942  5002               	movf	(sort@p+1)^0,w,c
  9920  001944  22E2               	addwfc	fsr1h,f,c
  9921  001946  CFDE FFE6          	movff	postinc2,postinc1
  9922  00194A  CFDD FFE5          	movff	postdec2,postdec1
  9923  00194E                     
  9924                           ; BSR set to: 1
  9925                           ;main.c: 343:         }
  9926  00194E  4BCE               	infsnz	sort@k& (0+255),f,b
  9927  001950  2BCF               	incf	(sort@k+1)& (0+255),f,b
  9928  001952                     l3536:
  9929  001952  FFFF               	dw	65535	; assembler added errata NOP
  9930                           
  9931                           ; BSR set to: 1
  9932  001954  51CC               	movf	sort@sizesMod& (0+255),w,b
  9933  001956  5DCE               	subwf	sort@k& (0+255),w,b
  9934  001958  51CF               	movf	(sort@k+1)& (0+255),w,b
  9935  00195A  0A80               	xorlw	128
  9936  00195C  6E05               	movwf	??_sort^0,c
  9937  00195E  51CD               	movf	(sort@sizesMod+1)& (0+255),w,b
  9938  001960  0A80               	xorlw	128
  9939  001962  5805               	subwfb	??_sort^0,w,c
  9940  001964  A0D8               	btfss	status,0,c
  9941  001966  EFB7  F00C         	goto	u2751
  9942  00196A  EFBA  F00C         	goto	u2750
  9943  00196E                     u2751:
  9944  00196E  FFFF               	dw	65535	; assembler added errata NOP
  9945  001970  EF84  F00C         	goto	l3532
  9946  001974                     u2750:
  9947  001974  FFFF               	dw	65535	; assembler added errata NOP
  9948  001976                     
  9949                           ; BSR set to: 1
  9950                           ;main.c: 344:         result[nums] = temp;
  9951  001976  90D8               	bcf	status,0,c
  9952  001978  35CA               	rlcf	sort@nums& (0+255),w,b
  9953  00197A  6ED9               	movwf	fsr2l,c
  9954  00197C  35CB               	rlcf	(sort@nums+1)& (0+255),w,b
  9955  00197E  6EDA               	movwf	fsr2h,c
  9956  001980  0E00               	movlw	low sort@result
  9957  001982  26D9               	addwf	fsr2l,f,c
  9958  001984  0E01               	movlw	high sort@result
  9959  001986  22DA               	addwfc	fsr2h,f,c
  9960  001988  C1D2  FFDE         	movff	sort@temp,postinc2
  9961  00198C  C1D3  FFDD         	movff	sort@temp+1,postdec2
  9962  001990                     
  9963                           ; BSR set to: 1
  9964                           ;main.c: 345:         sizesMod--;
  9965  001990  07CC               	decf	sort@sizesMod& (0+255),f,b
  9966  001992  A0D8               	btfss	status,0,c
  9967  001994  07CD               	decf	(sort@sizesMod+1)& (0+255),f,b
  9968  001996                     
  9969                           ; BSR set to: 1
  9970                           ;main.c: 346:         nums++;
  9971  001996  4BCA               	infsnz	sort@nums& (0+255),f,b
  9972  001998  2BCB               	incf	(sort@nums+1)& (0+255),f,b
  9973  00199A                     
  9974                           ; BSR set to: 1
  9975                           ;main.c: 347:     } while (nums <= sizes - 1);
  9976  00199A  0EFF               	movlw	255
  9977  00199C  6E05               	movwf	??_sort^0,c
  9978  00199E  0EFF               	movlw	255
  9979  0019A0  6E06               	movwf	(??_sort+1)^0,c
  9980  0019A2  C003  F007         	movff	sort@sizes,??_sort+2
  9981  0019A6  C004  F008         	movff	sort@sizes+1,??_sort+3
  9982  0019AA  5005               	movf	??_sort^0,w,c
  9983  0019AC  2607               	addwf	(??_sort+2)^0,f,c
  9984  0019AE  5006               	movf	(??_sort+1)^0,w,c
  9985  0019B0  2208               	addwfc	(??_sort+3)^0,f,c
  9986  0019B2  51CA               	movf	sort@nums& (0+255),w,b
  9987  0019B4  5C07               	subwf	(??_sort+2)^0,w,c
  9988  0019B6  5008               	movf	(??_sort+3)^0,w,c
  9989  0019B8  0A80               	xorlw	128
  9990  0019BA  6E09               	movwf	(??_sort+4)^0,c
  9991  0019BC  51CB               	movf	(sort@nums+1)& (0+255),w,b
  9992  0019BE  0A80               	xorlw	128
  9993  0019C0  5809               	subwfb	(??_sort+4)^0,w,c
  9994  0019C2  B0D8               	btfsc	status,0,c
  9995  0019C4  EFE6  F00C         	goto	u2761
  9996  0019C8  EFE9  F00C         	goto	u2760
  9997  0019CC                     u2761:
  9998  0019CC  FFFF               	dw	65535	; assembler added errata NOP
  9999  0019CE  EF12  F00C         	goto	l3512
 10000  0019D2                     u2760:
 10001  0019D2  FFFF               	dw	65535	; assembler added errata NOP
 10002  0019D4                     
 10003                           ; BSR set to: 1
 10004                           ;main.c: 350:     for (int j = 0; j < sizes; j++) {
 10005  0019D4  0E00               	movlw	0
 10006  0019D6  6FD1               	movwf	(sort@j+1)& (0+255),b
 10007  0019D8  0E00               	movlw	0
 10008  0019DA  6FD0               	movwf	sort@j& (0+255),b
 10009  0019DC  EF09  F00D         	goto	l3552
 10010  0019E0                     l3548:
 10011  0019E0  FFFF               	dw	65535	; assembler added errata NOP
 10012                           
 10013                           ; BSR set to: 1
 10014                           ;main.c: 351:         *(p + j) = result[j];
 10015  0019E2  90D8               	bcf	status,0,c
 10016  0019E4  35D0               	rlcf	sort@j& (0+255),w,b
 10017  0019E6  6ED9               	movwf	fsr2l,c
 10018  0019E8  35D1               	rlcf	(sort@j+1)& (0+255),w,b
 10019  0019EA  6EDA               	movwf	fsr2h,c
 10020  0019EC  0E00               	movlw	low sort@result
 10021  0019EE  26D9               	addwf	fsr2l,f,c
 10022  0019F0  0E01               	movlw	high sort@result
 10023  0019F2  22DA               	addwfc	fsr2h,f,c
 10024  0019F4  90D8               	bcf	status,0,c
 10025  0019F6  35D0               	rlcf	sort@j& (0+255),w,b
 10026  0019F8  6EE1               	movwf	fsr1l,c
 10027  0019FA  35D1               	rlcf	(sort@j+1)& (0+255),w,b
 10028  0019FC  6EE2               	movwf	fsr1h,c
 10029  0019FE  5001               	movf	sort@p^0,w,c
 10030  001A00  26E1               	addwf	fsr1l,f,c
 10031  001A02  5002               	movf	(sort@p+1)^0,w,c
 10032  001A04  22E2               	addwfc	fsr1h,f,c
 10033  001A06  CFDE FFE6          	movff	postinc2,postinc1
 10034  001A0A  CFDD FFE5          	movff	postdec2,postdec1
 10035  001A0E                     
 10036                           ; BSR set to: 1
 10037                           ;main.c: 352:     }
 10038  001A0E  4BD0               	infsnz	sort@j& (0+255),f,b
 10039  001A10  2BD1               	incf	(sort@j+1)& (0+255),f,b
 10040  001A12                     l3552:
 10041  001A12  FFFF               	dw	65535	; assembler added errata NOP
 10042                           
 10043                           ; BSR set to: 1
 10044  001A14  5003               	movf	sort@sizes^0,w,c
 10045  001A16  5DD0               	subwf	sort@j& (0+255),w,b
 10046  001A18  51D1               	movf	(sort@j+1)& (0+255),w,b
 10047  001A1A  0A80               	xorlw	128
 10048  001A1C  6E05               	movwf	??_sort^0,c
 10049  001A1E  5004               	movf	(sort@sizes+1)^0,w,c
 10050  001A20  0A80               	xorlw	128
 10051  001A22  5805               	subwfb	??_sort^0,w,c
 10052  001A24  A0D8               	btfss	status,0,c
 10053  001A26  EF17  F00D         	goto	u2771
 10054  001A2A  EF1A  F00D         	goto	u2770
 10055  001A2E                     u2771:
 10056  001A2E  FFFF               	dw	65535	; assembler added errata NOP
 10057  001A30  EFF0  F00C         	goto	l3548
 10058  001A34                     u2770:
 10059  001A34  FFFF               	dw	65535	; assembler added errata NOP
 10060  001A36                     
 10061                           ; BSR set to: 1
 10062  001A36  0012               	return		;funcret
 10063  001A38  FFFF               	dw	65535	; errata NOP
 10064  001A3A                     __end_of_sort:
 10065                           	callstack 0
 10066                           
 10067 ;; *************** function _noRepeat *****************
 10068 ;; Defined at:
 10069 ;;		line 282 in file "main.c"
 10070 ;; Parameters:    Size  Location     Type
 10071 ;;  po              2    0[COMRAM] PTR int 
 10072 ;;		 -> queueDown(200), queueUp(200), 
 10073 ;;  sixes           2    2[COMRAM] int 
 10074 ;; Auto vars:     Size  Location     Type
 10075 ;;  shift           2   10[COMRAM] int 
 10076 ;;  t               2    8[COMRAM] int 
 10077 ;;  comp            2   16[COMRAM] int 
 10078 ;;  temp            2   12[COMRAM] int 
 10079 ;;  size            2   14[COMRAM] int 
 10080 ;; Return value:  Size  Location     Type
 10081 ;;                  2    0[COMRAM] int 
 10082 ;; Registers used:
 10083 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
 10084 ;; Tracked objects:
 10085 ;;		On entry : 0/0
 10086 ;;		On exit  : 0/0
 10087 ;;		Unchanged: 0/0
 10088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10089 ;;      Params:         4       0       0       0       0       0       0
 10090 ;;      Locals:        10       0       0       0       0       0       0
 10091 ;;      Temps:          4       0       0       0       0       0       0
 10092 ;;      Totals:        18       0       0       0       0       0       0
 10093 ;;Total ram usage:       18 bytes
 10094 ;; Hardware stack levels used: 1
 10095 ;; This function calls:
 10096 ;;		Nothing
 10097 ;; This function is called by:
 10098 ;;		_dataPanelUp
 10099 ;;		_rutine_down
 10100 ;;		_rutine_up
 10101 ;;		_measureBtn
 10102 ;; This function uses a non-reentrant model
 10103 ;;
 10104                           
 10105                           	psect	text21
 10106  000DB4                     __ptext21:
 10107                           	callstack 0
 10108  000DB4                     _noRepeat:
 10109                           	callstack 0
 10110  000DB4  FFFF               	dw	65535	; assembler added errata NOP
 10111  000DB6                     
 10112                           ;main.c: 283:     int size = sixes;
 10113  000DB6  C003  F00F         	movff	noRepeat@sixes,noRepeat@size
 10114  000DBA  C004  F010         	movff	noRepeat@sixes+1,noRepeat@size+1
 10115  000DBE                     
 10116                           ;main.c: 291:     for (int temp = 0; temp < size; temp++){
 10117  000DBE  0E00               	movlw	0
 10118  000DC0  6E0E               	movwf	(noRepeat@temp+1)^0,c
 10119  000DC2  0E00               	movlw	0
 10120  000DC4  6E0D               	movwf	noRepeat@temp^0,c
 10121  000DC6  EF6F  F007         	goto	l3578
 10122  000DCA                     l3558:
 10123  000DCA  FFFF               	dw	65535	; assembler added errata NOP
 10124                           
 10125                           ;main.c: 293:         for(int comp = temp + 1; comp < size; comp++){
 10126  000DCC  0E01               	movlw	1
 10127  000DCE  240D               	addwf	noRepeat@temp^0,w,c
 10128  000DD0  6E11               	movwf	noRepeat@comp^0,c
 10129  000DD2  0E00               	movlw	0
 10130  000DD4  200E               	addwfc	(noRepeat@temp+1)^0,w,c
 10131  000DD6  6E12               	movwf	(noRepeat@comp+1)^0,c
 10132  000DD8  EF5B  F007         	goto	l3574
 10133  000DDC                     l3560:
 10134  000DDC  FFFF               	dw	65535	; assembler added errata NOP
 10135                           
 10136                           ;main.c: 295:             if (*(po + temp) == *(po + comp)){
 10137  000DDE  90D8               	bcf	status,0,c
 10138  000DE0  3411               	rlcf	noRepeat@comp^0,w,c
 10139  000DE2  6ED9               	movwf	fsr2l,c
 10140  000DE4  3412               	rlcf	(noRepeat@comp+1)^0,w,c
 10141  000DE6  6EDA               	movwf	fsr2h,c
 10142  000DE8  5001               	movf	noRepeat@po^0,w,c
 10143  000DEA  26D9               	addwf	fsr2l,f,c
 10144  000DEC  5002               	movf	(noRepeat@po+1)^0,w,c
 10145  000DEE  22DA               	addwfc	fsr2h,f,c
 10146  000DF0  90D8               	bcf	status,0,c
 10147  000DF2  340D               	rlcf	noRepeat@temp^0,w,c
 10148  000DF4  6EE1               	movwf	fsr1l,c
 10149  000DF6  340E               	rlcf	(noRepeat@temp+1)^0,w,c
 10150  000DF8  6EE2               	movwf	fsr1h,c
 10151  000DFA  5001               	movf	noRepeat@po^0,w,c
 10152  000DFC  26E1               	addwf	fsr1l,f,c
 10153  000DFE  5002               	movf	(noRepeat@po+1)^0,w,c
 10154  000E00  22E2               	addwfc	fsr1h,f,c
 10155  000E02  50DE               	movf	postinc2,w,c
 10156  000E04  18E6               	xorwf	postinc1,w,c
 10157  000E06  E107               	bnz	u2781
 10158  000E08  50DE               	movf	postinc2,w,c
 10159  000E0A  18E6               	xorwf	postinc1,w,c
 10160  000E0C  A4D8               	btfss	status,2,c
 10161  000E0E  EF0B  F007         	goto	u2781
 10162  000E12  EF0E  F007         	goto	u2780
 10163  000E16                     u2781:
 10164  000E16  FFFF               	dw	65535	; assembler added errata NOP
 10165  000E18  EF58  F007         	goto	l227
 10166  000E1C                     u2780:
 10167  000E1C  FFFF               	dw	65535	; assembler added errata NOP
 10168  000E1E                     
 10169                           ;main.c: 296:                 int t = comp;
 10170  000E1E  C011  F009         	movff	noRepeat@comp,noRepeat@t
 10171  000E22  C012  F00A         	movff	noRepeat@comp+1,noRepeat@t+1
 10172                           
 10173                           ;main.c: 298:                 for (int shift = comp; shift < size; shift++){
 10174  000E26  C011  F00B         	movff	noRepeat@comp,noRepeat@shift
 10175  000E2A  C012  F00C         	movff	noRepeat@comp+1,noRepeat@shift+1
 10176  000E2E  EF40  F007         	goto	l3570
 10177  000E32                     l3564:
 10178  000E32  FFFF               	dw	65535	; assembler added errata NOP
 10179                           
 10180                           ;main.c: 299:                     *(po + t) = *(po + (shift + 1));
 10181  000E34  C00B  F005         	movff	noRepeat@shift,??_noRepeat
 10182  000E38  C00C  F006         	movff	noRepeat@shift+1,??_noRepeat+1
 10183  000E3C  90D8               	bcf	status,0,c
 10184  000E3E  3605               	rlcf	??_noRepeat^0,f,c
 10185  000E40  3606               	rlcf	(??_noRepeat+1)^0,f,c
 10186  000E42  C001  F007         	movff	noRepeat@po,??_noRepeat+2
 10187  000E46  C002  F008         	movff	noRepeat@po+1,??_noRepeat+3
 10188  000E4A  5005               	movf	??_noRepeat^0,w,c
 10189  000E4C  2607               	addwf	(??_noRepeat+2)^0,f,c
 10190  000E4E  5006               	movf	(??_noRepeat+1)^0,w,c
 10191  000E50  2208               	addwfc	(??_noRepeat+3)^0,f,c
 10192  000E52  0E02               	movlw	2
 10193  000E54  2407               	addwf	(??_noRepeat+2)^0,w,c
 10194  000E56  6ED9               	movwf	fsr2l,c
 10195  000E58  0E00               	movlw	0
 10196  000E5A  2008               	addwfc	(??_noRepeat+3)^0,w,c
 10197  000E5C  6EDA               	movwf	fsr2h,c
 10198  000E5E  90D8               	bcf	status,0,c
 10199  000E60  3409               	rlcf	noRepeat@t^0,w,c
 10200  000E62  6EE1               	movwf	fsr1l,c
 10201  000E64  340A               	rlcf	(noRepeat@t+1)^0,w,c
 10202  000E66  6EE2               	movwf	fsr1h,c
 10203  000E68  5001               	movf	noRepeat@po^0,w,c
 10204  000E6A  26E1               	addwf	fsr1l,f,c
 10205  000E6C  5002               	movf	(noRepeat@po+1)^0,w,c
 10206  000E6E  22E2               	addwfc	fsr1h,f,c
 10207  000E70  CFDE FFE6          	movff	postinc2,postinc1
 10208  000E74  CFDD FFE5          	movff	postdec2,postdec1
 10209  000E78                     
 10210                           ;main.c: 300:                     t++;
 10211  000E78  4A09               	infsnz	noRepeat@t^0,f,c
 10212  000E7A  2A0A               	incf	(noRepeat@t+1)^0,f,c
 10213  000E7C                     
 10214                           ;main.c: 301:                 }
 10215  000E7C  4A0B               	infsnz	noRepeat@shift^0,f,c
 10216  000E7E  2A0C               	incf	(noRepeat@shift+1)^0,f,c
 10217  000E80                     l3570:
 10218  000E80  FFFF               	dw	65535	; assembler added errata NOP
 10219  000E82  500F               	movf	noRepeat@size^0,w,c
 10220  000E84  5C0B               	subwf	noRepeat@shift^0,w,c
 10221  000E86  500C               	movf	(noRepeat@shift+1)^0,w,c
 10222  000E88  0A80               	xorlw	128
 10223  000E8A  6E05               	movwf	??_noRepeat^0,c
 10224  000E8C  5010               	movf	(noRepeat@size+1)^0,w,c
 10225  000E8E  0A80               	xorlw	128
 10226  000E90  5805               	subwfb	??_noRepeat^0,w,c
 10227  000E92  A0D8               	btfss	status,0,c
 10228  000E94  EF4E  F007         	goto	u2791
 10229  000E98  EF51  F007         	goto	u2790
 10230  000E9C                     u2791:
 10231  000E9C  FFFF               	dw	65535	; assembler added errata NOP
 10232  000E9E  EF19  F007         	goto	l3564
 10233  000EA2                     u2790:
 10234  000EA2  FFFF               	dw	65535	; assembler added errata NOP
 10235  000EA4                     
 10236                           ;main.c: 302:                 size--;
 10237  000EA4  060F               	decf	noRepeat@size^0,f,c
 10238  000EA6  A0D8               	btfss	status,0,c
 10239  000EA8  0610               	decf	(noRepeat@size+1)^0,f,c
 10240                           
 10241                           ;main.c: 303:                 comp--;
 10242  000EAA  0611               	decf	noRepeat@comp^0,f,c
 10243  000EAC  A0D8               	btfss	status,0,c
 10244  000EAE  0612               	decf	(noRepeat@comp+1)^0,f,c
 10245  000EB0                     l227:
 10246  000EB0  FFFF               	dw	65535	; assembler added errata NOP
 10247                           
 10248                           ;main.c: 307:         }
 10249  000EB2  4A11               	infsnz	noRepeat@comp^0,f,c
 10250  000EB4  2A12               	incf	(noRepeat@comp+1)^0,f,c
 10251  000EB6                     l3574:
 10252  000EB6  FFFF               	dw	65535	; assembler added errata NOP
 10253  000EB8  500F               	movf	noRepeat@size^0,w,c
 10254  000EBA  5C11               	subwf	noRepeat@comp^0,w,c
 10255  000EBC  5012               	movf	(noRepeat@comp+1)^0,w,c
 10256  000EBE  0A80               	xorlw	128
 10257  000EC0  6E05               	movwf	??_noRepeat^0,c
 10258  000EC2  5010               	movf	(noRepeat@size+1)^0,w,c
 10259  000EC4  0A80               	xorlw	128
 10260  000EC6  5805               	subwfb	??_noRepeat^0,w,c
 10261  000EC8  A0D8               	btfss	status,0,c
 10262  000ECA  EF69  F007         	goto	u2801
 10263  000ECE  EF6C  F007         	goto	u2800
 10264  000ED2                     u2801:
 10265  000ED2  FFFF               	dw	65535	; assembler added errata NOP
 10266  000ED4  EFEE  F006         	goto	l3560
 10267  000ED8                     u2800:
 10268  000ED8  FFFF               	dw	65535	; assembler added errata NOP
 10269  000EDA                     
 10270                           ;main.c: 308:     }
 10271  000EDA  4A0D               	infsnz	noRepeat@temp^0,f,c
 10272  000EDC  2A0E               	incf	(noRepeat@temp+1)^0,f,c
 10273  000EDE                     l3578:
 10274  000EDE  FFFF               	dw	65535	; assembler added errata NOP
 10275  000EE0  500F               	movf	noRepeat@size^0,w,c
 10276  000EE2  5C0D               	subwf	noRepeat@temp^0,w,c
 10277  000EE4  500E               	movf	(noRepeat@temp+1)^0,w,c
 10278  000EE6  0A80               	xorlw	128
 10279  000EE8  6E05               	movwf	??_noRepeat^0,c
 10280  000EEA  5010               	movf	(noRepeat@size+1)^0,w,c
 10281  000EEC  0A80               	xorlw	128
 10282  000EEE  5805               	subwfb	??_noRepeat^0,w,c
 10283  000EF0  A0D8               	btfss	status,0,c
 10284  000EF2  EF7D  F007         	goto	u2811
 10285  000EF6  EF80  F007         	goto	u2810
 10286  000EFA                     u2811:
 10287  000EFA  FFFF               	dw	65535	; assembler added errata NOP
 10288  000EFC  EFE5  F006         	goto	l3558
 10289  000F00                     u2810:
 10290  000F00  FFFF               	dw	65535	; assembler added errata NOP
 10291  000F02                     
 10292                           ;main.c: 309:     return size;
 10293  000F02  C00F  F001         	movff	noRepeat@size,?_noRepeat
 10294  000F06  C010  F002         	movff	noRepeat@size+1,?_noRepeat+1
 10295  000F0A  0012               	return		;funcret
 10296  000F0C  FFFF               	dw	65535	; errata NOP
 10297  000F0E                     __end_of_noRepeat:
 10298                           	callstack 0
 10299                           
 10300 ;; *************** function _LCD_Write_String *****************
 10301 ;; Defined at:
 10302 ;;		line 184 in file "./I2C_LCD.c"
 10303 ;; Parameters:    Size  Location     Type
 10304 ;;  Str             2    5[COMRAM] PTR unsigned char 
 10305 ;;		 -> STR_56(14), STR_55(11), STR_54(14), STR_53(11), 
 10306 ;;		 -> STR_52(14), STR_51(11), STR_50(12), STR_49(9), 
 10307 ;;		 -> STR_48(12), STR_47(9), STR_46(12), STR_45(9), 
 10308 ;;		 -> STR_44(12), STR_43(10), STR_42(15), STR_41(15), 
 10309 ;;		 -> STR_40(15), STR_39(15), STR_38(12), STR_37(10), 
 10310 ;;		 -> STR_35(12), STR_33(10), STR_32(10), STR_31(12), 
 10311 ;;		 -> STR_30(15), STR_28(12), STR_27(14), STR_26(12), 
 10312 ;;		 -> STR_24(15), STR_22(13), STR_21(12), STR_19(15), 
 10313 ;;		 -> STR_18(12), STR_16(13), STR_15(14), STR_13(15), 
 10314 ;;		 -> STR_12(12), STR_10(13), STR_8(15), STR_7(12), 
 10315 ;;		 -> buffer(40), STR_5(13), STR_4(14), STR_3(14), 
 10316 ;;		 -> STR_2(14), STR_1(14), 
 10317 ;; Auto vars:     Size  Location     Type
 10318 ;;  i               2    9[COMRAM] int 
 10319 ;; Return value:  Size  Location     Type
 10320 ;;                  1    wreg      void 
 10321 ;; Registers used:
 10322 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10323 ;; Tracked objects:
 10324 ;;		On entry : 0/0
 10325 ;;		On exit  : 0/0
 10326 ;;		Unchanged: 0/0
 10327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10328 ;;      Params:         2       0       0       0       0       0       0
 10329 ;;      Locals:         2       0       0       0       0       0       0
 10330 ;;      Temps:          2       0       0       0       0       0       0
 10331 ;;      Totals:         6       0       0       0       0       0       0
 10332 ;;Total ram usage:        6 bytes
 10333 ;; Hardware stack levels used: 1
 10334 ;; Hardware stack levels required when called: 5
 10335 ;; This function calls:
 10336 ;;		_LCD_Write_Char
 10337 ;; This function is called by:
 10338 ;;		_dataPanelUp
 10339 ;;		_controlCalls
 10340 ;;		_rutine_down
 10341 ;;		_rutine_up
 10342 ;;		_selectionMode
 10343 ;;		_modeControl
 10344 ;;		_main
 10345 ;; This function uses a non-reentrant model
 10346 ;;
 10347                           
 10348                           	psect	text22
 10349  000A64                     __ptext22:
 10350                           	callstack 0
 10351  000A64                     _LCD_Write_String:
 10352                           	callstack 0
 10353  000A64  FFFF               	dw	65535	; assembler added errata NOP
 10354  000A66                     
 10355                           ;./I2C_LCD.c: 184: void LCD_Write_String(char* Str);./I2C_LCD.c: 185: {;./I2C_LCD.c: 186
      +                          :   for(int i=0; Str[i]!='\0'; i++)
 10356  000A66  0E00               	movlw	0
 10357  000A68  6E0B               	movwf	(LCD_Write_String@i+1)^0,c
 10358  000A6A  0E00               	movlw	0
 10359  000A6C  6E0A               	movwf	LCD_Write_String@i^0,c
 10360  000A6E  EF55  F005         	goto	l3486
 10361  000A72                     l3482:
 10362  000A72  FFFF               	dw	65535	; assembler added errata NOP
 10363                           
 10364                           ;./I2C_LCD.c: 187:     LCD_Write_Char(Str[i]);
 10365  000A74  500A               	movf	LCD_Write_String@i^0,w,c
 10366  000A76  2406               	addwf	LCD_Write_String@Str^0,w,c
 10367  000A78  6E08               	movwf	??_LCD_Write_String^0,c
 10368  000A7A  500B               	movf	(LCD_Write_String@i+1)^0,w,c
 10369  000A7C  2007               	addwfc	(LCD_Write_String@Str+1)^0,w,c
 10370  000A7E  6E09               	movwf	(??_LCD_Write_String+1)^0,c
 10371  000A80  C008  FFF6         	movff	??_LCD_Write_String,tblptrl
 10372  000A84  C009  FFF7         	movff	??_LCD_Write_String+1,tblptrh
 10373  000A88  6AF8               	clrf	tblptru,c
 10374  000A8A  0E05               	movlw	(high __ramtop+-1)
 10375  000A8C  64F7               	cpfsgt	tblptrh,c
 10376  000A8E  D004               	bra	u2697
 10377  000A90  0008               	tblrd		*
 10378  000A92  FFFF               	dw	65535	; errata NOP
 10379  000A94  50F5               	movf	tablat,w,c
 10380  000A96  D005               	bra	u2690
 10381  000A98                     u2697:
 10382  000A98  CFF6 FFE1          	movff	tblptrl,fsr1l
 10383  000A9C  CFF7 FFE2          	movff	tblptrh,fsr1h
 10384  000AA0  50E7               	movf	indf1,w,c
 10385  000AA2                     u2690:
 10386  000AA2  EC1A  F003         	call	_LCD_Write_Char
 10387  000AA6  4A0A               	infsnz	LCD_Write_String@i^0,f,c
 10388  000AA8  2A0B               	incf	(LCD_Write_String@i+1)^0,f,c
 10389  000AAA                     l3486:
 10390  000AAA  FFFF               	dw	65535	; assembler added errata NOP
 10391  000AAC  500A               	movf	LCD_Write_String@i^0,w,c
 10392  000AAE  2406               	addwf	LCD_Write_String@Str^0,w,c
 10393  000AB0  6E08               	movwf	??_LCD_Write_String^0,c
 10394  000AB2  500B               	movf	(LCD_Write_String@i+1)^0,w,c
 10395  000AB4  2007               	addwfc	(LCD_Write_String@Str+1)^0,w,c
 10396  000AB6  6E09               	movwf	(??_LCD_Write_String+1)^0,c
 10397  000AB8  C008  FFF6         	movff	??_LCD_Write_String,tblptrl
 10398  000ABC  C009  FFF7         	movff	??_LCD_Write_String+1,tblptrh
 10399  000AC0  6AF8               	clrf	tblptru,c
 10400  000AC2  0E05               	movlw	(high __ramtop+-1)
 10401  000AC4  64F7               	cpfsgt	tblptrh,c
 10402  000AC6  D004               	bra	u2707
 10403  000AC8  0008               	tblrd		*
 10404  000ACA  FFFF               	dw	65535	; errata NOP
 10405  000ACC  50F5               	movf	tablat,w,c
 10406  000ACE  D005               	bra	u2700
 10407  000AD0                     u2707:
 10408  000AD0  CFF6 FFE1          	movff	tblptrl,fsr1l
 10409  000AD4  CFF7 FFE2          	movff	tblptrh,fsr1h
 10410  000AD8  50E7               	movf	indf1,w,c
 10411  000ADA                     u2700:
 10412  000ADA  0900               	iorlw	0
 10413  000ADC  A4D8               	btfss	status,2,c
 10414  000ADE  EF73  F005         	goto	u2711
 10415  000AE2  EF76  F005         	goto	u2710
 10416  000AE6                     u2711:
 10417  000AE6  FFFF               	dw	65535	; assembler added errata NOP
 10418  000AE8  EF39  F005         	goto	l3482
 10419  000AEC                     u2710:
 10420  000AEC  FFFF               	dw	65535	; assembler added errata NOP
 10421  000AEE  0012               	return		;funcret
 10422  000AF0  FFFF               	dw	65535	; errata NOP
 10423  000AF2                     __end_of_LCD_Write_String:
 10424                           	callstack 0
 10425                           
 10426 ;; *************** function _LCD_Write_Char *****************
 10427 ;; Defined at:
 10428 ;;		line 177 in file "./I2C_LCD.c"
 10429 ;; Parameters:    Size  Location     Type
 10430 ;;  Data            1    wreg     unsigned char 
 10431 ;; Auto vars:     Size  Location     Type
 10432 ;;  Data            1    4[COMRAM] unsigned char 
 10433 ;; Return value:  Size  Location     Type
 10434 ;;                  1    wreg      void 
 10435 ;; Registers used:
 10436 ;;		wreg, status,2, status,0, cstack
 10437 ;; Tracked objects:
 10438 ;;		On entry : 0/0
 10439 ;;		On exit  : 0/0
 10440 ;;		Unchanged: 0/0
 10441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10442 ;;      Params:         0       0       0       0       0       0       0
 10443 ;;      Locals:         1       0       0       0       0       0       0
 10444 ;;      Temps:          0       0       0       0       0       0       0
 10445 ;;      Totals:         1       0       0       0       0       0       0
 10446 ;;Total ram usage:        1 bytes
 10447 ;; Hardware stack levels used: 1
 10448 ;; Hardware stack levels required when called: 4
 10449 ;; This function calls:
 10450 ;;		_LCD_Write_4Bit
 10451 ;; This function is called by:
 10452 ;;		_LCD_Write_String
 10453 ;; This function uses a non-reentrant model
 10454 ;;
 10455                           
 10456                           	psect	text23
 10457  000634                     __ptext23:
 10458                           	callstack 0
 10459  000634                     _LCD_Write_Char:
 10460                           	callstack 0
 10461  000634  FFFF               	dw	65535	; assembler added errata NOP
 10462                           
 10463                           ;incstack = 0
 10464                           ;LCD_Write_Char@Data stored from wreg
 10465  000636  6E05               	movwf	LCD_Write_Char@Data^0,c
 10466  000638                     
 10467                           ;./I2C_LCD.c: 177: void LCD_Write_Char(char Data);./I2C_LCD.c: 178: {;./I2C_LCD.c: 179: 
      +                            RS = 1;
 10468  000638  0E01               	movlw	1
 10469  00063A  6E7F               	movwf	_RS^0,c
 10470  00063C                     
 10471                           ;./I2C_LCD.c: 180:   LCD_Write_4Bit(Data & 0xF0);
 10472  00063C  5005               	movf	LCD_Write_Char@Data^0,w,c
 10473  00063E  0BF0               	andlw	240
 10474  000640  EC4D  F003         	call	_LCD_Write_4Bit
 10475  000644                     
 10476                           ;./I2C_LCD.c: 181:   LCD_Write_4Bit((Data << 4) & 0xF0);
 10477  000644  3805               	swapf	LCD_Write_Char@Data^0,w,c
 10478  000646  0BF0               	andlw	240
 10479  000648  0BF0               	andlw	240
 10480  00064A  EC4D  F003         	call	_LCD_Write_4Bit
 10481  00064E  0012               	return		;funcret
 10482  000650  FFFF               	dw	65535	; errata NOP
 10483  000652                     __end_of_LCD_Write_Char:
 10484                           	callstack 0
 10485                           
 10486 ;; *************** function _LCD_Set_Cursor *****************
 10487 ;; Defined at:
 10488 ;;		line 190 in file "./I2C_LCD.c"
 10489 ;; Parameters:    Size  Location     Type
 10490 ;;  ROW             1    wreg     unsigned char 
 10491 ;;  COL             1    5[COMRAM] unsigned char 
 10492 ;; Auto vars:     Size  Location     Type
 10493 ;;  ROW             1    8[COMRAM] unsigned char 
 10494 ;; Return value:  Size  Location     Type
 10495 ;;                  1    wreg      void 
 10496 ;; Registers used:
 10497 ;;		wreg, status,2, status,0, cstack
 10498 ;; Tracked objects:
 10499 ;;		On entry : 0/0
 10500 ;;		On exit  : 0/0
 10501 ;;		Unchanged: 0/0
 10502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10503 ;;      Params:         1       0       0       0       0       0       0
 10504 ;;      Locals:         1       0       0       0       0       0       0
 10505 ;;      Temps:          2       0       0       0       0       0       0
 10506 ;;      Totals:         4       0       0       0       0       0       0
 10507 ;;Total ram usage:        4 bytes
 10508 ;; Hardware stack levels used: 1
 10509 ;; Hardware stack levels required when called: 5
 10510 ;; This function calls:
 10511 ;;		_LCD_CMD
 10512 ;; This function is called by:
 10513 ;;		_dataPanelUp
 10514 ;;		_controlCalls
 10515 ;;		_rutine_down
 10516 ;;		_rutine_up
 10517 ;;		_selectionMode
 10518 ;;		_modeControl
 10519 ;;		_main
 10520 ;; This function uses a non-reentrant model
 10521 ;;
 10522                           
 10523                           	psect	text24
 10524  0009E8                     __ptext24:
 10525                           	callstack 0
 10526  0009E8                     _LCD_Set_Cursor:
 10527                           	callstack 0
 10528  0009E8  FFFF               	dw	65535	; assembler added errata NOP
 10529                           
 10530                           ;incstack = 0
 10531                           ;LCD_Set_Cursor@ROW stored from wreg
 10532  0009EA  6E09               	movwf	LCD_Set_Cursor@ROW^0,c
 10533  0009EC                     
 10534                           ;./I2C_LCD.c: 190: void LCD_Set_Cursor(unsigned char ROW, unsigned char COL);./I2C_LCD.c
      +                          : 191: {;./I2C_LCD.c: 192:   switch(ROW)
 10535  0009EC  EF14  F005         	goto	l3498
 10536  0009F0                     l3490:
 10537  0009F0  FFFF               	dw	65535	; assembler added errata NOP
 10538                           
 10539                           ;./I2C_LCD.c: 195:       LCD_CMD(0xC0 + COL-1);
 10540  0009F2  5006               	movf	LCD_Set_Cursor@COL^0,w,c
 10541  0009F4  0FBF               	addlw	191
 10542  0009F6  EC0B  F003         	call	_LCD_CMD
 10543                           
 10544                           ;./I2C_LCD.c: 196:       break;
 10545  0009FA  EF2F  F005         	goto	l138
 10546  0009FE                     l3492:
 10547  0009FE  FFFF               	dw	65535	; assembler added errata NOP
 10548                           
 10549                           ;./I2C_LCD.c: 198:       LCD_CMD(0x94 + COL-1);
 10550  000A00  5006               	movf	LCD_Set_Cursor@COL^0,w,c
 10551  000A02  0F93               	addlw	147
 10552  000A04  EC0B  F003         	call	_LCD_CMD
 10553                           
 10554                           ;./I2C_LCD.c: 199:       break;
 10555  000A08  EF2F  F005         	goto	l138
 10556  000A0C                     l3494:
 10557  000A0C  FFFF               	dw	65535	; assembler added errata NOP
 10558                           
 10559                           ;./I2C_LCD.c: 201:       LCD_CMD(0xD4 + COL-1);
 10560  000A0E  5006               	movf	LCD_Set_Cursor@COL^0,w,c
 10561  000A10  0FD3               	addlw	211
 10562  000A12  EC0B  F003         	call	_LCD_CMD
 10563                           
 10564                           ;./I2C_LCD.c: 202:       break;
 10565  000A16  EF2F  F005         	goto	l138
 10566  000A1A                     l3496:
 10567  000A1A  FFFF               	dw	65535	; assembler added errata NOP
 10568                           
 10569                           ;./I2C_LCD.c: 205:       LCD_CMD(0x80 + COL-1);
 10570  000A1C  5006               	movf	LCD_Set_Cursor@COL^0,w,c
 10571  000A1E  0F7F               	addlw	127
 10572  000A20  EC0B  F003         	call	_LCD_CMD
 10573                           
 10574                           ;./I2C_LCD.c: 206:   }
 10575  000A24  EF2F  F005         	goto	l138
 10576  000A28                     l3498:
 10577  000A28  FFFF               	dw	65535	; assembler added errata NOP
 10578  000A2A  5009               	movf	LCD_Set_Cursor@ROW^0,w,c
 10579  000A2C  6E07               	movwf	??_LCD_Set_Cursor^0,c
 10580  000A2E  6A08               	clrf	(??_LCD_Set_Cursor+1)^0,c
 10581                           
 10582                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10583                           ; Switch size 1, requested type "simple"
 10584                           ; Number of cases is 1, Range of values is 0 to 0
 10585                           ; switch strategies available:
 10586                           ; Name         Instructions Cycles
 10587                           ; simple_byte            4     3 (average)
 10588                           ;	Chosen strategy is simple_byte
 10589  000A30  5008               	movf	(??_LCD_Set_Cursor+1)^0,w,c
 10590  000A32  0A00               	xorlw	0	; case 0
 10591  000A34  B4D8               	btfsc	status,2,c
 10592  000A36  EF1F  F005         	goto	l5102
 10593  000A3A  EF0D  F005         	goto	l3496
 10594  000A3E                     l5102:
 10595  000A3E  FFFF               	dw	65535	; assembler added errata NOP
 10596                           
 10597                           ; Switch size 1, requested type "simple"
 10598                           ; Number of cases is 3, Range of values is 2 to 4
 10599                           ; switch strategies available:
 10600                           ; Name         Instructions Cycles
 10601                           ; simple_byte           10     6 (average)
 10602                           ;	Chosen strategy is simple_byte
 10603  000A40  5007               	movf	??_LCD_Set_Cursor^0,w,c
 10604  000A42  0A02               	xorlw	2	; case 2
 10605  000A44  B4D8               	btfsc	status,2,c
 10606  000A46  EFF8  F004         	goto	l3490
 10607  000A4A  0A01               	xorlw	1	; case 3
 10608  000A4C  B4D8               	btfsc	status,2,c
 10609  000A4E  EFFF  F004         	goto	l3492
 10610  000A52  0A07               	xorlw	7	; case 4
 10611  000A54  B4D8               	btfsc	status,2,c
 10612  000A56  EF06  F005         	goto	l3494
 10613  000A5A  EF0D  F005         	goto	l3496
 10614  000A5E                     l138:
 10615  000A5E  FFFF               	dw	65535	; assembler added errata NOP
 10616  000A60  0012               	return		;funcret
 10617  000A62  FFFF               	dw	65535	; errata NOP
 10618  000A64                     __end_of_LCD_Set_Cursor:
 10619                           	callstack 0
 10620                           
 10621 ;; *************** function _LCD_Clear *****************
 10622 ;; Defined at:
 10623 ;;		line 233 in file "./I2C_LCD.c"
 10624 ;; Parameters:    Size  Location     Type
 10625 ;;		None
 10626 ;; Auto vars:     Size  Location     Type
 10627 ;;		None
 10628 ;; Return value:  Size  Location     Type
 10629 ;;                  1    wreg      void 
 10630 ;; Registers used:
 10631 ;;		wreg, status,2, status,0, cstack
 10632 ;; Tracked objects:
 10633 ;;		On entry : 0/0
 10634 ;;		On exit  : 0/0
 10635 ;;		Unchanged: 0/0
 10636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10637 ;;      Params:         0       0       0       0       0       0       0
 10638 ;;      Locals:         0       0       0       0       0       0       0
 10639 ;;      Temps:          0       0       0       0       0       0       0
 10640 ;;      Totals:         0       0       0       0       0       0       0
 10641 ;;Total ram usage:        0 bytes
 10642 ;; Hardware stack levels used: 1
 10643 ;; Hardware stack levels required when called: 5
 10644 ;; This function calls:
 10645 ;;		_LCD_CMD
 10646 ;; This function is called by:
 10647 ;;		_dataPanelUp
 10648 ;;		_controlCalls
 10649 ;;		_rutine_down
 10650 ;;		_rutine_up
 10651 ;;		_selectionMode
 10652 ;;		_modeControl
 10653 ;;		_main
 10654 ;; This function uses a non-reentrant model
 10655 ;;
 10656                           
 10657                           	psect	text25
 10658  0005E8                     __ptext25:
 10659                           	callstack 0
 10660  0005E8                     _LCD_Clear:
 10661                           	callstack 0
 10662  0005E8  FFFF               	dw	65535	; assembler added errata NOP
 10663  0005EA                     
 10664                           ;./I2C_LCD.c: 235:   LCD_CMD(0x01);
 10665  0005EA  0E01               	movlw	1
 10666  0005EC  EC0B  F003         	call	_LCD_CMD
 10667  0005F0                     
 10668                           ;./I2C_LCD.c: 236:   _delay((unsigned long)((40)*(20000000/4000000.0)));
 10669  0005F0  0E32               	movlw	50
 10670  0005F2                     u4777:
 10671  0005F2  FFFF               	dw	65535	; errata NOP
 10672  0005F4  2EE8               	decfsz	wreg,f,c
 10673  0005F6  D7FD               	bra	u4777
 10674  0005F8  0012               	return		;funcret
 10675  0005FA  FFFF               	dw	65535	; errata NOP
 10676  0005FC                     __end_of_LCD_Clear:
 10677                           	callstack 0
 10678                           
 10679 ;; *************** function _bootAscensor *****************
 10680 ;; Defined at:
 10681 ;;		line 257 in file "main.c"
 10682 ;; Parameters:    Size  Location     Type
 10683 ;;		None
 10684 ;; Auto vars:     Size  Location     Type
 10685 ;;		None
 10686 ;; Return value:  Size  Location     Type
 10687 ;;                  1    wreg      void 
 10688 ;; Registers used:
 10689 ;;		wreg, status,2
 10690 ;; Tracked objects:
 10691 ;;		On entry : 0/0
 10692 ;;		On exit  : 0/0
 10693 ;;		Unchanged: 0/0
 10694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10695 ;;      Params:         0       0       0       0       0       0       0
 10696 ;;      Locals:         0       0       0       0       0       0       0
 10697 ;;      Temps:          2       0       0       0       0       0       0
 10698 ;;      Totals:         2       0       0       0       0       0       0
 10699 ;;Total ram usage:        2 bytes
 10700 ;; Hardware stack levels used: 1
 10701 ;; This function calls:
 10702 ;;		Nothing
 10703 ;; This function is called by:
 10704 ;;		_main
 10705 ;; This function uses a non-reentrant model
 10706 ;;
 10707                           
 10708                           	psect	text26
 10709  000824                     __ptext26:
 10710                           	callstack 0
 10711  000824                     _bootAscensor:
 10712                           	callstack 0
 10713  000824  FFFF               	dw	65535	; assembler added errata NOP
 10714  000826                     
 10715                           ;main.c: 258:     LATCbits.LC0 = 1;
 10716  000826  808B               	bsf	139,0,c	;volatile
 10717                           
 10718                           ;main.c: 259:     LATCbits.LC1 = 1;
 10719  000828  828B               	bsf	139,1,c	;volatile
 10720                           
 10721                           ;main.c: 261:     LATDbits.LD0 = 0;
 10722  00082A  908C               	bcf	140,0,c	;volatile
 10723                           
 10724                           ;main.c: 262:     LATDbits.LD1 = 0;
 10725  00082C  928C               	bcf	140,1,c	;volatile
 10726                           
 10727                           ;main.c: 263:     LATDbits.LD2 = 0;
 10728  00082E  948C               	bcf	140,2,c	;volatile
 10729                           
 10730                           ;main.c: 264:     LATDbits.LD3 = 0;
 10731  000830  968C               	bcf	140,3,c	;volatile
 10732  000832                     
 10733                           ;main.c: 266:     _delay((unsigned long)((3000)*(20000000/4000.0)));
 10734  000832  0E3A               	movlw	58
 10735  000834  6E02               	movwf	(??_bootAscensor+1)^0,c
 10736  000836  0E1C               	movlw	28
 10737  000838  6E01               	movwf	??_bootAscensor^0,c
 10738  00083A  0EC4               	movlw	196
 10739  00083C                     u4787:
 10740  00083C  FFFF               	dw	65535	; errata NOP
 10741  00083E  2EE8               	decfsz	wreg,f,c
 10742  000840  D7FD               	bra	u4787
 10743  000842  2E01               	decfsz	??_bootAscensor^0,f,c
 10744  000844  D7FB               	bra	u4787
 10745  000846  2E02               	decfsz	(??_bootAscensor+1)^0,f,c
 10746  000848  D7F9               	bra	u4787
 10747  00084A                     
 10748                           ;main.c: 268:     if (PORTDbits.RD4 == 1) {
 10749  00084A  A883               	btfss	131,4,c	;volatile
 10750  00084C  EF2A  F004         	goto	u3581
 10751  000850  EF2D  F004         	goto	u3580
 10752  000854                     u3581:
 10753  000854  FFFF               	dw	65535	; assembler added errata NOP
 10754  000856  EF36  F004         	goto	l215
 10755  00085A                     u3580:
 10756  00085A  FFFF               	dw	65535	; assembler added errata NOP
 10757  00085C                     l4454:
 10758  00085C  FFFF               	dw	65535	; assembler added errata NOP
 10759                           
 10760                           ;main.c: 269:         prevFL = 1;
 10761  00085E  0E00               	movlw	0
 10762  000860  0100               	movlb	0	; () banked
 10763  000862  6F8F               	movwf	(_prevFL+1)& (0+255),b
 10764  000864  0E01               	movlw	1
 10765  000866  6F8E               	movwf	_prevFL& (0+255),b
 10766  000868  EF45  F004         	goto	l216
 10767  00086C                     l215:
 10768  00086C  FFFF               	dw	65535	; assembler added errata NOP
 10769                           
 10770                           ;main.c: 272:         LATCbits.LC0 = 0;
 10771  00086E  908B               	bcf	139,0,c	;volatile
 10772  000870                     l218:
 10773  000870  FFFF               	dw	65535	; assembler added errata NOP
 10774                           
 10775                           ;main.c: 273:         while (!PORTDbits.RD4) {
 10776  000872  A883               	btfss	131,4,c	;volatile
 10777  000874  EF3E  F004         	goto	u3591
 10778  000878  EF41  F004         	goto	u3590
 10779  00087C                     u3591:
 10780  00087C  FFFF               	dw	65535	; assembler added errata NOP
 10781  00087E  EF38  F004         	goto	l218
 10782  000882                     u3590:
 10783  000882  FFFF               	dw	65535	; assembler added errata NOP
 10784  000884                     
 10785                           ;main.c: 276:         LATCbits.LC0 = 1;
 10786  000884  808B               	bsf	139,0,c	;volatile
 10787  000886  EF2E  F004         	goto	l4454
 10788  00088A                     l216:
 10789  00088A  FFFF               	dw	65535	; assembler added errata NOP
 10790                           
 10791                           ; BSR set to: 0
 10792  00088C  0012               	return		;funcret
 10793  00088E  FFFF               	dw	65535	; errata NOP
 10794  000890                     __end_of_bootAscensor:
 10795                           	callstack 0
 10796                           
 10797 ;; *************** function _boot *****************
 10798 ;; Defined at:
 10799 ;;		line 158 in file "main.c"
 10800 ;; Parameters:    Size  Location     Type
 10801 ;;		None
 10802 ;; Auto vars:     Size  Location     Type
 10803 ;;		None
 10804 ;; Return value:  Size  Location     Type
 10805 ;;                  1    wreg      void 
 10806 ;; Registers used:
 10807 ;;		wreg, status,2
 10808 ;; Tracked objects:
 10809 ;;		On entry : 0/0
 10810 ;;		On exit  : 0/0
 10811 ;;		Unchanged: 0/0
 10812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10813 ;;      Params:         0       0       0       0       0       0       0
 10814 ;;      Locals:         0       0       0       0       0       0       0
 10815 ;;      Temps:          0       0       0       0       0       0       0
 10816 ;;      Totals:         0       0       0       0       0       0       0
 10817 ;;Total ram usage:        0 bytes
 10818 ;; Hardware stack levels used: 1
 10819 ;; This function calls:
 10820 ;;		Nothing
 10821 ;; This function is called by:
 10822 ;;		_main
 10823 ;; This function uses a non-reentrant model
 10824 ;;
 10825                           
 10826                           	psect	text27
 10827  000900                     __ptext27:
 10828                           	callstack 0
 10829  000900                     _boot:
 10830                           	callstack 0
 10831  000900  FFFF               	dw	65535	; assembler added errata NOP
 10832  000902                     
 10833                           ;main.c: 159:     ADCON1 = 0x06;
 10834  000902  0E06               	movlw	6
 10835  000904  6EC1               	movwf	193,c	;volatile
 10836  000906                     
 10837                           ;main.c: 160:     TRISB = 0xFF;
 10838  000906  6893               	setf	147,c	;volatile
 10839                           
 10840                           ;main.c: 161:     TRISD = 0xF0;
 10841  000908  0EF0               	movlw	240
 10842  00090A  6E95               	movwf	149,c	;volatile
 10843  00090C                     
 10844                           ;main.c: 162:     TRISA = 0xFF;
 10845  00090C  6892               	setf	146,c	;volatile
 10846                           
 10847                           ;main.c: 163:     TRISC = 0xFC;
 10848  00090E  0EFC               	movlw	252
 10849  000910  6E94               	movwf	148,c	;volatile
 10850                           
 10851                           ;main.c: 166:     tasksDown = 0;
 10852  000912  0E00               	movlw	0
 10853  000914  6E7E               	movwf	(_tasksDown+1)^0,c
 10854  000916  0E00               	movlw	0
 10855  000918  6E7D               	movwf	_tasksDown^0,c
 10856                           
 10857                           ;main.c: 167:     tasksUp = 0;
 10858  00091A  0E00               	movlw	0
 10859  00091C  6E7C               	movwf	(_tasksUp+1)^0,c
 10860  00091E  0E00               	movlw	0
 10861  000920  6E7B               	movwf	_tasksUp^0,c
 10862                           
 10863                           ;main.c: 168:     callsU = 0;
 10864  000922  0E00               	movlw	0
 10865  000924  0100               	movlb	0	; () banked
 10866  000926  6F95               	movwf	(_callsU+1)& (0+255),b
 10867  000928  0E00               	movlw	0
 10868  00092A  6F94               	movwf	_callsU& (0+255),b
 10869                           
 10870                           ;main.c: 169:     callsD = 0;
 10871  00092C  0E00               	movlw	0
 10872  00092E  6F93               	movwf	(_callsD+1)& (0+255),b
 10873  000930  0E00               	movlw	0
 10874  000932  6F92               	movwf	_callsD& (0+255),b
 10875                           
 10876                           ;main.c: 170:     call_init = 0;
 10877  000934  0E00               	movlw	0
 10878  000936  6F91               	movwf	(_call_init+1)& (0+255),b
 10879  000938  0E00               	movlw	0
 10880  00093A  6F90               	movwf	_call_init& (0+255),b
 10881                           
 10882                           ;main.c: 171:     prevFL = 0;
 10883  00093C  0E00               	movlw	0
 10884  00093E  6F8F               	movwf	(_prevFL+1)& (0+255),b
 10885  000940  0E00               	movlw	0
 10886  000942  6F8E               	movwf	_prevFL& (0+255),b
 10887                           
 10888                           ;main.c: 172:     nowFL = 0;
 10889  000944  0E00               	movlw	0
 10890  000946  0101               	movlb	1	; () banked
 10891  000948  6FD9               	movwf	(_nowFL+1)& (0+255),b
 10892  00094A  0E00               	movlw	0
 10893  00094C  6FD8               	movwf	_nowFL& (0+255),b
 10894                           
 10895                           ;main.c: 175:     modeUp_F = 0;
 10896  00094E  0E00               	movlw	0
 10897  000950  6FD7               	movwf	(_modeUp_F+1)& (0+255),b
 10898  000952  0E00               	movlw	0
 10899  000954  6FD6               	movwf	_modeUp_F& (0+255),b
 10900                           
 10901                           ;main.c: 176:     modeDown_F = 0;
 10902  000956  0E00               	movlw	0
 10903  000958  0100               	movlb	0	; () banked
 10904  00095A  6F8D               	movwf	(_modeDown_F+1)& (0+255),b
 10905  00095C  0E00               	movlw	0
 10906  00095E  6F8C               	movwf	_modeDown_F& (0+255),b
 10907                           
 10908                           ;main.c: 178:     from_up_change = 0;
 10909  000960  0E00               	movlw	0
 10910  000962  6F8B               	movwf	(_from_up_change+1)& (0+255),b
 10911  000964  0E00               	movlw	0
 10912  000966  6F8A               	movwf	_from_up_change& (0+255),b
 10913                           
 10914                           ;main.c: 179:     from_down_change = 0;
 10915  000968  0E00               	movlw	0
 10916  00096A  6F89               	movwf	(_from_down_change+1)& (0+255),b
 10917  00096C  0E00               	movlw	0
 10918  00096E  6F88               	movwf	_from_down_change& (0+255),b
 10919  000970                     
 10920                           ; BSR set to: 0
 10921  000970  0012               	return		;funcret
 10922  000972  FFFF               	dw	65535	; errata NOP
 10923  000974                     __end_of_boot:
 10924                           	callstack 0
 10925                           
 10926 ;; *************** function _LCD_Init *****************
 10927 ;; Defined at:
 10928 ;;		line 130 in file "./I2C_LCD.c"
 10929 ;; Parameters:    Size  Location     Type
 10930 ;;  I2C_Add         1    wreg     unsigned char 
 10931 ;; Auto vars:     Size  Location     Type
 10932 ;;  I2C_Add         1    7[COMRAM] unsigned char 
 10933 ;; Return value:  Size  Location     Type
 10934 ;;                  1    wreg      void 
 10935 ;; Registers used:
 10936 ;;		wreg, status,2, status,0, cstack
 10937 ;; Tracked objects:
 10938 ;;		On entry : 0/0
 10939 ;;		On exit  : 0/0
 10940 ;;		Unchanged: 0/0
 10941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10942 ;;      Params:         0       0       0       0       0       0       0
 10943 ;;      Locals:         1       0       0       0       0       0       0
 10944 ;;      Temps:          2       0       0       0       0       0       0
 10945 ;;      Totals:         3       0       0       0       0       0       0
 10946 ;;Total ram usage:        3 bytes
 10947 ;; Hardware stack levels used: 1
 10948 ;; Hardware stack levels required when called: 5
 10949 ;; This function calls:
 10950 ;;		_IO_Expander_Write
 10951 ;;		_LCD_CMD
 10952 ;; This function is called by:
 10953 ;;		_main
 10954 ;; This function uses a non-reentrant model
 10955 ;;
 10956                           
 10957                           	psect	text28
 10958  000CBA                     __ptext28:
 10959                           	callstack 0
 10960  000CBA                     _LCD_Init:
 10961                           	callstack 0
 10962  000CBA  FFFF               	dw	65535	; assembler added errata NOP
 10963                           
 10964                           ; BSR set to: 0
 10965                           ;incstack = 0
 10966                           ;LCD_Init@I2C_Add stored from wreg
 10967  000CBC  6E08               	movwf	LCD_Init@I2C_Add^0,c
 10968  000CBE                     
 10969                           ;./I2C_LCD.c: 130: void LCD_Init(unsigned char I2C_Add);./I2C_LCD.c: 131: {;./I2C_LCD.c:
      +                           132:   i2c_add = I2C_Add;
 10970  000CBE  C008  F096         	movff	LCD_Init@I2C_Add,_i2c_add
 10971  000CC2                     
 10972                           ;./I2C_LCD.c: 133:   IO_Expander_Write(0x00);
 10973  000CC2  0E00               	movlw	0
 10974  000CC4  EC29  F003         	call	_IO_Expander_Write
 10975  000CC8                     
 10976                           ;./I2C_LCD.c: 134:   _delay((unsigned long)((30)*(20000000/4000.0)));
 10977  000CC8  0E93               	movlw	147
 10978  000CCA  6E06               	movwf	??_LCD_Init^0,c
 10979  000CCC  0E32               	movlw	50
 10980  000CCE                     u4797:
 10981  000CCE  FFFF               	dw	65535	; errata NOP
 10982  000CD0  2EE8               	decfsz	wreg,f,c
 10983  000CD2  D7FD               	bra	u4797
 10984  000CD4  2E06               	decfsz	??_LCD_Init^0,f,c
 10985  000CD6  D7FB               	bra	u4797
 10986                           
 10987                           ;./I2C_LCD.c: 135:   LCD_CMD(0x03);
 10988  000CD8  0E03               	movlw	3
 10989  000CDA  EC0B  F003         	call	_LCD_CMD
 10990  000CDE                     
 10991                           ;./I2C_LCD.c: 136:   _delay((unsigned long)((5)*(20000000/4000.0)));
 10992  000CDE  0E19               	movlw	25
 10993  000CE0  6E06               	movwf	??_LCD_Init^0,c
 10994  000CE2  0E5D               	movlw	93
 10995  000CE4                     u4807:
 10996  000CE4  FFFF               	dw	65535	; errata NOP
 10997  000CE6  2EE8               	decfsz	wreg,f,c
 10998  000CE8  D7FD               	bra	u4807
 10999  000CEA  2E06               	decfsz	??_LCD_Init^0,f,c
 11000  000CEC  D7FB               	bra	u4807
 11001  000CEE                     
 11002                           ;./I2C_LCD.c: 137:   LCD_CMD(0x03);
 11003  000CEE  0E03               	movlw	3
 11004  000CF0  EC0B  F003         	call	_LCD_CMD
 11005                           
 11006                           ;./I2C_LCD.c: 138:   _delay((unsigned long)((5)*(20000000/4000.0)));
 11007  000CF4  0E19               	movlw	25
 11008  000CF6  6E06               	movwf	??_LCD_Init^0,c
 11009  000CF8  0E5D               	movlw	93
 11010  000CFA                     u4817:
 11011  000CFA  FFFF               	dw	65535	; errata NOP
 11012  000CFC  2EE8               	decfsz	wreg,f,c
 11013  000CFE  D7FD               	bra	u4817
 11014  000D00  2E06               	decfsz	??_LCD_Init^0,f,c
 11015  000D02  D7FB               	bra	u4817
 11016  000D04                     
 11017                           ;./I2C_LCD.c: 139:   LCD_CMD(0x03);
 11018  000D04  0E03               	movlw	3
 11019  000D06  EC0B  F003         	call	_LCD_CMD
 11020  000D0A                     
 11021                           ;./I2C_LCD.c: 140:   _delay((unsigned long)((5)*(20000000/4000.0)));
 11022  000D0A  0E19               	movlw	25
 11023  000D0C  6E06               	movwf	??_LCD_Init^0,c
 11024  000D0E  0E5D               	movlw	93
 11025  000D10                     u4827:
 11026  000D10  FFFF               	dw	65535	; errata NOP
 11027  000D12  2EE8               	decfsz	wreg,f,c
 11028  000D14  D7FD               	bra	u4827
 11029  000D16  2E06               	decfsz	??_LCD_Init^0,f,c
 11030  000D18  D7FB               	bra	u4827
 11031                           
 11032                           ;./I2C_LCD.c: 141:   LCD_CMD(0x02);
 11033  000D1A  0E02               	movlw	2
 11034  000D1C  EC0B  F003         	call	_LCD_CMD
 11035  000D20                     
 11036                           ;./I2C_LCD.c: 142:   _delay((unsigned long)((5)*(20000000/4000.0)));
 11037  000D20  0E19               	movlw	25
 11038  000D22  6E06               	movwf	??_LCD_Init^0,c
 11039  000D24  0E5D               	movlw	93
 11040  000D26                     u4837:
 11041  000D26  FFFF               	dw	65535	; errata NOP
 11042  000D28  2EE8               	decfsz	wreg,f,c
 11043  000D2A  D7FD               	bra	u4837
 11044  000D2C  2E06               	decfsz	??_LCD_Init^0,f,c
 11045  000D2E  D7FB               	bra	u4837
 11046  000D30                     
 11047                           ;./I2C_LCD.c: 143:   LCD_CMD(0x20 | (2 << 2));
 11048  000D30  0E28               	movlw	40
 11049  000D32  EC0B  F003         	call	_LCD_CMD
 11050                           
 11051                           ;./I2C_LCD.c: 144:   _delay((unsigned long)((50)*(20000000/4000.0)));
 11052  000D36  0E01               	movlw	1
 11053  000D38  6E07               	movwf	(??_LCD_Init+1)^0,c
 11054  000D3A  0EF4               	movlw	244
 11055  000D3C  6E06               	movwf	??_LCD_Init^0,c
 11056  000D3E  0EA8               	movlw	168
 11057  000D40                     u4847:
 11058  000D40  FFFF               	dw	65535	; errata NOP
 11059  000D42  2EE8               	decfsz	wreg,f,c
 11060  000D44  D7FD               	bra	u4847
 11061  000D46  2E06               	decfsz	??_LCD_Init^0,f,c
 11062  000D48  D7FB               	bra	u4847
 11063  000D4A  2E07               	decfsz	(??_LCD_Init+1)^0,f,c
 11064  000D4C  D7F9               	bra	u4847
 11065  000D4E  D000               	nop2	
 11066  000D50                     
 11067                           ;./I2C_LCD.c: 145:   LCD_CMD(0x0C);
 11068  000D50  0E0C               	movlw	12
 11069  000D52  EC0B  F003         	call	_LCD_CMD
 11070  000D56                     
 11071                           ;./I2C_LCD.c: 146:   _delay((unsigned long)((50)*(20000000/4000.0)));
 11072  000D56  0E01               	movlw	1
 11073  000D58  6E07               	movwf	(??_LCD_Init+1)^0,c
 11074  000D5A  0EF4               	movlw	244
 11075  000D5C  6E06               	movwf	??_LCD_Init^0,c
 11076  000D5E  0EA8               	movlw	168
 11077  000D60                     u4857:
 11078  000D60  FFFF               	dw	65535	; errata NOP
 11079  000D62  2EE8               	decfsz	wreg,f,c
 11080  000D64  D7FD               	bra	u4857
 11081  000D66  2E06               	decfsz	??_LCD_Init^0,f,c
 11082  000D68  D7FB               	bra	u4857
 11083  000D6A  2E07               	decfsz	(??_LCD_Init+1)^0,f,c
 11084  000D6C  D7F9               	bra	u4857
 11085  000D6E  D000               	nop2	
 11086                           
 11087                           ;./I2C_LCD.c: 147:   LCD_CMD(0x01);
 11088  000D70  0E01               	movlw	1
 11089  000D72  EC0B  F003         	call	_LCD_CMD
 11090  000D76                     
 11091                           ;./I2C_LCD.c: 148:   _delay((unsigned long)((50)*(20000000/4000.0)));
 11092  000D76  0E01               	movlw	1
 11093  000D78  6E07               	movwf	(??_LCD_Init+1)^0,c
 11094  000D7A  0EF4               	movlw	244
 11095  000D7C  6E06               	movwf	??_LCD_Init^0,c
 11096  000D7E  0EA8               	movlw	168
 11097  000D80                     u4867:
 11098  000D80  FFFF               	dw	65535	; errata NOP
 11099  000D82  2EE8               	decfsz	wreg,f,c
 11100  000D84  D7FD               	bra	u4867
 11101  000D86  2E06               	decfsz	??_LCD_Init^0,f,c
 11102  000D88  D7FB               	bra	u4867
 11103  000D8A  2E07               	decfsz	(??_LCD_Init+1)^0,f,c
 11104  000D8C  D7F9               	bra	u4867
 11105  000D8E  D000               	nop2	
 11106  000D90                     
 11107                           ;./I2C_LCD.c: 149:   LCD_CMD(0x04 | 0x02);
 11108  000D90  0E06               	movlw	6
 11109  000D92  EC0B  F003         	call	_LCD_CMD
 11110                           
 11111                           ;./I2C_LCD.c: 150:   _delay((unsigned long)((50)*(20000000/4000.0)));
 11112  000D96  0E01               	movlw	1
 11113  000D98  6E07               	movwf	(??_LCD_Init+1)^0,c
 11114  000D9A  0EF4               	movlw	244
 11115  000D9C  6E06               	movwf	??_LCD_Init^0,c
 11116  000D9E  0EA8               	movlw	168
 11117  000DA0                     u4877:
 11118  000DA0  FFFF               	dw	65535	; errata NOP
 11119  000DA2  2EE8               	decfsz	wreg,f,c
 11120  000DA4  D7FD               	bra	u4877
 11121  000DA6  2E06               	decfsz	??_LCD_Init^0,f,c
 11122  000DA8  D7FB               	bra	u4877
 11123  000DAA  2E07               	decfsz	(??_LCD_Init+1)^0,f,c
 11124  000DAC  D7F9               	bra	u4877
 11125  000DAE  D000               	nop2	
 11126  000DB0  0012               	return		;funcret
 11127  000DB2  FFFF               	dw	65535	; errata NOP
 11128  000DB4                     __end_of_LCD_Init:
 11129                           	callstack 0
 11130                           
 11131 ;; *************** function _LCD_CMD *****************
 11132 ;; Defined at:
 11133 ;;		line 170 in file "./I2C_LCD.c"
 11134 ;; Parameters:    Size  Location     Type
 11135 ;;  CMD             1    wreg     unsigned char 
 11136 ;; Auto vars:     Size  Location     Type
 11137 ;;  CMD             1    4[COMRAM] unsigned char 
 11138 ;; Return value:  Size  Location     Type
 11139 ;;                  1    wreg      void 
 11140 ;; Registers used:
 11141 ;;		wreg, status,2, status,0, cstack
 11142 ;; Tracked objects:
 11143 ;;		On entry : 0/0
 11144 ;;		On exit  : 0/0
 11145 ;;		Unchanged: 0/0
 11146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11147 ;;      Params:         0       0       0       0       0       0       0
 11148 ;;      Locals:         1       0       0       0       0       0       0
 11149 ;;      Temps:          0       0       0       0       0       0       0
 11150 ;;      Totals:         1       0       0       0       0       0       0
 11151 ;;Total ram usage:        1 bytes
 11152 ;; Hardware stack levels used: 1
 11153 ;; Hardware stack levels required when called: 4
 11154 ;; This function calls:
 11155 ;;		_LCD_Write_4Bit
 11156 ;; This function is called by:
 11157 ;;		_LCD_Init
 11158 ;;		_LCD_Set_Cursor
 11159 ;;		_LCD_Clear
 11160 ;;		_LCD_SL
 11161 ;;		_LCD_SR
 11162 ;; This function uses a non-reentrant model
 11163 ;;
 11164                           
 11165                           	psect	text29
 11166  000616                     __ptext29:
 11167                           	callstack 0
 11168  000616                     _LCD_CMD:
 11169                           	callstack 0
 11170  000616  FFFF               	dw	65535	; assembler added errata NOP
 11171                           
 11172                           ;incstack = 0
 11173                           ;LCD_CMD@CMD stored from wreg
 11174  000618  6E05               	movwf	LCD_CMD@CMD^0,c
 11175  00061A                     
 11176                           ;./I2C_LCD.c: 170: void LCD_CMD(unsigned char CMD);./I2C_LCD.c: 171: {;./I2C_LCD.c: 172:
      +                             RS = 0;
 11177  00061A  0E00               	movlw	0
 11178  00061C  6E7F               	movwf	_RS^0,c
 11179  00061E                     
 11180                           ;./I2C_LCD.c: 173:   LCD_Write_4Bit(CMD & 0xF0);
 11181  00061E  5005               	movf	LCD_CMD@CMD^0,w,c
 11182  000620  0BF0               	andlw	240
 11183  000622  EC4D  F003         	call	_LCD_Write_4Bit
 11184  000626                     
 11185                           ;./I2C_LCD.c: 174:   LCD_Write_4Bit((CMD << 4) & 0xF0);
 11186  000626  3805               	swapf	LCD_CMD@CMD^0,w,c
 11187  000628  0BF0               	andlw	240
 11188  00062A  0BF0               	andlw	240
 11189  00062C  EC4D  F003         	call	_LCD_Write_4Bit
 11190  000630  0012               	return		;funcret
 11191  000632  FFFF               	dw	65535	; errata NOP
 11192  000634                     __end_of_LCD_CMD:
 11193                           	callstack 0
 11194                           
 11195 ;; *************** function _LCD_Write_4Bit *****************
 11196 ;; Defined at:
 11197 ;;		line 161 in file "./I2C_LCD.c"
 11198 ;; Parameters:    Size  Location     Type
 11199 ;;  Nibble          1    wreg     unsigned char 
 11200 ;; Auto vars:     Size  Location     Type
 11201 ;;  Nibble          1    3[COMRAM] unsigned char 
 11202 ;; Return value:  Size  Location     Type
 11203 ;;                  1    wreg      void 
 11204 ;; Registers used:
 11205 ;;		wreg, status,2, status,0, cstack
 11206 ;; Tracked objects:
 11207 ;;		On entry : 0/0
 11208 ;;		On exit  : 0/0
 11209 ;;		Unchanged: 0/0
 11210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11211 ;;      Params:         0       0       0       0       0       0       0
 11212 ;;      Locals:         1       0       0       0       0       0       0
 11213 ;;      Temps:          0       0       0       0       0       0       0
 11214 ;;      Totals:         1       0       0       0       0       0       0
 11215 ;;Total ram usage:        1 bytes
 11216 ;; Hardware stack levels used: 1
 11217 ;; Hardware stack levels required when called: 3
 11218 ;; This function calls:
 11219 ;;		_IO_Expander_Write
 11220 ;; This function is called by:
 11221 ;;		_LCD_CMD
 11222 ;;		_LCD_Write_Char
 11223 ;; This function uses a non-reentrant model
 11224 ;;
 11225                           
 11226                           	psect	text30
 11227  00069A                     __ptext30:
 11228                           	callstack 0
 11229  00069A                     _LCD_Write_4Bit:
 11230                           	callstack 0
 11231  00069A  FFFF               	dw	65535	; assembler added errata NOP
 11232                           
 11233                           ;incstack = 0
 11234                           ;LCD_Write_4Bit@Nibble stored from wreg
 11235  00069C  6E04               	movwf	LCD_Write_4Bit@Nibble^0,c
 11236  00069E                     
 11237                           ;./I2C_LCD.c: 161: void LCD_Write_4Bit(unsigned char Nibble);./I2C_LCD.c: 162: {;./I2C_L
      +                          CD.c: 164:   Nibble |= RS;
 11238  00069E  507F               	movf	_RS^0,w,c
 11239  0006A0  1204               	iorwf	LCD_Write_4Bit@Nibble^0,f,c
 11240  0006A2                     
 11241                           ;./I2C_LCD.c: 165:   IO_Expander_Write(Nibble | 0x04);
 11242  0006A2  5004               	movf	LCD_Write_4Bit@Nibble^0,w,c
 11243  0006A4  0904               	iorlw	4
 11244  0006A6  EC29  F003         	call	_IO_Expander_Write
 11245  0006AA                     
 11246                           ;./I2C_LCD.c: 166:   IO_Expander_Write(Nibble & 0xFB);
 11247  0006AA  5004               	movf	LCD_Write_4Bit@Nibble^0,w,c
 11248  0006AC  0BFB               	andlw	251
 11249  0006AE  EC29  F003         	call	_IO_Expander_Write
 11250  0006B2                     
 11251                           ;./I2C_LCD.c: 167:   _delay((unsigned long)((50)*(20000000/4000000.0)));
 11252  0006B2  0E3E               	movlw	62
 11253  0006B4                     u4887:
 11254  0006B4  FFFF               	dw	65535	; errata NOP
 11255  0006B6  2EE8               	decfsz	wreg,f,c
 11256  0006B8  D7FD               	bra	u4887
 11257  0006BA  D000               	nop2	
 11258  0006BC  0012               	return		;funcret
 11259  0006BE  FFFF               	dw	65535	; errata NOP
 11260  0006C0                     __end_of_LCD_Write_4Bit:
 11261                           	callstack 0
 11262                           
 11263 ;; *************** function _IO_Expander_Write *****************
 11264 ;; Defined at:
 11265 ;;		line 153 in file "./I2C_LCD.c"
 11266 ;; Parameters:    Size  Location     Type
 11267 ;;  Data            1    wreg     unsigned char 
 11268 ;; Auto vars:     Size  Location     Type
 11269 ;;  Data            1    2[COMRAM] unsigned char 
 11270 ;; Return value:  Size  Location     Type
 11271 ;;                  1    wreg      void 
 11272 ;; Registers used:
 11273 ;;		wreg, status,2, status,0, cstack
 11274 ;; Tracked objects:
 11275 ;;		On entry : 0/0
 11276 ;;		On exit  : 0/0
 11277 ;;		Unchanged: 0/0
 11278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11279 ;;      Params:         0       0       0       0       0       0       0
 11280 ;;      Locals:         1       0       0       0       0       0       0
 11281 ;;      Temps:          0       0       0       0       0       0       0
 11282 ;;      Totals:         1       0       0       0       0       0       0
 11283 ;;Total ram usage:        1 bytes
 11284 ;; Hardware stack levels used: 1
 11285 ;; Hardware stack levels required when called: 2
 11286 ;; This function calls:
 11287 ;;		_I2C_Master_Start
 11288 ;;		_I2C_Master_Stop
 11289 ;;		_I2C_Master_Write
 11290 ;; This function is called by:
 11291 ;;		_LCD_Init
 11292 ;;		_LCD_Write_4Bit
 11293 ;;		_Backlight
 11294 ;;		_noBacklight
 11295 ;; This function uses a non-reentrant model
 11296 ;;
 11297                           
 11298                           	psect	text31
 11299  000652                     __ptext31:
 11300                           	callstack 0
 11301  000652                     _IO_Expander_Write:
 11302                           	callstack 0
 11303  000652  FFFF               	dw	65535	; assembler added errata NOP
 11304                           
 11305                           ;incstack = 0
 11306                           ;IO_Expander_Write@Data stored from wreg
 11307  000654  6E03               	movwf	IO_Expander_Write@Data^0,c
 11308  000656                     
 11309                           ;./I2C_LCD.c: 153: void IO_Expander_Write(unsigned char Data);./I2C_LCD.c: 154: {;./I2C_
      +                          LCD.c: 155:   I2C_Master_Start();
 11310  000656  ECE8  F002         	call	_I2C_Master_Start	;wreg free
 11311                           
 11312                           ;./I2C_LCD.c: 156:   I2C_Master_Write(i2c_add);
 11313  00065A  0100               	movlb	0	; () banked
 11314  00065C  5196               	movf	_i2c_add& (0+255),w,b
 11315  00065E  EC3A  F003         	call	_I2C_Master_Write
 11316                           
 11317                           ;./I2C_LCD.c: 157:   I2C_Master_Write(Data | BackLight_State);
 11318  000662  5003               	movf	IO_Expander_Write@Data^0,w,c
 11319  000664  0100               	movlb	0	; () banked
 11320  000666  11E4               	iorwf	_BackLight_State& (0+255),w,b
 11321  000668  EC3A  F003         	call	_I2C_Master_Write
 11322                           
 11323                           ;./I2C_LCD.c: 158:   I2C_Master_Stop();
 11324  00066C  ECEE  F002         	call	_I2C_Master_Stop	;wreg free
 11325  000670  0012               	return		;funcret
 11326  000672  FFFF               	dw	65535	; errata NOP
 11327  000674                     __end_of_IO_Expander_Write:
 11328                           	callstack 0
 11329                           
 11330 ;; *************** function _I2C_Master_Write *****************
 11331 ;; Defined at:
 11332 ;;		line 106 in file "./I2C_LCD.c"
 11333 ;; Parameters:    Size  Location     Type
 11334 ;;  data            1    wreg     unsigned char 
 11335 ;; Auto vars:     Size  Location     Type
 11336 ;;  data            1    1[COMRAM] unsigned char 
 11337 ;; Return value:  Size  Location     Type
 11338 ;;                  1    wreg      unsigned char 
 11339 ;; Registers used:
 11340 ;;		wreg, status,2, status,0, cstack
 11341 ;; Tracked objects:
 11342 ;;		On entry : 0/0
 11343 ;;		On exit  : 0/0
 11344 ;;		Unchanged: 0/0
 11345 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11346 ;;      Params:         0       0       0       0       0       0       0
 11347 ;;      Locals:         1       0       0       0       0       0       0
 11348 ;;      Temps:          0       0       0       0       0       0       0
 11349 ;;      Totals:         1       0       0       0       0       0       0
 11350 ;;Total ram usage:        1 bytes
 11351 ;; Hardware stack levels used: 1
 11352 ;; Hardware stack levels required when called: 1
 11353 ;; This function calls:
 11354 ;;		_I2C_Master_Wait
 11355 ;; This function is called by:
 11356 ;;		_IO_Expander_Write
 11357 ;; This function uses a non-reentrant model
 11358 ;;
 11359                           
 11360                           	psect	text32
 11361  000674                     __ptext32:
 11362                           	callstack 0
 11363  000674                     _I2C_Master_Write:
 11364                           	callstack 0
 11365  000674  FFFF               	dw	65535	; assembler added errata NOP
 11366                           
 11367                           ;incstack = 0
 11368                           ;I2C_Master_Write@data stored from wreg
 11369  000676  6E02               	movwf	I2C_Master_Write@data^0,c
 11370  000678                     
 11371                           ;./I2C_LCD.c: 106: unsigned char I2C_Master_Write(unsigned char data);./I2C_LCD.c: 107: 
      +                          {;./I2C_LCD.c: 108:   I2C_Master_Wait();
 11372  000678  EC60  F003         	call	_I2C_Master_Wait	;wreg free
 11373  00067C                     
 11374                           ;./I2C_LCD.c: 109:   SSPBUF = data;
 11375  00067C  C002  FFC9         	movff	I2C_Master_Write@data,4041	;volatile
 11376  000680                     l99:
 11377  000680  FFFF               	dw	65535	; assembler added errata NOP
 11378  000682  A69E               	btfss	3998,3,c	;volatile
 11379  000684  EF46  F003         	goto	u2291
 11380  000688  EF49  F003         	goto	u2290
 11381  00068C                     u2291:
 11382  00068C  FFFF               	dw	65535	; assembler added errata NOP
 11383  00068E  EF40  F003         	goto	l99
 11384  000692                     u2290:
 11385  000692  FFFF               	dw	65535	; assembler added errata NOP
 11386  000694                     
 11387                           ;./I2C_LCD.c: 111:   SSPIF = 0;
 11388  000694  969E               	bcf	3998,3,c	;volatile
 11389  000696  0012               	return		;funcret
 11390  000698  FFFF               	dw	65535	; errata NOP
 11391  00069A                     __end_of_I2C_Master_Write:
 11392                           	callstack 0
 11393                           
 11394 ;; *************** function _I2C_Master_Stop *****************
 11395 ;; Defined at:
 11396 ;;		line 86 in file "./I2C_LCD.c"
 11397 ;; Parameters:    Size  Location     Type
 11398 ;;		None
 11399 ;; Auto vars:     Size  Location     Type
 11400 ;;		None
 11401 ;; Return value:  Size  Location     Type
 11402 ;;                  1    wreg      void 
 11403 ;; Registers used:
 11404 ;;		wreg, status,2, status,0, cstack
 11405 ;; Tracked objects:
 11406 ;;		On entry : 0/0
 11407 ;;		On exit  : 0/0
 11408 ;;		Unchanged: 0/0
 11409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11410 ;;      Params:         0       0       0       0       0       0       0
 11411 ;;      Locals:         0       0       0       0       0       0       0
 11412 ;;      Temps:          0       0       0       0       0       0       0
 11413 ;;      Totals:         0       0       0       0       0       0       0
 11414 ;;Total ram usage:        0 bytes
 11415 ;; Hardware stack levels used: 1
 11416 ;; Hardware stack levels required when called: 1
 11417 ;; This function calls:
 11418 ;;		_I2C_Master_Wait
 11419 ;; This function is called by:
 11420 ;;		_IO_Expander_Write
 11421 ;; This function uses a non-reentrant model
 11422 ;;
 11423                           
 11424                           	psect	text33
 11425  0005DC                     __ptext33:
 11426                           	callstack 0
 11427  0005DC                     _I2C_Master_Stop:
 11428                           	callstack 0
 11429  0005DC  FFFF               	dw	65535	; assembler added errata NOP
 11430  0005DE                     
 11431                           ;./I2C_LCD.c: 88:   I2C_Master_Wait();
 11432  0005DE  EC60  F003         	call	_I2C_Master_Wait	;wreg free
 11433  0005E2                     
 11434                           ;./I2C_LCD.c: 89:   PEN = 1;
 11435  0005E2  84C5               	bsf	4037,2,c	;volatile
 11436  0005E4  0012               	return		;funcret
 11437  0005E6  FFFF               	dw	65535	; errata NOP
 11438  0005E8                     __end_of_I2C_Master_Stop:
 11439                           	callstack 0
 11440                           
 11441 ;; *************** function _I2C_Master_Start *****************
 11442 ;; Defined at:
 11443 ;;		line 74 in file "./I2C_LCD.c"
 11444 ;; Parameters:    Size  Location     Type
 11445 ;;		None
 11446 ;; Auto vars:     Size  Location     Type
 11447 ;;		None
 11448 ;; Return value:  Size  Location     Type
 11449 ;;                  1    wreg      void 
 11450 ;; Registers used:
 11451 ;;		wreg, status,2, status,0, cstack
 11452 ;; Tracked objects:
 11453 ;;		On entry : 0/0
 11454 ;;		On exit  : 0/0
 11455 ;;		Unchanged: 0/0
 11456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11457 ;;      Params:         0       0       0       0       0       0       0
 11458 ;;      Locals:         0       0       0       0       0       0       0
 11459 ;;      Temps:          0       0       0       0       0       0       0
 11460 ;;      Totals:         0       0       0       0       0       0       0
 11461 ;;Total ram usage:        0 bytes
 11462 ;; Hardware stack levels used: 1
 11463 ;; Hardware stack levels required when called: 1
 11464 ;; This function calls:
 11465 ;;		_I2C_Master_Wait
 11466 ;; This function is called by:
 11467 ;;		_IO_Expander_Write
 11468 ;; This function uses a non-reentrant model
 11469 ;;
 11470                           
 11471                           	psect	text34
 11472  0005D0                     __ptext34:
 11473                           	callstack 0
 11474  0005D0                     _I2C_Master_Start:
 11475                           	callstack 0
 11476  0005D0  FFFF               	dw	65535	; assembler added errata NOP
 11477  0005D2                     
 11478                           ;./I2C_LCD.c: 76:   I2C_Master_Wait();
 11479  0005D2  EC60  F003         	call	_I2C_Master_Wait	;wreg free
 11480  0005D6                     
 11481                           ;./I2C_LCD.c: 77:   SEN = 1;
 11482  0005D6  80C5               	bsf	4037,0,c	;volatile
 11483  0005D8  0012               	return		;funcret
 11484  0005DA  FFFF               	dw	65535	; errata NOP
 11485  0005DC                     __end_of_I2C_Master_Start:
 11486                           	callstack 0
 11487                           
 11488 ;; *************** function _I2C_Master_Wait *****************
 11489 ;; Defined at:
 11490 ;;		line 69 in file "./I2C_LCD.c"
 11491 ;; Parameters:    Size  Location     Type
 11492 ;;		None
 11493 ;; Auto vars:     Size  Location     Type
 11494 ;;		None
 11495 ;; Return value:  Size  Location     Type
 11496 ;;                  1    wreg      void 
 11497 ;; Registers used:
 11498 ;;		wreg, status,2, status,0
 11499 ;; Tracked objects:
 11500 ;;		On entry : 0/0
 11501 ;;		On exit  : 0/0
 11502 ;;		Unchanged: 0/0
 11503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11504 ;;      Params:         0       0       0       0       0       0       0
 11505 ;;      Locals:         0       0       0       0       0       0       0
 11506 ;;      Temps:          1       0       0       0       0       0       0
 11507 ;;      Totals:         1       0       0       0       0       0       0
 11508 ;;Total ram usage:        1 bytes
 11509 ;; Hardware stack levels used: 1
 11510 ;; This function calls:
 11511 ;;		Nothing
 11512 ;; This function is called by:
 11513 ;;		_I2C_Master_Start
 11514 ;;		_I2C_Master_Stop
 11515 ;;		_I2C_Master_Write
 11516 ;;		_I2C_Master_RepeatedStart
 11517 ;;		_I2C_ACK
 11518 ;;		_I2C_NACK
 11519 ;;		_I2C_Read_Byte
 11520 ;; This function uses a non-reentrant model
 11521 ;;
 11522                           
 11523                           	psect	text35
 11524  0006C0                     __ptext35:
 11525                           	callstack 0
 11526  0006C0                     _I2C_Master_Wait:
 11527                           	callstack 0
 11528  0006C0  FFFF               	dw	65535	; assembler added errata NOP
 11529  0006C2                     l78:
 11530  0006C2  FFFF               	dw	65535	; assembler added errata NOP
 11531  0006C4  B4C7               	btfsc	199,2,c	;volatile
 11532  0006C6  EF67  F003         	goto	u2231
 11533  0006CA  EF6A  F003         	goto	u2230
 11534  0006CE                     u2231:
 11535  0006CE  FFFF               	dw	65535	; assembler added errata NOP
 11536  0006D0  EF61  F003         	goto	l78
 11537  0006D4                     u2230:
 11538  0006D4  FFFF               	dw	65535	; assembler added errata NOP
 11539  0006D6  CFC5 F001          	movff	4037,??_I2C_Master_Wait	;volatile
 11540  0006DA  0E1F               	movlw	31
 11541  0006DC  1601               	andwf	??_I2C_Master_Wait^0,f,c
 11542  0006DE  A4D8               	btfss	status,2,c
 11543  0006E0  EF74  F003         	goto	u2241
 11544  0006E4  EF77  F003         	goto	u2240
 11545  0006E8                     u2241:
 11546  0006E8  FFFF               	dw	65535	; assembler added errata NOP
 11547  0006EA  EF61  F003         	goto	l78
 11548  0006EE                     u2240:
 11549  0006EE  FFFF               	dw	65535	; assembler added errata NOP
 11550  0006F0  0012               	return		;funcret
 11551  0006F2  FFFF               	dw	65535	; errata NOP
 11552  0006F4                     __end_of_I2C_Master_Wait:
 11553                           	callstack 0
 11554                           
 11555 ;; *************** function _I2C_Master_Init *****************
 11556 ;; Defined at:
 11557 ;;		line 59 in file "./I2C_LCD.c"
 11558 ;; Parameters:    Size  Location     Type
 11559 ;;		None
 11560 ;; Auto vars:     Size  Location     Type
 11561 ;;		None
 11562 ;; Return value:  Size  Location     Type
 11563 ;;                  1    wreg      void 
 11564 ;; Registers used:
 11565 ;;		wreg, status,2
 11566 ;; Tracked objects:
 11567 ;;		On entry : 0/0
 11568 ;;		On exit  : 0/0
 11569 ;;		Unchanged: 0/0
 11570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11571 ;;      Params:         0       0       0       0       0       0       0
 11572 ;;      Locals:         0       0       0       0       0       0       0
 11573 ;;      Temps:          0       0       0       0       0       0       0
 11574 ;;      Totals:         0       0       0       0       0       0       0
 11575 ;;Total ram usage:        0 bytes
 11576 ;; Hardware stack levels used: 1
 11577 ;; This function calls:
 11578 ;;		Nothing
 11579 ;; This function is called by:
 11580 ;;		_main
 11581 ;; This function uses a non-reentrant model
 11582 ;;
 11583                           
 11584                           	psect	text36
 11585  0005FC                     __ptext36:
 11586                           	callstack 0
 11587  0005FC                     _I2C_Master_Init:
 11588                           	callstack 0
 11589  0005FC  FFFF               	dw	65535	; assembler added errata NOP
 11590  0005FE                     
 11591                           ;./I2C_LCD.c: 61:   SSPCON1 = 0x28;
 11592  0005FE  0E28               	movlw	40
 11593  000600  6EC6               	movwf	198,c	;volatile
 11594                           
 11595                           ;./I2C_LCD.c: 62:   SSPCON2 = 0x00;
 11596  000602  0E00               	movlw	0
 11597  000604  6EC5               	movwf	197,c	;volatile
 11598                           
 11599                           ;./I2C_LCD.c: 63:   SSPSTAT = 0x00;
 11600  000606  0E00               	movlw	0
 11601  000608  6EC7               	movwf	199,c	;volatile
 11602                           
 11603                           ;./I2C_LCD.c: 64:   SSPADD = ((20000000/4)/100000) - 1;
 11604  00060A  0E31               	movlw	49
 11605  00060C  6EC8               	movwf	200,c	;volatile
 11606  00060E                     
 11607                           ;./I2C_LCD.c: 65:   TRISC3 = 1;
 11608  00060E  8694               	bsf	3988,3,c	;volatile
 11609  000610                     
 11610                           ;./I2C_LCD.c: 66:   TRISC4 = 1;
 11611  000610  8894               	bsf	3988,4,c	;volatile
 11612  000612  0012               	return		;funcret
 11613  000614  FFFF               	dw	65535	; errata NOP
 11614  000616                     __end_of_I2C_Master_Init:
 11615                           	callstack 0
 11616                           
 11617                           	psect	rparam
 11618  0000                     
 11619                           	psect	idloc
 11620                           
 11621                           ;Config register IDLOC0 @ 0x200000
 11622                           ;	unspecified, using default values
 11623  200000                     	org	2097152
 11624  200000  FF                 	db	255
 11625                           
 11626                           ;Config register IDLOC1 @ 0x200001
 11627                           ;	unspecified, using default values
 11628  200001                     	org	2097153
 11629  200001  FF                 	db	255
 11630                           
 11631                           ;Config register IDLOC2 @ 0x200002
 11632                           ;	unspecified, using default values
 11633  200002                     	org	2097154
 11634  200002  FF                 	db	255
 11635                           
 11636                           ;Config register IDLOC3 @ 0x200003
 11637                           ;	unspecified, using default values
 11638  200003                     	org	2097155
 11639  200003  FF                 	db	255
 11640                           
 11641                           ;Config register IDLOC4 @ 0x200004
 11642                           ;	unspecified, using default values
 11643  200004                     	org	2097156
 11644  200004  FF                 	db	255
 11645                           
 11646                           ;Config register IDLOC5 @ 0x200005
 11647                           ;	unspecified, using default values
 11648  200005                     	org	2097157
 11649  200005  FF                 	db	255
 11650                           
 11651                           ;Config register IDLOC6 @ 0x200006
 11652                           ;	unspecified, using default values
 11653  200006                     	org	2097158
 11654  200006  FF                 	db	255
 11655                           
 11656                           ;Config register IDLOC7 @ 0x200007
 11657                           ;	unspecified, using default values
 11658  200007                     	org	2097159
 11659  200007  FF                 	db	255
 11660                           
 11661                           	psect	config
 11662                           
 11663                           ; Padding undefined space
 11664  300000                     	org	3145728
 11665  300000  FF                 	db	255
 11666                           
 11667                           ;Config register CONFIG1H @ 0x300001
 11668                           ;	Oscillator Selection bits
 11669                           ;	OSC = HS, HS oscillator
 11670                           ;	Oscillator System Clock Switch Enable bit
 11671                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
 11672  300001                     	org	3145729
 11673  300001  22                 	db	34
 11674                           
 11675                           ;Config register CONFIG2L @ 0x300002
 11676                           ;	Power-up Timer Enable bit
 11677                           ;	PWRT = OFF, PWRT disabled
 11678                           ;	Brown-out Reset Enable bit
 11679                           ;	BOR = OFF, Brown-out Reset disabled
 11680                           ;	Brown-out Reset Voltage bits
 11681                           ;	BORV = 20, VBOR set to 2.0V
 11682  300002                     	org	3145730
 11683  300002  0D                 	db	13
 11684                           
 11685                           ;Config register CONFIG2H @ 0x300003
 11686                           ;	Watchdog Timer Enable bit
 11687                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 11688                           ;	Watchdog Timer Postscale Select bits
 11689                           ;	WDTPS = 128, 1:128
 11690  300003                     	org	3145731
 11691  300003  0E                 	db	14
 11692                           
 11693                           ; Padding undefined space
 11694  300004                     	org	3145732
 11695  300004  FF                 	db	255
 11696                           
 11697                           ;Config register CONFIG3H @ 0x300005
 11698                           ;	CCP2 Mux bit
 11699                           ;	CCP2MUX = OFF, CCP2 input/output is multiplexed with RB3
 11700  300005                     	org	3145733
 11701  300005  00                 	db	0
 11702                           
 11703                           ;Config register CONFIG4L @ 0x300006
 11704                           ;	Stack Full/Underflow Reset Enable bit
 11705                           ;	STVR = OFF, Stack Full/Underflow will not cause RESET
 11706                           ;	Low Voltage ICSP Enable bit
 11707                           ;	LVP = OFF, Low Voltage ICSP disabled
 11708                           ;	Background Debugger Enable bit
 11709                           ;	DEBUG = 0x1, unprogrammed default
 11710  300006                     	org	3145734
 11711  300006  80                 	db	128
 11712                           
 11713                           ; Padding undefined space
 11714  300007                     	org	3145735
 11715  300007  FF                 	db	255
 11716                           
 11717                           ;Config register CONFIG5L @ 0x300008
 11718                           ;	Code Protection bit
 11719                           ;	CP0 = ON, Block 0 (000200-001FFFh) code protected
 11720                           ;	Code Protection bit
 11721                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code protected
 11722                           ;	Code Protection bit
 11723                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code protected
 11724                           ;	Code Protection bit
 11725                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code protected
 11726  300008                     	org	3145736
 11727  300008  0E                 	db	14
 11728                           
 11729                           ;Config register CONFIG5H @ 0x300009
 11730                           ;	Boot Block Code Protection bit
 11731                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code protected
 11732                           ;	Data EEPROM Code Protection bit
 11733                           ;	CPD = OFF, Data EEPROM not code protected
 11734  300009                     	org	3145737
 11735  300009  C0                 	db	192
 11736                           
 11737                           ;Config register CONFIG6L @ 0x30000A
 11738                           ;	Write Protection bit
 11739                           ;	WRT0 = OFF, Block 0 (000200-001FFFh) not write protected
 11740                           ;	Write Protection bit
 11741                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write protected
 11742                           ;	Write Protection bit
 11743                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write protected
 11744                           ;	Write Protection bit
 11745                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write protected
 11746  30000A                     	org	3145738
 11747  30000A  0F                 	db	15
 11748                           
 11749                           ;Config register CONFIG6H @ 0x30000B
 11750                           ;	Configuration Register Write Protection bit
 11751                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write protected
 11752                           ;	Boot Block Write Protection bit
 11753                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write protected
 11754                           ;	Data EEPROM Write Protection bit
 11755                           ;	WRTD = OFF, Data EEPROM not write protected
 11756  30000B                     	org	3145739
 11757  30000B  E0                 	db	224
 11758                           
 11759                           ;Config register CONFIG7L @ 0x30000C
 11760                           ;	Table Read Protection bit
 11761                           ;	EBTR0 = OFF, Block 0 (000200-001FFFh) not protected from Table Reads executed in other
      +                           blocks
 11762                           ;	Table Read Protection bit
 11763                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from Table Reads executed in other
      +                           blocks
 11764                           ;	Table Read Protection bit
 11765                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from Table Reads executed in other
      +                           blocks
 11766                           ;	Table Read Protection bit
 11767                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from Table Reads executed in other
      +                           blocks
 11768  30000C                     	org	3145740
 11769  30000C  0F                 	db	15
 11770                           
 11771                           ;Config register CONFIG7H @ 0x30000D
 11772                           ;	Boot Block Table Read Protection bit
 11773                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from Table Reads executed in ot
      +                          her blocks
 11774  30000D                     	org	3145741
 11775  30000D  40                 	db	64
 11776                           tosu	equ	0xFFF
 11777                           tosh	equ	0xFFE
 11778                           tosl	equ	0xFFD
 11779                           stkptr	equ	0xFFC
 11780                           pclatu	equ	0xFFB
 11781                           pclath	equ	0xFFA
 11782                           pcl	equ	0xFF9
 11783                           tblptru	equ	0xFF8
 11784                           tblptrh	equ	0xFF7
 11785                           tblptrl	equ	0xFF6
 11786                           tablat	equ	0xFF5
 11787                           prodh	equ	0xFF4
 11788                           prodl	equ	0xFF3
 11789                           indf0	equ	0xFEF
 11790                           postinc0	equ	0xFEE
 11791                           postdec0	equ	0xFED
 11792                           preinc0	equ	0xFEC
 11793                           plusw0	equ	0xFEB
 11794                           fsr0h	equ	0xFEA
 11795                           fsr0l	equ	0xFE9
 11796                           wreg	equ	0xFE8
 11797                           indf1	equ	0xFE7
 11798                           postinc1	equ	0xFE6
 11799                           postdec1	equ	0xFE5
 11800                           preinc1	equ	0xFE4
 11801                           plusw1	equ	0xFE3
 11802                           fsr1h	equ	0xFE2
 11803                           fsr1l	equ	0xFE1
 11804                           bsr	equ	0xFE0
 11805                           indf2	equ	0xFDF
 11806                           postinc2	equ	0xFDE
 11807                           postdec2	equ	0xFDD
 11808                           preinc2	equ	0xFDC
 11809                           plusw2	equ	0xFDB
 11810                           fsr2h	equ	0xFDA
 11811                           fsr2l	equ	0xFD9
 11812                           status	equ	0xFD8

Data Sizes:
    Strings     438
    Constant    0
    Data        2
    BSS         904
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    122     127
    BANK0           128     36     101
    BANK1           256    214     250
    BANK2           256      0     200
    BANK3           256      0     200
    BANK4           256      0     200
    BANK5           256      0     200

Pointer List with Targets:

    strlen@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 40
		 -> buffer(BANK0[40]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_36(CODE[3]), STR_34(CODE[3]), STR_29(CODE[3]), STR_25(CODE[3]), 
		 -> STR_23(CODE[3]), STR_20(CODE[3]), STR_17(CODE[3]), STR_14(CODE[3]), 
		 -> STR_11(CODE[3]), STR_9(CODE[3]), STR_6(CODE[3]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 3
		 -> STR_36(CODE[3]), STR_34(CODE[3]), STR_29(CODE[3]), STR_25(CODE[3]), 
		 -> STR_23(CODE[3]), STR_20(CODE[3]), STR_17(CODE[3]), STR_14(CODE[3]), 
		 -> STR_11(CODE[3]), STR_9(CODE[3]), STR_6(CODE[3]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 32
		 -> dbuf(BANK1[32]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_36(CODE[3]), STR_34(CODE[3]), STR_29(CODE[3]), STR_25(CODE[3]), 
		 -> STR_23(CODE[3]), STR_20(CODE[3]), STR_17(CODE[3]), STR_14(CODE[3]), 
		 -> STR_11(CODE[3]), STR_9(CODE[3]), STR_6(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 40
		 -> buffer(BANK0[40]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S1143_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 40
		 -> buffer(BANK0[40]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 40
		 -> buffer(BANK0[40]), 

    sort_down@p	PTR int  size(2) Largest target is 200
		 -> queueDown(BANK3[200]), 

    sort@p	PTR int  size(2) Largest target is 200
		 -> queueUp(BANK2[200]), 

    noRepeat@po	PTR int  size(2) Largest target is 200
		 -> queueDown(BANK3[200]), queueUp(BANK2[200]), 

    LCD_Write_String@Str	PTR unsigned char  size(2) Largest target is 40
		 -> STR_56(CODE[14]), STR_55(CODE[11]), STR_54(CODE[14]), STR_53(CODE[11]), 
		 -> STR_52(CODE[14]), STR_51(CODE[11]), STR_50(CODE[12]), STR_49(CODE[9]), 
		 -> STR_48(CODE[12]), STR_47(CODE[9]), STR_46(CODE[12]), STR_45(CODE[9]), 
		 -> STR_44(CODE[12]), STR_43(CODE[10]), STR_42(CODE[15]), STR_41(CODE[15]), 
		 -> STR_40(CODE[15]), STR_39(CODE[15]), STR_38(CODE[12]), STR_37(CODE[10]), 
		 -> STR_35(CODE[12]), STR_33(CODE[10]), STR_32(CODE[10]), STR_31(CODE[12]), 
		 -> STR_30(CODE[15]), STR_28(CODE[12]), STR_27(CODE[14]), STR_26(CODE[12]), 
		 -> STR_24(CODE[15]), STR_22(CODE[13]), STR_21(CODE[12]), STR_19(CODE[15]), 
		 -> STR_18(CODE[12]), STR_16(CODE[13]), STR_15(CODE[14]), STR_13(CODE[15]), 
		 -> STR_12(CODE[12]), STR_10(CODE[13]), STR_8(CODE[15]), STR_7(CODE[12]), 
		 -> buffer(BANK0[40]), STR_5(CODE[13]), STR_4(CODE[14]), STR_3(CODE[14]), 
		 -> STR_2(CODE[14]), STR_1(CODE[14]), 


Critical Paths under _main in COMRAM

    _main->_modeControl
    _modeControl->_selectionMode
    _selectionMode->_rutine_down
    _rutine_up->_controlCalls
    _rutine_down->_controlCalls
    _controlCalls->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _dataPanelUp->_noRepeat
    _LCD_Write_String->_LCD_Write_Char
    _LCD_Write_Char->_LCD_Write_4Bit
    _LCD_Set_Cursor->_LCD_CMD
    _LCD_Clear->_LCD_CMD
    _LCD_Init->_LCD_CMD
    _LCD_CMD->_LCD_Write_4Bit
    _LCD_Write_4Bit->_IO_Expander_Write
    _IO_Expander_Write->_I2C_Master_Write
    _I2C_Master_Write->_I2C_Master_Wait
    _I2C_Master_Stop->_I2C_Master_Wait
    _I2C_Master_Start->_I2C_Master_Wait

Critical Paths under _main in BANK0

    _main->_modeControl
    _modeControl->_selectionMode
    _rutine_up->_controlCalls
    _rutine_down->_controlCalls

Critical Paths under _main in BANK1

    _rutine_up->_sort_down
    _rutine_down->_sort
    _dataPanelUp->_sort
    _dataPanelUp->_sort_down

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  145247
                                            120 COMRAM     2     2      0
                    _I2C_Master_Init
                          _LCD_Clear
                           _LCD_Init
                     _LCD_Set_Cursor
                   _LCD_Write_String
                               _boot
                       _bootAscensor
                        _modeControl
 ---------------------------------------------------------------------------------
 (1) _modeControl                                          4     2      2  135937
                                            118 COMRAM     2     2      0
                                             34 BANK0      2     0      2
                          _LCD_Clear
                     _LCD_Set_Cursor
                   _LCD_Write_String
                        _dataPanelUp
                      _selectionMode
 ---------------------------------------------------------------------------------
 (2) _selectionMode                                        7     5      2  112687
                                            113 COMRAM     5     5      0
                                             32 BANK0      2     0      2
                          _LCD_Clear
                     _LCD_Set_Cursor
                   _LCD_Write_String
                        _rutine_down
                          _rutine_up
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _rutine_up                                            8     6      2   43075
                                            103 COMRAM     8     6      2
                          _LCD_Clear
                     _LCD_Set_Cursor
                   _LCD_Write_String
                       _controlCalls
                           _noRepeat
                          _sort_down
 ---------------------------------------------------------------------------------
 (3) _rutine_down                                         10     8      2   51553
                                            103 COMRAM    10     8      2
                          _LCD_Clear
                     _LCD_Set_Cursor
                   _LCD_Write_String
                       _controlCalls
                           _noRepeat
                               _sort
                            _sprintf
 ---------------------------------------------------------------------------------
 (4) _controlCalls                                        34    34      0   31243
                                            101 COMRAM     2     2      0
                                              0 BANK0     32    32      0
                          _LCD_Clear
                     _LCD_Set_Cursor
                   _LCD_Write_String
                        _dataPanelUp
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             16    10      6    7976
                                             87 COMRAM    14     8      6
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6    6105
                                             79 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           42    36      6    5751
                                             63 COMRAM    16    10      6
                               _dtoa
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    4358
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    2709
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (5) _dataPanelUp                                          2     2      0   13244
                                             18 COMRAM     2     2      0
                          _LCD_Clear
                     _LCD_Set_Cursor
                   _LCD_Write_String
                           _noRepeat
                               _sort
                          _sort_down
 ---------------------------------------------------------------------------------
 (4) _sort_down                                          223   219      4    1092
                                              0 COMRAM     9     5      4
                                              0 BANK1    214   214      0
 ---------------------------------------------------------------------------------
 (6) _sort                                               223   219      4    1548
                                              0 COMRAM     9     5      4
                                              0 BANK1    214   214      0
 ---------------------------------------------------------------------------------
 (4) _noRepeat                                            18    14      4    1493
                                              0 COMRAM    18    14      4
 ---------------------------------------------------------------------------------
 (6) _LCD_Write_String                                     6     4      2    4479
                                              5 COMRAM     6     4      2
                     _LCD_Write_Char
 ---------------------------------------------------------------------------------
 (7) _LCD_Write_Char                                       1     1      0     133
                                              4 COMRAM     1     1      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (6) _LCD_Set_Cursor                                       4     3      1    4499
                                              5 COMRAM     4     3      1
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (6) _LCD_Clear                                            0     0      0     133
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (1) _bootAscensor                                         2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _boot                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_Init                                             3     3      0     199
                                              5 COMRAM     3     3      0
                  _IO_Expander_Write
                            _LCD_CMD
 ---------------------------------------------------------------------------------
 (7) _LCD_CMD                                              1     1      0     133
                                              4 COMRAM     1     1      0
                     _LCD_Write_4Bit
 ---------------------------------------------------------------------------------
 (8) _LCD_Write_4Bit                                       1     1      0      89
                                              3 COMRAM     1     1      0
                  _IO_Expander_Write
 ---------------------------------------------------------------------------------
 (9) _IO_Expander_Write                                    1     1      0      44
                                              2 COMRAM     1     1      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (10) _I2C_Master_Write                                    1     1      0      22
                                              1 COMRAM     1     1      0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (10) _I2C_Master_Stop                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (10) _I2C_Master_Start                                    0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (11) _I2C_Master_Wait                                     1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
   _LCD_Clear
     _LCD_CMD
       _LCD_Write_4Bit
         _IO_Expander_Write
           _I2C_Master_Start
             _I2C_Master_Wait
           _I2C_Master_Stop
             _I2C_Master_Wait
           _I2C_Master_Write
             _I2C_Master_Wait
   _LCD_Init
     _IO_Expander_Write
     _LCD_CMD
   _LCD_Set_Cursor
     _LCD_CMD
   _LCD_Write_String
     _LCD_Write_Char
       _LCD_Write_4Bit
   _boot
   _bootAscensor
   _modeControl
     _LCD_Clear
     _LCD_Set_Cursor
     _LCD_Write_String
     _dataPanelUp
       _LCD_Clear
       _LCD_Set_Cursor
       _LCD_Write_String
       _noRepeat
       _sort
       _sort_down
     _selectionMode
       _LCD_Clear
       _LCD_Set_Cursor
       _LCD_Write_String
       _rutine_down
         _LCD_Clear
         _LCD_Set_Cursor
         _LCD_Write_String
         _controlCalls
           _LCD_Clear
           _LCD_Set_Cursor
           _LCD_Write_String
           _dataPanelUp
           _sprintf
             _vfprintf
               _vfpfcnvrt
                 _dtoa
                   ___aodiv
                   ___aomod
                   _abs
                     ___aomod (ARG)
                   _pad
                     _fputc
                       _putch
                     _fputs
                       _fputc
                     _strlen
                 _fputc
         _noRepeat
         _sort
         _sprintf
       _rutine_up
         _LCD_Clear
         _LCD_Set_Cursor
         _LCD_Write_String
         _controlCalls
         _noRepeat
         _sort_down
       _sprintf

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0      C8      14       78.1%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      C8      13       78.1%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C8      11       78.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C8       9       78.1%
BITBANK1           100      0       0       6        0.0%
BANK1              100     D6      FA       7       97.7%
BITBANK0            80      0       0       4        0.0%
BANK0               80     24      65       5       78.9%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     7A      7F       1      100.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     4FE      15        0.0%
DATA                 0      0     4FE       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Nov 25 17:35:27 2021

                                                                     l81 06F0  
                                                                     l90 05E4  
                                                                     l75 0612  
                                                                     l84 05D8  
                                                                     l78 06C2  
                                                                     l99 0680  
                                                                     _RS 007F  
                                                                    l101 0694  
                                                                    l102 0696  
                                                                    l111 0DB0  
                                                                    l120 0630  
                                                                    l114 0670  
                                                                    l123 064E  
                                                                    l220 0884  
                                                                    l117 06BC  
                                                                    l302 29AE  
                                                                    l215 086C  
                                                                    l216 088A  
                                                                    l232 0F02  
                                                                    l153 05F8  
                                                                    l129 0AEE  
                                                                    l233 0F0A  
                                                         ??_bootAscensor 0001  
                                                                    l218 0870  
                                                                    l138 0A5E  
                                                                    l250 1A36  
                                                                    l242 18FC  
                                                                    l227 0EB0  
                                                                    l323 397A  
                                                                    l315 3FFA  
                                                                    l500 2394  
                                                                    l501 2404  
                                                                    l190 0970  
                                                                    l342 3CDA  
                                                                    l502 246A  
                                                                    l407 1802  
                                                                    l503 24D0  
                                                                    l504 2540  
                                                                    l417 132C  
                                                                    l441 2B4C  
                                                                    l426 140C  
                                                                    l267 1C68  
                                                                    l259 1B2E  
                                                                    l451 2CD8  
                                                                    l428 1410  
                                                                    l452 2CEE  
                                                                    l471 2FB4  
                                                                    l624 124E  
                                                                    l472 2FCA  
                                                                    l456 2D80  
                                                                    l393 1F28  
                                                                    l457 2D96  
                                                                    l482 3164  
                                                                    l466 2F0C  
                                                                    l483 317A  
                                                                    l467 2F22  
                                                                    l491 32F4  
                                                                    l637 109A  
                                                                    l487 320C  
                                                                    l488 3222  
                                                                    _PEN 007E2A  
                                                                    _SEN 007E28  
                                                                    _abs 0736  
                                                                    _pad 0BD4  
                                                                    wreg 000FE8  
                                                        __end_of_LCD_CMD 0634  
                                                    LCD_Write_String@Str 0006  
                                                         _LCD_Set_Cursor 09E8  
                                                                   ?_abs 0013  
                                                                   l1220 0CB6  
                                                                   l1215 0C28  
                                                                   l1218 0C74  
                                                                   l1226 1FE6  
                                                                   l1228 1FF0  
                                                                   l1260 08FC  
                                                                   l1253 15EC  
                                                                   l1246 2260  
                                                                   l3200 06C2  
                                                                   l1264 0772  
                                                                   l4000 39FC  
                                                                   l3202 06D6  
                                                                   l1290 05CC  
                                                                   l3210 0B2A  
                                                                   l4010 3A40  
                                                                   l4002 3A20  
                                                                   l1267 077C  
                                                                   l1259 08F4  
                                                                   l3220 05D6  
                                                                   l3300 0F46  
                                                                   l3212 0B4E  
                                                                   l3204 0AF4  
                                                                   l1188 0820  
                                                                   l4020 3A98  
                                                                   l4012 3A4E  
                                                                   l4004 3A26  
                                                                   l3222 05DE  
                                                                   l3310 0FAA  
                                                                   l3302 0F4A  
                                                                   l3214 0B86  
                                                                   l3206 0B0A  
                                                                   l3230 0784  
                                                                   l4110 3D2A  
                                                                   l4102 3CEE  
                                                                   l4030 3ADE  
                                                                   l4014 3A7E  
                                                                   l4022 3A9C  
                                                                   l4006 3A2A  
                                                                   l1279 0BCE  
                                                                   l1287 07CE  
                                                                   l3224 05E2  
                                                                   l3320 103C  
                                                                   l3312 0FC0  
                                                                   l3304 0F5E  
                                                                   l3208 0B1E  
                                                                   l3232 0790  
                                                                   l1296 0732  
                                                                   l3240 0702  
                                                                   l3400 2156  
                                                                   l4200 3FDE  
                                                                   l4120 3D8A  
                                                                   l4112 3D58  
                                                                   l4104 3CF8  
                                                                   l4040 3B18  
                                                                   l4032 3AE2  
                                                                   l4024 3AC0  
                                                                   l4016 3A88  
                                                                   l4008 3A34  
                                                                   l5000 2498  
                                                                   l3218 05D2  
                                                                   l3226 0678  
                                                                   l3250 10A0  
                                                                   l3314 0FD4  
                                                                   l3322 1042  
                                                                   l3306 0F7E  
                                                                   l3234 07A4  
                                                                   l3242 0708  
                                                                   l3330 0BD6  
                                                                   l3410 21DE  
                                                                   l3402 2178  
                                                                   l4202 3FEE  
                                                                   l4130 3DE8  
                                                                   l4122 3D94  
                                                                   l4114 3D5C  
                                                                   l4106 3D12  
                                                                   l4050 3B5E  
                                                                   l4042 3B28  
                                                                   l4034 3AE4  
                                                                   l4026 3AC4  
                                                                   l4018 3A94  
                                                                   l4210 1C88  
                                                                   l5010 24C8  
                                                                   l5002 24A2  
                                                                   l3228 067C  
                                                                   l3260 10EE  
                                                                   l3252 10A4  
                                                                   l3324 1058  
                                                                   l3316 1008  
                                                                   l3308 0FA2  
                                                                   l3236 07A8  
                                                                   l3244 0726  
                                                                   l3340 0C36  
                                                                   l3332 0BEA  
                                                                   l3420 2224  
                                                                   l3412 21F0  
                                                                   l3404 2196  
                                                                   l4140 3E24  
                                                                   l4132 3DF4  
                                                                   l4124 3DA0  
                                                                   l4116 3D80  
                                                                   l4108 3D1C  
                                                                   l4060 3BC8  
                                                                   l4052 3B6C  
                                                                   l4036 3AFC  
                                                                   l4028 3ADC  
                                                                   l4220 1CF6  
                                                                   l4212 1C96  
                                                                   l4300 161C  
                                                                   l5100 32CC  
                                                                   l5020 24FE  
                                                                   l5012 24CA  
                                                                   l5004 24AE  
                                                                   l3430 0626  
                                                                   l5102 0A3E  
                                                                   l3510 181C  
                                                                   l3270 114A  
                                                                   l3262 110E  
                                                                   l3254 10B6  
                                                                   l3326 1078  
                                                                   l3318 1028  
                                                                   l3238 06F6  
                                                                   l3342 0C4C  
                                                                   l3334 0BFE  
                                                                   l3414 21F8  
                                                                   l3422 2236  
                                                                   l3406 21B4  
                                                                   l4142 3E3C  
                                                                   l4134 3DF8  
                                                                   l4126 3DAE  
                                                                   l4118 3D86  
                                                                   l4150 3E5C  
                                                                   l4070 3C20  
                                                                   l4062 3BCC  
                                                                   l4054 3B9A  
                                                                   l4038 3B12  
                                                                   l4046 3B38  
                                                                   l4230 1D58  
                                                                   l4222 1D02  
                                                                   l4214 1CA2  
                                                                   l4206 1C6E  
                                                                   l4310 1688  
                                                                   l4302 1628  
                                                                   l5030 252C  
                                                                   l5022 2508  
                                                                   l5006 24B2  
                                                                   l3248 0656  
                                                                   l3360 06AA  
                                                                   l3504 05EA  
                                                                   l3432 0638  
                                                                   l3512 1824  
                                                                   l3600 1B0A  
                                                                   l3280 11DA  
                                                                   l3272 1160  
                                                                   l3264 1112  
                                                                   l3256 10D6  
                                                                   l3352 0738  
                                                                   l3344 0C50  
                                                                   l3336 0C12  
                                                                   l3416 220E  
                                                                   l3408 21C6  
                                                                   l3440 1442  
                                                                   l4160 3EC2  
                                                                   l4152 3E78  
                                                                   l4144 3E3E  
                                                                   l4128 3DDE  
                                                                   l4136 3DFC  
                                                                   l4080 3C62  
                                                                   l4072 3C2A  
                                                                   l4064 3BD6  
                                                                   l4056 3B9E  
                                                                   l4048 3B54  
                                                                   l4240 1DF8  
                                                                   l4232 1D5C  
                                                                   l4224 1D0E  
                                                                   l4216 1CBA  
                                                                   l4208 1C72  
                                                                   l4320 16E2  
                                                                   l4312 1694  
                                                                   l4304 1640  
                                                                   l4400 13BE  
                                                                   l5040 2562  
                                                                   l5032 2538  
                                                                   l5024 2512  
                                                                   l5016 24E4  
                                                                   l5008 24BC  
                                                                   l4410 05FE  
                                                                   l3362 06B2  
                                                                   l3426 061A  
                                                                   l3506 05F0  
                                                                   l3434 063C  
                                                                   l3522 187A  
                                                                   l3530 18D8  
                                                                   l3514 1836  
                                                                   l3610 1BC2  
                                                                   l3602 1B3A  
                                                                   l3290 122C  
                                                                   l3282 11DC  
                                                                   l3274 1174  
                                                                   l3266 1120  
                                                                   l3258 10DA  
                                                                   l3354 0756  
                                                                   l3346 0C88  
                                                                   l3338 0C1E  
                                                                   l3418 221A  
                                                                   l3370 1FA2  
                                                                   l3450 14B8  
                                                                   l3442 1450  
                                                                   l4170 3F06  
                                                                   l4162 3EE6  
                                                                   l4154 3E82  
                                                                   l4146 3E42  
                                                                   l4138 3E20  
                                                                   l4090 3C86  
                                                                   l4082 3C66  
                                                                   l4074 3C36  
                                                                   l4066 3BE2  
                                                                   l4058 3BC2  
                                                                   l4250 1E3A  
                                                                   l4242 1E02  
                                                                   l4234 1D82  
                                                                   l4226 1D12  
                                                                   l4218 1CD8  
                                                                   l4330 1784  
                                                                   l4322 1708  
                                                                   l4314 1698  
                                                                   l4306 165E  
                                                                   l4402 13C2  
                                                                   l5050 2592  
                                                                   l5042 256E  
                                                                   l5034 253A  
                                                                   l5026 251E  
                                                                   l5018 24F2  
                                                                   l4412 060E  
                                                                   l3356 069E  
                                                                   l3428 061E  
                                                                   l4420 0CC8  
                                                                   l3436 0644  
                                                                   l3540 1990  
                                                                   l3532 1908  
                                                                   l3524 18B0  
                                                                   l3516 1842  
                                                                   l3508 180A  
                                                                   l3620 1C40  
                                                                   l3612 1BC8  
                                                                   l3604 1B80  
                                                                   l3700 27DA  
                                                                   l3284 11F0  
                                                                   l3276 1188  
                                                                   l3268 1142  
                                                                   l3348 0C9C  
                                                                   l3380 2010  
                                                                   l3372 1FB8  
                                                                   l3364 1F30  
                                                                   l3460 1574  
                                                                   l3452 1502  
                                                                   l3444 1462  
                                                                   l4180 3F5E  
                                                                   l4172 3F14  
                                                                   l4164 3EEC  
                                                                   l4156 3E90  
                                                                   l4148 3E44  
                                                                   l4092 3C9E  
                                                                   l4084 3C7E  
                                                                   l4076 3C3A  
                                                                   l4068 3BF0  
                                                                   l4260 1E9A  
                                                                   l4252 1E40  
                                                                   l4244 1E0E  
                                                                   l4236 1DBC  
                                                                   l4228 1D1E  
                                                                   l4340 17C4  
                                                                   l4332 1788  
                                                                   l4324 1742  
                                                                   l4316 16A4  
                                                                   l4308 167C  
                                                                   l4404 13E6  
                                                                   l4500 2AD4  
                                                                   l5052 259C  
                                                                   l5044 2578  
                                                                   l5028 2522  
                                                                   l4414 0610  
                                                                   l3358 06A2  
                                                                   l4430 0D20  
                                                                   l4422 0CDE  
                                                                   l3550 1A0E  
                                                                   l3542 1996  
                                                                   l3534 194E  
                                                                   l3526 18CA  
                                                                   l3518 1872  
                                                                   l3622 1C44  
                                                                   l3614 1BCC  
                                                                   l3606 1B84  
                                                                   l3702 27F6  
                                                                   l3278 11BA  
                                                                   l3286 11F6  
                                                                   l3294 0F10  
                                                                   l3390 2044  
                                                                   l3382 2020  
                                                                   l3374 1FBA  
                                                                   l3366 1F50  
                                                                   l3462 1588  
                                                                   l3446 1466  
                                                                   l3438 1418  
                                                                   l3630 08D0  
                                                                   l4190 3FA4  
                                                                   l4174 3F44  
                                                                   l4182 3F62  
                                                                   l4166 3EF0  
                                                                   l4158 3EBE  
                                                                   l4094 3CB4  
                                                                   l4086 3C80  
                                                                   l4078 3C3E  
                                                                   l4270 1EDA  
                                                                   l4262 1E9E  
                                                                   l4254 1E58  
                                                                   l4246 1E12  
                                                                   l4238 1DC8  
                                                                   l4334 17AC  
                                                                   l4326 174A  
                                                                   l4318 16DE  
                                                                   l4350 17F8  
                                                                   l4406 13EC  
                                                                   l4502 2AEA  
                                                                   l5054 25A8  
                                                                   l5046 2582  
                                                                   l5038 2554  
                                                                   l4440 0D90  
                                                                   l4432 0D30  
                                                                   l4424 0CEE  
                                                                   l4416 0CBE  
                                                                   l3480 0A66  
                                                                   l3560 0DDC  
                                                                   l3552 1A12  
                                                                   l3544 199A  
                                                                   l3536 1952  
                                                                   l3528 18D2  
                                                                   l3616 1C06  
                                                                   l3608 1BA8  
                                                                   l3720 285C  
                                                                   l3704 27FE  
                                                                   l3640 25FC  
                                                                   l3632 25B6  
                                                                   l3288 120C  
                                                                   l3296 0F14  
                                                                   l3392 20C6  
                                                                   l3384 2028  
                                                                   l3376 1FDA  
                                                                   l3368 1F82  
                                                                   l3456 153A  
                                                                   l3448 1490  
                                                                   l3472 15B2  
                                                                   l3624 0892  
                                                                   l4192 3FA8  
                                                                   l4184 3F86  
                                                                   l4176 3F4E  
                                                                   l4168 3EFA  
                                                                   l4096 3CBA  
                                                                   l4088 3C84  
                                                                   l3800 3416  
                                                                   l4280 1F00  
                                                                   l4264 1EC2  
                                                                   l4256 1E60  
                                                                   l4248 1E16  
                                                                   l4336 17B2  
                                                                   l4328 1756  
                                                                   l4408 1408  
                                                                   l4360 127C  
                                                                   l4600 2DA4  
                                                                   l4520 2B70  
                                                                   l4512 2B3A  
                                                                   l5056 25AA  
                                                                   l5048 258E  
                                                                   l4434 0D50  
                                                                   l4426 0D04  
                                                                   l4418 0CC2  
                                                                   l4442 0902  
                                                                   l4450 0832  
                                                                   l3490 09F0  
                                                                   l3482 0A72  
                                                                   l3570 0E80  
                                                                   l3562 0E1E  
                                                                   l3554 0DB6  
                                                                   l3546 19D4  
                                                                   l3538 1976  
                                                                   l3618 1C12  
                                                                   l3730 28CA  
                                                                   l3722 286A  
                                                                   l3706 281A  
                                                                   l3650 2672  
                                                                   l3642 2614  
                                                                   l3634 25CE  
                                                                   l3298 0F26  
                                                                   l3394 20CC  
                                                                   l3386 2032  
                                                                   l3378 1FFA  
                                                                   l3474 15DA  
                                                                   l3458 1566  
                                                                   l3466 1596  
                                                                   l3626 089A  
                                                                   l4194 3FAA  
                                                                   l4186 3F8A  
                                                                   l4178 3F5A  
                                                                   l4098 3CCA  
                                                                   l3810 345C  
                                                                   l3802 341A  
                                                                   l4282 1F0A  
                                                                   l4266 1EC8  
                                                                   l4258 1E6C  
                                                                   l4290 1F1E  
                                                                   l4338 17BC  
                                                                   l4346 17D0  
                                                                   l4370 12DA  
                                                                   l4362 1288  
                                                                   l4354 1254  
                                                                   l4602 2DA8  
                                                                   l4522 2B74  
                                                                   l4514 2B62  
                                                                   l4506 2B06  
                                                                   l4436 0D56  
                                                                   l4428 0D0A  
                                                                   l4444 0906  
                                                                   l4452 084A  
                                                                   l3492 09FE  
                                                                   l3484 0AA6  
                                                                   l3572 0EA4  
                                                                   l3564 0E32  
                                                                   l3556 0DBE  
                                                                   l3548 19E0  
                                                                   l3580 1A3C  
                                                                   l3732 28D2  
                                                                   l3724 2876  
                                                                   l3708 2822  
                                                                   l3644 2632  
                                                                   l3652 267A  
                                                                   l3636 25E2  
                                                                   l3396 20D2  
                                                                   l3388 203C  
                                                                   l3468 15A6  
                                                                   l3628 08A8  
                                                                   l4196 3FC2  
                                                                   l4188 3FA2  
                                                                   l3900 371E  
                                                                   l3820 3496  
                                                                   l3812 3460  
                                                                   l3804 343E  
                                                                   l4284 1F12  
                                                                   l4268 1ED2  
                                                                   l4276 1EE8  
                                                                   l4380 1328  
                                                                   l4372 12DE  
                                                                   l4364 1294  
                                                                   l4356 126C  
                                                                   l4700 305C  
                                                                   l4620 2E28  
                                                                   l4612 2DF4  
                                                                   l4604 2DAA  
                                                                   l4540 2BF4  
                                                                   l4532 2BC0  
                                                                   l4524 2B76  
                                                                   l4516 2B6C  
                                                                   l4508 2B1E  
                                                                   l4438 0D76  
                                                                   l4446 090C  
                                                                   l4454 085C  
                                                                   l3494 0A0C  
                                                                   l3486 0AAA  
                                                                   l3566 0E78  
                                                                   l3574 0EB6  
                                                                   l3558 0DCA  
                                                                   l3590 1AA4  
                                                                   l3582 1A4E  
                                                                   l3750 2948  
                                                                   l3734 28EE  
                                                                   l3726 288E  
                                                                   l3718 2848  
                                                                   l3670 26E6  
                                                                   l3646 264E  
                                                                   l3638 25F0  
                                                                   l3662 26A0  
                                                                   l3398 2136  
                                                                   l4198 3FD8  
                                                                   l3910 3760  
                                                                   l3902 3728  
                                                                   l3830 34DA  
                                                                   l3822 34A6  
                                                                   l3814 3462  
                                                                   l3806 3442  
                                                                   l4278 1EF4  
                                                                   l4294 15F4  
                                                                   l4390 1368  
                                                                   l4366 12C4  
                                                                   l4374 12E2  
                                                                   l4358 126E  
                                                                   l4382 1334  
                                                                   l4710 30B2  
                                                                   l4702 3068  
                                                                   l4630 2E66  
                                                                   l4622 2E34  
                                                                   l4614 2E0C  
                                                                   l4606 2DC2  
                                                                   l4550 2C32  
                                                                   l4542 2C00  
                                                                   l4534 2BD8  
                                                                   l4526 2B8E  
                                                                   l4518 2B6E  
                                                                   l4470 29FE  
                                                                   ?_pad 0011  
                                                                   l4448 0826  
                                                                   l3496 0A1A  
                                                                   l3488 09EC  
                                                                   l3576 0EDA  
                                                                   l3568 0E7C  
                                                                   l3592 1AAC  
                                                                   l3584 1A56  
                                                                   l3752 297C  
                                                                   l3728 28AE  
                                                                   l3736 28F6  
                                                                   l3672 2706  
                                                                   l3680 274E  
                                                                   l3664 26B4  
                                                                   l3648 2656  
                                                                   l3760 07F4  
                                                                   l3920 3784  
                                                                   l3912 3764  
                                                                   l3904 3734  
                                                                   l3840 3544  
                                                                   l3832 34E8  
                                                                   l3816 347A  
                                                                   l3808 345A  
                                                                   l4296 15F8  
                                                                   l4392 1374  
                                                                   l4384 134C  
                                                                   l4376 1306  
                                                                   l4368 12CE  
                                                                   l4720 30DC  
                                                                   l4712 30BC  
                                                                   l4704 3074  
                                                                   l4632 2E6A  
                                                                   l4624 2E3E  
                                                                   l4608 2DD8  
                                                                   l4552 2C36  
                                                                   l4544 2C0C  
                                                                   l4528 2BA4  
                                                                   l4480 2A60  
                                                                   l4472 2A08  
                                                                   l4464 29B6  
                                                                   l3498 0A28  
                                                                   l3578 0EDE  
                                                                   l3594 1AE2  
                                                                   l3586 1A68  
                                                                   l3746 291C  
                                                                   l3674 2722  
                                                                   l3666 26C2  
                                                                   l3690 2774  
                                                                   l3762 0810  
                                                                   l3754 07D4  
                                                                   l3922 379C  
                                                                   l3914 377C  
                                                                   l3906 3738  
                                                                   l3850 359C  
                                                                   l3842 3548  
                                                                   l3834 3516  
                                                                   l3818 3490  
                                                                   l3826 34B6  
                                                                   l3770 3318  
                                                                   l4298 160E  
                                                                   l4394 13A4  
                                                                   l4386 134E  
                                                                   l4378 130C  
                                                                   l4722 30F2  
                                                                   l4714 30BE  
                                                                   l4706 308C  
                                                                   l4642 2EB6  
                                                                   l4634 2E6C  
                                                                   l4650 2EEA  
                                                                   l4626 2E4A  
                                                                   l4562 2C82  
                                                                   l4554 2C38  
                                                                   l4546 2C26  
                                                                   l4570 2CB6  
                                                                   l4490 2AAA  
                                                                   l4482 2A6A  
                                                                   l4466 29CE  
                                                                   l4474 2A18  
                                                                   l3596 1AFC  
                                                                   l3588 1A74  
                                                                   l3748 2930  
                                                                   l3692 2788  
                                                                   l3676 272A  
                                                                   l3668 26CE  
                                                                   l3756 07E4  
                                                                   l3940 383A  
                                                                   l3924 37B2  
                                                                   l3916 377E  
                                                                   l3908 373C  
                                                                   l3932 37D8  
                                                                   l3860 35DE  
                                                                   l3852 35A6  
                                                                   l3844 3552  
                                                                   l3836 351A  
                                                                   l3828 34D0  
                                                                   l3780 337A  
                                                                   l3772 3330  
                                                                   l4396 13AE  
                                                                   l4388 135C  
                                                                   l4740 3188  
                                                                   l4716 30C2  
                                                                   l4708 3096  
                                                                   l4660 2F36  
                                                                   l4652 2F24  
                                                                   l4644 2ECE  
                                                                   l4636 2E84  
                                                                   l4628 2E64  
                                                                   l4580 2D02  
                                                                   l4572 2CF0  
                                                                   l4564 2C9A  
                                                                   l4556 2C50  
                                                                   l4548 2C30  
                                                                   l4492 2AB4  
                                                                   l4484 2A7A  
                                                                   l4476 2A30  
                                                                   l4468 29FA  
                                                                   l3598 1B04  
                                                                   l3694 2796  
                                                                   l3678 2746  
                                                                   l3758 07EC  
                                                                   l3950 3876  
                                                                   l3942 383E  
                                                                   l3934 37F4  
                                                                   l3926 37B8  
                                                                   l3918 3782  
                                                                   l3870 3602  
                                                                   l3862 35E2  
                                                                   l3854 35B2  
                                                                   l3846 355E  
                                                                   l3838 353E  
                                                                   l3790 33BE  
                                                                   l3782 339E  
                                                                   l3774 333A  
                                                                   l3766 32FC  
                                                                   l4398 13BA  
                                                                   l4742 318C  
                                                                   l4726 310E  
                                                                   l4718 30C4  
                                                                   l4734 3142  
                                                                   l4670 2F98  
                                                                   l4662 2F4E  
                                                                   l4654 2F2E  
                                                                   l4638 2E9A  
                                                                   l4590 2D64  
                                                                   l4582 2D1A  
                                                                   l4574 2CFA  
                                                                   l4558 2C66  
                                                                   l4494 2AB6  
                                                                   l4486 2A86  
                                                                   l4478 2A5C  
                                                                   l4910 228E  
                                                                   l4902 2264  
                                                                   l3696 27A2  
                                                                   l3960 38D6  
                                                                   l3952 3882  
                                                                   l3944 3862  
                                                                   l3936 37FE  
                                                                   l3928 37C8  
                                                                   l3880 365C  
                                                                   l3864 35FA  
                                                                   l3856 35B6  
                                                                   l3848 356C  
                                                                   l3792 33CC  
                                                                   l3784 33A4  
                                                                   l3776 3348  
                                                                   l3768 330E  
                                                                   l3872 361A  
                                                                   l4760 3224  
                                                                   l4752 31D8  
                                                                   l4744 318E  
                                                                   l4736 317C  
                                                                   l4728 3126  
                                                                   l4680 2FD8  
                                                                   l4664 2F64  
                                                                   l4656 2F30  
                                                                   l4584 2D30  
                                                                   l4576 2CFC  
                                                                   l4496 2ABA  
                                                                   l4488 2A92  
                                                                   l4920 22CA  
                                                                   l4912 2298  
                                                                   l4904 2272  
                                                                   l3698 27BA  
                                                                   l3970 391E  
                                                                   l3962 38DA  
                                                                   l3954 3890  
                                                                   l3946 3868  
                                                                   l3938 380C  
                                                                   l3890 36C6  
                                                                   l3882 366A  
                                                                   l3874 362E  
                                                                   l3866 35FC  
                                                                   l3858 35BA  
                                                                   l3794 33FC  
                                                                   l3786 33A8  
                                                                   l3778 3376  
                                                                   l4770 324E  
                                                                   l4762 322E  
                                                                   l4754 31F0  
                                                                   l4746 31A6  
                                                                   l4738 3186  
                                                                   l4682 2FDC  
                                                                   l4658 2F34  
                                                                   l4578 2D00  
                                                                   l4498 2ABC  
                                                                   l4930 230A  
                                                                   l4922 22DA  
                                                                   l4914 22A4  
                                                                   l4906 2278  
                                                                   l3980 3954  
                                                                   l3972 3920  
                                                                   l3956 38C0  
                                                                   l3964 38DE  
                                                                   l3948 386C  
                                                                   l3892 36CA  
                                                                   l3884 3698  
                                                                   l3876 3638  
                                                                   l3868 3600  
                                                                   l3796 3406  
                                                                   l3788 33B2  
                                                                   l4772 3264  
                                                                   l4764 3230  
                                                                   l4748 31BC  
                                                                   l4692 3028  
                                                                   l4684 2FDE  
                                                                   l4676 2FCC  
                                                                   l4668 2F80  
                                                                   l4596 2D98  
                                                                   l4588 2D4C  
                                                                   l4940 234C  
                                                                   l4932 231E  
                                                                   l4924 22F2  
                                                                   l4916 22BE  
                                                                   l4908 2282  
                                                                   l3990 3998  
                                                                   l3982 395A  
                                                                   l3974 3924  
                                                                   l3966 3902  
                                                                   l3958 38CA  
                                                                   l3894 36D4  
                                                                   l3886 369C  
                                                                   l3878 3652  
                                                                   l3798 3412  
                                                                   l4766 3234  
                                                                   l4694 3040  
                                                                   l4686 2FF6  
                                                                   l4678 2FD6  
                                                                   l4598 2DA2  
                                                                   l4950 2374  
                                                                   l4942 2358  
                                                                   l4934 232C  
                                                                   l4926 22F6  
                                                                   l4918 22C2  
                                                                   l3992 39B2  
                                                                   l3984 396A  
                                                                   l3976 3926  
                                                                   l3968 3906  
                                                                   l3896 36E0  
                                                                   l3888 36C0  
                                                                   l4776 3280  
                                                                   l4768 3236  
                                                                   l4688 300C  
                                                                   l4960 23CC  
                                                                   l4952 2376  
                                                                   l4944 235C  
                                                                   l4936 2338  
                                                                   l4928 22FE  
                                                                   l3994 39BC  
                                                                   l3978 393E  
                                                                   l3898 36EE  
                                                                   l4778 3298  
                                                                   l4786 32B4  
                                                                   l4970 23FC  
                                                                   l4962 23D6  
                                                                   l4954 23A8  
                                                                   l4946 2366  
                                                                   l4938 2342  
                                                                   l3996 39CA  
                                                                   l3988 398E  
                                                                   l4980 2432  
                                                                   l4972 23FE  
                                                                   l4964 23E2  
                                                                   l4956 23B6  
                                                                   l4948 2372  
                                                                   l3998 39F8  
                                                                   l4990 2462  
                                                                   l4982 243C  
                                                                   l4966 23E6  
                                                                   l4958 23C2  
                                                                   l4992 2464  
                                                                   l4984 2448  
                                                                   l4976 2418  
                                                                   l4968 23F0  
                                                                   l4986 244C  
                                                                   l4978 2426  
                                                                   l4996 247E  
                                                                   l4988 2456  
                                                                   l4998 248C  
                                                                   STR_1 7ED0  
                                                                   STR_2 7EDE  
                                                                   STR_3 7EEC  
                                                                   STR_4 7EFA  
                                                                   STR_5 7F32  
                                                                   STR_6 7FFC  
                                                                   STR_7 7F72  
                                                                   STR_8 7E49  
                                                                   STR_9 7FFC  
                                                                   u3000 2842  
                                                                   u3001 283C  
                                                                   u3010 285A  
                                                                   u3011 2854  
                                                                   u3020 288C  
                                                                   u2300 07CC  
                                                                   u3100 343C  
                                                                   u3021 2886  
                                                                   u2301 07C6  
                                                                   u3101 3436  
                                                                   u2230 06D4  
                                                                   u3030 28AC  
                                                                   u2310 0724  
                                                                   u3110 348E  
                                                                   u2231 06CE  
                                                                   u3031 28A6  
                                                                   u2311 071E  
                                                                   u3111 3488  
                                                                   u2240 06EE  
                                                                   u3040 2916  
                                                                   u2320 10B4  
                                                                   u2400 0F5C  
                                                                   u3200 37F2  
                                                                   u3120 34CE  
                                                                   u4000 300A  
                                                                   u2241 06E8  
                                                                   u3041 2910  
                                                                   u2321 10AE  
                                                                   u2401 0F56  
                                                                   u3201 37EC  
                                                                   u3121 34C8  
                                                                   u4001 3004  
                                                                   u3050 292E  
                                                                   u2330 10EC  
                                                                   u2410 0FA0  
                                                                   u2250 0B08  
                                                                   u3210 3860  
                                                                   u3130 353C  
                                                                   u4010 3022  
                                                                   u3051 2928  
                                                                   u2331 10E6  
                                                                   u2411 0F9A  
                                                                   u2251 0B02  
                                                                   u3211 385A  
                                                                   u3131 3536  
                                                                   u4011 301C  
                                                                   u3060 2946  
                                                                   u2420 0FD2  
                                                                   u2260 0B1E  
                                                                   u2500 1F62  
                                                                   u3300 3BC0  
                                                                   u3220 3900  
                                                                   u3140 35DC  
                                                                   u4100 3162  
                                                                   u4020 303E  
                                                                   u3061 2940  
                                                                   u2341 111A  
                                                                   u2421 0FCC  
                                                                   u2261 0B18  
                                                                   u2501 1F5A  
                                                                   u3301 3BBA  
                                                                   u3221 38FA  
                                                                   u3141 35D6  
                                                                   u4101 315C  
                                                                   u4021 3038  
                                                                   u2350 1140  
                                                                   u2430 1006  
                                                                   u2270 0B4C  
                                                                   u2510 1F66  
                                                                   u3310 3C60  
                                                                   u3230 3952  
                                                                   u3150 362C  
                                                                   u3070 330C  
                                                                   u4110 3178  
                                                                   u4030 3056  
                                                                   u2351 113A  
                                                                   u2431 1000  
                                                                   u2271 0B46  
                                                                   u3311 3C5A  
                                                                   u3231 394C  
                                                                   u3151 3626  
                                                                   u3071 3306  
                                                                   u4111 3172  
                                                                   u4031 3050  
                                                                   u2360 1172  
                                                                   u2440 1056  
                                                                   u2280 0B86  
                                                                   u2600 21B2  
                                                                   u2520 1F80  
                                                                   u3400 3FD6  
                                                                   u3320 3CB2  
                                                                   u3240 398C  
                                                                   u3160 3650  
                                                                   u3080 332E  
                                                                   u4200 32AE  
                                                                   u4120 31BA  
                                                                   u4040 308A  
                                                                   u2361 116C  
                                                                   u2441 1050  
                                                                   u2281 0B80  
                                                                   u2601 21AC  
                                                                   u2521 1F7A  
                                                                   u3401 3FD0  
                                                                   u3321 3CAC  
                                                                   u3241 3986  
                                                                   u3161 364A  
                                                                   u3081 3328  
                                                                   u4201 32A8  
                                                                   u4121 31B4  
                                                                   u4041 3084  
                                                                   u2290 0692  
                                                                   u2370 11B8  
                                                                   u2450 0BE8  
                                                                   u2610 21C6  
                                                                   u2530 1FB6  
                                                                   u3330 3CEC  
                                                                   u3250 39B0  
                                                                   u3170 36BE  
                                                                   u3090 339C  
                                                                   u3410 1C86  
                                                                   u4130 31D2  
                                                                   u4050 30B0  
                                                                   u2291 068C  
                                                                   u2371 11B2  
                                                                   u2451 0BE2  
                                                                   u2611 21C0  
                                                                   u2531 1FB0  
                                                                   u3331 3CE6  
                                                                   u3251 39AA  
                                                                   u3171 36B8  
                                                                   u3091 3396  
                                                                   u3411 1C80  
                                                                   u4131 31CC  
                                                                   u4051 30AA  
                                                                   u2700 0ADA  
                                                                   u2380 120A  
                                                                   u2460 0C10  
                                                                   u2620 21DC  
                                                                   u2540 1FD8  
                                                                   u3340 3D10  
                                                                   u3260 3A1E  
                                                                   u3180 375E  
                                                                   u3420 1CD6  
                                                                   u3500 1706  
                                                                   u4140 31EE  
                                                                   u4060 30F0  
                                                                   u2381 1204  
                                                                   u2461 0C0A  
                                                                   u2621 21D6  
                                                                   u2541 1FD2  
                                                                   u3341 3D0A  
                                                                   u3261 3A18  
                                                                   u3181 3758  
                                                                   u3421 1CD0  
                                                                   u3501 1700  
                                                                   u4141 31E8  
                                                                   u4061 30EA  
                                                                   u2710 0AEC  
                                                                   u2390 0F24  
                                                                   u2470 0C72  
                                                                   u2630 21F0  
                                                                   u2550 200E  
                                                                   u3350 3D7E  
                                                                   u3270 3ABE  
                                                                   u3190 37B0  
                                                                   u3430 1CF6  
                                                                   u3510 17AA  
                                                                   u4150 3206  
                                                                   u4070 3108  
                                                                   u2711 0AE6  
                                                                   u2391 0F1E  
                                                                   u2471 0C6C  
                                                                   u2631 21EA  
                                                                   u2551 2008  
                                                                   u3351 3D78  
                                                                   u3271 3AB8  
                                                                   u3191 37AA  
                                                                   u3431 1CF0  
                                                                   u3511 17A4  
                                                                   u4151 3200  
                                                                   u4071 3102  
                                                                   u2800 0ED8  
                                                                   u2720 1870  
                                                                   u2480 0C86  
                                                                   u2640 220C  
                                                                   u2560 2020  
                                                                   u3360 3E1E  
                                                                   u3280 3B10  
                                                                   u3440 1D80  
                                                                   u3520 126A  
                                                                   u4160 3220  
                                                                   u4080 3124  
                                                                   u3600 29CC  
                                                                   u4400 23A6  
                                                                   u2801 0ED2  
                                                                   u2721 186A  
                                                                   u2481 0C80  
                                                                   u2641 2206  
                                                                   u2561 201A  
                                                                   u3361 3E18  
                                                                   u3281 3B0A  
                                                                   u3441 1D7A  
                                                                   u3521 1264  
                                                                   u4161 321A  
                                                                   u4081 311E  
                                                                   u3601 29C6  
                                                                   u4401 23A0  
                                                                   u2810 0F00  
                                                                   u2730 18AE  
                                                                   u2490 0754  
                                                                   u2570 2154  
                                                                   u2650 1440  
                                                                   u3370 3E76  
                                                                   u3290 3B52  
                                                                   u3450 1E38  
                                                                   u3530 1304  
                                                                   u4170 3262  
                                                                   u4090 313C  
                                                                   u3610 2A2E  
                                                                   u4410 2416  
                                                                   u2707 0AD0  
                                                                   u2811 0EFA  
                                                                   u2731 18A8  
                                                                   u2491 074E  
                                                                   u2571 214E  
                                                                   u2651 143A  
                                                                   u3371 3E70  
                                                                   u3291 3B4C  
                                                                   u3451 1E32  
                                                                   u3531 12FE  
                                                                   u4171 325C  
                                                                   u4091 3136  
                                                                   u3611 2A28  
                                                                   u4411 2410  
                                                                   u2740 18FA  
                                                                   u2820 1AA2  
                                                                   u2900 2612  
                                                                   u2580 2176  
                                                                   u2660 148E  
                                                                   u3380 3EE4  
                                                                   u3460 1EC0  
                                                                   u3540 1326  
                                                                   u4180 327A  
                                                                   u3700 2BD6  
                                                                   u3620 2AA8  
                                                                   u4420 247C  
                                                                   u2741 18F4  
                                                                   u2821 1A9C  
                                                                   u2901 260C  
                                                                   u2581 2170  
                                                                   u2661 1488  
                                                                   u3381 3EDE  
                                                                   u3461 1EBA  
                                                                   u3541 1320  
                                                                   u4181 3274  
                                                                   u3701 2BD0  
                                                                   u3621 2AA2  
                                                                   u4421 2476  
                                                                   u2750 1974  
                                                                   u2830 1AE0  
                                                                   u2910 2630  
                                                                   u2590 2194  
                                                                   u2670 14B8  
                                                                   u3390 3F84  
                                                                   u3470 160C  
                                                                   u3550 134A  
                                                                   u4190 3296  
                                                                   u3710 2BEE  
                                                                   u3630 2AE8  
                                                                   u4430 24E2  
                                                                   u2751 196E  
                                                                   u2831 1ADA  
                                                                   u2911 262A  
                                                                   u2591 218E  
                                                                   u2671 14B2  
                                                                   u3391 3F7E  
                                                                   u3471 1606  
                                                                   u3551 1344  
                                                                   u4191 3290  
                                                                   u3711 2BE8  
                                                                   u3631 2AE2  
                                                                   u4431 24DC  
                                                                   u2760 19D2  
                                                                   u2840 1B2C  
                                                                   u2920 269A  
                                                                   u2680 1564  
                                                                   u3480 165C  
                                                                   u3560 13E4  
                                                                   u3800 2D46  
                                                                   u3720 2C24  
                                                                   u3640 2B00  
                                                                   u4440 2552  
                                                                   u2761 19CC  
                                                                   u2841 1B26  
                                                                   u2921 2694  
                                                                   u2681 155E  
                                                                   u3481 1656  
                                                                   u3561 13DE  
                                                                   u3801 2D40  
                                                                   u3721 2C1E  
                                                                   u3641 2AFA  
                                                                   u4441 254C  
                                                                   u2690 0AA2  
                                                                   u2770 1A34  
                                                                   u2850 1BA6  
                                                                   u2930 26B2  
                                                                   u3490 167C  
                                                                   u3570 1406  
                                                                   u3810 2D62  
                                                                   u3730 2C64  
                                                                   u3650 2B1C  
                                                                   u4370 22BC  
                                                                   u2771 1A2E  
                                                                   u2851 1BA0  
                                                                   u2931 26AC  
                                                                   u3491 1676  
                                                                   u3571 1400  
                                                                   u4507 2DB4  
                                                                   u3811 2D5C  
                                                                   u3731 2C5E  
                                                                   u3651 2B16  
                                                                   u4371 22B6  
                                                                   u3580 085A  
                                                                   u2780 0E1C  
                                                                   u2860 1C04  
                                                                   u2940 26E4  
                                                                   u3900 2EB0  
                                                                   u3820 2D7A  
                                                                   u3740 2C7C  
                                                                   u3660 2B34  
                                                                   u4380 22F0  
                                                                   u3581 0854  
                                                                   u2781 0E16  
                                                                   u2861 1BFE  
                                                                   u2941 26DE  
                                                                   u3901 2EAA  
                                                                   u4517 2E76  
                                                                   u3821 2D74  
                                                                   u3741 2C76  
                                                                   u3661 2B2E  
                                                                   u4381 22EA  
                                                                   u3590 0882  
                                                                   u2790 0EA2  
                                                                   u2870 1C66  
                                                                   u2950 2704  
                                                                   u3910 2ECC  
                                                                   u3830 2D94  
                                                                   u3750 2C98  
                                                                   u3670 2B60  
                                                                   u4390 231C  
                                                                   u3591 087C  
                                                                   u2791 0E9C  
                                                                   u2871 1C60  
                                                                   u2951 26FE  
                                                                   u4607 344C  
                                                                   u4527 2F40  
                                                                   u3911 2EC6  
                                                                   u3831 2D8E  
                                                                   u3751 2C92  
                                                                   u3671 2B5A  
                                                                   u4391 2316  
                                                                   u2960 276E  
                                                                   u2880 08F2  
                                                                   u3920 2EE4  
                                                                   u3840 2DD6  
                                                                   u3760 2CB0  
                                                                   u3680 2BA2  
                                                                   u2697 0A98  
                                                                   u2961 2768  
                                                                   u2881 08EC  
                                                                   u4617 346C  
                                                                   u4537 2FE8  
                                                                   u3921 2EDE  
                                                                   u3841 2DD0  
                                                                   u3761 2CAA  
                                                                   u3681 2B9C  
                                                                   u4457 2382  
                                                                   u2970 2786  
                                                                   u2890 25E0  
                                                                   u3930 2F0A  
                                                                   u3850 2DEE  
                                                                   u3770 2CD6  
                                                                   u3690 2BBA  
                                                                   u2971 2780  
                                                                   u2891 25DA  
                                                                   u4707 3C70  
                                                                   u4627 35EC  
                                                                   u4547 30CE  
                                                                   u3931 2F04  
                                                                   u3851 2DE8  
                                                                   u3771 2CD0  
                                                                   u3691 2BB4  
                                                                   u4467 2AC6  
                                                                   u2980 27B8  
                                                                   u3940 2F20  
                                                                   u3860 2E0A  
                                                                   u3780 2CEC  
                                                                   _RCEN 007E2B  
                                                                   u2981 27B2  
                                                                   u4717 3C90  
                                                                   u4637 360C  
                                                                   u4557 3198  
                                                                   u3941 2F1A  
                                                                   u3861 2E04  
                                                                   u3781 2CE6  
                                                                   u4477 2B80  
                                                                   u2990 27D8  
                                                                   u3950 2F62  
                                                                   u3870 2E22  
                                                                   u3790 2D2E  
                                                                   u4807 0CE4  
                                                                   u2991 27D2  
                                                                   u4727 3E2E  
                                                                   u4647 376E  
                                                                   u4567 3240  
                                                                   u3951 2F5C  
                                                                   u3871 2E1C  
                                                                   u3791 2D28  
                                                                   u4487 2C42  
                                                                   u3960 2F7A  
                                                                   u3880 2E62  
                                                                   u4817 0CFA  
                                                                   u4737 3E4E  
                                                                   u4657 378E  
                                                                   u4577 1632  
                                                                   u3961 2F74  
                                                                   u3881 2E5C  
                                                                   u4497 2D0C  
                                                                   u3970 2F96  
                                                                   u3890 2E98  
                                                                   u4827 0D10  
                                                                   u4747 3F94  
                                                                   u4667 3910  
                                                                   u4587 1CAC  
                                                                   u3971 2F90  
                                                                   u3891 2E92  
                                                                   u3980 2FAE  
                                                                   u4837 0D26  
                                                                   u4757 3FB4  
                                                                   u4677 3930  
                                                                   u4597 1E4A  
                                                                   u3981 2FA8  
                                                                   u3990 2FC8  
                                                                   u4847 0D40  
                                                                   u4767 25C0  
                                                                   u4687 3ACE  
                                                                   u3991 2FC2  
                                                                   u4857 0D60  
                                                                   u4777 05F2  
                                                                   u4697 3AEE  
                                                                   u4867 0D80  
                                                                   u4787 083C  
                                                                   u4877 0DA0  
                                                                   u4797 0CCE  
                                                                   u4887 06B4  
                                                                   _RSEN 007E29  
                                                                   _pLCD 00E3  
                                                      ?_LCD_Write_String 0006  
                                                                   abs@a 0013  
                                                                   _dbuf 01DA  
                                                                   _boot 0900  
                                                                   _main 2264  
                                                                   _dtoa 1F2E  
                                                     __size_of_LCD_Clear 0014  
                                                                   _prec 0084  
                                                                   _nout 0080  
                                                                   pad@i 0018  
                                                                   pad@p 0015  
                                                                   fsr1h 000FE2  
                                                                   fsr2h 000FDA  
                                                                   indf1 000FE7  
                                                                   indf2 000FDF  
                                                                   fsr1l 000FE1  
                                                                   pad@w 001A  
                                                                   fsr2l 000FD9  
                                                                   _sort 1808  
                                                                   start 0002  
                                                     ??_LCD_Write_String 0008  
                                                           ___param_bank 000000  
                                                   LCD_Write_4Bit@Nibble 0004  
                                                            _rutine_down 1C6C  
                                                                  ??_abs 0015  
                                                                  ??_pad 0017  
                                                          ?_controlCalls 0001  
                                                       __end_of_LCD_Init 0DB4  
                                                       ?_I2C_Master_Init 0001  
                                                       ?_I2C_Master_Wait 0001  
                                                       ?_I2C_Master_Stop 0001  
                                                        __end_of___aodiv 1252  
                                                                  ?_boot 0001  
                                                                  ?_main 0001  
                                                                  ?_dtoa 001C  
                                                        __end_of___aomod 109E  
                                                                  _ACKEN 007E2C  
                                                                  _ACKDT 007E2D  
                                                                  STR_10 7F3F  
                                                                  STR_11 7FFC  
                                                                  STR_12 7F72  
                                                                  STR_20 7FFC  
                                                                  STR_21 7F72  
                                                                  STR_13 7E67  
                                                                  STR_14 7FFC  
                                                                  STR_22 7F59  
                                                                  STR_30 7EC1  
                                                                  STR_23 7FFC  
                                                                  STR_31 7F96  
                                                                  STR_15 7F16  
                                                                  STR_32 7FD7  
                                                                  STR_16 7F4C  
                                                                  STR_24 7EA3  
                                                                  STR_40 7E76  
                                                                  STR_25 7FFC  
                                                                  STR_17 7FFC  
                                                                  STR_33 7FCD  
                                                                  STR_41 7E94  
                                                                  STR_50 7F66  
                                                                  STR_26 7F72  
                                                                  STR_18 7F72  
                                                                  STR_34 7FFC  
                                                                  STR_42 7EB2  
                                                                  STR_43 7FC3  
                                                                  STR_51 7FA2  
                                                                  STR_35 7F7E  
                                                                  STR_27 7F24  
                                                                  STR_19 7E85  
                                                                  STR_36 7FFC  
                                                                  STR_28 7EC4  
                                                                  STR_44 7F8A  
                                                                  STR_52 7F08  
                                                                  STR_37 7FCD  
                                                                  STR_29 7FFC  
                                                                  STR_45 7FE1  
                                                                  STR_53 7FAD  
                                                                  STR_54 7F08  
                                                                  STR_38 7F7E  
                                                                  STR_46 7F66  
                                                                  STR_47 7FEA  
                                                                  STR_55 7FB8  
                                                                  STR_39 7E58  
                                                                  STR_56 7F08  
                                                                  STR_48 7F66  
                                                                  STR_49 7FF3  
                                                                  ?_sort 0001  
                                                           vfpfcnvrt@fmt 0042  
                                                           ?_modeControl 00E1  
                                                   __size_of_dataPanelUp 0400  
                                                                  _TRISA 000F92  
                                                                  _TRISB 000F93  
                                                                  _TRISC 000F94  
                                                                  _TRISD 000F95  
                                                                  _SSPIF 007CF3  
                                                 __end_of_LCD_Set_Cursor 0A64  
                                                                  _flags 0086  
                                                         selectionMode@i 0073  
                                                                  _fputc 0AF2  
                                                                  _nowFL 01D8  
                                                                  _fputs 0782  
                                                                  pad@fp 0011  
                                                                  _width 0082  
                                                                  _putch 05CA  
                                                                  dtoa@d 001E  
                                                                  dtoa@i 003E  
                                                                  dtoa@n 0036  
                                                                  dtoa@p 0030  
                                                                  dtoa@s 0034  
                                                                  dtoa@w 0032  
                                                                  tablat 000FF5  
                                                                  sort@h 01D4  
                                                                  sort@j 01D0  
                                                                  sort@k 01CE  
                                                                  sort@p 0001  
                                                                  status 000FD8  
                                                        __end_of_sprintf 0824  
                                                         _LCD_Write_4Bit 069A  
                                                         _LCD_Write_Char 0634  
                                                        __initialization 0974  
                                                           __end_of_boot 0974  
                                                           __end_of_main 25B4  
                                                           __end_of_dtoa 2264  
                                                           __end_of_sort 1A3A  
                                                         ??_controlCalls 0066  
                                                      _IO_Expander_Write 0652  
                                                     ?_IO_Expander_Write 0001  
                                                                 ??_boot 0001  
                                                                 ??_main 0079  
                                                                 ??_dtoa 0026  
                                                                 ??_sort 0005  
                                                      __end_of_LCD_Clear 05FC  
                                                          __activetblptr 000002  
                                                              ??_LCD_CMD 0005  
                                                      ?_I2C_Master_Start 0001  
                                                      ?_I2C_Master_Write 0001  
                                                    ??_IO_Expander_Write 0003  
                                                        ?_LCD_Set_Cursor 0006  
                                                  __end_of_selectionMode 1416  
                                                     ??_I2C_Master_Start 0002  
                                                                 _ADCON1 000FC1  
                                                     ??_I2C_Master_Write 0002  
                                                                 ?_fputc 0001  
                                                                 ?_fputs 000A  
                                                                 ?_putch 0001  
                                                                 _SSPADD 000FC8  
                                                                 _TRISC3 007CA3  
                                                                 _TRISC4 007CA4  
                                                                 _SSPBUF 000FC9  
                                                 __end_of_LCD_Write_4Bit 06C0  
                                                   __end_of_bootAscensor 0890  
                                                 __end_of_LCD_Write_Char 0652  
                                                           sort@sizesMod 01CC  
                                              __end_of_IO_Expander_Write 0674  
                                                           vfprintf@cfmt 0056  
                                                              ??___aodiv 0011  
                                                              ??___aomod 0011  
                                                                 _callsD 0092  
                                                                 _callsU 0094  
                                                         sort_down@sizes 0003  
                                                                 _buffer 0097  
                                                       __end_of_noRepeat 0F0E  
                                                                 clear_0 0992  
                                                                 clear_1 099E  
                                                                 clear_2 09AA  
                                                                 clear_3 09B6  
                                                                 clear_4 09C2  
                                                                 clear_5 09CE  
                                                                 _prevFL 008E  
                                                                 isa$std 000001  
                                                                 pad@buf 0013  
                                                                 dtoa@fp 001C  
                                                                 _strlen 06F4  
                                                                 fputc@c 0001  
                                                                 fputs@c 000E  
                                                                 fputs@i 000F  
                                                                 fputs@s 000A  
                                                           __mediumconst 7E48  
                                                                 tblptrh 000FF7  
                                                                 tblptrl 000FF6  
                                                                 tblptru 000FF8  
                                                                 putch@c 0001  
                                                       __end_of_vfprintf 0900  
                                                              ??_sprintf 005E  
                                                             __accesstop 0080  
                                                __end_of__initialization 09DE  
                                                       _from_down_change 0088  
                                                              ?_LCD_Init 0001  
                                                        ?_LCD_Write_4Bit 0001  
                                                          ___rparam_used 000001  
                                                        ?_LCD_Write_Char 0001  
                                                         __pcstackCOMRAM 0001  
                                                           __pidataBANK0 05C8  
                                                          __end_of_fputc 0BD4  
                                                          __end_of_fputs 07D2  
                                                          __end_of_putch 05D0  
                                                   __size_of_modeControl 0946  
                                                           sort_down@pos 01C8  
                                                                ??_fputc 0005  
                                                                ??_fputs 000E  
                                                                ??_putch 0001  
                                                   __end_of_controlCalls 4000  
                                                             __pbssBANK0 0080  
                                                             __pbssBANK1 01D6  
                                                             __pbssBANK2 0200  
                                                             __pbssBANK3 0300  
                                                             __pbssBANK4 0400  
                                                             __pbssBANK5 0500  
                                                             ??_LCD_Init 0006  
                                             __size_of_IO_Expander_Write 0022  
                                                           ?_rutine_down 0068  
                                                 modeControl@select_mode 00E1  
                                                           noRepeat@comp 0011  
                                                           noRepeat@temp 000D  
                                                                _ACKSTAT 007E2E  
                                                           noRepeat@size 000F  
                                              __size_of_LCD_Write_String 008E  
                                                                ?_strlen 0001  
                                                                _LCD_CMD 0616  
                                                    selectionMode@mode_s 00DF  
                                                     __size_of_vfpfcnvrt 01DC  
                                                                _SSPCON1 000FC6  
                                                                _SSPCON2 000FC5  
                                                                _SSPSTAT 000FC7  
                                                  __size_of_bootAscensor 006C  
                                                     __size_of_sort_down 0232  
                                                              ?_noRepeat 0001  
                                                     __size_of_rutine_up 0216  
                                                                _i2c_add 0096  
                                                                __Hparam 0000  
                                                                __Lparam 0000  
                                                                ___aodiv 109E  
                                                                ___aomod 0F0E  
                                                              ?_vfprintf 0050  
                                                             _modeDown_F 008C  
                                                                __pcinit 0974  
                                                          ??_dataPanelUp 0013  
                                                                __ramtop 0600  
                                                        sort_down@result 0100  
                                                       ??_LCD_Set_Cursor 0007  
                                                                __ptext0 2264  
                                                                __ptext1 29B4  
                                                                __ptext2 1252  
                                                                __ptext3 15F2  
                                                                __ptext4 1C6C  
                                                                __ptext5 32FA  
                                                                __ptext6 07D2  
                                                                __ptext7 0890  
                                                                __ptext8 1416  
                                                                __ptext9 1F2E  
                                                           rutine_down@i 006E  
                                                        __size_of_strlen 0042  
                                                           __size_of_abs 004C  
                                                     controlCalls@i1_620 00D3  
                                                     controlCalls@i1_630 00D7  
                                                     controlCalls@i1_640 00DB  
                                                     controlCalls@i1_616 00D1  
                                                     controlCalls@i1_625 00D5  
                                                     controlCalls@i1_635 00D9  
                                                     controlCalls@i1_644 00DD  
                                                           __size_of_pad 00E6  
                                                           _bootAscensor 0824  
                                               __size_of_I2C_Master_Init 001A  
                                                                _tasksUp 007B  
                                               __size_of_I2C_Master_Wait 0034  
                                               __size_of_I2C_Master_Stop 000C  
                                                              _LCD_Clear 05E8  
                                                                _queueUp 0200  
                                                                _sprintf 07D2  
                                                   end_of_initialization 09DE  
                                                             ??_noRepeat 0005  
                                                                fputc@fp 0003  
                                                          __Lmediumconst 7E48  
                                                                fputs@fp 000C  
                                              __size_of_I2C_Master_Start 000C  
                                              __size_of_I2C_Master_Write 0026  
                                                      __end_of_vfpfcnvrt 15F2  
                                                                postdec1 000FE5  
                                                                postdec2 000FDD  
                                                                postinc0 000FEE  
                                                                postinc1 000FE6  
                                                                postinc2 000FDE  
                                                                sort@pos 01C8  
                                                             ??_vfprintf 0056  
                                                                strlen@a 0003  
                                                                strlen@s 0001  
                                                      __end_of_sort_down 1C6C  
                                                              _PORTAbits 000F80  
                                                              _PORTBbits 000F81  
                                                              _PORTDbits 000F83  
                                                      __end_of_rutine_up 1808  
                                                             LCD_CMD@CMD 0005  
                                                  __size_of_controlCalls 0D06  
                                                    __end_of_dataPanelUp 29B4  
                                                             ?_LCD_Clear 0001  
                                                       ??_LCD_Write_4Bit 0004  
                                                      LCD_Write_String@i 000A  
                                                       ??_LCD_Write_Char 0005  
                                                      __size_of_LCD_Init 00FA  
                                                 __size_of_selectionMode 01C4  
                                                           _controlCalls 32FA  
                                                            vfpfcnvrt@ap 0044  
                                                            vfpfcnvrt@fp 0040  
                                                            vfpfcnvrt@ll 0048  
                                                   __size_of_rutine_down 02C2  
                                                       _LCD_Write_String 0A64  
                                                         __end_of_strlen 0736  
                                                    start_initialization 0974  
                                                            __end_of_abs 0782  
                                                            __end_of_pad 0CBA  
                                                      ??_I2C_Master_Init 0001  
                                                      ??_I2C_Master_Wait 0001  
                                                      ??_I2C_Master_Stop 0002  
                                                             noRepeat@po 0001  
                                                            vfprintf@fmt 0052  
                                                          sort_down@temp 01D2  
                                                          sort_down@nums 01CA  
                                                         _from_up_change 008A  
                                                            __pdataBANK0 00E3  
                                                            _callsInDown 0500  
                                                            _dataPanelUp 25B4  
                                                               ??_strlen 0003  
                                                          ??_modeControl 0077  
                                                               ?_LCD_CMD 0001  
                                                            __pbssCOMRAM 007B  
                                                          __pcstackBANK0 00BF  
                                                          __pcstackBANK1 0100  
                                                       ___aodiv@dividend 0001  
                                                            ??_LCD_Clear 0006  
                                                          _selectionMode 1252  
                                                              _call_init 0090  
                                                              _callsInUp 0400  
                                                       _I2C_Master_Start 05D0  
                                                      __size_of_noRepeat 015A  
                                                       _I2C_Master_Write 0674  
                                                              _dtoa$1216 002E  
                                                  IO_Expander_Write@Data 0003  
                                                          __pmediumconst 7E48  
                                                               ?___aodiv 0001  
                                                               ?___aomod 0001  
                                                       ___aodiv@quotient 0013  
                                                     selectionMode@i_670 0075  
                                                      sort_down@sizesMod 01CC  
                                                   I2C_Master_Write@data 0002  
                                                      __size_of_vfprintf 0070  
                                                          noRepeat@shift 000B  
                                                          noRepeat@sixes 0003  
                                                         ?_selectionMode 00DF  
                                                               ?_sprintf 0058  
                                                         __size_of_fputc 00E2  
                                                         __size_of_fputs 0050  
                                                    __end_of_modeControl 32FA  
                                                         __size_of_putch 0006  
                                                            rutine_up@re 006E  
                                                               _LCD_Init 0CBA  
                                                               _LATCbits 000F8B  
                                                               _LATDbits 000F8C  
                                                              _tasksDown 007D  
                                                               _RCONbits 000FD0  
                                                              _vfpfcnvrt 1416  
                                                              _queueDown 0300  
                                                       rutine_down@i_654 006C  
                                                              _sort_down 1A3A  
                                                       __size_of_LCD_CMD 001E  
                                                              _rutine_up 15F2  
                                               __end_of_LCD_Write_String 0AF2  
                                                              noRepeat@t 0009  
                                                               __Hrparam 0000  
                                                             sort@result 0100  
                                                             vfprintf@ap 0054  
                                                               __Lrparam 0000  
                                                             vfprintf@fp 0050  
                                                        controlCalls@i_1 00BF  
                                                        controlCalls@i_2 00C1  
                                                        controlCalls@i_3 00C3  
                                                        controlCalls@i_4 00C5  
                                                        controlCalls@i_5 00C7  
                                                        controlCalls@i_6 00C9  
                                                        controlCalls@i_7 00CB  
                                                        controlCalls@i_8 00CD  
                                                       __size_of___aodiv 01B4  
                                                       __size_of___aomod 0190  
                                                             ?_vfpfcnvrt 0040  
                                                        ___aodiv@divisor 0009  
                                                        ___aodiv@counter 0011  
                                                             sort_down@h 01D4  
                                                             sort_down@j 01D0  
                                                             sort_down@k 01CE  
                                                             sort_down@p 0001  
                                                             sprintf@fmt 005A  
                                                            _modeControl 29B4  
                                                             ?_sort_down 0001  
                                                        _I2C_Master_Init 05FC  
                                                        _I2C_Master_Wait 06C0  
                                                        _I2C_Master_Stop 05DC  
                                                        ??_selectionMode 0072  
                                                             ?_rutine_up 0068  
                                                               __ptext10 0BD4  
                                                               __ptext11 06F4  
                                                               __ptext20 1808  
                                                               __ptext12 0782  
                                                               __ptext21 0DB4  
                                                               __ptext13 0AF2  
                                                               __ptext30 069A  
                                                               __ptext22 0A64  
                                                               __ptext14 05CA  
                                                               __ptext31 0652  
                                                               __ptext23 0634  
                                                               __ptext15 0736  
                                                               __ptext32 0674  
                                                               __ptext24 09E8  
                                                               __ptext16 0F0E  
                                                               __ptext33 05DC  
                                                               __ptext25 05E8  
                                                               __ptext17 109E  
                                                               __ptext34 05D0  
                                                               __ptext26 0824  
                                                               __ptext18 25B4  
                                                               __ptext35 06C0  
                                                               __ptext27 0900  
                                                               __ptext19 1A3A  
                                                               __ptext36 05FC  
                                                               __ptext28 0CBA  
                                                               __ptext29 0616  
                                                __size_of_LCD_Set_Cursor 007C  
                                                       __size_of_sprintf 0052  
                                                          rutine_down@re 0070  
                                                               _noRepeat 0DB4  
                                                        _BackLight_State 00E4  
                                                          __size_of_boot 0074  
                                                          __size_of_main 0350  
                                                          __size_of_dtoa 0336  
                                                               _modeUp_F 01D6  
                                                          __size_of_sort 0232  
                                                             rutine_up@i 006C  
                                                          ??_rutine_down 006A  
                                                               isa$xinst 000000  
                                                               _vfprintf 0890  
                                                           ?_dataPanelUp 0001  
                                                       ___aomod@dividend 0001  
                                               __end_of_I2C_Master_Start 05DC  
                                               __end_of_I2C_Master_Write 069A  
                                                             _INTCONbits 000FF2  
                                                              sort@sizes 0003  
                                                     LCD_Write_Char@Data 0005  
                                                         controlCalls@i1 00CF  
                                                              sprintf@ap 005E  
                                                __size_of_LCD_Write_4Bit 0026  
                                                __size_of_LCD_Write_Char 001E  
                                                __end_of_I2C_Master_Init 0616  
                                                        ___aomod@divisor 0009  
                                                __end_of_I2C_Master_Wait 06F4  
                                                __end_of_I2C_Master_Stop 05E8  
                                                            ??_vfpfcnvrt 0046  
                                                        ___aomod@counter 0011  
                                                        LCD_Init@I2C_Add 0008  
                                                               sort@temp 01D2  
                                                               sort@nums 01CA  
                                                    __end_of_rutine_down 1F2E  
                                                               sprintf@f 0060  
                                                               sprintf@s 0058  
                                                          ?_bootAscensor 0001  
                                                            ??_sort_down 0005  
                                                      LCD_Set_Cursor@COL 0006  
                                                            ??_rutine_up 006A  
                                                      LCD_Set_Cursor@ROW 0009  
                                                           ___aodiv@sign 0012  
                                                           ___aomod@sign 0012  
