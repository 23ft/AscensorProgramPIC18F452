

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Nov  8 09:53:33 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	text4,global,reloc=2,class=CODE,delta=1
    14                           	psect	text5,global,reloc=2,class=CODE,delta=1
    15                           	psect	text6,global,reloc=2,class=CODE,delta=1
    16                           	psect	text7,global,reloc=2,class=CODE,delta=1
    17                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    18                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    19                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    20                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    21                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    23  0000                     
    24                           ; Version 2.20
    25                           ; Generated 12/02/2020 GMT
    26                           ; 
    27                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    28                           ; All rights reserved.
    29                           ; 
    30                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    31                           ; 
    32                           ; Redistribution and use in source and binary forms, with or without modification, are
    33                           ; permitted provided that the following conditions are met:
    34                           ; 
    35                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    36                           ;        conditions and the following disclaimer.
    37                           ; 
    38                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    39                           ;        of conditions and the following disclaimer in the documentation and/or other
    40                           ;        materials provided with the distribution.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC18F452 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58  0000                     _PORTBbits	set	3969
    59  0000                     _LATDbits	set	3980
    60  0000                     _PORTB	set	3969
    61  0000                     _LATD	set	3980
    62  0000                     _PORTAbits	set	3968
    63  0000                     _PORTDbits	set	3971
    64  0000                     _LATCbits	set	3979
    65  0000                     _RCONbits	set	4048
    66  0000                     _TRISC	set	3988
    67  0000                     _TRISA	set	3986
    68  0000                     _TRISD	set	3989
    69  0000                     _TRISB	set	3987
    70  0000                     _ADCON1	set	4033
    71                           
    72                           ; #config settings
    73                           
    74                           	psect	cinit
    75  0009A4                     __pcinit:
    76                           	callstack 0
    77  0009A4                     start_initialization:
    78                           	callstack 0
    79  0009A4                     __initialization:
    80                           	callstack 0
    81                           
    82                           ; Clear objects allocated to BANK1 (200 bytes)
    83  0009A4  EE01  F000         	lfsr	0,__pbssBANK1
    84  0009A8  0EC8               	movlw	200
    85  0009AA                     clear_0:
    86  0009AA  6AEE               	clrf	postinc0,c
    87  0009AC  06E8               	decf	wreg,f,c
    88  0009AE  E1FD               	bnz	clear_0
    89                           
    90                           ; Clear objects allocated to COMRAM (12 bytes)
    91  0009B0  EE00  F028         	lfsr	0,__pbssCOMRAM
    92  0009B4  0E0C               	movlw	12
    93  0009B6                     clear_1:
    94  0009B6  6AEE               	clrf	postinc0,c
    95  0009B8  06E8               	decf	wreg,f,c
    96  0009BA  E1FD               	bnz	clear_1
    97  0009BC                     end_of_initialization:
    98                           	callstack 0
    99  0009BC                     __end_of__initialization:
   100                           	callstack 0
   101  0009BC  9034               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   102  0009BE  9234               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   103  0009C0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   104  0009C2  6EF8               	movwf	tblptru,c
   105  0009C4  0100               	movlb	0
   106  0009C6  EF70  F004         	goto	_main	;jump to C main() function
   107                           
   108                           	psect	bssCOMRAM
   109  000028                     __pbssCOMRAM:
   110                           	callstack 0
   111  000028                     	ds	2
   112  00002A                     _numUps:
   113                           	callstack 0
   114  00002A                     	ds	2
   115  00002C                     _nowFL:
   116                           	callstack 0
   117  00002C                     	ds	2
   118  00002E                     _callFL:
   119                           	callstack 0
   120  00002E                     	ds	2
   121  000030                     _callsD:
   122                           	callstack 0
   123  000030                     	ds	2
   124  000032                     _calls:
   125                           	callstack 0
   126  000032                     	ds	2
   127  000034                     sort@result:
   128                           	callstack 0
   129  000034                     	ds	0
   130  000034                     _queueDown:
   131                           	callstack 0
   132  000034                     	ds	0
   133  000034                     _queueUp:
   134                           	callstack 0
   135  000034                     	ds	0
   136                           
   137                           	psect	bssBANK1
   138  000100                     __pbssBANK1:
   139                           	callstack 0
   140  000100                     _callsInUp:
   141                           	callstack 0
   142  000100                     	ds	200
   143                           
   144                           	psect	cstackCOMRAM
   145  000001                     __pcstackCOMRAM:
   146                           	callstack 0
   147  000001                     ??_callsUp:
   148  000001                     sort@p:
   149                           	callstack 0
   150                           
   151                           ; 2 bytes @ 0x0
   152  000001                     	ds	2
   153  000003                     sort@sizes:
   154                           	callstack 0
   155                           
   156                           ; 2 bytes @ 0x2
   157  000003                     	ds	2
   158  000005                     ??_sort:
   159                           
   160                           ; 1 bytes @ 0x4
   161  000005                     	ds	5
   162  00000A                     sort@pos:
   163                           	callstack 0
   164                           
   165                           ; 2 bytes @ 0x9
   166  00000A                     	ds	2
   167  00000C                     sort@nums:
   168                           	callstack 0
   169                           
   170                           ; 2 bytes @ 0xB
   171  00000C                     	ds	2
   172  00000E                     sort@sizesMod:
   173                           	callstack 0
   174                           
   175                           ; 2 bytes @ 0xD
   176  00000E                     	ds	2
   177  000010                     sort@k:
   178                           	callstack 0
   179                           
   180                           ; 2 bytes @ 0xF
   181  000010                     	ds	2
   182  000012                     sort@j:
   183                           	callstack 0
   184                           
   185                           ; 2 bytes @ 0x11
   186  000012                     	ds	2
   187  000014                     sort@temp:
   188                           	callstack 0
   189                           
   190                           ; 2 bytes @ 0x13
   191  000014                     	ds	2
   192  000016                     sort@h:
   193                           	callstack 0
   194                           
   195                           ; 2 bytes @ 0x15
   196  000016                     	ds	2
   197  000018                     dataPanelUp@UpCalls:
   198                           	callstack 0
   199                           
   200                           ; 2 bytes @ 0x17
   201  000018                     	ds	2
   202  00001A                     dataPanelUp@tamano:
   203                           	callstack 0
   204                           
   205                           ; 2 bytes @ 0x19
   206  00001A                     	ds	2
   207  00001C                     ??_modeUpControl:
   208                           
   209                           ; 1 bytes @ 0x1B
   210  00001C                     	ds	2
   211  00001E                     modeUpControl@i:
   212                           	callstack 0
   213                           
   214                           ; 2 bytes @ 0x1D
   215  00001E                     	ds	2
   216  000020                     modeUpControl@i_426:
   217                           	callstack 0
   218                           
   219                           ; 2 bytes @ 0x1F
   220  000020                     	ds	2
   221  000022                     modeUpControl@i_427:
   222                           	callstack 0
   223                           
   224                           ; 2 bytes @ 0x21
   225  000022                     	ds	2
   226  000024                     modeUpControl@i_428:
   227                           	callstack 0
   228                           
   229                           ; 2 bytes @ 0x23
   230  000024                     	ds	2
   231  000026                     ??_modeUp:
   232                           
   233                           ; 1 bytes @ 0x25
   234  000026                     	ds	2
   235  000028                     
   236                           ; 1 bytes @ 0x27
   237 ;;
   238 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   239 ;;
   240 ;; *************** function _main *****************
   241 ;; Defined at:
   242 ;;		line 399 in file "main.c"
   243 ;; Parameters:    Size  Location     Type
   244 ;;		None
   245 ;; Auto vars:     Size  Location     Type
   246 ;;		None
   247 ;; Return value:  Size  Location     Type
   248 ;;                  1    wreg      void 
   249 ;; Registers used:
   250 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   251 ;; Tracked objects:
   252 ;;		On entry : 0/0
   253 ;;		On exit  : 0/0
   254 ;;		Unchanged: 0/0
   255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   256 ;;      Params:         0       0       0       0       0       0       0
   257 ;;      Locals:         0       0       0       0       0       0       0
   258 ;;      Temps:          0       0       0       0       0       0       0
   259 ;;      Totals:         0       0       0       0       0       0       0
   260 ;;Total ram usage:        0 bytes
   261 ;; Hardware stack levels required when called: 5
   262 ;; This function calls:
   263 ;;		_boot
   264 ;;		_bootAscensor
   265 ;;		_modeUp
   266 ;; This function is called by:
   267 ;;		Startup code after reset
   268 ;; This function uses a non-reentrant model
   269 ;;
   270                           
   271                           	psect	text0
   272  0008E0                     __ptext0:
   273                           	callstack 0
   274  0008E0                     _main:
   275                           	callstack 26
   276  0008E0  FFFF               	dw	65535	; assembler added errata NOP
   277                           
   278                           ;main.c: 400:     boot();
   279  0008E2  ECE5  F004         	call	_boot	;wreg free
   280                           
   281                           ;main.c: 401:     bootAscensor();
   282  0008E6  ECAD  F004         	call	_bootAscensor	;wreg free
   283  0008EA                     l1352:
   284  0008EA  FFFF               	dw	65535	; assembler added errata NOP
   285                           
   286                           ;main.c: 404:         if (PORTBbits.RB6) {
   287  0008EC  AC81               	btfss	129,6,c	;volatile
   288  0008EE  EF7B  F004         	goto	u561
   289  0008F2  EF7E  F004         	goto	u560
   290  0008F6                     u561:
   291  0008F6  FFFF               	dw	65535	; assembler added errata NOP
   292  0008F8  EF88  F004         	goto	l152
   293  0008FC                     u560:
   294  0008FC  FFFF               	dw	65535	; assembler added errata NOP
   295  0008FE                     
   296                           ;main.c: 405:             callFL = 1;
   297  0008FE  0E00               	movlw	0
   298  000900  6E2F               	movwf	(_callFL+1)^0,c
   299  000902  0E01               	movlw	1
   300  000904  6E2E               	movwf	_callFL^0,c
   301  000906                     l1356:
   302  000906  FFFF               	dw	65535	; assembler added errata NOP
   303                           
   304                           ;main.c: 406:             modeUp();
   305  000908  EC14  F004         	call	_modeUp	;wreg free
   306                           
   307                           ;main.c: 407:         }
   308  00090C  EF75  F004         	goto	l1352
   309  000910                     l152:
   310  000910  FFFF               	dw	65535	; assembler added errata NOP
   311  000912  A281               	btfss	129,1,c	;volatile
   312  000914  EF8E  F004         	goto	u571
   313  000918  EF91  F004         	goto	u570
   314  00091C                     u571:
   315  00091C  FFFF               	dw	65535	; assembler added errata NOP
   316  00091E  EF98  F004         	goto	l154
   317  000922                     u570:
   318  000922  FFFF               	dw	65535	; assembler added errata NOP
   319  000924                     
   320                           ;main.c: 409:             callFL = 2;
   321  000924  0E00               	movlw	0
   322  000926  6E2F               	movwf	(_callFL+1)^0,c
   323  000928  0E02               	movlw	2
   324  00092A  6E2E               	movwf	_callFL^0,c
   325  00092C  EF83  F004         	goto	l1356
   326  000930                     l154:
   327  000930  FFFF               	dw	65535	; assembler added errata NOP
   328  000932  A681               	btfss	129,3,c	;volatile
   329  000934  EF9E  F004         	goto	u581
   330  000938  EFA1  F004         	goto	u580
   331  00093C                     u581:
   332  00093C  FFFF               	dw	65535	; assembler added errata NOP
   333  00093E  EFA8  F004         	goto	l153
   334  000942                     u580:
   335  000942  FFFF               	dw	65535	; assembler added errata NOP
   336  000944                     
   337                           ;main.c: 413:             callFL = 3;
   338  000944  0E00               	movlw	0
   339  000946  6E2F               	movwf	(_callFL+1)^0,c
   340  000948  0E03               	movlw	3
   341  00094A  6E2E               	movwf	_callFL^0,c
   342  00094C  EF83  F004         	goto	l1356
   343  000950                     l153:
   344  000950  FFFF               	dw	65535	; assembler added errata NOP
   345  000952  EF75  F004         	goto	l1352
   346  000956  EF0A  F000         	goto	start
   347  00095A                     __end_of_main:
   348                           	callstack 0
   349                           
   350 ;; *************** function _modeUp *****************
   351 ;; Defined at:
   352 ;;		line 360 in file "main.c"
   353 ;; Parameters:    Size  Location     Type
   354 ;;		None
   355 ;; Auto vars:     Size  Location     Type
   356 ;;		None
   357 ;; Return value:  Size  Location     Type
   358 ;;                  1    wreg      void 
   359 ;; Registers used:
   360 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   361 ;; Tracked objects:
   362 ;;		On entry : 0/0
   363 ;;		On exit  : 0/0
   364 ;;		Unchanged: 0/0
   365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   366 ;;      Params:         0       0       0       0       0       0       0
   367 ;;      Locals:         0       0       0       0       0       0       0
   368 ;;      Temps:          2       0       0       0       0       0       0
   369 ;;      Totals:         2       0       0       0       0       0       0
   370 ;;Total ram usage:        2 bytes
   371 ;; Hardware stack levels used: 1
   372 ;; Hardware stack levels required when called: 4
   373 ;; This function calls:
   374 ;;		_callsUp
   375 ;;		_dataPanelUp
   376 ;;		_modeUpControl
   377 ;; This function is called by:
   378 ;;		_main
   379 ;; This function uses a non-reentrant model
   380 ;;
   381                           
   382                           	psect	text1
   383  000828                     __ptext1:
   384                           	callstack 0
   385  000828                     _modeUp:
   386                           	callstack 0
   387  000828  FFFF               	dw	65535	; assembler added errata NOP
   388  00082A                     
   389                           ;main.c: 362:     callsD = 0;
   390  00082A  0E00               	movlw	0
   391  00082C  6E31               	movwf	(_callsD+1)^0,c
   392  00082E  0E00               	movlw	0
   393  000830  6E30               	movwf	_callsD^0,c
   394                           
   395                           ;main.c: 363:     calls = 0;
   396  000832  0E00               	movlw	0
   397  000834  6E33               	movwf	(_calls+1)^0,c
   398  000836  0E00               	movlw	0
   399  000838  6E32               	movwf	_calls^0,c
   400                           
   401                           ;main.c: 364:     numUps = 0;
   402  00083A  0E00               	movlw	0
   403  00083C  6E2B               	movwf	(_numUps+1)^0,c
   404  00083E  0E00               	movlw	0
   405  000840  6E2A               	movwf	_numUps^0,c
   406                           
   407                           ;main.c: 366:     switch(callFL){
   408  000842  EF59  F004         	goto	l1344
   409  000846                     l1324:
   410  000846  FFFF               	dw	65535	; assembler added errata NOP
   411                           
   412                           ;main.c: 369:             if (nowFL == 1){
   413  000848  042C               	decf	_nowFL^0,w,c
   414  00084A  102D               	iorwf	(_nowFL+1)^0,w,c
   415  00084C  A4D8               	btfss	status,2,c
   416  00084E  EF2B  F004         	goto	u541
   417  000852  EF2E  F004         	goto	u540
   418  000856                     u541:
   419  000856  FFFF               	dw	65535	; assembler added errata NOP
   420  000858  EF47  F004         	goto	l143
   421  00085C                     u540:
   422  00085C  FFFF               	dw	65535	; assembler added errata NOP
   423  00085E                     
   424                           ;main.c: 370:                 LATDbits.LD0 = 1;
   425  00085E  808C               	bsf	140,0,c	;volatile
   426  000860                     
   427                           ;main.c: 371:                 dataPanelUp();
   428  000860  ECA2  F002         	call	_dataPanelUp	;wreg free
   429  000864                     
   430                           ;main.c: 372:                 LATDbits.LD0 = 0;
   431  000864  908C               	bcf	140,0,c	;volatile
   432  000866                     
   433                           ;main.c: 373:                 _delay((unsigned long)((300)*(20000000/4000.0)));
   434  000866  0E06               	movlw	6
   435  000868  6E27               	movwf	(??_modeUp+1)^0,c
   436  00086A  0EB6               	movlw	182
   437  00086C  6E26               	movwf	??_modeUp^0,c
   438  00086E  0EF9               	movlw	249
   439  000870                     u597:
   440  000870  FFFF               	dw	65535	; errata NOP
   441  000872  2EE8               	decfsz	wreg,f,c
   442  000874  D7FD               	bra	u597
   443  000876  2E26               	decfsz	??_modeUp^0,f,c
   444  000878  D7FB               	bra	u597
   445  00087A  2E27               	decfsz	(??_modeUp+1)^0,f,c
   446  00087C  D7F9               	bra	u597
   447  00087E                     
   448                           ;main.c: 376:                 LATCbits.LC1 = 0;
   449  00087E  928B               	bcf	139,1,c	;volatile
   450  000880                     l1336:
   451  000880  FFFF               	dw	65535	; assembler added errata NOP
   452                           
   453                           ;main.c: 380:                     modeUpControl();
   454  000882  EC0C  F000         	call	_modeUpControl	;wreg free
   455  000886                     
   456                           ;main.c: 381:                     callsUp();
   457  000886  ECAC  F003         	call	_callsUp	;wreg free
   458  00088A  EF40  F004         	goto	l1336
   459  00088E                     l143:
   460  00088E  FFFF               	dw	65535	; assembler added errata NOP
   461                           
   462                           ;main.c: 388:                     LATCbits.LC0 = 0;
   463  000890  908B               	bcf	139,0,c	;volatile
   464                           
   465                           ;main.c: 389:                 }while(!PORTDbits.RD4);
   466  000892  A883               	btfss	131,4,c	;volatile
   467  000894  EF4E  F004         	goto	u551
   468  000898  EF51  F004         	goto	u550
   469  00089C                     u551:
   470  00089C  FFFF               	dw	65535	; assembler added errata NOP
   471  00089E  EF47  F004         	goto	l143
   472  0008A2                     u550:
   473  0008A2  FFFF               	dw	65535	; assembler added errata NOP
   474  0008A4                     
   475                           ;main.c: 390:                 LATCbits.LC0 = 1;
   476  0008A4  808B               	bsf	139,0,c	;volatile
   477                           
   478                           ;main.c: 392:                 LATDbits.LD0 = 1;
   479  0008A6  808C               	bsf	140,0,c	;volatile
   480  0008A8                     
   481                           ;main.c: 393:                 dataPanelUp();
   482  0008A8  ECA2  F002         	call	_dataPanelUp	;wreg free
   483  0008AC                     
   484                           ;main.c: 394:                 LATDbits.LD0 = 0;
   485  0008AC  908C               	bcf	140,0,c	;volatile
   486  0008AE  EF6D  F004         	goto	l146
   487  0008B2                     l1344:
   488  0008B2  FFFF               	dw	65535	; assembler added errata NOP
   489  0008B4  C02E  F026         	movff	_callFL,??_modeUp
   490  0008B8  C02F  F027         	movff	_callFL+1,??_modeUp+1
   491                           
   492                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   493                           ; Switch size 1, requested type "simple"
   494                           ; Number of cases is 1, Range of values is 0 to 0
   495                           ; switch strategies available:
   496                           ; Name         Instructions Cycles
   497                           ; simple_byte            4     3 (average)
   498                           ;	Chosen strategy is simple_byte
   499  0008BC  5027               	movf	(??_modeUp+1)^0,w,c
   500  0008BE  0A00               	xorlw	0	; case 0
   501  0008C0  B4D8               	btfsc	status,2,c
   502  0008C2  EF65  F004         	goto	l1378
   503  0008C6  EF6D  F004         	goto	l146
   504  0008CA                     l1378:
   505  0008CA  FFFF               	dw	65535	; assembler added errata NOP
   506                           
   507                           ; Switch size 1, requested type "simple"
   508                           ; Number of cases is 1, Range of values is 1 to 1
   509                           ; switch strategies available:
   510                           ; Name         Instructions Cycles
   511                           ; simple_byte            4     3 (average)
   512                           ;	Chosen strategy is simple_byte
   513  0008CC  5026               	movf	??_modeUp^0,w,c
   514  0008CE  0A01               	xorlw	1	; case 1
   515  0008D0  B4D8               	btfsc	status,2,c
   516  0008D2  EF23  F004         	goto	l1324
   517  0008D6  EF6D  F004         	goto	l146
   518  0008DA                     l146:
   519  0008DA  FFFF               	dw	65535	; assembler added errata NOP
   520  0008DC  0012               	return		;funcret
   521  0008DE  FFFF               	dw	65535	; errata NOP
   522  0008E0                     __end_of_modeUp:
   523                           	callstack 0
   524                           
   525 ;; *************** function _modeUpControl *****************
   526 ;; Defined at:
   527 ;;		line 276 in file "main.c"
   528 ;; Parameters:    Size  Location     Type
   529 ;;		None
   530 ;; Auto vars:     Size  Location     Type
   531 ;;  i               2   35[COMRAM] int 
   532 ;;  i               2   33[COMRAM] int 
   533 ;;  i               2   31[COMRAM] int 
   534 ;;  i               2   29[COMRAM] int 
   535 ;; Return value:  Size  Location     Type
   536 ;;                  1    wreg      void 
   537 ;; Registers used:
   538 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   539 ;; Tracked objects:
   540 ;;		On entry : 0/0
   541 ;;		On exit  : 0/0
   542 ;;		Unchanged: 0/0
   543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   544 ;;      Params:         0       0       0       0       0       0       0
   545 ;;      Locals:         8       0       0       0       0       0       0
   546 ;;      Temps:          2       0       0       0       0       0       0
   547 ;;      Totals:        10       0       0       0       0       0       0
   548 ;;Total ram usage:       10 bytes
   549 ;; Hardware stack levels used: 1
   550 ;; Hardware stack levels required when called: 3
   551 ;; This function calls:
   552 ;;		_dataPanelUp
   553 ;; This function is called by:
   554 ;;		_modeUp
   555 ;; This function uses a non-reentrant model
   556 ;;
   557                           
   558                           	psect	text2
   559  000018                     __ptext2:
   560                           	callstack 0
   561  000018                     _modeUpControl:
   562                           	callstack 0
   563  000018  FFFF               	dw	65535	; assembler added errata NOP
   564  00001A                     
   565                           ;main.c: 278:     static int cont = 0;;main.c: 280:     switch(queueUp[cont]){
   566  00001A  EF67  F001         	goto	l1316
   567  00001E                     l112:
   568  00001E  FFFF               	dw	65535	; assembler added errata NOP
   569                           
   570                           ;main.c: 282:             if(PORTDbits.RD4){
   571  000020  A883               	btfss	131,4,c	;volatile
   572  000022  EF15  F000         	goto	u461
   573  000026  EF18  F000         	goto	u460
   574  00002A                     u461:
   575  00002A  FFFF               	dw	65535	; assembler added errata NOP
   576  00002C  EF87  F001         	goto	l133
   577  000030                     u460:
   578  000030  FFFF               	dw	65535	; assembler added errata NOP
   579  000032                     
   580                           ;main.c: 284:                 LATCbits.LC1 = 1;
   581  000032  828B               	bsf	139,1,c	;volatile
   582                           
   583                           ;main.c: 285:                 LATDbits.LD0 = 1;
   584  000034  808C               	bsf	140,0,c	;volatile
   585  000036                     
   586                           ;main.c: 286:                 nowFL = 1;
   587  000036  0E00               	movlw	0
   588  000038  6E2D               	movwf	(_nowFL+1)^0,c
   589  00003A  0E01               	movlw	1
   590  00003C  6E2C               	movwf	_nowFL^0,c
   591                           
   592                           ;main.c: 288:                 for (int i = 0; i < calls; i++){
   593  00003E  0E00               	movlw	0
   594  000040  6E1F               	movwf	(modeUpControl@i+1)^0,c
   595  000042  0E00               	movlw	0
   596  000044  6E1E               	movwf	modeUpControl@i^0,c
   597  000046  EF3E  F000         	goto	l1242
   598  00004A                     l1238:
   599  00004A  FFFF               	dw	65535	; assembler added errata NOP
   600                           
   601                           ;main.c: 289:                     queueUp[i] = queueUp[i + 1];
   602  00004C  90D8               	bcf	status,0,c
   603  00004E  341E               	rlcf	modeUpControl@i^0,w,c
   604  000050  6ED9               	movwf	fsr2l,c
   605  000052  341F               	rlcf	(modeUpControl@i+1)^0,w,c
   606  000054  6EDA               	movwf	fsr2h,c
   607  000056  0E36               	movlw	low (_queueUp+2)
   608  000058  26D9               	addwf	fsr2l,f,c
   609  00005A  0E00               	movlw	high (_queueUp+2)
   610  00005C  22DA               	addwfc	fsr2h,f,c
   611  00005E  90D8               	bcf	status,0,c
   612  000060  341E               	rlcf	modeUpControl@i^0,w,c
   613  000062  6EE1               	movwf	fsr1l,c
   614  000064  341F               	rlcf	(modeUpControl@i+1)^0,w,c
   615  000066  6EE2               	movwf	fsr1h,c
   616  000068  0E34               	movlw	low _queueUp
   617  00006A  26E1               	addwf	fsr1l,f,c
   618  00006C  0E00               	movlw	high _queueUp
   619  00006E  22E2               	addwfc	fsr1h,f,c
   620  000070  CFDE FFE6          	movff	postinc2,postinc1
   621  000074  CFDD FFE5          	movff	postdec2,postdec1
   622  000078                     
   623                           ;main.c: 290:                 }
   624  000078  4A1E               	infsnz	modeUpControl@i^0,f,c
   625  00007A  2A1F               	incf	(modeUpControl@i+1)^0,f,c
   626  00007C                     l1242:
   627  00007C  FFFF               	dw	65535	; assembler added errata NOP
   628  00007E  5032               	movf	_calls^0,w,c
   629  000080  5C1E               	subwf	modeUpControl@i^0,w,c
   630  000082  501F               	movf	(modeUpControl@i+1)^0,w,c
   631  000084  0A80               	xorlw	128
   632  000086  6E1C               	movwf	??_modeUpControl^0,c
   633  000088  5033               	movf	(_calls+1)^0,w,c
   634  00008A  0A80               	xorlw	128
   635  00008C  581C               	subwfb	??_modeUpControl^0,w,c
   636  00008E  A0D8               	btfss	status,0,c
   637  000090  EF4C  F000         	goto	u471
   638  000094  EF4F  F000         	goto	u470
   639  000098                     u471:
   640  000098  FFFF               	dw	65535	; assembler added errata NOP
   641  00009A  EF25  F000         	goto	l1238
   642  00009E                     u470:
   643  00009E  FFFF               	dw	65535	; assembler added errata NOP
   644  0000A0                     
   645                           ;main.c: 291:                 calls--;
   646  0000A0  0632               	decf	_calls^0,f,c
   647  0000A2  A0D8               	btfss	status,0,c
   648  0000A4  0633               	decf	(_calls+1)^0,f,c
   649  0000A6                     
   650                           ;main.c: 292:                 dataPanelUp();
   651  0000A6  ECA2  F002         	call	_dataPanelUp	;wreg free
   652  0000AA                     
   653                           ;main.c: 293:                 LATDbits.LD0 = 0;
   654  0000AA  908C               	bcf	140,0,c	;volatile
   655  0000AC                     
   656                           ;main.c: 294:                 _delay((unsigned long)((300)*(20000000/4000.0)));
   657  0000AC  0E06               	movlw	6
   658  0000AE  6E1D               	movwf	(??_modeUpControl+1)^0,c
   659  0000B0  0EB6               	movlw	182
   660  0000B2  6E1C               	movwf	??_modeUpControl^0,c
   661  0000B4  0EF9               	movlw	249
   662  0000B6                     u607:
   663  0000B6  FFFF               	dw	65535	; errata NOP
   664  0000B8  2EE8               	decfsz	wreg,f,c
   665  0000BA  D7FD               	bra	u607
   666  0000BC  2E1C               	decfsz	??_modeUpControl^0,f,c
   667  0000BE  D7FB               	bra	u607
   668  0000C0  2E1D               	decfsz	(??_modeUpControl+1)^0,f,c
   669  0000C2  D7F9               	bra	u607
   670  0000C4                     
   671                           ;main.c: 296:                 LATCbits.LC1 = 0;
   672  0000C4  928B               	bcf	139,1,c	;volatile
   673  0000C6  EF87  F001         	goto	l133
   674  0000CA                     l118:
   675  0000CA  FFFF               	dw	65535	; assembler added errata NOP
   676                           
   677                           ;main.c: 301:             if(PORTDbits.RD5){
   678  0000CC  AA83               	btfss	131,5,c	;volatile
   679  0000CE  EF6B  F000         	goto	u481
   680  0000D2  EF6E  F000         	goto	u480
   681  0000D6                     u481:
   682  0000D6  FFFF               	dw	65535	; assembler added errata NOP
   683  0000D8  EF87  F001         	goto	l133
   684  0000DC                     u480:
   685  0000DC  FFFF               	dw	65535	; assembler added errata NOP
   686  0000DE                     
   687                           ;main.c: 303:                 LATCbits.LC1 = 1;
   688  0000DE  828B               	bsf	139,1,c	;volatile
   689                           
   690                           ;main.c: 304:                 LATDbits.LD1 = 1;
   691  0000E0  828C               	bsf	140,1,c	;volatile
   692  0000E2                     
   693                           ;main.c: 305:                 nowFL = 2;
   694  0000E2  0E00               	movlw	0
   695  0000E4  6E2D               	movwf	(_nowFL+1)^0,c
   696  0000E6  0E02               	movlw	2
   697  0000E8  6E2C               	movwf	_nowFL^0,c
   698                           
   699                           ;main.c: 307:                 for (int i = 0; i < calls; i++){
   700  0000EA  0E00               	movlw	0
   701  0000EC  6E21               	movwf	(modeUpControl@i_426+1)^0,c
   702  0000EE  0E00               	movlw	0
   703  0000F0  6E20               	movwf	modeUpControl@i_426^0,c
   704  0000F2  EF94  F000         	goto	l1262
   705  0000F6                     l1258:
   706  0000F6  FFFF               	dw	65535	; assembler added errata NOP
   707                           
   708                           ;main.c: 308:                     queueUp[i] = queueUp[i + 1];
   709  0000F8  90D8               	bcf	status,0,c
   710  0000FA  3420               	rlcf	modeUpControl@i_426^0,w,c
   711  0000FC  6ED9               	movwf	fsr2l,c
   712  0000FE  3421               	rlcf	(modeUpControl@i_426+1)^0,w,c
   713  000100  6EDA               	movwf	fsr2h,c
   714  000102  0E36               	movlw	low (_queueUp+2)
   715  000104  26D9               	addwf	fsr2l,f,c
   716  000106  0E00               	movlw	high (_queueUp+2)
   717  000108  22DA               	addwfc	fsr2h,f,c
   718  00010A  90D8               	bcf	status,0,c
   719  00010C  3420               	rlcf	modeUpControl@i_426^0,w,c
   720  00010E  6EE1               	movwf	fsr1l,c
   721  000110  3421               	rlcf	(modeUpControl@i_426+1)^0,w,c
   722  000112  6EE2               	movwf	fsr1h,c
   723  000114  0E34               	movlw	low _queueUp
   724  000116  26E1               	addwf	fsr1l,f,c
   725  000118  0E00               	movlw	high _queueUp
   726  00011A  22E2               	addwfc	fsr1h,f,c
   727  00011C  CFDE FFE6          	movff	postinc2,postinc1
   728  000120  CFDD FFE5          	movff	postdec2,postdec1
   729  000124                     
   730                           ;main.c: 309:                 }
   731  000124  4A20               	infsnz	modeUpControl@i_426^0,f,c
   732  000126  2A21               	incf	(modeUpControl@i_426+1)^0,f,c
   733  000128                     l1262:
   734  000128  FFFF               	dw	65535	; assembler added errata NOP
   735  00012A  5032               	movf	_calls^0,w,c
   736  00012C  5C20               	subwf	modeUpControl@i_426^0,w,c
   737  00012E  5021               	movf	(modeUpControl@i_426+1)^0,w,c
   738  000130  0A80               	xorlw	128
   739  000132  6E1C               	movwf	??_modeUpControl^0,c
   740  000134  5033               	movf	(_calls+1)^0,w,c
   741  000136  0A80               	xorlw	128
   742  000138  581C               	subwfb	??_modeUpControl^0,w,c
   743  00013A  A0D8               	btfss	status,0,c
   744  00013C  EFA2  F000         	goto	u491
   745  000140  EFA5  F000         	goto	u490
   746  000144                     u491:
   747  000144  FFFF               	dw	65535	; assembler added errata NOP
   748  000146  EF7B  F000         	goto	l1258
   749  00014A                     u490:
   750  00014A  FFFF               	dw	65535	; assembler added errata NOP
   751  00014C                     
   752                           ;main.c: 310:                 calls--;
   753  00014C  0632               	decf	_calls^0,f,c
   754  00014E  A0D8               	btfss	status,0,c
   755  000150  0633               	decf	(_calls+1)^0,f,c
   756  000152                     
   757                           ;main.c: 311:                 dataPanelUp();
   758  000152  ECA2  F002         	call	_dataPanelUp	;wreg free
   759  000156                     
   760                           ;main.c: 312:                 LATDbits.LD1 = 0;
   761  000156  928C               	bcf	140,1,c	;volatile
   762  000158                     
   763                           ;main.c: 313:                 _delay((unsigned long)((300)*(20000000/4000.0)));
   764  000158  0E06               	movlw	6
   765  00015A  6E1D               	movwf	(??_modeUpControl+1)^0,c
   766  00015C  0EB6               	movlw	182
   767  00015E  6E1C               	movwf	??_modeUpControl^0,c
   768  000160  0EF9               	movlw	249
   769  000162                     u617:
   770  000162  FFFF               	dw	65535	; errata NOP
   771  000164  2EE8               	decfsz	wreg,f,c
   772  000166  D7FD               	bra	u617
   773  000168  2E1C               	decfsz	??_modeUpControl^0,f,c
   774  00016A  D7FB               	bra	u617
   775  00016C  2E1D               	decfsz	(??_modeUpControl+1)^0,f,c
   776  00016E  D7F9               	bra	u617
   777  000170                     
   778                           ;main.c: 315:                 LATCbits.LC1 = 0;
   779  000170  928B               	bcf	139,1,c	;volatile
   780  000172  EF87  F001         	goto	l133
   781  000176                     l123:
   782  000176  FFFF               	dw	65535	; assembler added errata NOP
   783                           
   784                           ;main.c: 320:             if(PORTDbits.RD6){
   785  000178  AC83               	btfss	131,6,c	;volatile
   786  00017A  EFC1  F000         	goto	u501
   787  00017E  EFC4  F000         	goto	u500
   788  000182                     u501:
   789  000182  FFFF               	dw	65535	; assembler added errata NOP
   790  000184  EF87  F001         	goto	l133
   791  000188                     u500:
   792  000188  FFFF               	dw	65535	; assembler added errata NOP
   793  00018A                     
   794                           ;main.c: 322:                 LATCbits.LC1 = 1;
   795  00018A  828B               	bsf	139,1,c	;volatile
   796                           
   797                           ;main.c: 323:                 LATDbits.LD2 = 1;
   798  00018C  848C               	bsf	140,2,c	;volatile
   799  00018E                     
   800                           ;main.c: 324:                 nowFL = 3;
   801  00018E  0E00               	movlw	0
   802  000190  6E2D               	movwf	(_nowFL+1)^0,c
   803  000192  0E03               	movlw	3
   804  000194  6E2C               	movwf	_nowFL^0,c
   805                           
   806                           ;main.c: 326:                 for (int i = 0; i < calls; i++){
   807  000196  0E00               	movlw	0
   808  000198  6E23               	movwf	(modeUpControl@i_427+1)^0,c
   809  00019A  0E00               	movlw	0
   810  00019C  6E22               	movwf	modeUpControl@i_427^0,c
   811  00019E  EFEA  F000         	goto	l1282
   812  0001A2                     l1278:
   813  0001A2  FFFF               	dw	65535	; assembler added errata NOP
   814                           
   815                           ;main.c: 327:                     queueUp[i] = queueUp[i + 1];
   816  0001A4  90D8               	bcf	status,0,c
   817  0001A6  3422               	rlcf	modeUpControl@i_427^0,w,c
   818  0001A8  6ED9               	movwf	fsr2l,c
   819  0001AA  3423               	rlcf	(modeUpControl@i_427+1)^0,w,c
   820  0001AC  6EDA               	movwf	fsr2h,c
   821  0001AE  0E36               	movlw	low (_queueUp+2)
   822  0001B0  26D9               	addwf	fsr2l,f,c
   823  0001B2  0E00               	movlw	high (_queueUp+2)
   824  0001B4  22DA               	addwfc	fsr2h,f,c
   825  0001B6  90D8               	bcf	status,0,c
   826  0001B8  3422               	rlcf	modeUpControl@i_427^0,w,c
   827  0001BA  6EE1               	movwf	fsr1l,c
   828  0001BC  3423               	rlcf	(modeUpControl@i_427+1)^0,w,c
   829  0001BE  6EE2               	movwf	fsr1h,c
   830  0001C0  0E34               	movlw	low _queueUp
   831  0001C2  26E1               	addwf	fsr1l,f,c
   832  0001C4  0E00               	movlw	high _queueUp
   833  0001C6  22E2               	addwfc	fsr1h,f,c
   834  0001C8  CFDE FFE6          	movff	postinc2,postinc1
   835  0001CC  CFDD FFE5          	movff	postdec2,postdec1
   836  0001D0                     
   837                           ;main.c: 328:                 }
   838  0001D0  4A22               	infsnz	modeUpControl@i_427^0,f,c
   839  0001D2  2A23               	incf	(modeUpControl@i_427+1)^0,f,c
   840  0001D4                     l1282:
   841  0001D4  FFFF               	dw	65535	; assembler added errata NOP
   842  0001D6  5032               	movf	_calls^0,w,c
   843  0001D8  5C22               	subwf	modeUpControl@i_427^0,w,c
   844  0001DA  5023               	movf	(modeUpControl@i_427+1)^0,w,c
   845  0001DC  0A80               	xorlw	128
   846  0001DE  6E1C               	movwf	??_modeUpControl^0,c
   847  0001E0  5033               	movf	(_calls+1)^0,w,c
   848  0001E2  0A80               	xorlw	128
   849  0001E4  581C               	subwfb	??_modeUpControl^0,w,c
   850  0001E6  A0D8               	btfss	status,0,c
   851  0001E8  EFF8  F000         	goto	u511
   852  0001EC  EFFB  F000         	goto	u510
   853  0001F0                     u511:
   854  0001F0  FFFF               	dw	65535	; assembler added errata NOP
   855  0001F2  EFD1  F000         	goto	l1278
   856  0001F6                     u510:
   857  0001F6  FFFF               	dw	65535	; assembler added errata NOP
   858  0001F8                     
   859                           ;main.c: 329:                 calls--;
   860  0001F8  0632               	decf	_calls^0,f,c
   861  0001FA  A0D8               	btfss	status,0,c
   862  0001FC  0633               	decf	(_calls+1)^0,f,c
   863  0001FE                     
   864                           ;main.c: 330:                 dataPanelUp();
   865  0001FE  ECA2  F002         	call	_dataPanelUp	;wreg free
   866  000202                     
   867                           ;main.c: 331:                 LATDbits.LD2 = 0;
   868  000202  948C               	bcf	140,2,c	;volatile
   869  000204                     
   870                           ;main.c: 332:                 _delay((unsigned long)((300)*(20000000/4000.0)));
   871  000204  0E06               	movlw	6
   872  000206  6E1D               	movwf	(??_modeUpControl+1)^0,c
   873  000208  0EB6               	movlw	182
   874  00020A  6E1C               	movwf	??_modeUpControl^0,c
   875  00020C  0EF9               	movlw	249
   876  00020E                     u627:
   877  00020E  FFFF               	dw	65535	; errata NOP
   878  000210  2EE8               	decfsz	wreg,f,c
   879  000212  D7FD               	bra	u627
   880  000214  2E1C               	decfsz	??_modeUpControl^0,f,c
   881  000216  D7FB               	bra	u627
   882  000218  2E1D               	decfsz	(??_modeUpControl+1)^0,f,c
   883  00021A  D7F9               	bra	u627
   884  00021C                     
   885                           ;main.c: 334:                 LATCbits.LC1 = 0;
   886  00021C  928B               	bcf	139,1,c	;volatile
   887  00021E  EF87  F001         	goto	l133
   888  000222                     l128:
   889  000222  FFFF               	dw	65535	; assembler added errata NOP
   890                           
   891                           ;main.c: 339:             if(PORTDbits.RD7){
   892  000224  AE83               	btfss	131,7,c	;volatile
   893  000226  EF17  F001         	goto	u521
   894  00022A  EF1A  F001         	goto	u520
   895  00022E                     u521:
   896  00022E  FFFF               	dw	65535	; assembler added errata NOP
   897  000230  EF87  F001         	goto	l133
   898  000234                     u520:
   899  000234  FFFF               	dw	65535	; assembler added errata NOP
   900  000236                     
   901                           ;main.c: 341:                 LATCbits.LC1 = 1;
   902  000236  828B               	bsf	139,1,c	;volatile
   903                           
   904                           ;main.c: 342:                 LATDbits.LD3 = 1;
   905  000238  868C               	bsf	140,3,c	;volatile
   906  00023A                     
   907                           ;main.c: 343:                 nowFL = 4;
   908  00023A  0E00               	movlw	0
   909  00023C  6E2D               	movwf	(_nowFL+1)^0,c
   910  00023E  0E04               	movlw	4
   911  000240  6E2C               	movwf	_nowFL^0,c
   912                           
   913                           ;main.c: 345:                 for (int i = 0; i < calls; i++){
   914  000242  0E00               	movlw	0
   915  000244  6E25               	movwf	(modeUpControl@i_428+1)^0,c
   916  000246  0E00               	movlw	0
   917  000248  6E24               	movwf	modeUpControl@i_428^0,c
   918  00024A  EF40  F001         	goto	l1302
   919  00024E                     l1298:
   920  00024E  FFFF               	dw	65535	; assembler added errata NOP
   921                           
   922                           ;main.c: 346:                     queueUp[i] = queueUp[i + 1];
   923  000250  90D8               	bcf	status,0,c
   924  000252  3424               	rlcf	modeUpControl@i_428^0,w,c
   925  000254  6ED9               	movwf	fsr2l,c
   926  000256  3425               	rlcf	(modeUpControl@i_428+1)^0,w,c
   927  000258  6EDA               	movwf	fsr2h,c
   928  00025A  0E36               	movlw	low (_queueUp+2)
   929  00025C  26D9               	addwf	fsr2l,f,c
   930  00025E  0E00               	movlw	high (_queueUp+2)
   931  000260  22DA               	addwfc	fsr2h,f,c
   932  000262  90D8               	bcf	status,0,c
   933  000264  3424               	rlcf	modeUpControl@i_428^0,w,c
   934  000266  6EE1               	movwf	fsr1l,c
   935  000268  3425               	rlcf	(modeUpControl@i_428+1)^0,w,c
   936  00026A  6EE2               	movwf	fsr1h,c
   937  00026C  0E34               	movlw	low _queueUp
   938  00026E  26E1               	addwf	fsr1l,f,c
   939  000270  0E00               	movlw	high _queueUp
   940  000272  22E2               	addwfc	fsr1h,f,c
   941  000274  CFDE FFE6          	movff	postinc2,postinc1
   942  000278  CFDD FFE5          	movff	postdec2,postdec1
   943  00027C                     
   944                           ;main.c: 347:                 }
   945  00027C  4A24               	infsnz	modeUpControl@i_428^0,f,c
   946  00027E  2A25               	incf	(modeUpControl@i_428+1)^0,f,c
   947  000280                     l1302:
   948  000280  FFFF               	dw	65535	; assembler added errata NOP
   949  000282  5032               	movf	_calls^0,w,c
   950  000284  5C24               	subwf	modeUpControl@i_428^0,w,c
   951  000286  5025               	movf	(modeUpControl@i_428+1)^0,w,c
   952  000288  0A80               	xorlw	128
   953  00028A  6E1C               	movwf	??_modeUpControl^0,c
   954  00028C  5033               	movf	(_calls+1)^0,w,c
   955  00028E  0A80               	xorlw	128
   956  000290  581C               	subwfb	??_modeUpControl^0,w,c
   957  000292  A0D8               	btfss	status,0,c
   958  000294  EF4E  F001         	goto	u531
   959  000298  EF51  F001         	goto	u530
   960  00029C                     u531:
   961  00029C  FFFF               	dw	65535	; assembler added errata NOP
   962  00029E  EF27  F001         	goto	l1298
   963  0002A2                     u530:
   964  0002A2  FFFF               	dw	65535	; assembler added errata NOP
   965  0002A4                     
   966                           ;main.c: 348:                 calls--;
   967  0002A4  0632               	decf	_calls^0,f,c
   968  0002A6  A0D8               	btfss	status,0,c
   969  0002A8  0633               	decf	(_calls+1)^0,f,c
   970  0002AA                     
   971                           ;main.c: 349:                 dataPanelUp();
   972  0002AA  ECA2  F002         	call	_dataPanelUp	;wreg free
   973  0002AE                     
   974                           ;main.c: 350:                 LATDbits.LD3 = 0;
   975  0002AE  968C               	bcf	140,3,c	;volatile
   976  0002B0                     
   977                           ;main.c: 351:                 _delay((unsigned long)((300)*(20000000/4000.0)));
   978  0002B0  0E06               	movlw	6
   979  0002B2  6E1D               	movwf	(??_modeUpControl+1)^0,c
   980  0002B4  0EB6               	movlw	182
   981  0002B6  6E1C               	movwf	??_modeUpControl^0,c
   982  0002B8  0EF9               	movlw	249
   983  0002BA                     u637:
   984  0002BA  FFFF               	dw	65535	; errata NOP
   985  0002BC  2EE8               	decfsz	wreg,f,c
   986  0002BE  D7FD               	bra	u637
   987  0002C0  2E1C               	decfsz	??_modeUpControl^0,f,c
   988  0002C2  D7FB               	bra	u637
   989  0002C4  2E1D               	decfsz	(??_modeUpControl+1)^0,f,c
   990  0002C6  D7F9               	bra	u637
   991  0002C8                     
   992                           ;main.c: 353:                 LATCbits.LC1 = 0;
   993  0002C8  928B               	bcf	139,1,c	;volatile
   994  0002CA  EF87  F001         	goto	l133
   995  0002CE                     l1316:
   996  0002CE  FFFF               	dw	65535	; assembler added errata NOP
   997  0002D0  C034  F01C         	movff	_queueUp,??_modeUpControl
   998  0002D4  C035  F01D         	movff	_queueUp+1,??_modeUpControl+1
   999                           
  1000                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1001                           ; Switch size 1, requested type "simple"
  1002                           ; Number of cases is 1, Range of values is 0 to 0
  1003                           ; switch strategies available:
  1004                           ; Name         Instructions Cycles
  1005                           ; simple_byte            4     3 (average)
  1006                           ;	Chosen strategy is simple_byte
  1007  0002D8  501D               	movf	(??_modeUpControl+1)^0,w,c
  1008  0002DA  0A00               	xorlw	0	; case 0
  1009  0002DC  B4D8               	btfsc	status,2,c
  1010  0002DE  EF73  F001         	goto	l1380
  1011  0002E2  EF87  F001         	goto	l133
  1012  0002E6                     l1380:
  1013  0002E6  FFFF               	dw	65535	; assembler added errata NOP
  1014                           
  1015                           ; Switch size 1, requested type "simple"
  1016                           ; Number of cases is 4, Range of values is 1 to 4
  1017                           ; switch strategies available:
  1018                           ; Name         Instructions Cycles
  1019                           ; simple_byte           13     7 (average)
  1020                           ;	Chosen strategy is simple_byte
  1021  0002E8  501C               	movf	??_modeUpControl^0,w,c
  1022  0002EA  0A01               	xorlw	1	; case 1
  1023  0002EC  B4D8               	btfsc	status,2,c
  1024  0002EE  EF0F  F000         	goto	l112
  1025  0002F2  0A03               	xorlw	3	; case 2
  1026  0002F4  B4D8               	btfsc	status,2,c
  1027  0002F6  EF65  F000         	goto	l118
  1028  0002FA  0A01               	xorlw	1	; case 3
  1029  0002FC  B4D8               	btfsc	status,2,c
  1030  0002FE  EFBB  F000         	goto	l123
  1031  000302  0A07               	xorlw	7	; case 4
  1032  000304  B4D8               	btfsc	status,2,c
  1033  000306  EF11  F001         	goto	l128
  1034  00030A  EF87  F001         	goto	l133
  1035  00030E                     l133:
  1036  00030E  FFFF               	dw	65535	; assembler added errata NOP
  1037  000310  0012               	return		;funcret
  1038  000312  FFFF               	dw	65535	; errata NOP
  1039  000314                     __end_of_modeUpControl:
  1040                           	callstack 0
  1041                           
  1042 ;; *************** function _dataPanelUp *****************
  1043 ;; Defined at:
  1044 ;;		line 186 in file "main.c"
  1045 ;; Parameters:    Size  Location     Type
  1046 ;;		None
  1047 ;; Auto vars:     Size  Location     Type
  1048 ;;  tamano          2   25[COMRAM] int 
  1049 ;;  UpCalls         2   23[COMRAM] PTR int 
  1050 ;;		 -> queueUp(0), 
  1051 ;; Return value:  Size  Location     Type
  1052 ;;                  1    wreg      void 
  1053 ;; Registers used:
  1054 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1055 ;; Tracked objects:
  1056 ;;		On entry : 0/0
  1057 ;;		On exit  : 0/0
  1058 ;;		Unchanged: 0/0
  1059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1060 ;;      Params:         0       0       0       0       0       0       0
  1061 ;;      Locals:         4       0       0       0       0       0       0
  1062 ;;      Temps:          0       0       0       0       0       0       0
  1063 ;;      Totals:         4       0       0       0       0       0       0
  1064 ;;Total ram usage:        4 bytes
  1065 ;; Hardware stack levels used: 1
  1066 ;; Hardware stack levels required when called: 2
  1067 ;; This function calls:
  1068 ;;		_sort
  1069 ;; This function is called by:
  1070 ;;		_modeUpControl
  1071 ;;		_modeUp
  1072 ;; This function uses a non-reentrant model
  1073 ;;
  1074                           
  1075                           	psect	text3
  1076  000544                     __ptext3:
  1077                           	callstack 0
  1078  000544                     _dataPanelUp:
  1079                           	callstack 0
  1080  000544  FFFF               	dw	65535	; assembler added errata NOP
  1081  000546                     l80:
  1082  000546  FFFF               	dw	65535	; assembler added errata NOP
  1083                           
  1084                           ;main.c: 188:             if (PORTAbits.RA0) {
  1085  000548  A080               	btfss	128,0,c	;volatile
  1086  00054A  EFA9  F002         	goto	u371
  1087  00054E  EFAC  F002         	goto	u370
  1088  000552                     u371:
  1089  000552  FFFF               	dw	65535	; assembler added errata NOP
  1090  000554  EFDD  F002         	goto	l1188
  1091  000558                     u370:
  1092  000558  FFFF               	dw	65535	; assembler added errata NOP
  1093  00055A                     
  1094                           ;main.c: 189:                 if (nowFL < 1){
  1095  00055A  BE2D               	btfsc	(_nowFL+1)^0,7,c
  1096  00055C  EFBB  F002         	goto	u380
  1097  000560  502D               	movf	(_nowFL+1)^0,w,c
  1098  000562  E106               	bnz	u381
  1099  000564  042C               	decf	_nowFL^0,w,c
  1100  000566  B0D8               	btfsc	status,0,c
  1101  000568  EFB8  F002         	goto	u381
  1102  00056C  EFBB  F002         	goto	u380
  1103  000570                     u381:
  1104  000570  FFFF               	dw	65535	; assembler added errata NOP
  1105  000572  EFCD  F002         	goto	l1184
  1106  000576                     u380:
  1107  000576  FFFF               	dw	65535	; assembler added errata NOP
  1108  000578                     
  1109                           ;main.c: 190:                     queueUp[calls] = 1;
  1110  000578  90D8               	bcf	status,0,c
  1111  00057A  3432               	rlcf	_calls^0,w,c
  1112  00057C  6ED9               	movwf	fsr2l,c
  1113  00057E  3433               	rlcf	(_calls+1)^0,w,c
  1114  000580  6EDA               	movwf	fsr2h,c
  1115  000582  0E34               	movlw	low _queueUp
  1116  000584  26D9               	addwf	fsr2l,f,c
  1117  000586  0E00               	movlw	high _queueUp
  1118  000588  22DA               	addwfc	fsr2h,f,c
  1119  00058A  0E01               	movlw	1
  1120  00058C  6EDE               	movwf	postinc2,c
  1121  00058E  0E00               	movlw	0
  1122  000590  6EDD               	movwf	postdec2,c
  1123  000592                     
  1124                           ;main.c: 191:                     calls++;
  1125  000592  4A32               	infsnz	_calls^0,f,c
  1126  000594  2A33               	incf	(_calls+1)^0,f,c
  1127                           
  1128                           ;main.c: 192:                 }
  1129  000596  EFDD  F002         	goto	l1188
  1130  00059A                     l1184:
  1131  00059A  FFFF               	dw	65535	; assembler added errata NOP
  1132                           
  1133                           ;main.c: 194:                     queueDown[callsD] = 1;
  1134  00059C  90D8               	bcf	status,0,c
  1135  00059E  3430               	rlcf	_callsD^0,w,c
  1136  0005A0  6ED9               	movwf	fsr2l,c
  1137  0005A2  3431               	rlcf	(_callsD+1)^0,w,c
  1138  0005A4  6EDA               	movwf	fsr2h,c
  1139  0005A6  0E34               	movlw	low _queueDown
  1140  0005A8  26D9               	addwf	fsr2l,f,c
  1141  0005AA  0E00               	movlw	high _queueDown
  1142  0005AC  22DA               	addwfc	fsr2h,f,c
  1143  0005AE  0E01               	movlw	1
  1144  0005B0  6EDE               	movwf	postinc2,c
  1145  0005B2  0E00               	movlw	0
  1146  0005B4  6EDD               	movwf	postdec2,c
  1147  0005B6                     
  1148                           ;main.c: 195:                     callsD++;
  1149  0005B6  4A30               	infsnz	_callsD^0,f,c
  1150  0005B8  2A31               	incf	(_callsD+1)^0,f,c
  1151  0005BA                     l1188:
  1152  0005BA  FFFF               	dw	65535	; assembler added errata NOP
  1153                           
  1154                           ;main.c: 199:             if (PORTAbits.RA1) {
  1155  0005BC  A280               	btfss	128,1,c	;volatile
  1156  0005BE  EFE3  F002         	goto	u391
  1157  0005C2  EFE6  F002         	goto	u390
  1158  0005C6                     u391:
  1159  0005C6  FFFF               	dw	65535	; assembler added errata NOP
  1160  0005C8  EF18  F003         	goto	l1200
  1161  0005CC                     u390:
  1162  0005CC  FFFF               	dw	65535	; assembler added errata NOP
  1163  0005CE                     
  1164                           ;main.c: 200:                 if (nowFL < 2){
  1165  0005CE  BE2D               	btfsc	(_nowFL+1)^0,7,c
  1166  0005D0  EFF6  F002         	goto	u400
  1167  0005D4  502D               	movf	(_nowFL+1)^0,w,c
  1168  0005D6  E107               	bnz	u401
  1169  0005D8  0E02               	movlw	2
  1170  0005DA  5C2C               	subwf	_nowFL^0,w,c
  1171  0005DC  B0D8               	btfsc	status,0,c
  1172  0005DE  EFF3  F002         	goto	u401
  1173  0005E2  EFF6  F002         	goto	u400
  1174  0005E6                     u401:
  1175  0005E6  FFFF               	dw	65535	; assembler added errata NOP
  1176  0005E8  EF08  F003         	goto	l1196
  1177  0005EC                     u400:
  1178  0005EC  FFFF               	dw	65535	; assembler added errata NOP
  1179  0005EE                     
  1180                           ;main.c: 201:                     queueUp[calls] = 2;
  1181  0005EE  90D8               	bcf	status,0,c
  1182  0005F0  3432               	rlcf	_calls^0,w,c
  1183  0005F2  6ED9               	movwf	fsr2l,c
  1184  0005F4  3433               	rlcf	(_calls+1)^0,w,c
  1185  0005F6  6EDA               	movwf	fsr2h,c
  1186  0005F8  0E34               	movlw	low _queueUp
  1187  0005FA  26D9               	addwf	fsr2l,f,c
  1188  0005FC  0E00               	movlw	high _queueUp
  1189  0005FE  22DA               	addwfc	fsr2h,f,c
  1190  000600  0E02               	movlw	2
  1191  000602  6EDE               	movwf	postinc2,c
  1192  000604  0E00               	movlw	0
  1193  000606  6EDD               	movwf	postdec2,c
  1194  000608                     
  1195                           ;main.c: 202:                     calls++;
  1196  000608  4A32               	infsnz	_calls^0,f,c
  1197  00060A  2A33               	incf	(_calls+1)^0,f,c
  1198                           
  1199                           ;main.c: 203:                 }
  1200  00060C  EF18  F003         	goto	l1200
  1201  000610                     l1196:
  1202  000610  FFFF               	dw	65535	; assembler added errata NOP
  1203                           
  1204                           ;main.c: 205:                     queueDown[callsD] = 2;
  1205  000612  90D8               	bcf	status,0,c
  1206  000614  3430               	rlcf	_callsD^0,w,c
  1207  000616  6ED9               	movwf	fsr2l,c
  1208  000618  3431               	rlcf	(_callsD+1)^0,w,c
  1209  00061A  6EDA               	movwf	fsr2h,c
  1210  00061C  0E34               	movlw	low _queueDown
  1211  00061E  26D9               	addwf	fsr2l,f,c
  1212  000620  0E00               	movlw	high _queueDown
  1213  000622  22DA               	addwfc	fsr2h,f,c
  1214  000624  0E02               	movlw	2
  1215  000626  6EDE               	movwf	postinc2,c
  1216  000628  0E00               	movlw	0
  1217  00062A  6EDD               	movwf	postdec2,c
  1218  00062C                     
  1219                           ;main.c: 206:                     callsD++;
  1220  00062C  4A30               	infsnz	_callsD^0,f,c
  1221  00062E  2A31               	incf	(_callsD+1)^0,f,c
  1222  000630                     l1200:
  1223  000630  FFFF               	dw	65535	; assembler added errata NOP
  1224                           
  1225                           ;main.c: 210:             if (PORTAbits.RA2) {
  1226  000632  A480               	btfss	128,2,c	;volatile
  1227  000634  EF1E  F003         	goto	u411
  1228  000638  EF21  F003         	goto	u410
  1229  00063C                     u411:
  1230  00063C  FFFF               	dw	65535	; assembler added errata NOP
  1231  00063E  EF53  F003         	goto	l1212
  1232  000642                     u410:
  1233  000642  FFFF               	dw	65535	; assembler added errata NOP
  1234  000644                     
  1235                           ;main.c: 211:                 if (nowFL < 3){
  1236  000644  BE2D               	btfsc	(_nowFL+1)^0,7,c
  1237  000646  EF31  F003         	goto	u420
  1238  00064A  502D               	movf	(_nowFL+1)^0,w,c
  1239  00064C  E107               	bnz	u421
  1240  00064E  0E03               	movlw	3
  1241  000650  5C2C               	subwf	_nowFL^0,w,c
  1242  000652  B0D8               	btfsc	status,0,c
  1243  000654  EF2E  F003         	goto	u421
  1244  000658  EF31  F003         	goto	u420
  1245  00065C                     u421:
  1246  00065C  FFFF               	dw	65535	; assembler added errata NOP
  1247  00065E  EF43  F003         	goto	l1208
  1248  000662                     u420:
  1249  000662  FFFF               	dw	65535	; assembler added errata NOP
  1250  000664                     
  1251                           ;main.c: 212:                     queueUp[calls] = 3;
  1252  000664  90D8               	bcf	status,0,c
  1253  000666  3432               	rlcf	_calls^0,w,c
  1254  000668  6ED9               	movwf	fsr2l,c
  1255  00066A  3433               	rlcf	(_calls+1)^0,w,c
  1256  00066C  6EDA               	movwf	fsr2h,c
  1257  00066E  0E34               	movlw	low _queueUp
  1258  000670  26D9               	addwf	fsr2l,f,c
  1259  000672  0E00               	movlw	high _queueUp
  1260  000674  22DA               	addwfc	fsr2h,f,c
  1261  000676  0E03               	movlw	3
  1262  000678  6EDE               	movwf	postinc2,c
  1263  00067A  0E00               	movlw	0
  1264  00067C  6EDD               	movwf	postdec2,c
  1265  00067E                     
  1266                           ;main.c: 213:                     calls++;
  1267  00067E  4A32               	infsnz	_calls^0,f,c
  1268  000680  2A33               	incf	(_calls+1)^0,f,c
  1269                           
  1270                           ;main.c: 214:                 }
  1271  000682  EF53  F003         	goto	l1212
  1272  000686                     l1208:
  1273  000686  FFFF               	dw	65535	; assembler added errata NOP
  1274                           
  1275                           ;main.c: 216:                     queueDown[callsD] = 3;
  1276  000688  90D8               	bcf	status,0,c
  1277  00068A  3430               	rlcf	_callsD^0,w,c
  1278  00068C  6ED9               	movwf	fsr2l,c
  1279  00068E  3431               	rlcf	(_callsD+1)^0,w,c
  1280  000690  6EDA               	movwf	fsr2h,c
  1281  000692  0E34               	movlw	low _queueDown
  1282  000694  26D9               	addwf	fsr2l,f,c
  1283  000696  0E00               	movlw	high _queueDown
  1284  000698  22DA               	addwfc	fsr2h,f,c
  1285  00069A  0E03               	movlw	3
  1286  00069C  6EDE               	movwf	postinc2,c
  1287  00069E  0E00               	movlw	0
  1288  0006A0  6EDD               	movwf	postdec2,c
  1289  0006A2                     
  1290                           ;main.c: 217:                     callsD++;
  1291  0006A2  4A30               	infsnz	_callsD^0,f,c
  1292  0006A4  2A31               	incf	(_callsD+1)^0,f,c
  1293  0006A6                     l1212:
  1294  0006A6  FFFF               	dw	65535	; assembler added errata NOP
  1295                           
  1296                           ;main.c: 221:             if (PORTAbits.RA3) {
  1297  0006A8  A680               	btfss	128,3,c	;volatile
  1298  0006AA  EF59  F003         	goto	u431
  1299  0006AE  EF5C  F003         	goto	u430
  1300  0006B2                     u431:
  1301  0006B2  FFFF               	dw	65535	; assembler added errata NOP
  1302  0006B4  EF8E  F003         	goto	l1224
  1303  0006B8                     u430:
  1304  0006B8  FFFF               	dw	65535	; assembler added errata NOP
  1305  0006BA                     
  1306                           ;main.c: 222:                 if (nowFL < 4){
  1307  0006BA  BE2D               	btfsc	(_nowFL+1)^0,7,c
  1308  0006BC  EF6C  F003         	goto	u440
  1309  0006C0  502D               	movf	(_nowFL+1)^0,w,c
  1310  0006C2  E107               	bnz	u441
  1311  0006C4  0E04               	movlw	4
  1312  0006C6  5C2C               	subwf	_nowFL^0,w,c
  1313  0006C8  B0D8               	btfsc	status,0,c
  1314  0006CA  EF69  F003         	goto	u441
  1315  0006CE  EF6C  F003         	goto	u440
  1316  0006D2                     u441:
  1317  0006D2  FFFF               	dw	65535	; assembler added errata NOP
  1318  0006D4  EF7E  F003         	goto	l1220
  1319  0006D8                     u440:
  1320  0006D8  FFFF               	dw	65535	; assembler added errata NOP
  1321  0006DA                     
  1322                           ;main.c: 223:                     queueUp[calls] = 4;
  1323  0006DA  90D8               	bcf	status,0,c
  1324  0006DC  3432               	rlcf	_calls^0,w,c
  1325  0006DE  6ED9               	movwf	fsr2l,c
  1326  0006E0  3433               	rlcf	(_calls+1)^0,w,c
  1327  0006E2  6EDA               	movwf	fsr2h,c
  1328  0006E4  0E34               	movlw	low _queueUp
  1329  0006E6  26D9               	addwf	fsr2l,f,c
  1330  0006E8  0E00               	movlw	high _queueUp
  1331  0006EA  22DA               	addwfc	fsr2h,f,c
  1332  0006EC  0E04               	movlw	4
  1333  0006EE  6EDE               	movwf	postinc2,c
  1334  0006F0  0E00               	movlw	0
  1335  0006F2  6EDD               	movwf	postdec2,c
  1336  0006F4                     
  1337                           ;main.c: 224:                     calls++;
  1338  0006F4  4A32               	infsnz	_calls^0,f,c
  1339  0006F6  2A33               	incf	(_calls+1)^0,f,c
  1340                           
  1341                           ;main.c: 225:                 }
  1342  0006F8  EF8E  F003         	goto	l1224
  1343  0006FC                     l1220:
  1344  0006FC  FFFF               	dw	65535	; assembler added errata NOP
  1345                           
  1346                           ;main.c: 227:                     queueDown[callsD] = 4;
  1347  0006FE  90D8               	bcf	status,0,c
  1348  000700  3430               	rlcf	_callsD^0,w,c
  1349  000702  6ED9               	movwf	fsr2l,c
  1350  000704  3431               	rlcf	(_callsD+1)^0,w,c
  1351  000706  6EDA               	movwf	fsr2h,c
  1352  000708  0E34               	movlw	low _queueDown
  1353  00070A  26D9               	addwf	fsr2l,f,c
  1354  00070C  0E00               	movlw	high _queueDown
  1355  00070E  22DA               	addwfc	fsr2h,f,c
  1356  000710  0E04               	movlw	4
  1357  000712  6EDE               	movwf	postinc2,c
  1358  000714  0E00               	movlw	0
  1359  000716  6EDD               	movwf	postdec2,c
  1360  000718                     
  1361                           ;main.c: 228:                     callsD++;
  1362  000718  4A30               	infsnz	_callsD^0,f,c
  1363  00071A  2A31               	incf	(_callsD+1)^0,f,c
  1364  00071C                     l1224:
  1365  00071C  FFFF               	dw	65535	; assembler added errata NOP
  1366                           
  1367                           ;main.c: 232:         }while (!PORTAbits.RA4);
  1368  00071E  A880               	btfss	128,4,c	;volatile
  1369  000720  EF94  F003         	goto	u451
  1370  000724  EF97  F003         	goto	u450
  1371  000728                     u451:
  1372  000728  FFFF               	dw	65535	; assembler added errata NOP
  1373  00072A  EFA3  F002         	goto	l80
  1374  00072E                     u450:
  1375  00072E  FFFF               	dw	65535	; assembler added errata NOP
  1376  000730                     
  1377                           ;main.c: 234:     int *UpCalls = &queueUp[0];
  1378  000730  0E34               	movlw	low _queueUp
  1379  000732  6E18               	movwf	dataPanelUp@UpCalls^0,c
  1380  000734  0E00               	movlw	high _queueUp
  1381  000736  6E19               	movwf	(dataPanelUp@UpCalls+1)^0,c
  1382  000738                     
  1383                           ;main.c: 235:     int tamano = calls;
  1384  000738  C032  F01A         	movff	_calls,dataPanelUp@tamano
  1385  00073C  C033  F01B         	movff	_calls+1,dataPanelUp@tamano+1
  1386  000740                     
  1387                           ;main.c: 237:     sort(UpCalls, tamano);
  1388  000740  C018  F001         	movff	dataPanelUp@UpCalls,sort@p
  1389  000744  C019  F002         	movff	dataPanelUp@UpCalls+1,sort@p+1
  1390  000748  C01A  F003         	movff	dataPanelUp@tamano,sort@sizes
  1391  00074C  C01B  F004         	movff	dataPanelUp@tamano+1,sort@sizes+1
  1392  000750  EC8A  F001         	call	_sort	;wreg free
  1393  000754  0012               	return		;funcret
  1394  000756  FFFF               	dw	65535	; errata NOP
  1395  000758                     __end_of_dataPanelUp:
  1396                           	callstack 0
  1397                           
  1398 ;; *************** function _sort *****************
  1399 ;; Defined at:
  1400 ;;		line 137 in file "main.c"
  1401 ;; Parameters:    Size  Location     Type
  1402 ;;  p               2    0[COMRAM] PTR int 
  1403 ;;		 -> queueUp(0), 
  1404 ;;  sizes           2    2[COMRAM] int 
  1405 ;; Auto vars:     Size  Location     Type
  1406 ;;  k               2   15[COMRAM] int 
  1407 ;;  h               2   21[COMRAM] int 
  1408 ;;  j               2   17[COMRAM] int 
  1409 ;;  temp            2   19[COMRAM] int 
  1410 ;;  sizesMod        2   13[COMRAM] int 
  1411 ;;  nums            2   11[COMRAM] int 
  1412 ;;  pos             2    9[COMRAM] int 
  1413 ;; Return value:  Size  Location     Type
  1414 ;;                  1    wreg      void 
  1415 ;; Registers used:
  1416 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1417 ;; Tracked objects:
  1418 ;;		On entry : 0/0
  1419 ;;		On exit  : 0/0
  1420 ;;		Unchanged: 0/0
  1421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1422 ;;      Params:         4       0       0       0       0       0       0
  1423 ;;      Locals:        14       0       0       0       0       0       0
  1424 ;;      Temps:          5       0       0       0       0       0       0
  1425 ;;      Totals:        23       0       0       0       0       0       0
  1426 ;;Total ram usage:       23 bytes
  1427 ;; Hardware stack levels used: 1
  1428 ;; Hardware stack levels required when called: 1
  1429 ;; This function calls:
  1430 ;;		Nothing
  1431 ;; This function is called by:
  1432 ;;		_dataPanelUp
  1433 ;; This function uses a non-reentrant model
  1434 ;;
  1435                           
  1436                           	psect	text4
  1437  000314                     __ptext4:
  1438                           	callstack 0
  1439  000314                     _sort:
  1440                           	callstack 0
  1441  000314  FFFF               	dw	65535	; assembler added errata NOP
  1442  000316                     
  1443                           ;main.c: 138:     int temp, nums = 0, pos = 0, sizesMod = sizes;
  1444  000316  0E00               	movlw	0
  1445  000318  6E0D               	movwf	(sort@nums+1)^0,c
  1446  00031A  0E00               	movlw	0
  1447  00031C  6E0C               	movwf	sort@nums^0,c
  1448  00031E  0E00               	movlw	0
  1449  000320  6E0B               	movwf	(sort@pos+1)^0,c
  1450  000322  0E00               	movlw	0
  1451  000324  6E0A               	movwf	sort@pos^0,c
  1452  000326  C003  F00E         	movff	sort@sizes,sort@sizesMod
  1453  00032A  C004  F00F         	movff	sort@sizes+1,sort@sizesMod+1
  1454  00032E                     l1136:
  1455  00032E  FFFF               	dw	65535	; assembler added errata NOP
  1456                           
  1457                           ;main.c: 145:     {;main.c: 146:         temp = *(p + 0);
  1458  000330  C001  FFD9         	movff	sort@p,fsr2l
  1459  000334  C002  FFDA         	movff	sort@p+1,fsr2h
  1460  000338  CFDE F014          	movff	postinc2,sort@temp
  1461  00033C  CFDD F015          	movff	postdec2,sort@temp+1
  1462  000340                     
  1463                           ;main.c: 148:         for (int h = 0; h < sizesMod; h++)
  1464  000340  0E00               	movlw	0
  1465  000342  6E17               	movwf	(sort@h+1)^0,c
  1466  000344  0E00               	movlw	0
  1467  000346  6E16               	movwf	sort@h^0,c
  1468  000348  EFF1  F001         	goto	l1154
  1469  00034C                     l1140:
  1470  00034C  FFFF               	dw	65535	; assembler added errata NOP
  1471                           
  1472                           ;main.c: 149:         {;main.c: 151:             if (*(p + h) == temp)
  1473  00034E  90D8               	bcf	status,0,c
  1474  000350  3416               	rlcf	sort@h^0,w,c
  1475  000352  6ED9               	movwf	fsr2l,c
  1476  000354  3417               	rlcf	(sort@h+1)^0,w,c
  1477  000356  6EDA               	movwf	fsr2h,c
  1478  000358  5001               	movf	sort@p^0,w,c
  1479  00035A  26D9               	addwf	fsr2l,f,c
  1480  00035C  5002               	movf	(sort@p+1)^0,w,c
  1481  00035E  22DA               	addwfc	fsr2h,f,c
  1482  000360  5014               	movf	sort@temp^0,w,c
  1483  000362  18DE               	xorwf	postinc2,w,c
  1484  000364  E107               	bnz	u311
  1485  000366  5015               	movf	(sort@temp+1)^0,w,c
  1486  000368  18DE               	xorwf	postinc2,w,c
  1487  00036A  A4D8               	btfss	status,2,c
  1488  00036C  EFBA  F001         	goto	u311
  1489  000370  EFBD  F001         	goto	u310
  1490  000374                     u311:
  1491  000374  FFFF               	dw	65535	; assembler added errata NOP
  1492  000376  EFC2  F001         	goto	l1146
  1493  00037A                     u310:
  1494  00037A  FFFF               	dw	65535	; assembler added errata NOP
  1495  00037C                     
  1496                           ;main.c: 154:                 pos = h;
  1497  00037C  C016  F00A         	movff	sort@h,sort@pos
  1498  000380  C017  F00B         	movff	sort@h+1,sort@pos+1
  1499  000384                     l1146:
  1500  000384  FFFF               	dw	65535	; assembler added errata NOP
  1501                           
  1502                           ;main.c: 162:             if (*(p + h) < temp)
  1503  000386  90D8               	bcf	status,0,c
  1504  000388  3416               	rlcf	sort@h^0,w,c
  1505  00038A  6ED9               	movwf	fsr2l,c
  1506  00038C  3417               	rlcf	(sort@h+1)^0,w,c
  1507  00038E  6EDA               	movwf	fsr2h,c
  1508  000390  5001               	movf	sort@p^0,w,c
  1509  000392  26D9               	addwf	fsr2l,f,c
  1510  000394  5002               	movf	(sort@p+1)^0,w,c
  1511  000396  22DA               	addwfc	fsr2h,f,c
  1512  000398  5014               	movf	sort@temp^0,w,c
  1513  00039A  5CDE               	subwf	postinc2,w,c
  1514  00039C  50DE               	movf	postinc2,w,c
  1515  00039E  0A80               	xorlw	128
  1516  0003A0  6E07               	movwf	(??_sort+2)^0,c
  1517  0003A2  5015               	movf	(sort@temp+1)^0,w,c
  1518  0003A4  0A80               	xorlw	128
  1519  0003A6  5807               	subwfb	(??_sort+2)^0,w,c
  1520  0003A8  B0D8               	btfsc	status,0,c
  1521  0003AA  EFD9  F001         	goto	u321
  1522  0003AE  EFDC  F001         	goto	u320
  1523  0003B2                     u321:
  1524  0003B2  FFFF               	dw	65535	; assembler added errata NOP
  1525  0003B4  EFEE  F001         	goto	l1152
  1526  0003B8                     u320:
  1527  0003B8  FFFF               	dw	65535	; assembler added errata NOP
  1528  0003BA                     
  1529                           ;main.c: 163:             {;main.c: 164:                 temp = *(p + h);
  1530  0003BA  90D8               	bcf	status,0,c
  1531  0003BC  3416               	rlcf	sort@h^0,w,c
  1532  0003BE  6ED9               	movwf	fsr2l,c
  1533  0003C0  3417               	rlcf	(sort@h+1)^0,w,c
  1534  0003C2  6EDA               	movwf	fsr2h,c
  1535  0003C4  5001               	movf	sort@p^0,w,c
  1536  0003C6  26D9               	addwf	fsr2l,f,c
  1537  0003C8  5002               	movf	(sort@p+1)^0,w,c
  1538  0003CA  22DA               	addwfc	fsr2h,f,c
  1539  0003CC  CFDE F014          	movff	postinc2,sort@temp
  1540  0003D0  CFDD F015          	movff	postdec2,sort@temp+1
  1541  0003D4                     
  1542                           ;main.c: 165:                 pos = h;
  1543  0003D4  C016  F00A         	movff	sort@h,sort@pos
  1544  0003D8  C017  F00B         	movff	sort@h+1,sort@pos+1
  1545  0003DC                     l1152:
  1546  0003DC  FFFF               	dw	65535	; assembler added errata NOP
  1547                           
  1548                           ;main.c: 167:         }
  1549  0003DE  4A16               	infsnz	sort@h^0,f,c
  1550  0003E0  2A17               	incf	(sort@h+1)^0,f,c
  1551  0003E2                     l1154:
  1552  0003E2  FFFF               	dw	65535	; assembler added errata NOP
  1553  0003E4  500E               	movf	sort@sizesMod^0,w,c
  1554  0003E6  5C16               	subwf	sort@h^0,w,c
  1555  0003E8  5017               	movf	(sort@h+1)^0,w,c
  1556  0003EA  0A80               	xorlw	128
  1557  0003EC  6E05               	movwf	??_sort^0,c
  1558  0003EE  500F               	movf	(sort@sizesMod+1)^0,w,c
  1559  0003F0  0A80               	xorlw	128
  1560  0003F2  5805               	subwfb	??_sort^0,w,c
  1561  0003F4  A0D8               	btfss	status,0,c
  1562  0003F6  EFFF  F001         	goto	u331
  1563  0003FA  EF02  F002         	goto	u330
  1564  0003FE                     u331:
  1565  0003FE  FFFF               	dw	65535	; assembler added errata NOP
  1566  000400  EFA6  F001         	goto	l1140
  1567  000404                     u330:
  1568  000404  FFFF               	dw	65535	; assembler added errata NOP
  1569  000406                     
  1570                           ;main.c: 170:         for (int k = pos; k < sizesMod; k++)
  1571  000406  C00A  F010         	movff	sort@pos,sort@k
  1572  00040A  C00B  F011         	movff	sort@pos+1,sort@k+1
  1573  00040E  EF2E  F002         	goto	l1160
  1574  000412                     l1156:
  1575  000412  FFFF               	dw	65535	; assembler added errata NOP
  1576                           
  1577                           ;main.c: 171:         {;main.c: 172:             *(p + k) = *(p + (k + 1));
  1578  000414  C010  F005         	movff	sort@k,??_sort
  1579  000418  C011  F006         	movff	sort@k+1,??_sort+1
  1580  00041C  90D8               	bcf	status,0,c
  1581  00041E  3605               	rlcf	??_sort^0,f,c
  1582  000420  3606               	rlcf	(??_sort+1)^0,f,c
  1583  000422  C001  F007         	movff	sort@p,??_sort+2
  1584  000426  C002  F008         	movff	sort@p+1,??_sort+3
  1585  00042A  5005               	movf	??_sort^0,w,c
  1586  00042C  2607               	addwf	(??_sort+2)^0,f,c
  1587  00042E  5006               	movf	(??_sort+1)^0,w,c
  1588  000430  2208               	addwfc	(??_sort+3)^0,f,c
  1589  000432  0E02               	movlw	2
  1590  000434  2407               	addwf	(??_sort+2)^0,w,c
  1591  000436  6ED9               	movwf	fsr2l,c
  1592  000438  0E00               	movlw	0
  1593  00043A  2008               	addwfc	(??_sort+3)^0,w,c
  1594  00043C  6EDA               	movwf	fsr2h,c
  1595  00043E  90D8               	bcf	status,0,c
  1596  000440  3410               	rlcf	sort@k^0,w,c
  1597  000442  6EE1               	movwf	fsr1l,c
  1598  000444  3411               	rlcf	(sort@k+1)^0,w,c
  1599  000446  6EE2               	movwf	fsr1h,c
  1600  000448  5001               	movf	sort@p^0,w,c
  1601  00044A  26E1               	addwf	fsr1l,f,c
  1602  00044C  5002               	movf	(sort@p+1)^0,w,c
  1603  00044E  22E2               	addwfc	fsr1h,f,c
  1604  000450  CFDE FFE6          	movff	postinc2,postinc1
  1605  000454  CFDD FFE5          	movff	postdec2,postdec1
  1606  000458                     
  1607                           ;main.c: 173:         }
  1608  000458  4A10               	infsnz	sort@k^0,f,c
  1609  00045A  2A11               	incf	(sort@k+1)^0,f,c
  1610  00045C                     l1160:
  1611  00045C  FFFF               	dw	65535	; assembler added errata NOP
  1612  00045E  500E               	movf	sort@sizesMod^0,w,c
  1613  000460  5C10               	subwf	sort@k^0,w,c
  1614  000462  5011               	movf	(sort@k+1)^0,w,c
  1615  000464  0A80               	xorlw	128
  1616  000466  6E05               	movwf	??_sort^0,c
  1617  000468  500F               	movf	(sort@sizesMod+1)^0,w,c
  1618  00046A  0A80               	xorlw	128
  1619  00046C  5805               	subwfb	??_sort^0,w,c
  1620  00046E  A0D8               	btfss	status,0,c
  1621  000470  EF3C  F002         	goto	u341
  1622  000474  EF3F  F002         	goto	u340
  1623  000478                     u341:
  1624  000478  FFFF               	dw	65535	; assembler added errata NOP
  1625  00047A  EF09  F002         	goto	l1156
  1626  00047E                     u340:
  1627  00047E  FFFF               	dw	65535	; assembler added errata NOP
  1628  000480                     
  1629                           ;main.c: 174:         result[nums] = temp;
  1630  000480  90D8               	bcf	status,0,c
  1631  000482  340C               	rlcf	sort@nums^0,w,c
  1632  000484  6ED9               	movwf	fsr2l,c
  1633  000486  340D               	rlcf	(sort@nums+1)^0,w,c
  1634  000488  6EDA               	movwf	fsr2h,c
  1635  00048A  0E34               	movlw	low sort@result
  1636  00048C  26D9               	addwf	fsr2l,f,c
  1637  00048E  0E00               	movlw	high sort@result
  1638  000490  22DA               	addwfc	fsr2h,f,c
  1639  000492  C014  FFDE         	movff	sort@temp,postinc2
  1640  000496  C015  FFDD         	movff	sort@temp+1,postdec2
  1641  00049A                     
  1642                           ;main.c: 175:         sizesMod--;
  1643  00049A  060E               	decf	sort@sizesMod^0,f,c
  1644  00049C  A0D8               	btfss	status,0,c
  1645  00049E  060F               	decf	(sort@sizesMod+1)^0,f,c
  1646  0004A0                     
  1647                           ;main.c: 176:         nums++;
  1648  0004A0  4A0C               	infsnz	sort@nums^0,f,c
  1649  0004A2  2A0D               	incf	(sort@nums+1)^0,f,c
  1650  0004A4                     
  1651                           ;main.c: 177:     } while (nums <= sizes - 1);
  1652  0004A4  0EFF               	movlw	255
  1653  0004A6  6E05               	movwf	??_sort^0,c
  1654  0004A8  0EFF               	movlw	255
  1655  0004AA  6E06               	movwf	(??_sort+1)^0,c
  1656  0004AC  C003  F007         	movff	sort@sizes,??_sort+2
  1657  0004B0  C004  F008         	movff	sort@sizes+1,??_sort+3
  1658  0004B4  5005               	movf	??_sort^0,w,c
  1659  0004B6  2607               	addwf	(??_sort+2)^0,f,c
  1660  0004B8  5006               	movf	(??_sort+1)^0,w,c
  1661  0004BA  2208               	addwfc	(??_sort+3)^0,f,c
  1662  0004BC  500C               	movf	sort@nums^0,w,c
  1663  0004BE  5C07               	subwf	(??_sort+2)^0,w,c
  1664  0004C0  5008               	movf	(??_sort+3)^0,w,c
  1665  0004C2  0A80               	xorlw	128
  1666  0004C4  6E09               	movwf	(??_sort+4)^0,c
  1667  0004C6  500D               	movf	(sort@nums+1)^0,w,c
  1668  0004C8  0A80               	xorlw	128
  1669  0004CA  5809               	subwfb	(??_sort+4)^0,w,c
  1670  0004CC  B0D8               	btfsc	status,0,c
  1671  0004CE  EF6B  F002         	goto	u351
  1672  0004D2  EF6E  F002         	goto	u350
  1673  0004D6                     u351:
  1674  0004D6  FFFF               	dw	65535	; assembler added errata NOP
  1675  0004D8  EF97  F001         	goto	l1136
  1676  0004DC                     u350:
  1677  0004DC  FFFF               	dw	65535	; assembler added errata NOP
  1678  0004DE                     
  1679                           ;main.c: 180:     for (int j = 0; j < sizes; j++)
  1680  0004DE  0E00               	movlw	0
  1681  0004E0  6E13               	movwf	(sort@j+1)^0,c
  1682  0004E2  0E00               	movlw	0
  1683  0004E4  6E12               	movwf	sort@j^0,c
  1684  0004E6  EF8E  F002         	goto	l1176
  1685  0004EA                     l1172:
  1686  0004EA  FFFF               	dw	65535	; assembler added errata NOP
  1687                           
  1688                           ;main.c: 181:     {;main.c: 182:         *(p + j) = result[j];
  1689  0004EC  90D8               	bcf	status,0,c
  1690  0004EE  3412               	rlcf	sort@j^0,w,c
  1691  0004F0  6ED9               	movwf	fsr2l,c
  1692  0004F2  3413               	rlcf	(sort@j+1)^0,w,c
  1693  0004F4  6EDA               	movwf	fsr2h,c
  1694  0004F6  0E34               	movlw	low sort@result
  1695  0004F8  26D9               	addwf	fsr2l,f,c
  1696  0004FA  0E00               	movlw	high sort@result
  1697  0004FC  22DA               	addwfc	fsr2h,f,c
  1698  0004FE  90D8               	bcf	status,0,c
  1699  000500  3412               	rlcf	sort@j^0,w,c
  1700  000502  6EE1               	movwf	fsr1l,c
  1701  000504  3413               	rlcf	(sort@j+1)^0,w,c
  1702  000506  6EE2               	movwf	fsr1h,c
  1703  000508  5001               	movf	sort@p^0,w,c
  1704  00050A  26E1               	addwf	fsr1l,f,c
  1705  00050C  5002               	movf	(sort@p+1)^0,w,c
  1706  00050E  22E2               	addwfc	fsr1h,f,c
  1707  000510  CFDE FFE6          	movff	postinc2,postinc1
  1708  000514  CFDD FFE5          	movff	postdec2,postdec1
  1709  000518                     
  1710                           ;main.c: 183:     }
  1711  000518  4A12               	infsnz	sort@j^0,f,c
  1712  00051A  2A13               	incf	(sort@j+1)^0,f,c
  1713  00051C                     l1176:
  1714  00051C  FFFF               	dw	65535	; assembler added errata NOP
  1715  00051E  5003               	movf	sort@sizes^0,w,c
  1716  000520  5C12               	subwf	sort@j^0,w,c
  1717  000522  5013               	movf	(sort@j+1)^0,w,c
  1718  000524  0A80               	xorlw	128
  1719  000526  6E05               	movwf	??_sort^0,c
  1720  000528  5004               	movf	(sort@sizes+1)^0,w,c
  1721  00052A  0A80               	xorlw	128
  1722  00052C  5805               	subwfb	??_sort^0,w,c
  1723  00052E  A0D8               	btfss	status,0,c
  1724  000530  EF9C  F002         	goto	u361
  1725  000534  EF9F  F002         	goto	u360
  1726  000538                     u361:
  1727  000538  FFFF               	dw	65535	; assembler added errata NOP
  1728  00053A  EF75  F002         	goto	l1172
  1729  00053E                     u360:
  1730  00053E  FFFF               	dw	65535	; assembler added errata NOP
  1731  000540  0012               	return		;funcret
  1732  000542  FFFF               	dw	65535	; errata NOP
  1733  000544                     __end_of_sort:
  1734                           	callstack 0
  1735                           
  1736 ;; *************** function _callsUp *****************
  1737 ;; Defined at:
  1738 ;;		line 241 in file "main.c"
  1739 ;; Parameters:    Size  Location     Type
  1740 ;;		None
  1741 ;; Auto vars:     Size  Location     Type
  1742 ;;		None
  1743 ;; Return value:  Size  Location     Type
  1744 ;;                  1    wreg      void 
  1745 ;; Registers used:
  1746 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1747 ;; Tracked objects:
  1748 ;;		On entry : 0/0
  1749 ;;		On exit  : 0/0
  1750 ;;		Unchanged: 0/0
  1751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1752 ;;      Params:         0       0       0       0       0       0       0
  1753 ;;      Locals:         0       0       0       0       0       0       0
  1754 ;;      Temps:          2       0       0       0       0       0       0
  1755 ;;      Totals:         2       0       0       0       0       0       0
  1756 ;;Total ram usage:        2 bytes
  1757 ;; Hardware stack levels used: 1
  1758 ;; Hardware stack levels required when called: 1
  1759 ;; This function calls:
  1760 ;;		Nothing
  1761 ;; This function is called by:
  1762 ;;		_modeUp
  1763 ;; This function uses a non-reentrant model
  1764 ;;
  1765                           
  1766                           	psect	text5
  1767  000758                     __ptext5:
  1768                           	callstack 0
  1769  000758                     _callsUp:
  1770                           	callstack 0
  1771  000758  FFFF               	dw	65535	; assembler added errata NOP
  1772  00075A                     
  1773                           ;main.c: 242:     switch(PORTB){
  1774  00075A  EFE6  F003         	goto	l960
  1775  00075E                     l942:
  1776  00075E  FFFF               	dw	65535	; assembler added errata NOP
  1777                           
  1778                           ;main.c: 244:                 LATD = 0x00;
  1779  000760  0E00               	movlw	0
  1780  000762  6E8C               	movwf	140,c	;volatile
  1781                           
  1782                           ;main.c: 245:                 break;
  1783  000764  EF11  F004         	goto	l106
  1784  000768                     l944:
  1785  000768  FFFF               	dw	65535	; assembler added errata NOP
  1786                           
  1787                           ;main.c: 248:                 callsInUp[numUps] = 2;
  1788  00076A  90D8               	bcf	status,0,c
  1789  00076C  342A               	rlcf	_numUps^0,w,c
  1790  00076E  6ED9               	movwf	fsr2l,c
  1791  000770  342B               	rlcf	(_numUps+1)^0,w,c
  1792  000772  6EDA               	movwf	fsr2h,c
  1793  000774  0E00               	movlw	low _callsInUp
  1794  000776  26D9               	addwf	fsr2l,f,c
  1795  000778  0E01               	movlw	high _callsInUp
  1796  00077A  22DA               	addwfc	fsr2h,f,c
  1797  00077C  0E02               	movlw	2
  1798  00077E  6EDE               	movwf	postinc2,c
  1799  000780  0E00               	movlw	0
  1800  000782  6EDD               	movwf	postdec2,c
  1801  000784                     l946:
  1802  000784  FFFF               	dw	65535	; assembler added errata NOP
  1803                           
  1804                           ;main.c: 249:                 numUps++;
  1805  000786  4A2A               	infsnz	_numUps^0,f,c
  1806  000788  2A2B               	incf	(_numUps+1)^0,f,c
  1807                           
  1808                           ;main.c: 250:                 break;
  1809  00078A  EF11  F004         	goto	l106
  1810  00078E                     l948:
  1811  00078E  FFFF               	dw	65535	; assembler added errata NOP
  1812                           
  1813                           ;main.c: 257:                 callsInUp[numUps] = 3;
  1814  000790  90D8               	bcf	status,0,c
  1815  000792  342A               	rlcf	_numUps^0,w,c
  1816  000794  6ED9               	movwf	fsr2l,c
  1817  000796  342B               	rlcf	(_numUps+1)^0,w,c
  1818  000798  6EDA               	movwf	fsr2h,c
  1819  00079A  0E00               	movlw	low _callsInUp
  1820  00079C  26D9               	addwf	fsr2l,f,c
  1821  00079E  0E01               	movlw	high _callsInUp
  1822  0007A0  22DA               	addwfc	fsr2h,f,c
  1823  0007A2  0E03               	movlw	3
  1824  0007A4  6EDE               	movwf	postinc2,c
  1825  0007A6  0E00               	movlw	0
  1826  0007A8  6EDD               	movwf	postdec2,c
  1827  0007AA  EFC2  F003         	goto	l946
  1828  0007AE                     l952:
  1829  0007AE  FFFF               	dw	65535	; assembler added errata NOP
  1830                           
  1831                           ;main.c: 262:                 LATD = 0x10;
  1832  0007B0  0E10               	movlw	16
  1833  0007B2  6E8C               	movwf	140,c	;volatile
  1834                           
  1835                           ;main.c: 263:                 break;
  1836  0007B4  EF11  F004         	goto	l106
  1837  0007B8                     l954:
  1838  0007B8  FFFF               	dw	65535	; assembler added errata NOP
  1839                           
  1840                           ;main.c: 266:                 LATD = 0x20;
  1841  0007BA  0E20               	movlw	32
  1842  0007BC  6E8C               	movwf	140,c	;volatile
  1843                           
  1844                           ;main.c: 267:                 break;
  1845  0007BE  EF11  F004         	goto	l106
  1846  0007C2                     l956:
  1847  0007C2  FFFF               	dw	65535	; assembler added errata NOP
  1848                           
  1849                           ;main.c: 270:                 LATD = 0x40;
  1850  0007C4  0E40               	movlw	64
  1851  0007C6  6E8C               	movwf	140,c	;volatile
  1852                           
  1853                           ;main.c: 271:                 break;
  1854  0007C8  EF11  F004         	goto	l106
  1855  0007CC                     l960:
  1856  0007CC  FFFF               	dw	65535	; assembler added errata NOP
  1857  0007CE  5081               	movf	129,w,c	;volatile
  1858  0007D0  6E01               	movwf	??_callsUp^0,c
  1859  0007D2  6A02               	clrf	(??_callsUp+1)^0,c
  1860                           
  1861                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1862                           ; Switch size 1, requested type "simple"
  1863                           ; Number of cases is 1, Range of values is 0 to 0
  1864                           ; switch strategies available:
  1865                           ; Name         Instructions Cycles
  1866                           ; simple_byte            4     3 (average)
  1867                           ;	Chosen strategy is simple_byte
  1868  0007D4  5002               	movf	(??_callsUp+1)^0,w,c
  1869  0007D6  0A00               	xorlw	0	; case 0
  1870  0007D8  B4D8               	btfsc	status,2,c
  1871  0007DA  EFF1  F003         	goto	l1382
  1872  0007DE  EF11  F004         	goto	l106
  1873  0007E2                     l1382:
  1874  0007E2  FFFF               	dw	65535	; assembler added errata NOP
  1875                           
  1876                           ; Switch size 1, requested type "simple"
  1877                           ; Number of cases is 7, Range of values is 0 to 64
  1878                           ; switch strategies available:
  1879                           ; Name         Instructions Cycles
  1880                           ; simple_byte           22    12 (average)
  1881                           ;	Chosen strategy is simple_byte
  1882  0007E4  5001               	movf	??_callsUp^0,w,c
  1883  0007E6  0A00               	xorlw	0	; case 0
  1884  0007E8  B4D8               	btfsc	status,2,c
  1885  0007EA  EFAF  F003         	goto	l942
  1886  0007EE  0A02               	xorlw	2	; case 2
  1887  0007F0  B4D8               	btfsc	status,2,c
  1888  0007F2  EFB4  F003         	goto	l944
  1889  0007F6  0A06               	xorlw	6	; case 4
  1890  0007F8  B4D8               	btfsc	status,2,c
  1891  0007FA  EF11  F004         	goto	l106
  1892  0007FE  0A0C               	xorlw	12	; case 8
  1893  000800  B4D8               	btfsc	status,2,c
  1894  000802  EFC7  F003         	goto	l948
  1895  000806  0A18               	xorlw	24	; case 16
  1896  000808  B4D8               	btfsc	status,2,c
  1897  00080A  EFD7  F003         	goto	l952
  1898  00080E  0A30               	xorlw	48	; case 32
  1899  000810  B4D8               	btfsc	status,2,c
  1900  000812  EFDC  F003         	goto	l954
  1901  000816  0A60               	xorlw	96	; case 64
  1902  000818  B4D8               	btfsc	status,2,c
  1903  00081A  EFE1  F003         	goto	l956
  1904  00081E  EF11  F004         	goto	l106
  1905  000822                     l106:
  1906  000822  FFFF               	dw	65535	; assembler added errata NOP
  1907  000824  0012               	return		;funcret
  1908  000826  FFFF               	dw	65535	; errata NOP
  1909  000828                     __end_of_callsUp:
  1910                           	callstack 0
  1911                           
  1912 ;; *************** function _bootAscensor *****************
  1913 ;; Defined at:
  1914 ;;		line 118 in file "main.c"
  1915 ;; Parameters:    Size  Location     Type
  1916 ;;		None
  1917 ;; Auto vars:     Size  Location     Type
  1918 ;;		None
  1919 ;; Return value:  Size  Location     Type
  1920 ;;                  1    wreg      void 
  1921 ;; Registers used:
  1922 ;;		wreg, status,2
  1923 ;; Tracked objects:
  1924 ;;		On entry : 0/0
  1925 ;;		On exit  : 0/0
  1926 ;;		Unchanged: 0/0
  1927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1928 ;;      Params:         0       0       0       0       0       0       0
  1929 ;;      Locals:         0       0       0       0       0       0       0
  1930 ;;      Temps:          0       0       0       0       0       0       0
  1931 ;;      Totals:         0       0       0       0       0       0       0
  1932 ;;Total ram usage:        0 bytes
  1933 ;; Hardware stack levels used: 1
  1934 ;; Hardware stack levels required when called: 1
  1935 ;; This function calls:
  1936 ;;		Nothing
  1937 ;; This function is called by:
  1938 ;;		_main
  1939 ;; This function uses a non-reentrant model
  1940 ;;
  1941                           
  1942                           	psect	text6
  1943  00095A                     __ptext6:
  1944                           	callstack 0
  1945  00095A                     _bootAscensor:
  1946                           	callstack 0
  1947  00095A  FFFF               	dw	65535	; assembler added errata NOP
  1948  00095C                     
  1949                           ;main.c: 119:     LATCbits.LC0 = 1;
  1950  00095C  808B               	bsf	139,0,c	;volatile
  1951                           
  1952                           ;main.c: 120:     LATCbits.LC1 = 1;
  1953  00095E  828B               	bsf	139,1,c	;volatile
  1954                           
  1955                           ;main.c: 122:     if (PORTDbits.RD4 == 1){
  1956  000960  A883               	btfss	131,4,c	;volatile
  1957  000962  EFB5  F004         	goto	u241
  1958  000966  EFB8  F004         	goto	u240
  1959  00096A                     u241:
  1960  00096A  FFFF               	dw	65535	; assembler added errata NOP
  1961  00096C  EFC0  F004         	goto	l53
  1962  000970                     u240:
  1963  000970  FFFF               	dw	65535	; assembler added errata NOP
  1964  000972                     l1064:
  1965  000972  FFFF               	dw	65535	; assembler added errata NOP
  1966                           
  1967                           ;main.c: 123:         nowFL = 1;
  1968  000974  0E00               	movlw	0
  1969  000976  6E2D               	movwf	(_nowFL+1)^0,c
  1970  000978  0E01               	movlw	1
  1971  00097A  6E2C               	movwf	_nowFL^0,c
  1972  00097C  EFCF  F004         	goto	l54
  1973  000980                     l53:
  1974  000980  FFFF               	dw	65535	; assembler added errata NOP
  1975                           
  1976                           ;main.c: 127:         LATCbits.LC0 = 0;
  1977  000982  908B               	bcf	139,0,c	;volatile
  1978  000984                     l56:
  1979  000984  FFFF               	dw	65535	; assembler added errata NOP
  1980                           
  1981                           ;main.c: 128:         while(!PORTDbits.RD4){
  1982  000986  A883               	btfss	131,4,c	;volatile
  1983  000988  EFC8  F004         	goto	u251
  1984  00098C  EFCB  F004         	goto	u250
  1985  000990                     u251:
  1986  000990  FFFF               	dw	65535	; assembler added errata NOP
  1987  000992  EFC2  F004         	goto	l56
  1988  000996                     u250:
  1989  000996  FFFF               	dw	65535	; assembler added errata NOP
  1990  000998                     
  1991                           ;main.c: 131:         LATCbits.LC0 = 1;
  1992  000998  808B               	bsf	139,0,c	;volatile
  1993  00099A  EFB9  F004         	goto	l1064
  1994  00099E                     l54:
  1995  00099E  FFFF               	dw	65535	; assembler added errata NOP
  1996  0009A0  0012               	return		;funcret
  1997  0009A2  FFFF               	dw	65535	; errata NOP
  1998  0009A4                     __end_of_bootAscensor:
  1999                           	callstack 0
  2000                           
  2001 ;; *************** function _boot *****************
  2002 ;; Defined at:
  2003 ;;		line 106 in file "main.c"
  2004 ;; Parameters:    Size  Location     Type
  2005 ;;		None
  2006 ;; Auto vars:     Size  Location     Type
  2007 ;;		None
  2008 ;; Return value:  Size  Location     Type
  2009 ;;                  1    wreg      void 
  2010 ;; Registers used:
  2011 ;;		wreg, status,2
  2012 ;; Tracked objects:
  2013 ;;		On entry : 0/0
  2014 ;;		On exit  : 0/0
  2015 ;;		Unchanged: 0/0
  2016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2017 ;;      Params:         0       0       0       0       0       0       0
  2018 ;;      Locals:         0       0       0       0       0       0       0
  2019 ;;      Temps:          0       0       0       0       0       0       0
  2020 ;;      Totals:         0       0       0       0       0       0       0
  2021 ;;Total ram usage:        0 bytes
  2022 ;; Hardware stack levels used: 1
  2023 ;; Hardware stack levels required when called: 1
  2024 ;; This function calls:
  2025 ;;		Nothing
  2026 ;; This function is called by:
  2027 ;;		_main
  2028 ;; This function uses a non-reentrant model
  2029 ;;
  2030                           
  2031                           	psect	text7
  2032  0009CA                     __ptext7:
  2033                           	callstack 0
  2034  0009CA                     _boot:
  2035                           	callstack 0
  2036  0009CA  FFFF               	dw	65535	; assembler added errata NOP
  2037  0009CC                     
  2038                           ;main.c: 107:     ADCON1 = 0x06;
  2039  0009CC  0E06               	movlw	6
  2040  0009CE  6EC1               	movwf	193,c	;volatile
  2041  0009D0                     
  2042                           ;main.c: 108:     TRISB = 0xFF;
  2043  0009D0  6893               	setf	147,c	;volatile
  2044                           
  2045                           ;main.c: 109:     TRISD = 0xF0;
  2046  0009D2  0EF0               	movlw	240
  2047  0009D4  6E95               	movwf	149,c	;volatile
  2048  0009D6                     
  2049                           ;main.c: 110:     TRISA = 0xFF;
  2050  0009D6  6892               	setf	146,c	;volatile
  2051                           
  2052                           ;main.c: 111:     TRISC = 0xFC;
  2053  0009D8  0EFC               	movlw	252
  2054  0009DA  6E94               	movwf	148,c	;volatile
  2055  0009DC  0012               	return		;funcret
  2056  0009DE  FFFF               	dw	65535	; errata NOP
  2057  0009E0                     __end_of_boot:
  2058                           	callstack 0
  2059                           
  2060 ;; *************** function _ISR *****************
  2061 ;; Defined at:
  2062 ;;		line 423 in file "main.c"
  2063 ;; Parameters:    Size  Location     Type
  2064 ;;		None
  2065 ;; Auto vars:     Size  Location     Type
  2066 ;;		None
  2067 ;; Return value:  Size  Location     Type
  2068 ;;                  1    wreg      void 
  2069 ;; Registers used:
  2070 ;;		None
  2071 ;; Tracked objects:
  2072 ;;		On entry : 0/0
  2073 ;;		On exit  : 0/0
  2074 ;;		Unchanged: 0/0
  2075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2076 ;;      Params:         0       0       0       0       0       0       0
  2077 ;;      Locals:         0       0       0       0       0       0       0
  2078 ;;      Temps:          0       0       0       0       0       0       0
  2079 ;;      Totals:         0       0       0       0       0       0       0
  2080 ;;Total ram usage:        0 bytes
  2081 ;; Hardware stack levels used: 1
  2082 ;; This function calls:
  2083 ;;		Nothing
  2084 ;; This function is called by:
  2085 ;;		Interrupt level 2
  2086 ;; This function uses a non-reentrant model
  2087 ;;
  2088                           
  2089                           	psect	intcode
  2090  000008                     __pintcode:
  2091                           	callstack 0
  2092  000008                     _ISR:
  2093                           	callstack 0
  2094  000008  FFFF               	dw	65535	; assembler added errata NOP
  2095                           
  2096                           ;incstack = 0
  2097  00000A  8234               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  2098  00000C  9234               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  2099  00000E  0011               	retfie		f
  2100  000010  FFFF               	dw	65535	; errata NOP
  2101  000012                     __end_of_ISR:
  2102                           	callstack 0
  2103  000012  FFFF               	dw	65535	; assembler added errata NOP
  2104                           
  2105                           	psect	rparam
  2106  0000                     
  2107                           	psect	temp
  2108  000034                     btemp:
  2109                           	callstack 0
  2110  000034                     	ds	1
  2111  0000                     int$flags	set	btemp
  2112  0000                     wtemp8	set	btemp+1
  2113  0000                     ttemp5	set	btemp+1
  2114  0000                     ttemp6	set	btemp+4
  2115  0000                     ttemp7	set	btemp+8
  2116                           
  2117                           	psect	idloc
  2118                           
  2119                           ;Config register IDLOC0 @ 0x200000
  2120                           ;	unspecified, using default values
  2121  200000                     	org	2097152
  2122  200000  FF                 	db	255
  2123                           
  2124                           ;Config register IDLOC1 @ 0x200001
  2125                           ;	unspecified, using default values
  2126  200001                     	org	2097153
  2127  200001  FF                 	db	255
  2128                           
  2129                           ;Config register IDLOC2 @ 0x200002
  2130                           ;	unspecified, using default values
  2131  200002                     	org	2097154
  2132  200002  FF                 	db	255
  2133                           
  2134                           ;Config register IDLOC3 @ 0x200003
  2135                           ;	unspecified, using default values
  2136  200003                     	org	2097155
  2137  200003  FF                 	db	255
  2138                           
  2139                           ;Config register IDLOC4 @ 0x200004
  2140                           ;	unspecified, using default values
  2141  200004                     	org	2097156
  2142  200004  FF                 	db	255
  2143                           
  2144                           ;Config register IDLOC5 @ 0x200005
  2145                           ;	unspecified, using default values
  2146  200005                     	org	2097157
  2147  200005  FF                 	db	255
  2148                           
  2149                           ;Config register IDLOC6 @ 0x200006
  2150                           ;	unspecified, using default values
  2151  200006                     	org	2097158
  2152  200006  FF                 	db	255
  2153                           
  2154                           ;Config register IDLOC7 @ 0x200007
  2155                           ;	unspecified, using default values
  2156  200007                     	org	2097159
  2157  200007  FF                 	db	255
  2158                           
  2159                           	psect	config
  2160                           
  2161                           ; Padding undefined space
  2162  300000                     	org	3145728
  2163  300000  FF                 	db	255
  2164                           
  2165                           ;Config register CONFIG1H @ 0x300001
  2166                           ;	Oscillator Selection bits
  2167                           ;	OSC = HS, HS oscillator
  2168                           ;	Oscillator System Clock Switch Enable bit
  2169                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
  2170  300001                     	org	3145729
  2171  300001  22                 	db	34
  2172                           
  2173                           ;Config register CONFIG2L @ 0x300002
  2174                           ;	Power-up Timer Enable bit
  2175                           ;	PWRT = OFF, PWRT disabled
  2176                           ;	Brown-out Reset Enable bit
  2177                           ;	BOR = OFF, Brown-out Reset disabled
  2178                           ;	Brown-out Reset Voltage bits
  2179                           ;	BORV = 20, VBOR set to 2.0V
  2180  300002                     	org	3145730
  2181  300002  0D                 	db	13
  2182                           
  2183                           ;Config register CONFIG2H @ 0x300003
  2184                           ;	Watchdog Timer Enable bit
  2185                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  2186                           ;	Watchdog Timer Postscale Select bits
  2187                           ;	WDTPS = 128, 1:128
  2188  300003                     	org	3145731
  2189  300003  0E                 	db	14
  2190                           
  2191                           ; Padding undefined space
  2192  300004                     	org	3145732
  2193  300004  FF                 	db	255
  2194                           
  2195                           ;Config register CONFIG3H @ 0x300005
  2196                           ;	CCP2 Mux bit
  2197                           ;	CCP2MUX = OFF, CCP2 input/output is multiplexed with RB3
  2198  300005                     	org	3145733
  2199  300005  00                 	db	0
  2200                           
  2201                           ;Config register CONFIG4L @ 0x300006
  2202                           ;	Stack Full/Underflow Reset Enable bit
  2203                           ;	STVR = OFF, Stack Full/Underflow will not cause RESET
  2204                           ;	Low Voltage ICSP Enable bit
  2205                           ;	LVP = OFF, Low Voltage ICSP disabled
  2206                           ;	Background Debugger Enable bit
  2207                           ;	DEBUG = 0x1, unprogrammed default
  2208  300006                     	org	3145734
  2209  300006  80                 	db	128
  2210                           
  2211                           ; Padding undefined space
  2212  300007                     	org	3145735
  2213  300007  FF                 	db	255
  2214                           
  2215                           ;Config register CONFIG5L @ 0x300008
  2216                           ;	Code Protection bit
  2217                           ;	CP0 = ON, Block 0 (000200-001FFFh) code protected
  2218                           ;	Code Protection bit
  2219                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code protected
  2220                           ;	Code Protection bit
  2221                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code protected
  2222                           ;	Code Protection bit
  2223                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code protected
  2224  300008                     	org	3145736
  2225  300008  0E                 	db	14
  2226                           
  2227                           ;Config register CONFIG5H @ 0x300009
  2228                           ;	Boot Block Code Protection bit
  2229                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code protected
  2230                           ;	Data EEPROM Code Protection bit
  2231                           ;	CPD = OFF, Data EEPROM not code protected
  2232  300009                     	org	3145737
  2233  300009  C0                 	db	192
  2234                           
  2235                           ;Config register CONFIG6L @ 0x30000A
  2236                           ;	Write Protection bit
  2237                           ;	WRT0 = OFF, Block 0 (000200-001FFFh) not write protected
  2238                           ;	Write Protection bit
  2239                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write protected
  2240                           ;	Write Protection bit
  2241                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write protected
  2242                           ;	Write Protection bit
  2243                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write protected
  2244  30000A                     	org	3145738
  2245  30000A  0F                 	db	15
  2246                           
  2247                           ;Config register CONFIG6H @ 0x30000B
  2248                           ;	Configuration Register Write Protection bit
  2249                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write protected
  2250                           ;	Boot Block Write Protection bit
  2251                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write protected
  2252                           ;	Data EEPROM Write Protection bit
  2253                           ;	WRTD = OFF, Data EEPROM not write protected
  2254  30000B                     	org	3145739
  2255  30000B  E0                 	db	224
  2256                           
  2257                           ;Config register CONFIG7L @ 0x30000C
  2258                           ;	Table Read Protection bit
  2259                           ;	EBTR0 = OFF, Block 0 (000200-001FFFh) not protected from Table Reads executed in other
      +                           blocks
  2260                           ;	Table Read Protection bit
  2261                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from Table Reads executed in other
      +                           blocks
  2262                           ;	Table Read Protection bit
  2263                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from Table Reads executed in other
      +                           blocks
  2264                           ;	Table Read Protection bit
  2265                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from Table Reads executed in other
      +                           blocks
  2266  30000C                     	org	3145740
  2267  30000C  0F                 	db	15
  2268                           
  2269                           ;Config register CONFIG7H @ 0x30000D
  2270                           ;	Boot Block Table Read Protection bit
  2271                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from Table Reads executed in ot
      +                          her blocks
  2272  30000D                     	org	3145741
  2273  30000D  40                 	db	64
  2274                           tosu	equ	0xFFF
  2275                           tosh	equ	0xFFE
  2276                           tosl	equ	0xFFD
  2277                           stkptr	equ	0xFFC
  2278                           pclatu	equ	0xFFB
  2279                           pclath	equ	0xFFA
  2280                           pcl	equ	0xFF9
  2281                           tblptru	equ	0xFF8
  2282                           tblptrh	equ	0xFF7
  2283                           tblptrl	equ	0xFF6
  2284                           tablat	equ	0xFF5
  2285                           prodh	equ	0xFF4
  2286                           prodl	equ	0xFF3
  2287                           indf0	equ	0xFEF
  2288                           postinc0	equ	0xFEE
  2289                           postdec0	equ	0xFED
  2290                           preinc0	equ	0xFEC
  2291                           plusw0	equ	0xFEB
  2292                           fsr0h	equ	0xFEA
  2293                           fsr0l	equ	0xFE9
  2294                           wreg	equ	0xFE8
  2295                           indf1	equ	0xFE7
  2296                           postinc1	equ	0xFE6
  2297                           postdec1	equ	0xFE5
  2298                           preinc1	equ	0xFE4
  2299                           plusw1	equ	0xFE3
  2300                           fsr1h	equ	0xFE2
  2301                           fsr1l	equ	0xFE1
  2302                           bsr	equ	0xFE0
  2303                           indf2	equ	0xFDF
  2304                           postinc2	equ	0xFDE
  2305                           postdec2	equ	0xFDD
  2306                           preinc2	equ	0xFDC
  2307                           plusw2	equ	0xFDB
  2308                           fsr2h	equ	0xFDA
  2309                           fsr2l	equ	0xFD9
  2310                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         212
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     39      51
    BANK0           128      0       0
    BANK1           256      0     200
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    dataPanelUp@UpCalls	PTR int  size(2) Largest target is 0
		 -> queueUp(COMRAM[0]), 

    sort@p	PTR int  size(2) Largest target is 0
		 -> queueUp(COMRAM[0]), 


Critical Paths under _main in COMRAM

    _main->_modeUp
    _modeUp->_modeUpControl
    _modeUpControl->_dataPanelUp
    _dataPanelUp->_sort

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2150
                               _boot
                       _bootAscensor
                             _modeUp
 ---------------------------------------------------------------------------------
 (1) _modeUp                                               2     2      0    2150
                                             37 COMRAM     2     2      0
                            _callsUp
                        _dataPanelUp
                      _modeUpControl
 ---------------------------------------------------------------------------------
 (2) _modeUpControl                                       10    10      0    1211
                                             27 COMRAM    10    10      0
                        _dataPanelUp
 ---------------------------------------------------------------------------------
 (3) _dataPanelUp                                          4     4      0     939
                                             23 COMRAM     4     4      0
                               _sort
 ---------------------------------------------------------------------------------
 (4) _sort                                                23    19      4     893
                                              0 COMRAM    23    19      4
 ---------------------------------------------------------------------------------
 (2) _callsUp                                              2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _bootAscensor                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _boot                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _boot
   _bootAscensor
   _modeUp
     _callsUp
     _dataPanelUp
       _sort
     _modeUpControl
       _dataPanelUp

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      C8       7       78.1%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     27      33       1       40.5%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      FB      15        0.0%
DATA                 0      0      FB       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Nov  8 09:53:33 2021

                                                                     l53 0980  
                                                                     l54 099E  
                                                                     l47 09DC  
                                                                     l56 0984  
                                                                     l80 0546  
                                                                     l58 0998  
                                                                     l77 0540  
                                                                     l69 0406  
                                                                     l94 0754  
                                                                    l112 001E  
                                                                    l106 0822  
                                                                    l123 0176  
                                                                    l133 030E  
                                                                    l118 00CA  
                                                                    l143 088E  
                                                                    l128 0222  
                                                                    l144 08A4  
                                                                    l152 0910  
                                                                    l153 0950  
                                                         ??_bootAscensor 0001  
                                                                    l146 08DA  
                                                                    l154 0930  
                                                                    l940 075A  
                                                                    l942 075E  
                                                                    l952 07AE  
                                                                    l944 0768  
                                                                    l960 07CC  
                                                                    l954 07B8  
                                                                    l946 0784  
                                                                    l956 07C2  
                                                                    l948 078E  
                                                                    u310 037A  
                                                                    u311 0374  
                                                                    u240 0970  
                                                                    u320 03B8  
                                                                    u400 05EC  
                                                                    u241 096A  
                                                                    u321 03B2  
                                                                    u401 05E6  
                                                                    u250 0996  
                                                                    u330 0404  
                                                                    u410 0642  
                                                                    u251 0990  
                                                                    u331 03FE  
                                                                    u411 063C  
                                                                    u340 047E  
                                                                    u420 0662  
                                                                    u500 0188  
                                                                    u341 0478  
                                                                    u421 065C  
                                                                    u501 0182  
                                                                    u350 04DC  
                                                                    u430 06B8  
                                                                    u510 01F6  
                                                                    u351 04D6  
                                                                    u431 06B2  
                                                                    u511 01F0  
                                                                    u360 053E  
                                                                    u440 06D8  
                                                                    u520 0234  
                                                                    u361 0538  
                                                                    u441 06D2  
                                                                    u521 022E  
                                                                    u450 072E  
                                                                    u370 0558  
                                                                    u530 02A2  
                                                                    u451 0728  
                                                                    u371 0552  
                                                                    u531 029C  
                                                                    u380 0576  
                                                                    u460 0030  
                                                                    u540 085C  
                                                                    _ISR 0008  
                                                                    u381 0570  
                                                                    u461 002A  
                                                                    u541 0856  
                                                                    u390 05CC  
                                                                    u470 009E  
                                                                    u550 08A2  
                                                                    u391 05C6  
                                                                    u607 00B6  
                                                                    u471 0098  
                                                                    u551 089C  
                                                                    u480 00DC  
                                                                    u560 08FC  
                                                                    u617 0162  
                                                                    u481 00D6  
                                                                    u561 08F6  
                                                                    u490 014A  
                                                                    u570 0922  
                                                                    u627 020E  
                                                                    u491 0144  
                                                                    u571 091C  
                                                                    u580 0942  
                                                                    u637 02BA  
                                                                    u581 093C  
                                                                    u597 0870  
                                                                    wreg 000FE8  
                                                                   ?_ISR 0001  
                                                                   l1200 0630  
                                                                   l1210 06A2  
                                                                   l1202 0644  
                                                                   l1060 09D6  
                                                                   l1140 034C  
                                                                   l1132 0316  
                                                                   l1220 06FC  
                                                                   l1204 0664  
                                                                   l1212 06A6  
                                                                   l1300 027C  
                                                                   l1062 095C  
                                                                   l1150 03D4  
                                                                   l1142 037C  
                                                                   l1134 0326  
                                                                   l1230 0740  
                                                                   l1222 0718  
                                                                   l1214 06BA  
                                                                   l1206 067E  
                                                                   l1310 02B0  
                                                                   l1302 0280  
                                                                   l1056 09CC  
                                                                   l1064 0972  
                                                                   l1160 045C  
                                                                   l1152 03DC  
                                                                   l1136 032E  
                                                                   l1216 06DA  
                                                                   l1224 071C  
                                                                   l1208 0686  
                                                                   l1312 02C8  
                                                                   l1304 02A4  
                                                                   l1240 0078  
                                                                   l1232 001A  
                                                                   l1058 09D0  
                                                                   l1170 04DE  
                                                                   l1162 0480  
                                                                   l1146 0384  
                                                                   l1154 03E2  
                                                                   l1138 0340  
                                                                   l1226 0730  
                                                                   l1218 06F4  
                                                                   l1306 02AA  
                                                                   l1250 00AC  
                                                                   l1242 007C  
                                                                   l1234 0032  
                                                                   l1330 0864  
                                                                   l1322 082A  
                                                                   l1172 04EA  
                                                                   l1164 049A  
                                                                   l1156 0412  
                                                                   l1148 03BA  
                                                                   l1228 0738  
                                                                   l1180 0578  
                                                                   l1308 02AE  
                                                                   l1260 0124  
                                                                   l1252 00C4  
                                                                   l1244 00A0  
                                                                   l1236 0036  
                                                                   l1316 02CE  
                                                                   l1340 08A8  
                                                                   l1332 0866  
                                                                   l1324 0846  
                                                                   l1174 0518  
                                                                   l1166 04A0  
                                                                   l1158 0458  
                                                                   l1190 05CE  
                                                                   l1182 0592  
                                                                   l1270 0158  
                                                                   l1262 0128  
                                                                   l1254 00DE  
                                                                   l1246 00A6  
                                                                   l1238 004A  
                                                                   l1342 08AC  
                                                                   l1334 087E  
                                                                   l1326 085E  
                                                                   l1350 08E0  
                                                                   l1176 051C  
                                                                   l1168 04A4  
                                                                   l1192 05EE  
                                                                   l1184 059A  
                                                                   l1280 01D0  
                                                                   l1272 0170  
                                                                   l1264 014C  
                                                                   l1256 00E2  
                                                                   l1248 00AA  
                                                                   l1336 0880  
                                                                   l1328 0860  
                                                                   l1344 08B2  
                                                                   l1352 08EA  
                                                                   l1194 0608  
                                                                   l1186 05B6  
                                                                   l1178 055A  
                                                                   l1290 0204  
                                                                   l1282 01D4  
                                                                   l1274 018A  
                                                                   l1266 0152  
                                                                   l1258 00F6  
                                                                   l1338 0886  
                                                                   l1362 0944  
                                                                   l1354 08FE  
                                                                   l1196 0610  
                                                                   l1188 05BA  
                                                                   l1380 02E6  
                                                                   l1292 021C  
                                                                   l1284 01F8  
                                                                   l1276 018E  
                                                                   l1268 0156  
                                                                   l1356 0906  
                                                                   l1382 07E2  
                                                                   l1198 062C  
                                                                   l1294 0236  
                                                                   l1286 01FE  
                                                                   l1278 01A2  
                                                                   l1358 0924  
                                                                   l1296 023A  
                                                                   l1288 0202  
                                                                   l1298 024E  
                                                                   l1378 08CA  
                                                                   _LATD 000F8C  
                                                                   _boot 09CA  
                                                                   _main 08E0  
                                                                   fsr1h 000FE2  
                                                                   fsr2h 000FDA  
                                                                   fsr1l 000FE1  
                                                                   fsr2l 000FD9  
                                                                   _sort 0314  
                                                                   btemp 0034  
                                                                   start 0014  
                                                           ___param_bank 000000  
                                                                  ??_ISR 0001  
                                                      modeUpControl@cont 0028  
                                                                  ?_boot 0001  
                                                                  ?_main 0001  
                                                                  ?_sort 0001  
                                                                  i2l164 000C  
                                                                  _PORTB 000F81  
                                                   __size_of_dataPanelUp 0214  
                                                                  _TRISA 000F92  
                                                                  _TRISB 000F93  
                                                                  _TRISC 000F94  
                                                                  _TRISD 000F95  
                                                        __end_of_callsUp 0828  
                                                                  _calls 0032  
                                                                  _nowFL 002C  
                                                                  sort@h 0016  
                                                                  sort@j 0012  
                                                                  sort@k 0010  
                                                                  sort@p 0001  
                                                                  ttemp5 0035  
                                                                  ttemp6 0038  
                                                                  ttemp7 003C  
                                                                  status 000FD8  
                                                                  wtemp8 0035  
                                                        __initialization 09A4  
                                                           __end_of_boot 09E0  
                                                           __end_of_main 095A  
                                                           __end_of_sort 0544  
                                                     modeUpControl@i_426 0020  
                                                     modeUpControl@i_427 0022  
                                                     modeUpControl@i_428 0024  
                                                                 ??_boot 0001  
                                                                 ??_main 0028  
                                                                 ??_sort 0005  
                                                          __activetblptr 000002  
                                                                 _ADCON1 000FC1  
                                                   __end_of_bootAscensor 09A4  
                                                           sort@sizesMod 000E  
                                                                 _callFL 002E  
                                                                 _callsD 0030  
                                                              ??_callsUp 0001  
                                                                 _modeUp 0828  
                                                                 clear_0 09AA  
                                                                 clear_1 09B6  
                                                                 _numUps 002A  
                                                                 isa$std 000001  
                                                                 tblptru 000FF8  
                                                 __size_of_modeUpControl 02FC  
                                                             __accesstop 0080  
                                                __end_of__initialization 09BC  
                                                          ___rparam_used 000001  
                                                         __pcstackCOMRAM 0001  
                                                             __pbssBANK1 0100  
                                                          _modeUpControl 0018  
                                                                ?_modeUp 0001  
                                                  __size_of_bootAscensor 004A  
                                                      dataPanelUp@tamano 001A  
                                                                __Hparam 0000  
                                                                __Lparam 0000  
                                                         ?_modeUpControl 0001  
                                                                _callsUp 0758  
                                                                __pcinit 09A4  
                                                          ??_dataPanelUp 0018  
                                                        __size_of_modeUp 00B8  
                                                                __ramtop 0600  
                                                                __ptext0 08E0  
                                                                __ptext1 0828  
                                                                __ptext2 0018  
                                                                __ptext3 0544  
                                                                __ptext4 0314  
                                                                __ptext5 0758  
                                                                __ptext6 095A  
                                                                __ptext7 09CA  
                                                           __size_of_ISR 000A  
                                                           _bootAscensor 095A  
                                                                _queueUp 0034  
                                                   end_of_initialization 09BC  
                                                          __Lmediumconst 0000  
                                                                postdec1 000FE5  
                                                                postdec2 000FDD  
                                                                postinc0 000FEE  
                                                                postinc1 000FE6  
                                                                postinc2 000FDE  
                                                                sort@pos 000A  
                                                              _PORTAbits 000F80  
                                                              _PORTBbits 000F81  
                                                              _PORTDbits 000F83  
                                                    __end_of_dataPanelUp 0758  
                                                        ??_modeUpControl 001C  
                                                         __end_of_modeUp 08E0  
                                                    start_initialization 09A4  
                                                            __end_of_ISR 0012  
                                                               ??_modeUp 0026  
                                                            _dataPanelUp 0544  
                                                            __pbssCOMRAM 0028  
                                                              _callsInUp 0100  
                                                              __pintcode 0008  
                                                               ?_callsUp 0001  
                                                               _LATCbits 000F8B  
                                                               _LATDbits 000F8C  
                                                               _RCONbits 000FD0  
                                                              _queueDown 0034  
                                                     dataPanelUp@UpCalls 0018  
                                                               __Hrparam 0000  
                                                             sort@result 0034  
                                                               __Lrparam 0000  
                                                       __size_of_callsUp 00D0  
                                                          __size_of_boot 0016  
                                                          __size_of_main 007A  
                                                          __size_of_sort 0230  
                                                  __end_of_modeUpControl 0314  
                                                               isa$xinst 000000  
                                                               int$flags 0034  
                                                           ?_dataPanelUp 0001  
                                                         modeUpControl@i 001E  
                                                              sort@sizes 0003  
                                                               intlevel2 09E0  
                                                               sort@temp 0014  
                                                               sort@nums 000C  
                                                          ?_bootAscensor 0001  
