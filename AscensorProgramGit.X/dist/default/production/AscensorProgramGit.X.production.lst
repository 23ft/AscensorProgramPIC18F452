

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Thu Nov 11 18:27:31 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    32                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    34  0000                     
    35                           ; Version 2.20
    36                           ; Generated 12/02/2020 GMT
    37                           ; 
    38                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC18F452 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     
    70                           	psect	nvCOMRAM
    71  00005F                     __pnvCOMRAM:
    72                           	callstack 0
    73  00005F                     _UpTasks:
    74                           	callstack 0
    75  00005F                     	ds	2
    76  0000                     _PORTB	set	3969
    77  0000                     _PORTBbits	set	3969
    78  0000                     _LATDbits	set	3980
    79  0000                     _PORTAbits	set	3968
    80  0000                     _PORTDbits	set	3971
    81  0000                     _LATCbits	set	3979
    82  0000                     _INTCONbits	set	4082
    83  0000                     _RCONbits	set	4048
    84  0000                     _TRISC	set	3988
    85  0000                     _TRISA	set	3986
    86  0000                     _TRISD	set	3989
    87  0000                     _TRISB	set	3987
    88  0000                     _ADCON1	set	4033
    89                           
    90                           ; #config settings
    91                           
    92                           	psect	cinit
    93  001380                     __pcinit:
    94                           	callstack 0
    95  001380                     start_initialization:
    96                           	callstack 0
    97  001380                     __initialization:
    98                           	callstack 0
    99                           
   100                           ; Clear objects allocated to BANK5 (200 bytes)
   101  001380  EE05  F000         	lfsr	0,__pbssBANK5
   102  001384  0EC8               	movlw	200
   103  001386                     clear_0:
   104  001386  6AEE               	clrf	postinc0,c
   105  001388  06E8               	decf	wreg,f,c
   106  00138A  E1FD               	bnz	clear_0
   107                           
   108                           ; Clear objects allocated to BANK4 (200 bytes)
   109  00138C  EE04  F000         	lfsr	0,__pbssBANK4
   110  001390  0EC8               	movlw	200
   111  001392                     clear_1:
   112  001392  6AEE               	clrf	postinc0,c
   113  001394  06E8               	decf	wreg,f,c
   114  001396  E1FD               	bnz	clear_1
   115                           
   116                           ; Clear objects allocated to BANK3 (200 bytes)
   117  001398  EE03  F000         	lfsr	0,__pbssBANK3
   118  00139C  0EC8               	movlw	200
   119  00139E                     clear_2:
   120  00139E  6AEE               	clrf	postinc0,c
   121  0013A0  06E8               	decf	wreg,f,c
   122  0013A2  E1FD               	bnz	clear_2
   123                           
   124                           ; Clear objects allocated to COMRAM (46 bytes)
   125  0013A4  EE00  F031         	lfsr	0,__pbssCOMRAM
   126  0013A8  0E2E               	movlw	46
   127  0013AA                     clear_3:
   128  0013AA  6AEE               	clrf	postinc0,c
   129  0013AC  06E8               	decf	wreg,f,c
   130  0013AE  E1FD               	bnz	clear_3
   131  0013B0                     end_of_initialization:
   132                           	callstack 0
   133  0013B0                     __end_of__initialization:
   134                           	callstack 0
   135  0013B0  9061               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   136  0013B2  9261               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   137  0013B4  0E00               	movlw	low (__Lmediumconst shr (0+16))
   138  0013B6  6EF8               	movwf	tblptru,c
   139  0013B8  0100               	movlb	0
   140  0013BA  EF2C  F009         	goto	_main	;jump to C main() function
   141                           
   142                           	psect	bssCOMRAM
   143  000031                     __pbssCOMRAM:
   144                           	callstack 0
   145  000031                     	ds	2
   146  000033                     _down4_f:
   147                           	callstack 0
   148  000033                     	ds	2
   149  000035                     _down3_f:
   150                           	callstack 0
   151  000035                     	ds	2
   152  000037                     _up3_f:
   153                           	callstack 0
   154  000037                     	ds	2
   155  000039                     _down2_f:
   156                           	callstack 0
   157  000039                     	ds	2
   158  00003B                     _up2_f:
   159                           	callstack 0
   160  00003B                     	ds	2
   161  00003D                     _up1_f:
   162                           	callstack 0
   163  00003D                     	ds	2
   164  00003F                     _btnOD_f:
   165                           	callstack 0
   166  00003F                     	ds	2
   167  000041                     _btnCD_f:
   168                           	callstack 0
   169  000041                     	ds	2
   170  000043                     _btn4_f:
   171                           	callstack 0
   172  000043                     	ds	2
   173  000045                     _btn3_f:
   174                           	callstack 0
   175  000045                     	ds	2
   176  000047                     _btn2_f:
   177                           	callstack 0
   178  000047                     	ds	2
   179  000049                     _btn1_f:
   180                           	callstack 0
   181  000049                     	ds	2
   182  00004B                     _modeDown_F:
   183                           	callstack 0
   184  00004B                     	ds	2
   185  00004D                     _modeUp_F:
   186                           	callstack 0
   187  00004D                     	ds	2
   188  00004F                     _func_norepeat:
   189                           	callstack 0
   190  00004F                     	ds	2
   191  000051                     _nowFL:
   192                           	callstack 0
   193  000051                     	ds	2
   194  000053                     _callFL_down:
   195                           	callstack 0
   196  000053                     	ds	2
   197  000055                     _callFL_up:
   198                           	callstack 0
   199  000055                     	ds	2
   200  000057                     _callsD:
   201                           	callstack 0
   202  000057                     	ds	2
   203  000059                     _calls:
   204                           	callstack 0
   205  000059                     	ds	2
   206  00005B                     _tasksUp:
   207                           	callstack 0
   208  00005B                     	ds	2
   209  00005D                     _tasksDown:
   210                           	callstack 0
   211  00005D                     	ds	2
   212                           
   213                           	psect	bssBANK3
   214  000300                     __pbssBANK3:
   215                           	callstack 0
   216  000300                     _queueUp:
   217                           	callstack 0
   218  000300                     	ds	200
   219                           
   220                           	psect	bssBANK4
   221  000400                     __pbssBANK4:
   222                           	callstack 0
   223  000400                     _queueDown:
   224                           	callstack 0
   225  000400                     	ds	200
   226                           
   227                           	psect	bssBANK5
   228  000500                     __pbssBANK5:
   229                           	callstack 0
   230  000500                     _callsInUp:
   231                           	callstack 0
   232  000500                     	ds	200
   233                           
   234                           	psect	cstackBANK2
   235  000200                     __pcstackBANK2:
   236                           	callstack 0
   237  000200                     sort@result:
   238                           	callstack 0
   239                           
   240                           ; 200 bytes @ 0x0
   241  000200                     	ds	200
   242  0002C8                     sort@pos:
   243                           	callstack 0
   244                           
   245                           ; 2 bytes @ 0xC8
   246  0002C8                     	ds	2
   247  0002CA                     sort@nums:
   248                           	callstack 0
   249                           
   250                           ; 2 bytes @ 0xCA
   251  0002CA                     	ds	2
   252  0002CC                     sort@sizesMod:
   253                           	callstack 0
   254                           
   255                           ; 2 bytes @ 0xCC
   256  0002CC                     	ds	2
   257  0002CE                     sort@k:
   258                           	callstack 0
   259                           
   260                           ; 2 bytes @ 0xCE
   261  0002CE                     	ds	2
   262  0002D0                     sort@j:
   263                           	callstack 0
   264                           
   265                           ; 2 bytes @ 0xD0
   266  0002D0                     	ds	2
   267  0002D2                     sort@temp:
   268                           	callstack 0
   269                           
   270                           ; 2 bytes @ 0xD2
   271  0002D2                     	ds	2
   272  0002D4                     sort@h:
   273                           	callstack 0
   274                           
   275                           ; 2 bytes @ 0xD4
   276  0002D4                     	ds	2
   277                           
   278                           	psect	cstackBANK1
   279  000100                     __pcstackBANK1:
   280                           	callstack 0
   281  000100                     i2sort@result:
   282                           	callstack 0
   283                           
   284                           ; 200 bytes @ 0x0
   285  000100                     	ds	200
   286  0001C8                     i2sort@pos:
   287                           	callstack 0
   288                           
   289                           ; 2 bytes @ 0xC8
   290  0001C8                     	ds	2
   291  0001CA                     i2sort@nums:
   292                           	callstack 0
   293                           
   294                           ; 2 bytes @ 0xCA
   295  0001CA                     	ds	2
   296  0001CC                     i2sort@sizesMod:
   297                           	callstack 0
   298                           
   299                           ; 2 bytes @ 0xCC
   300  0001CC                     	ds	2
   301  0001CE                     i2sort@k:
   302                           	callstack 0
   303                           
   304                           ; 2 bytes @ 0xCE
   305  0001CE                     	ds	2
   306  0001D0                     i2sort@j:
   307                           	callstack 0
   308                           
   309                           ; 2 bytes @ 0xD0
   310  0001D0                     	ds	2
   311  0001D2                     i2sort@temp:
   312                           	callstack 0
   313                           
   314                           ; 2 bytes @ 0xD2
   315  0001D2                     	ds	2
   316  0001D4                     i2sort@h:
   317                           	callstack 0
   318                           
   319                           ; 2 bytes @ 0xD4
   320  0001D4                     	ds	2
   321                           
   322                           	psect	cstackBANK0
   323  000080                     __pcstackBANK0:
   324                           	callstack 0
   325  000080                     dataPanelUp@new_size:
   326                           	callstack 0
   327                           
   328                           ; 2 bytes @ 0x0
   329  000080                     	ds	2
   330  000082                     ??_modeUpControl:
   331                           
   332                           ; 1 bytes @ 0x2
   333  000082                     	ds	2
   334  000084                     modeUpControl@i:
   335                           	callstack 0
   336                           
   337                           ; 2 bytes @ 0x4
   338  000084                     	ds	2
   339  000086                     modeUpControl@i_513:
   340                           	callstack 0
   341                           
   342                           ; 2 bytes @ 0x6
   343  000086                     	ds	2
   344  000088                     modeUpControl@i_514:
   345                           	callstack 0
   346                           
   347                           ; 2 bytes @ 0x8
   348  000088                     	ds	2
   349  00008A                     modeUpControl@i_515:
   350                           	callstack 0
   351                           
   352                           ; 2 bytes @ 0xA
   353  00008A                     	ds	2
   354  00008C                     ??_rutine_up:
   355                           
   356                           ; 1 bytes @ 0xC
   357  00008C                     	ds	2
   358  00008E                     rutine_up@i:
   359                           	callstack 0
   360                           
   361                           ; 2 bytes @ 0xE
   362  00008E                     	ds	2
   363  000090                     rutine_up@re:
   364                           	callstack 0
   365                           
   366                           ; 2 bytes @ 0x10
   367  000090                     	ds	2
   368  000092                     ??_modeUp:
   369                           
   370                           ; 1 bytes @ 0x12
   371  000092                     	ds	2
   372                           
   373                           	psect	cstackCOMRAM
   374  000001                     __pcstackCOMRAM:
   375                           	callstack 0
   376  000001                     ?i2_noRepeat:
   377                           	callstack 0
   378  000001                     i2noRepeat@po:
   379                           	callstack 0
   380  000001                     i2sort@p:
   381                           	callstack 0
   382                           
   383                           ; 2 bytes @ 0x0
   384  000001                     	ds	2
   385  000003                     i2noRepeat@sixes:
   386                           	callstack 0
   387  000003                     i2sort@sizes:
   388                           	callstack 0
   389                           
   390                           ; 2 bytes @ 0x2
   391  000003                     	ds	2
   392  000005                     ??i2_noRepeat:
   393  000005                     ??i2_sort:
   394                           
   395                           ; 1 bytes @ 0x4
   396  000005                     	ds	4
   397  000009                     i2noRepeat@t:
   398                           	callstack 0
   399                           
   400                           ; 2 bytes @ 0x8
   401  000009                     	ds	2
   402  00000B                     i2noRepeat@shift:
   403                           	callstack 0
   404                           
   405                           ; 2 bytes @ 0xA
   406  00000B                     	ds	2
   407  00000D                     i2noRepeat@temp:
   408                           	callstack 0
   409                           
   410                           ; 2 bytes @ 0xC
   411  00000D                     	ds	2
   412  00000F                     i2noRepeat@size:
   413                           	callstack 0
   414                           
   415                           ; 2 bytes @ 0xE
   416  00000F                     	ds	2
   417  000011                     i2noRepeat@comp:
   418                           	callstack 0
   419                           
   420                           ; 2 bytes @ 0x10
   421  000011                     	ds	2
   422  000013                     ??_ISR:
   423                           
   424                           ; 1 bytes @ 0x12
   425  000013                     	ds	6
   426  000019                     ISR@si:
   427                           	callstack 0
   428                           
   429                           ; 2 bytes @ 0x18
   430  000019                     	ds	2
   431  00001B                     ISR@si_547:
   432                           	callstack 0
   433                           
   434                           ; 2 bytes @ 0x1A
   435  00001B                     	ds	2
   436  00001D                     ISR@si_548:
   437                           	callstack 0
   438                           
   439                           ; 2 bytes @ 0x1C
   440  00001D                     	ds	2
   441  00001F                     ?_noRepeat:
   442                           	callstack 0
   443  00001F                     noRepeat@po:
   444                           	callstack 0
   445  00001F                     sort@p:
   446                           	callstack 0
   447                           
   448                           ; 2 bytes @ 0x1E
   449  00001F                     	ds	2
   450  000021                     noRepeat@sixes:
   451                           	callstack 0
   452  000021                     sort@sizes:
   453                           	callstack 0
   454                           
   455                           ; 2 bytes @ 0x20
   456  000021                     	ds	2
   457  000023                     ??_noRepeat:
   458  000023                     ??_sort:
   459                           
   460                           ; 1 bytes @ 0x22
   461  000023                     	ds	4
   462  000027                     noRepeat@t:
   463                           	callstack 0
   464                           
   465                           ; 2 bytes @ 0x26
   466  000027                     	ds	2
   467  000029                     noRepeat@shift:
   468                           	callstack 0
   469                           
   470                           ; 2 bytes @ 0x28
   471  000029                     	ds	2
   472  00002B                     noRepeat@temp:
   473                           	callstack 0
   474                           
   475                           ; 2 bytes @ 0x2A
   476  00002B                     	ds	2
   477  00002D                     noRepeat@size:
   478                           	callstack 0
   479                           
   480                           ; 2 bytes @ 0x2C
   481  00002D                     	ds	2
   482  00002F                     noRepeat@comp:
   483                           	callstack 0
   484                           
   485                           ; 2 bytes @ 0x2E
   486  00002F                     	ds	2
   487  000031                     
   488                           ; 1 bytes @ 0x30
   489 ;;
   490 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   491 ;;
   492 ;; *************** function _main *****************
   493 ;; Defined at:
   494 ;;		line 539 in file "main.c"
   495 ;; Parameters:    Size  Location     Type
   496 ;;		None
   497 ;; Auto vars:     Size  Location     Type
   498 ;;		None
   499 ;; Return value:  Size  Location     Type
   500 ;;                  1    wreg      void 
   501 ;; Registers used:
   502 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   503 ;; Tracked objects:
   504 ;;		On entry : 0/0
   505 ;;		On exit  : 0/0
   506 ;;		Unchanged: 0/0
   507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   508 ;;      Params:         0       0       0       0       0       0       0
   509 ;;      Locals:         0       0       0       0       0       0       0
   510 ;;      Temps:          0       0       0       0       0       0       0
   511 ;;      Totals:         0       0       0       0       0       0       0
   512 ;;Total ram usage:        0 bytes
   513 ;; Hardware stack levels required when called: 7
   514 ;; This function calls:
   515 ;;		_boot
   516 ;;		_bootAscensor
   517 ;;		_interruptsInit
   518 ;;		_modeUp
   519 ;; This function is called by:
   520 ;;		Startup code after reset
   521 ;; This function uses a non-reentrant model
   522 ;;
   523                           
   524                           	psect	text0
   525  001258                     __ptext0:
   526                           	callstack 0
   527  001258                     _main:
   528                           	callstack 24
   529  001258  FFFF               	dw	65535	; assembler added errata NOP
   530                           
   531                           ;main.c: 540:     boot();
   532  00125A  EC6C  F009         	call	_boot	;wreg free
   533  00125E                     
   534                           ;main.c: 541:     interruptsInit();
   535  00125E  ECF2  F009         	call	_interruptsInit	;wreg free
   536  001262                     
   537                           ;main.c: 542:     bootAscensor();
   538  001262  EC9B  F009         	call	_bootAscensor	;wreg free
   539  001266                     l2314:
   540  001266  FFFF               	dw	65535	; assembler added errata NOP
   541                           
   542                           ;main.c: 545:         if (PORTBbits.RB0) {
   543  001268  A081               	btfss	129,0,c	;volatile
   544  00126A  EF39  F009         	goto	u1581
   545  00126E  EF3C  F009         	goto	u1580
   546  001272                     u1581:
   547  001272  FFFF               	dw	65535	; assembler added errata NOP
   548  001274  EF46  F009         	goto	l218
   549  001278                     u1580:
   550  001278  FFFF               	dw	65535	; assembler added errata NOP
   551  00127A                     
   552                           ;main.c: 546:             callFL_up = 1;
   553  00127A  0E00               	movlw	0
   554  00127C  6E56               	movwf	(_callFL_up+1)^0,c
   555  00127E  0E01               	movlw	1
   556  001280  6E55               	movwf	_callFL_up^0,c
   557  001282                     l2318:
   558  001282  FFFF               	dw	65535	; assembler added errata NOP
   559                           
   560                           ;main.c: 547:             modeUp();
   561  001284  ECD2  F007         	call	_modeUp	;wreg free
   562                           
   563                           ;main.c: 548:         }
   564  001288  EF66  F009         	goto	l2328
   565  00128C                     l218:
   566  00128C  FFFF               	dw	65535	; assembler added errata NOP
   567  00128E  A281               	btfss	129,1,c	;volatile
   568  001290  EF4C  F009         	goto	u1591
   569  001294  EF4F  F009         	goto	u1590
   570  001298                     u1591:
   571  001298  FFFF               	dw	65535	; assembler added errata NOP
   572  00129A  EF56  F009         	goto	l220
   573  00129E                     u1590:
   574  00129E  FFFF               	dw	65535	; assembler added errata NOP
   575  0012A0                     
   576                           ;main.c: 550:             callFL_up = 2;
   577  0012A0  0E00               	movlw	0
   578  0012A2  6E56               	movwf	(_callFL_up+1)^0,c
   579  0012A4  0E02               	movlw	2
   580  0012A6  6E55               	movwf	_callFL_up^0,c
   581  0012A8  EF41  F009         	goto	l2318
   582  0012AC                     l220:
   583  0012AC  FFFF               	dw	65535	; assembler added errata NOP
   584  0012AE  A881               	btfss	129,4,c	;volatile
   585  0012B0  EF5C  F009         	goto	u1601
   586  0012B4  EF5F  F009         	goto	u1600
   587  0012B8                     u1601:
   588  0012B8  FFFF               	dw	65535	; assembler added errata NOP
   589  0012BA  EF66  F009         	goto	l2328
   590  0012BE                     u1600:
   591  0012BE  FFFF               	dw	65535	; assembler added errata NOP
   592  0012C0                     
   593                           ;main.c: 554:             callFL_up = 3;
   594  0012C0  0E00               	movlw	0
   595  0012C2  6E56               	movwf	(_callFL_up+1)^0,c
   596  0012C4  0E03               	movlw	3
   597  0012C6  6E55               	movwf	_callFL_up^0,c
   598  0012C8  EF41  F009         	goto	l2318
   599  0012CC                     l2328:
   600  0012CC  FFFF               	dw	65535	; assembler added errata NOP
   601                           
   602                           ;main.c: 558:         if(PORTBbits.RB2){
   603  0012CE  5081               	movf	129,w,c	;volatile
   604  0012D0  EF33  F009         	goto	l2314
   605  0012D4  EF88  F001         	goto	start
   606  0012D8                     __end_of_main:
   607                           	callstack 0
   608                           
   609 ;; *************** function _modeUp *****************
   610 ;; Defined at:
   611 ;;		line 470 in file "main.c"
   612 ;; Parameters:    Size  Location     Type
   613 ;;		None
   614 ;; Auto vars:     Size  Location     Type
   615 ;;  end_size        2    0        unsigned int 
   616 ;; Return value:  Size  Location     Type
   617 ;;                  1    wreg      void 
   618 ;; Registers used:
   619 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   620 ;; Tracked objects:
   621 ;;		On entry : 0/0
   622 ;;		On exit  : 0/0
   623 ;;		Unchanged: 0/0
   624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   625 ;;      Params:         0       0       0       0       0       0       0
   626 ;;      Locals:         0       0       0       0       0       0       0
   627 ;;      Temps:          0       2       0       0       0       0       0
   628 ;;      Totals:         0       2       0       0       0       0       0
   629 ;;Total ram usage:        2 bytes
   630 ;; Hardware stack levels used: 1
   631 ;; Hardware stack levels required when called: 6
   632 ;; This function calls:
   633 ;;		_dataPanelUp
   634 ;;		_rutine_up
   635 ;; This function is called by:
   636 ;;		_main
   637 ;; This function uses a non-reentrant model
   638 ;;
   639                           
   640                           	psect	text1
   641  000FA4                     __ptext1:
   642                           	callstack 0
   643  000FA4                     _modeUp:
   644                           	callstack 0
   645  000FA4  FFFF               	dw	65535	; assembler added errata NOP
   646  000FA6                     
   647                           ;main.c: 471:     modeDown_F = 0;
   648  000FA6  0E00               	movlw	0
   649  000FA8  6E4C               	movwf	(_modeDown_F+1)^0,c
   650  000FAA  0E00               	movlw	0
   651  000FAC  6E4B               	movwf	_modeDown_F^0,c
   652                           
   653                           ;main.c: 472:     modeUp_F = 1;
   654  000FAE  0E00               	movlw	0
   655  000FB0  6E4E               	movwf	(_modeUp_F+1)^0,c
   656  000FB2  0E01               	movlw	1
   657  000FB4  6E4D               	movwf	_modeUp_F^0,c
   658                           
   659                           ;main.c: 475:     callsD = 0;
   660  000FB6  0E00               	movlw	0
   661  000FB8  6E58               	movwf	(_callsD+1)^0,c
   662  000FBA  0E00               	movlw	0
   663  000FBC  6E57               	movwf	_callsD^0,c
   664                           
   665                           ;main.c: 476:     calls = 0;
   666  000FBE  0E00               	movlw	0
   667  000FC0  6E5A               	movwf	(_calls+1)^0,c
   668  000FC2  0E00               	movlw	0
   669  000FC4  6E59               	movwf	_calls^0,c
   670                           
   671                           ;main.c: 480:     tasksDown = 0;
   672  000FC6  0E00               	movlw	0
   673  000FC8  6E5E               	movwf	(_tasksDown+1)^0,c
   674  000FCA  0E00               	movlw	0
   675  000FCC  6E5D               	movwf	_tasksDown^0,c
   676                           
   677                           ;main.c: 484:     switch (callFL_up) {
   678  000FCE  EF63  F008         	goto	l2300
   679  000FD2                     l2266:
   680  000FD2  FFFF               	dw	65535	; assembler added errata NOP
   681                           
   682                           ; BSR set to: 0
   683                           ;main.c: 486:             if (nowFL == 1) {
   684  000FD4  0451               	decf	_nowFL^0,w,c
   685  000FD6  1052               	iorwf	(_nowFL+1)^0,w,c
   686  000FD8  A4D8               	btfss	status,2,c
   687  000FDA  EFF1  F007         	goto	u1531
   688  000FDE  EFF4  F007         	goto	u1530
   689  000FE2                     u1531:
   690  000FE2  FFFF               	dw	65535	; assembler added errata NOP
   691  000FE4  EF0E  F008         	goto	l200
   692  000FE8                     u1530:
   693  000FE8  FFFF               	dw	65535	; assembler added errata NOP
   694  000FEA                     
   695                           ; BSR set to: 0
   696                           ;main.c: 488:                 LATDbits.LD0 = 1;
   697  000FEA  808C               	bsf	140,0,c	;volatile
   698  000FEC                     
   699                           ; BSR set to: 0
   700                           ;main.c: 489:                 dataPanelUp();
   701  000FEC  EC47  F005         	call	_dataPanelUp	;wreg free
   702  000FF0                     
   703                           ;main.c: 490:                 LATDbits.LD0 = 0;
   704  000FF0  908C               	bcf	140,0,c	;volatile
   705  000FF2                     
   706                           ;main.c: 491:                 _delay((unsigned long)((300)*(20000000/4000.0)));
   707  000FF2  0E06               	movlw	6
   708  000FF4  0100               	movlb	0	; () banked
   709  000FF6  6F93               	movwf	(??_modeUp+1)& (0+255),b
   710  000FF8  0EB6               	movlw	182
   711  000FFA  6F92               	movwf	??_modeUp& (0+255),b
   712  000FFC  0EF8               	movlw	248
   713  000FFE                     u1617:
   714  000FFE  FFFF               	dw	65535	; errata NOP
   715  001000  2EE8               	decfsz	wreg,f,c
   716  001002  D7FD               	bra	u1617
   717  001004  2F92               	decfsz	??_modeUp& (0+255),f,b
   718  001006  D7FB               	bra	u1617
   719  001008  2F93               	decfsz	(??_modeUp+1)& (0+255),f,b
   720  00100A  D7F9               	bra	u1617
   721  00100C  D000               	nop2	
   722  00100E  F000               	nop	
   723  001010                     
   724                           ;main.c: 494:                 LATCbits.LC1 = 0;
   725  001010  928B               	bcf	139,1,c	;volatile
   726  001012                     l2278:
   727  001012  FFFF               	dw	65535	; assembler added errata NOP
   728                           
   729                           ;main.c: 498:                     rutine_up();
   730  001014  EC5B  F006         	call	_rutine_up	;wreg free
   731  001018  EF09  F008         	goto	l2278
   732  00101C                     l200:
   733  00101C  FFFF               	dw	65535	; assembler added errata NOP
   734                           
   735                           ;main.c: 503:                     LATCbits.LC0 = 0;
   736  00101E  908B               	bcf	139,0,c	;volatile
   737                           
   738                           ;main.c: 504:                 } while (!PORTDbits.RD4);
   739  001020  A883               	btfss	131,4,c	;volatile
   740  001022  EF15  F008         	goto	u1541
   741  001026  EF18  F008         	goto	u1540
   742  00102A                     u1541:
   743  00102A  FFFF               	dw	65535	; assembler added errata NOP
   744  00102C  EF0E  F008         	goto	l200
   745  001030                     u1540:
   746  001030  FFFF               	dw	65535	; assembler added errata NOP
   747  001032                     
   748                           ;main.c: 505:                 LATCbits.LC0 = 1;
   749  001032  808B               	bsf	139,0,c	;volatile
   750                           
   751                           ;main.c: 507:                 LATDbits.LD0 = 1;
   752  001034  808C               	bsf	140,0,c	;volatile
   753  001036                     
   754                           ;main.c: 508:                 dataPanelUp();
   755  001036  EC47  F005         	call	_dataPanelUp	;wreg free
   756  00103A                     
   757                           ;main.c: 509:                 LATDbits.LD0 = 0;
   758  00103A  908C               	bcf	140,0,c	;volatile
   759  00103C                     l2284:
   760  00103C  FFFF               	dw	65535	; assembler added errata NOP
   761                           
   762                           ;main.c: 513:             if (nowFL == 2) {
   763  00103E  0E02               	movlw	2
   764  001040  1851               	xorwf	_nowFL^0,w,c
   765  001042  1052               	iorwf	(_nowFL+1)^0,w,c
   766  001044  A4D8               	btfss	status,2,c
   767  001046  EF27  F008         	goto	u1551
   768  00104A  EF2A  F008         	goto	u1550
   769  00104E                     u1551:
   770  00104E  FFFF               	dw	65535	; assembler added errata NOP
   771  001050  EF44  F008         	goto	l2298
   772  001054                     u1550:
   773  001054  FFFF               	dw	65535	; assembler added errata NOP
   774  001056                     
   775                           ;main.c: 515:                 LATDbits.LD1 = 1;
   776  001056  828C               	bsf	140,1,c	;volatile
   777  001058                     
   778                           ;main.c: 516:                 dataPanelUp();
   779  001058  EC47  F005         	call	_dataPanelUp	;wreg free
   780  00105C                     
   781                           ;main.c: 517:                 LATDbits.LD1 = 0;
   782  00105C  928C               	bcf	140,1,c	;volatile
   783  00105E                     
   784                           ;main.c: 518:                 _delay((unsigned long)((300)*(20000000/4000.0)));
   785  00105E  0E06               	movlw	6
   786  001060  0100               	movlb	0	; () banked
   787  001062  6F93               	movwf	(??_modeUp+1)& (0+255),b
   788  001064  0EB6               	movlw	182
   789  001066  6F92               	movwf	??_modeUp& (0+255),b
   790  001068  0EF8               	movlw	248
   791  00106A                     u1627:
   792  00106A  FFFF               	dw	65535	; errata NOP
   793  00106C  2EE8               	decfsz	wreg,f,c
   794  00106E  D7FD               	bra	u1627
   795  001070  2F92               	decfsz	??_modeUp& (0+255),f,b
   796  001072  D7FB               	bra	u1627
   797  001074  2F93               	decfsz	(??_modeUp+1)& (0+255),f,b
   798  001076  D7F9               	bra	u1627
   799  001078  D000               	nop2	
   800  00107A  F000               	nop	
   801  00107C                     
   802                           ;main.c: 521:                 LATCbits.LC1 = 0;
   803  00107C  928B               	bcf	139,1,c	;volatile
   804  00107E                     l2296:
   805  00107E  FFFF               	dw	65535	; assembler added errata NOP
   806                           
   807                           ;main.c: 524:                     rutine_up();
   808  001080  EC5B  F006         	call	_rutine_up	;wreg free
   809  001084  EF3F  F008         	goto	l2296
   810  001088                     l2298:
   811  001088  FFFF               	dw	65535	; assembler added errata NOP
   812                           
   813                           ;main.c: 528:                 if (nowFL < 2){
   814  00108A  BE52               	btfsc	(_nowFL+1)^0,7,c
   815  00108C  EF54  F008         	goto	u1560
   816  001090  5052               	movf	(_nowFL+1)^0,w,c
   817  001092  E107               	bnz	u1561
   818  001094  0E02               	movlw	2
   819  001096  5C51               	subwf	_nowFL^0,w,c
   820  001098  B0D8               	btfsc	status,0,c
   821  00109A  EF51  F008         	goto	u1561
   822  00109E  EF54  F008         	goto	u1560
   823  0010A2                     u1561:
   824  0010A2  FFFF               	dw	65535	; assembler added errata NOP
   825  0010A4  EF7C  F008         	goto	l212
   826  0010A8                     u1560:
   827  0010A8  FFFF               	dw	65535	; assembler added errata NOP
   828  0010AA                     l209:
   829  0010AA  FFFF               	dw	65535	; assembler added errata NOP
   830                           
   831                           ;main.c: 530:                         LATCbits.LC1 = 0;
   832  0010AC  928B               	bcf	139,1,c	;volatile
   833                           
   834                           ;main.c: 531:                     }while(!PORTDbits.RD5);
   835  0010AE  AA83               	btfss	131,5,c	;volatile
   836  0010B0  EF5C  F008         	goto	u1571
   837  0010B4  EF5F  F008         	goto	u1570
   838  0010B8                     u1571:
   839  0010B8  FFFF               	dw	65535	; assembler added errata NOP
   840  0010BA  EF55  F008         	goto	l209
   841  0010BE                     u1570:
   842  0010BE  FFFF               	dw	65535	; assembler added errata NOP
   843  0010C0                     
   844                           ;main.c: 532:                     LATCbits.LC1 = 0;
   845  0010C0  928B               	bcf	139,1,c	;volatile
   846  0010C2  EF7C  F008         	goto	l212
   847  0010C6                     l2300:
   848  0010C6  FFFF               	dw	65535	; assembler added errata NOP
   849  0010C8  C055  F092         	movff	_callFL_up,??_modeUp
   850  0010CC  C056  F093         	movff	_callFL_up+1,??_modeUp+1
   851                           
   852                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   853                           ; Switch size 1, requested type "simple"
   854                           ; Number of cases is 1, Range of values is 0 to 0
   855                           ; switch strategies available:
   856                           ; Name         Instructions Cycles
   857                           ; simple_byte            4     3 (average)
   858                           ;	Chosen strategy is simple_byte
   859  0010D0  0100               	movlb	0	; () banked
   860  0010D2  5193               	movf	(??_modeUp+1)& (0+255),w,b
   861  0010D4  0A00               	xorlw	0	; case 0
   862  0010D6  B4D8               	btfsc	status,2,c
   863  0010D8  EF70  F008         	goto	l2410
   864  0010DC  EF7C  F008         	goto	l212
   865  0010E0                     l2410:
   866  0010E0  FFFF               	dw	65535	; assembler added errata NOP
   867                           
   868                           ; BSR set to: 0
   869                           ; Switch size 1, requested type "simple"
   870                           ; Number of cases is 2, Range of values is 1 to 2
   871                           ; switch strategies available:
   872                           ; Name         Instructions Cycles
   873                           ; simple_byte            7     4 (average)
   874                           ;	Chosen strategy is simple_byte
   875  0010E2  5192               	movf	??_modeUp& (0+255),w,b
   876  0010E4  0A01               	xorlw	1	; case 1
   877  0010E6  B4D8               	btfsc	status,2,c
   878  0010E8  EFE9  F007         	goto	l2266
   879  0010EC  0A03               	xorlw	3	; case 2
   880  0010EE  B4D8               	btfsc	status,2,c
   881  0010F0  EF1E  F008         	goto	l2284
   882  0010F4  EF7C  F008         	goto	l212
   883  0010F8                     l212:
   884  0010F8  FFFF               	dw	65535	; assembler added errata NOP
   885  0010FA  0012               	return		;funcret
   886  0010FC  FFFF               	dw	65535	; errata NOP
   887  0010FE                     __end_of_modeUp:
   888                           	callstack 0
   889                           
   890 ;; *************** function _rutine_up *****************
   891 ;; Defined at:
   892 ;;		line 430 in file "main.c"
   893 ;; Parameters:    Size  Location     Type
   894 ;;		None
   895 ;; Auto vars:     Size  Location     Type
   896 ;;  re              2   16[BANK0 ] int 
   897 ;;  i               2   14[BANK0 ] int 
   898 ;; Return value:  Size  Location     Type
   899 ;;                  1    wreg      void 
   900 ;; Registers used:
   901 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   902 ;; Tracked objects:
   903 ;;		On entry : 0/0
   904 ;;		On exit  : 0/0
   905 ;;		Unchanged: 0/0
   906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   907 ;;      Params:         0       0       0       0       0       0       0
   908 ;;      Locals:         0       4       0       0       0       0       0
   909 ;;      Temps:          0       2       0       0       0       0       0
   910 ;;      Totals:         0       6       0       0       0       0       0
   911 ;;Total ram usage:        6 bytes
   912 ;; Hardware stack levels used: 1
   913 ;; Hardware stack levels required when called: 5
   914 ;; This function calls:
   915 ;;		_modeDown
   916 ;;		_modeUpControl
   917 ;;		_noRepeat
   918 ;;		_sort
   919 ;; This function is called by:
   920 ;;		_modeUp
   921 ;; This function uses a non-reentrant model
   922 ;;
   923                           
   924                           	psect	text2
   925  000CB6                     __ptext2:
   926                           	callstack 0
   927  000CB6                     _rutine_up:
   928                           	callstack 0
   929  000CB6  FFFF               	dw	65535	; assembler added errata NOP
   930  000CB8                     
   931                           ;main.c: 431:     modeUpControl();
   932  000CB8  EC8A  F001         	call	_modeUpControl	;wreg free
   933  000CBC                     
   934                           ;main.c: 433:     if (tasksUp == 0){
   935  000CBC  505B               	movf	_tasksUp^0,w,c
   936  000CBE  105C               	iorwf	(_tasksUp+1)^0,w,c
   937  000CC0  A4D8               	btfss	status,2,c
   938  000CC2  EF65  F006         	goto	u1481
   939  000CC6  EF68  F006         	goto	u1480
   940  000CCA                     u1481:
   941  000CCA  FFFF               	dw	65535	; assembler added errata NOP
   942  000CCC  EF21  F007         	goto	l187
   943  000CD0                     u1480:
   944  000CD0  FFFF               	dw	65535	; assembler added errata NOP
   945  000CD2                     
   946                           ;main.c: 434:         if((tasksDown > 0) || callsD > 0){
   947  000CD2  BE5E               	btfsc	(_tasksDown+1)^0,7,c
   948  000CD4  EF77  F006         	goto	u1490
   949  000CD8  505E               	movf	(_tasksDown+1)^0,w,c
   950  000CDA  E106               	bnz	u1491
   951  000CDC  045D               	decf	_tasksDown^0,w,c
   952  000CDE  B0D8               	btfsc	status,0,c
   953  000CE0  EF74  F006         	goto	u1491
   954  000CE4  EF77  F006         	goto	u1490
   955  000CE8                     u1491:
   956  000CE8  FFFF               	dw	65535	; assembler added errata NOP
   957  000CEA  EF86  F006         	goto	l2238
   958  000CEE                     u1490:
   959  000CEE  FFFF               	dw	65535	; assembler added errata NOP
   960  000CF0  BE58               	btfsc	(_callsD+1)^0,7,c
   961  000CF2  EF83  F006         	goto	u1501
   962  000CF6  5058               	movf	(_callsD+1)^0,w,c
   963  000CF8  E109               	bnz	u1500
   964  000CFA  0457               	decf	_callsD^0,w,c
   965  000CFC  A0D8               	btfss	status,0,c
   966  000CFE  EF83  F006         	goto	u1501
   967  000D02  EF86  F006         	goto	u1500
   968  000D06                     u1501:
   969  000D06  FFFF               	dw	65535	; assembler added errata NOP
   970  000D08  EF18  F007         	goto	l2262
   971  000D0C                     u1500:
   972  000D0C                     l2238:
   973  000D0C  FFFF               	dw	65535	; assembler added errata NOP
   974                           
   975                           ;main.c: 435:             for(int i = 0; i < callsD; i++){
   976  000D0E  0E00               	movlw	0
   977  000D10  0100               	movlb	0	; () banked
   978  000D12  6F8F               	movwf	(rutine_up@i+1)& (0+255),b
   979  000D14  0E00               	movlw	0
   980  000D16  6F8E               	movwf	rutine_up@i& (0+255),b
   981  000D18  EFAD  F006         	goto	l2244
   982  000D1C                     l2240:
   983  000D1C  FFFF               	dw	65535	; assembler added errata NOP
   984                           
   985                           ; BSR set to: 0
   986                           ;main.c: 436:                 queueDown[tasksDown + i] = callsInUp[i];
   987  000D1E  90D8               	bcf	status,0,c
   988  000D20  358E               	rlcf	rutine_up@i& (0+255),w,b
   989  000D22  6ED9               	movwf	fsr2l,c
   990  000D24  358F               	rlcf	(rutine_up@i+1)& (0+255),w,b
   991  000D26  6EDA               	movwf	fsr2h,c
   992  000D28  0E00               	movlw	low _callsInUp
   993  000D2A  26D9               	addwf	fsr2l,f,c
   994  000D2C  0E05               	movlw	high _callsInUp
   995  000D2E  22DA               	addwfc	fsr2h,f,c
   996  000D30  518E               	movf	rutine_up@i& (0+255),w,b
   997  000D32  245D               	addwf	_tasksDown^0,w,c
   998  000D34  6F8C               	movwf	??_rutine_up& (0+255),b
   999  000D36  518F               	movf	(rutine_up@i+1)& (0+255),w,b
  1000  000D38  205E               	addwfc	(_tasksDown+1)^0,w,c
  1001  000D3A  6F8D               	movwf	(??_rutine_up+1)& (0+255),b
  1002  000D3C  90D8               	bcf	status,0,c
  1003  000D3E  378C               	rlcf	??_rutine_up& (0+255),f,b
  1004  000D40  378D               	rlcf	(??_rutine_up+1)& (0+255),f,b
  1005  000D42  0E00               	movlw	low _queueDown
  1006  000D44  258C               	addwf	??_rutine_up& (0+255),w,b
  1007  000D46  6EE1               	movwf	fsr1l,c
  1008  000D48  0E04               	movlw	high _queueDown
  1009  000D4A  218D               	addwfc	(??_rutine_up+1)& (0+255),w,b
  1010  000D4C  6EE2               	movwf	fsr1h,c
  1011  000D4E  CFDE FFE6          	movff	postinc2,postinc1
  1012  000D52  CFDD FFE5          	movff	postdec2,postdec1
  1013  000D56                     
  1014                           ; BSR set to: 0
  1015                           ;main.c: 437:             }
  1016  000D56  4B8E               	infsnz	rutine_up@i& (0+255),f,b
  1017  000D58  2B8F               	incf	(rutine_up@i+1)& (0+255),f,b
  1018  000D5A                     l2244:
  1019  000D5A  FFFF               	dw	65535	; assembler added errata NOP
  1020                           
  1021                           ; BSR set to: 0
  1022  000D5C  5057               	movf	_callsD^0,w,c
  1023  000D5E  5D8E               	subwf	rutine_up@i& (0+255),w,b
  1024  000D60  518F               	movf	(rutine_up@i+1)& (0+255),w,b
  1025  000D62  0A80               	xorlw	128
  1026  000D64  6F8C               	movwf	??_rutine_up& (0+255),b
  1027  000D66  5058               	movf	(_callsD+1)^0,w,c
  1028  000D68  0A80               	xorlw	128
  1029  000D6A  598C               	subwfb	??_rutine_up& (0+255),w,b
  1030  000D6C  A0D8               	btfss	status,0,c
  1031  000D6E  EFBB  F006         	goto	u1511
  1032  000D72  EFBE  F006         	goto	u1510
  1033  000D76                     u1511:
  1034  000D76  FFFF               	dw	65535	; assembler added errata NOP
  1035  000D78  EF8E  F006         	goto	l2240
  1036  000D7C                     u1510:
  1037  000D7C  FFFF               	dw	65535	; assembler added errata NOP
  1038  000D7E                     
  1039                           ; BSR set to: 0
  1040                           ;main.c: 439:             sort(&queueDown[0], tasksDown + callsD);
  1041  000D7E  0E00               	movlw	low _queueDown
  1042  000D80  6E1F               	movwf	sort@p^0,c
  1043  000D82  0E04               	movlw	high _queueDown
  1044  000D84  6E20               	movwf	(sort@p+1)^0,c
  1045  000D86  5057               	movf	_callsD^0,w,c
  1046  000D88  245D               	addwf	_tasksDown^0,w,c
  1047  000D8A  6E21               	movwf	sort@sizes^0,c
  1048  000D8C  5058               	movf	(_callsD+1)^0,w,c
  1049  000D8E  205E               	addwfc	(_tasksDown+1)^0,w,c
  1050  000D90  6E22               	movwf	(sort@sizes+1)^0,c
  1051  000D92  EC15  F003         	call	_sort	;wreg free
  1052                           
  1053                           ;main.c: 440:             tasksDown = noRepeat(&queueDown[0], tasksDown + callsD);
  1054  000D96  0E00               	movlw	low _queueDown
  1055  000D98  6E1F               	movwf	noRepeat@po^0,c
  1056  000D9A  0E04               	movlw	high _queueDown
  1057  000D9C  6E20               	movwf	(noRepeat@po+1)^0,c
  1058  000D9E  5057               	movf	_callsD^0,w,c
  1059  000DA0  245D               	addwf	_tasksDown^0,w,c
  1060  000DA2  6E21               	movwf	noRepeat@sixes^0,c
  1061  000DA4  5058               	movf	(_callsD+1)^0,w,c
  1062  000DA6  205E               	addwfc	(_tasksDown+1)^0,w,c
  1063  000DA8  6E22               	movwf	(noRepeat@sixes+1)^0,c
  1064  000DAA  EC7F  F008         	call	_noRepeat	;wreg free
  1065  000DAE  C01F  F05D         	movff	?_noRepeat,_tasksDown
  1066  000DB2  C020  F05E         	movff	?_noRepeat+1,_tasksDown+1
  1067  000DB6                     
  1068                           ;main.c: 442:             callFL_down = queueDown[0];
  1069  000DB6  C400  F053         	movff	_queueDown,_callFL_down
  1070  000DBA  C401  F054         	movff	_queueDown+1,_callFL_down+1
  1071  000DBE                     
  1072                           ;main.c: 443:             for (int re = 0; re < tasksDown; re++){
  1073  000DBE  0E00               	movlw	0
  1074  000DC0  0100               	movlb	0	; () banked
  1075  000DC2  6F91               	movwf	(rutine_up@re+1)& (0+255),b
  1076  000DC4  0E00               	movlw	0
  1077  000DC6  6F90               	movwf	rutine_up@re& (0+255),b
  1078  000DC8  EFFF  F006         	goto	l2256
  1079  000DCC                     l2252:
  1080  000DCC  FFFF               	dw	65535	; assembler added errata NOP
  1081                           
  1082                           ; BSR set to: 0
  1083                           ;main.c: 444:                 queueDown[re] = queueDown[re + 1];
  1084  000DCE  90D8               	bcf	status,0,c
  1085  000DD0  3590               	rlcf	rutine_up@re& (0+255),w,b
  1086  000DD2  6ED9               	movwf	fsr2l,c
  1087  000DD4  3591               	rlcf	(rutine_up@re+1)& (0+255),w,b
  1088  000DD6  6EDA               	movwf	fsr2h,c
  1089  000DD8  0E02               	movlw	low (_queueDown+2)
  1090  000DDA  26D9               	addwf	fsr2l,f,c
  1091  000DDC  0E04               	movlw	high (_queueDown+2)
  1092  000DDE  22DA               	addwfc	fsr2h,f,c
  1093  000DE0  90D8               	bcf	status,0,c
  1094  000DE2  3590               	rlcf	rutine_up@re& (0+255),w,b
  1095  000DE4  6EE1               	movwf	fsr1l,c
  1096  000DE6  3591               	rlcf	(rutine_up@re+1)& (0+255),w,b
  1097  000DE8  6EE2               	movwf	fsr1h,c
  1098  000DEA  0E00               	movlw	low _queueDown
  1099  000DEC  26E1               	addwf	fsr1l,f,c
  1100  000DEE  0E04               	movlw	high _queueDown
  1101  000DF0  22E2               	addwfc	fsr1h,f,c
  1102  000DF2  CFDE FFE6          	movff	postinc2,postinc1
  1103  000DF6  CFDD FFE5          	movff	postdec2,postdec1
  1104  000DFA                     
  1105                           ; BSR set to: 0
  1106                           ;main.c: 445:             }
  1107  000DFA  4B90               	infsnz	rutine_up@re& (0+255),f,b
  1108  000DFC  2B91               	incf	(rutine_up@re+1)& (0+255),f,b
  1109  000DFE                     l2256:
  1110  000DFE  FFFF               	dw	65535	; assembler added errata NOP
  1111                           
  1112                           ; BSR set to: 0
  1113  000E00  505D               	movf	_tasksDown^0,w,c
  1114  000E02  5D90               	subwf	rutine_up@re& (0+255),w,b
  1115  000E04  5191               	movf	(rutine_up@re+1)& (0+255),w,b
  1116  000E06  0A80               	xorlw	128
  1117  000E08  6F8C               	movwf	??_rutine_up& (0+255),b
  1118  000E0A  505E               	movf	(_tasksDown+1)^0,w,c
  1119  000E0C  0A80               	xorlw	128
  1120  000E0E  598C               	subwfb	??_rutine_up& (0+255),w,b
  1121  000E10  A0D8               	btfss	status,0,c
  1122  000E12  EF0D  F007         	goto	u1521
  1123  000E16  EF10  F007         	goto	u1520
  1124  000E1A                     u1521:
  1125  000E1A  FFFF               	dw	65535	; assembler added errata NOP
  1126  000E1C  EFE6  F006         	goto	l2252
  1127  000E20                     u1520:
  1128  000E20  FFFF               	dw	65535	; assembler added errata NOP
  1129  000E22                     
  1130                           ; BSR set to: 0
  1131                           ;main.c: 446:             tasksDown--;
  1132  000E22  065D               	decf	_tasksDown^0,f,c
  1133  000E24  A0D8               	btfss	status,0,c
  1134  000E26  065E               	decf	(_tasksDown+1)^0,f,c
  1135  000E28                     
  1136                           ; BSR set to: 0
  1137                           ;main.c: 449:             modeDown();
  1138  000E28  ECDF  F009         	call	_modeDown	;wreg free
  1139                           
  1140                           ;main.c: 450:         }
  1141  000E2C  EF21  F007         	goto	l187
  1142  000E30                     l2262:
  1143  000E30  FFFF               	dw	65535	; assembler added errata NOP
  1144                           
  1145                           ;main.c: 453:             callFL_up = 0;
  1146  000E32  0E00               	movlw	0
  1147  000E34  6E56               	movwf	(_callFL_up+1)^0,c
  1148  000E36  0E00               	movlw	0
  1149  000E38  6E55               	movwf	_callFL_up^0,c
  1150                           
  1151                           ;main.c: 454:             modeUp_F = 0;
  1152  000E3A  0E00               	movlw	0
  1153  000E3C  6E4E               	movwf	(_modeUp_F+1)^0,c
  1154  000E3E  0E00               	movlw	0
  1155  000E40  6E4D               	movwf	_modeUp_F^0,c
  1156  000E42                     l187:
  1157  000E42  FFFF               	dw	65535	; assembler added errata NOP
  1158  000E44  0012               	return		;funcret
  1159  000E46  FFFF               	dw	65535	; errata NOP
  1160  000E48                     __end_of_rutine_up:
  1161                           	callstack 0
  1162                           
  1163 ;; *************** function _modeUpControl *****************
  1164 ;; Defined at:
  1165 ;;		line 334 in file "main.c"
  1166 ;; Parameters:    Size  Location     Type
  1167 ;;		None
  1168 ;; Auto vars:     Size  Location     Type
  1169 ;;  i               2   10[BANK0 ] int 
  1170 ;;  i               2    8[BANK0 ] int 
  1171 ;;  i               2    6[BANK0 ] int 
  1172 ;;  i               2    4[BANK0 ] int 
  1173 ;; Return value:  Size  Location     Type
  1174 ;;                  1    wreg      void 
  1175 ;; Registers used:
  1176 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1177 ;; Tracked objects:
  1178 ;;		On entry : 0/0
  1179 ;;		On exit  : 0/0
  1180 ;;		Unchanged: 0/0
  1181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1182 ;;      Params:         0       0       0       0       0       0       0
  1183 ;;      Locals:         0       8       0       0       0       0       0
  1184 ;;      Temps:          0       2       0       0       0       0       0
  1185 ;;      Totals:         0      10       0       0       0       0       0
  1186 ;;Total ram usage:       10 bytes
  1187 ;; Hardware stack levels used: 1
  1188 ;; Hardware stack levels required when called: 4
  1189 ;; This function calls:
  1190 ;;		_dataPanelUp
  1191 ;; This function is called by:
  1192 ;;		_rutine_up
  1193 ;; This function uses a non-reentrant model
  1194 ;;
  1195                           
  1196                           	psect	text3
  1197  000314                     __ptext3:
  1198                           	callstack 0
  1199  000314                     _modeUpControl:
  1200                           	callstack 0
  1201  000314  FFFF               	dw	65535	; assembler added errata NOP
  1202  000316                     
  1203                           ;main.c: 336:     static int cont = 0;;main.c: 338:     switch (queueUp[cont]) {
  1204  000316  EFF1  F002         	goto	l2220
  1205  00031A                     l152:
  1206  00031A  FFFF               	dw	65535	; assembler added errata NOP
  1207                           
  1208                           ; BSR set to: 0
  1209                           ;main.c: 340:             if (PORTDbits.RD4) {
  1210  00031C  A883               	btfss	131,4,c	;volatile
  1211  00031E  EF93  F001         	goto	u1401
  1212  000322  EF96  F001         	goto	u1400
  1213  000326                     u1401:
  1214  000326  FFFF               	dw	65535	; assembler added errata NOP
  1215  000328  EF12  F003         	goto	l173
  1216  00032C                     u1400:
  1217  00032C  FFFF               	dw	65535	; assembler added errata NOP
  1218  00032E                     
  1219                           ; BSR set to: 0
  1220                           ;main.c: 344:                 LATCbits.LC1 = 1;
  1221  00032E  828B               	bsf	139,1,c	;volatile
  1222  000330                     
  1223                           ; BSR set to: 0
  1224                           ;main.c: 347:                 for (int i = 0; i < tasksUp; i++) {
  1225  000330  0E00               	movlw	0
  1226  000332  6F85               	movwf	(modeUpControl@i+1)& (0+255),b
  1227  000334  0E00               	movlw	0
  1228  000336  6F84               	movwf	modeUpControl@i& (0+255),b
  1229  000338  EFB7  F001         	goto	l2142
  1230  00033C                     l2138:
  1231  00033C  FFFF               	dw	65535	; assembler added errata NOP
  1232                           
  1233                           ; BSR set to: 0
  1234                           ;main.c: 348:                     queueUp[i] = queueUp[i + 1];
  1235  00033E  90D8               	bcf	status,0,c
  1236  000340  3584               	rlcf	modeUpControl@i& (0+255),w,b
  1237  000342  6ED9               	movwf	fsr2l,c
  1238  000344  3585               	rlcf	(modeUpControl@i+1)& (0+255),w,b
  1239  000346  6EDA               	movwf	fsr2h,c
  1240  000348  0E02               	movlw	low (_queueUp+2)
  1241  00034A  26D9               	addwf	fsr2l,f,c
  1242  00034C  0E03               	movlw	high (_queueUp+2)
  1243  00034E  22DA               	addwfc	fsr2h,f,c
  1244  000350  90D8               	bcf	status,0,c
  1245  000352  3584               	rlcf	modeUpControl@i& (0+255),w,b
  1246  000354  6EE1               	movwf	fsr1l,c
  1247  000356  3585               	rlcf	(modeUpControl@i+1)& (0+255),w,b
  1248  000358  6EE2               	movwf	fsr1h,c
  1249  00035A  0E00               	movlw	low _queueUp
  1250  00035C  26E1               	addwf	fsr1l,f,c
  1251  00035E  0E03               	movlw	high _queueUp
  1252  000360  22E2               	addwfc	fsr1h,f,c
  1253  000362  CFDE FFE6          	movff	postinc2,postinc1
  1254  000366  CFDD FFE5          	movff	postdec2,postdec1
  1255  00036A                     
  1256                           ; BSR set to: 0
  1257                           ;main.c: 349:                 }
  1258  00036A  4B84               	infsnz	modeUpControl@i& (0+255),f,b
  1259  00036C  2B85               	incf	(modeUpControl@i+1)& (0+255),f,b
  1260  00036E                     l2142:
  1261  00036E  FFFF               	dw	65535	; assembler added errata NOP
  1262                           
  1263                           ; BSR set to: 0
  1264  000370  505B               	movf	_tasksUp^0,w,c
  1265  000372  5D84               	subwf	modeUpControl@i& (0+255),w,b
  1266  000374  5185               	movf	(modeUpControl@i+1)& (0+255),w,b
  1267  000376  0A80               	xorlw	128
  1268  000378  6F82               	movwf	??_modeUpControl& (0+255),b
  1269  00037A  505C               	movf	(_tasksUp+1)^0,w,c
  1270  00037C  0A80               	xorlw	128
  1271  00037E  5982               	subwfb	??_modeUpControl& (0+255),w,b
  1272  000380  A0D8               	btfss	status,0,c
  1273  000382  EFC5  F001         	goto	u1411
  1274  000386  EFC8  F001         	goto	u1410
  1275  00038A                     u1411:
  1276  00038A  FFFF               	dw	65535	; assembler added errata NOP
  1277  00038C  EF9E  F001         	goto	l2138
  1278  000390                     u1410:
  1279  000390  FFFF               	dw	65535	; assembler added errata NOP
  1280  000392                     
  1281                           ; BSR set to: 0
  1282                           ;main.c: 350:                 tasksUp--;
  1283  000392  065B               	decf	_tasksUp^0,f,c
  1284  000394  A0D8               	btfss	status,0,c
  1285  000396  065C               	decf	(_tasksUp+1)^0,f,c
  1286  000398                     
  1287                           ; BSR set to: 0
  1288                           ;main.c: 351:                 LATDbits.LD0 = 1;
  1289  000398  808C               	bsf	140,0,c	;volatile
  1290  00039A                     
  1291                           ; BSR set to: 0
  1292                           ;main.c: 352:                 nowFL = 1;
  1293  00039A  0E00               	movlw	0
  1294  00039C  6E52               	movwf	(_nowFL+1)^0,c
  1295  00039E  0E01               	movlw	1
  1296  0003A0  6E51               	movwf	_nowFL^0,c
  1297  0003A2                     
  1298                           ; BSR set to: 0
  1299                           ;main.c: 354:                 dataPanelUp();
  1300  0003A2  EC47  F005         	call	_dataPanelUp	;wreg free
  1301  0003A6                     
  1302                           ;main.c: 356:                 LATDbits.LD0 = 0;
  1303  0003A6  908C               	bcf	140,0,c	;volatile
  1304  0003A8                     
  1305                           ;main.c: 357:                 _delay((unsigned long)((300)*(20000000/4000.0)));
  1306  0003A8  0E06               	movlw	6
  1307  0003AA  0100               	movlb	0	; () banked
  1308  0003AC  6F83               	movwf	(??_modeUpControl+1)& (0+255),b
  1309  0003AE  0EB6               	movlw	182
  1310  0003B0  6F82               	movwf	??_modeUpControl& (0+255),b
  1311  0003B2  0EF8               	movlw	248
  1312  0003B4                     u1637:
  1313  0003B4  FFFF               	dw	65535	; errata NOP
  1314  0003B6  2EE8               	decfsz	wreg,f,c
  1315  0003B8  D7FD               	bra	u1637
  1316  0003BA  2F82               	decfsz	??_modeUpControl& (0+255),f,b
  1317  0003BC  D7FB               	bra	u1637
  1318  0003BE  2F83               	decfsz	(??_modeUpControl+1)& (0+255),f,b
  1319  0003C0  D7F9               	bra	u1637
  1320  0003C2  D000               	nop2	
  1321  0003C4  F000               	nop	
  1322  0003C6                     
  1323                           ;main.c: 359:                 LATCbits.LC1 = 0;
  1324  0003C6  928B               	bcf	139,1,c	;volatile
  1325  0003C8  EF12  F003         	goto	l173
  1326  0003CC                     l158:
  1327  0003CC  FFFF               	dw	65535	; assembler added errata NOP
  1328                           
  1329                           ; BSR set to: 0
  1330                           ;main.c: 364:             if (PORTDbits.RD5) {
  1331  0003CE  AA83               	btfss	131,5,c	;volatile
  1332  0003D0  EFEC  F001         	goto	u1421
  1333  0003D4  EFEF  F001         	goto	u1420
  1334  0003D8                     u1421:
  1335  0003D8  FFFF               	dw	65535	; assembler added errata NOP
  1336  0003DA  EF12  F003         	goto	l173
  1337  0003DE                     u1420:
  1338  0003DE  FFFF               	dw	65535	; assembler added errata NOP
  1339  0003E0                     
  1340                           ; BSR set to: 0
  1341                           ;main.c: 368:                 LATCbits.LC1 = 1;
  1342  0003E0  828B               	bsf	139,1,c	;volatile
  1343                           
  1344                           ;main.c: 369:                 LATDbits.LD1 = 1;
  1345  0003E2  828C               	bsf	140,1,c	;volatile
  1346  0003E4                     
  1347                           ; BSR set to: 0
  1348                           ;main.c: 370:                 nowFL = 2;
  1349  0003E4  0E00               	movlw	0
  1350  0003E6  6E52               	movwf	(_nowFL+1)^0,c
  1351  0003E8  0E02               	movlw	2
  1352  0003EA  6E51               	movwf	_nowFL^0,c
  1353                           
  1354                           ;main.c: 372:                 for (int i = 0; i < tasksUp; i++) {
  1355  0003EC  0E00               	movlw	0
  1356  0003EE  6F87               	movwf	(modeUpControl@i_513+1)& (0+255),b
  1357  0003F0  0E00               	movlw	0
  1358  0003F2  6F86               	movwf	modeUpControl@i_513& (0+255),b
  1359  0003F4  EF15  F002         	goto	l2166
  1360  0003F8                     l2162:
  1361  0003F8  FFFF               	dw	65535	; assembler added errata NOP
  1362                           
  1363                           ; BSR set to: 0
  1364                           ;main.c: 373:                     queueUp[i] = queueUp[i + 1];
  1365  0003FA  90D8               	bcf	status,0,c
  1366  0003FC  3586               	rlcf	modeUpControl@i_513& (0+255),w,b
  1367  0003FE  6ED9               	movwf	fsr2l,c
  1368  000400  3587               	rlcf	(modeUpControl@i_513+1)& (0+255),w,b
  1369  000402  6EDA               	movwf	fsr2h,c
  1370  000404  0E02               	movlw	low (_queueUp+2)
  1371  000406  26D9               	addwf	fsr2l,f,c
  1372  000408  0E03               	movlw	high (_queueUp+2)
  1373  00040A  22DA               	addwfc	fsr2h,f,c
  1374  00040C  90D8               	bcf	status,0,c
  1375  00040E  3586               	rlcf	modeUpControl@i_513& (0+255),w,b
  1376  000410  6EE1               	movwf	fsr1l,c
  1377  000412  3587               	rlcf	(modeUpControl@i_513+1)& (0+255),w,b
  1378  000414  6EE2               	movwf	fsr1h,c
  1379  000416  0E00               	movlw	low _queueUp
  1380  000418  26E1               	addwf	fsr1l,f,c
  1381  00041A  0E03               	movlw	high _queueUp
  1382  00041C  22E2               	addwfc	fsr1h,f,c
  1383  00041E  CFDE FFE6          	movff	postinc2,postinc1
  1384  000422  CFDD FFE5          	movff	postdec2,postdec1
  1385  000426                     
  1386                           ; BSR set to: 0
  1387                           ;main.c: 374:                 }
  1388  000426  4B86               	infsnz	modeUpControl@i_513& (0+255),f,b
  1389  000428  2B87               	incf	(modeUpControl@i_513+1)& (0+255),f,b
  1390  00042A                     l2166:
  1391  00042A  FFFF               	dw	65535	; assembler added errata NOP
  1392                           
  1393                           ; BSR set to: 0
  1394  00042C  505B               	movf	_tasksUp^0,w,c
  1395  00042E  5D86               	subwf	modeUpControl@i_513& (0+255),w,b
  1396  000430  5187               	movf	(modeUpControl@i_513+1)& (0+255),w,b
  1397  000432  0A80               	xorlw	128
  1398  000434  6F82               	movwf	??_modeUpControl& (0+255),b
  1399  000436  505C               	movf	(_tasksUp+1)^0,w,c
  1400  000438  0A80               	xorlw	128
  1401  00043A  5982               	subwfb	??_modeUpControl& (0+255),w,b
  1402  00043C  A0D8               	btfss	status,0,c
  1403  00043E  EF23  F002         	goto	u1431
  1404  000442  EF26  F002         	goto	u1430
  1405  000446                     u1431:
  1406  000446  FFFF               	dw	65535	; assembler added errata NOP
  1407  000448  EFFC  F001         	goto	l2162
  1408  00044C                     u1430:
  1409  00044C  FFFF               	dw	65535	; assembler added errata NOP
  1410  00044E                     
  1411                           ; BSR set to: 0
  1412                           ;main.c: 375:                 tasksUp--;
  1413  00044E  065B               	decf	_tasksUp^0,f,c
  1414  000450  A0D8               	btfss	status,0,c
  1415  000452  065C               	decf	(_tasksUp+1)^0,f,c
  1416  000454                     
  1417                           ; BSR set to: 0
  1418                           ;main.c: 376:                 dataPanelUp();
  1419  000454  EC47  F005         	call	_dataPanelUp	;wreg free
  1420  000458                     
  1421                           ;main.c: 377:                 LATDbits.LD1 = 0;
  1422  000458  928C               	bcf	140,1,c	;volatile
  1423  00045A                     
  1424                           ;main.c: 378:                 _delay((unsigned long)((300)*(20000000/4000.0)));
  1425  00045A  0E06               	movlw	6
  1426  00045C  0100               	movlb	0	; () banked
  1427  00045E  6F83               	movwf	(??_modeUpControl+1)& (0+255),b
  1428  000460  0EB6               	movlw	182
  1429  000462  6F82               	movwf	??_modeUpControl& (0+255),b
  1430  000464  0EF8               	movlw	248
  1431  000466                     u1647:
  1432  000466  FFFF               	dw	65535	; errata NOP
  1433  000468  2EE8               	decfsz	wreg,f,c
  1434  00046A  D7FD               	bra	u1647
  1435  00046C  2F82               	decfsz	??_modeUpControl& (0+255),f,b
  1436  00046E  D7FB               	bra	u1647
  1437  000470  2F83               	decfsz	(??_modeUpControl+1)& (0+255),f,b
  1438  000472  D7F9               	bra	u1647
  1439  000474  D000               	nop2	
  1440  000476  F000               	nop	
  1441  000478                     
  1442                           ;main.c: 380:                 LATCbits.LC1 = 0;
  1443  000478  928B               	bcf	139,1,c	;volatile
  1444  00047A  EF12  F003         	goto	l173
  1445  00047E                     l163:
  1446  00047E  FFFF               	dw	65535	; assembler added errata NOP
  1447                           
  1448                           ; BSR set to: 0
  1449                           ;main.c: 385:             if (PORTDbits.RD6) {
  1450  000480  AC83               	btfss	131,6,c	;volatile
  1451  000482  EF45  F002         	goto	u1441
  1452  000486  EF48  F002         	goto	u1440
  1453  00048A                     u1441:
  1454  00048A  FFFF               	dw	65535	; assembler added errata NOP
  1455  00048C  EF12  F003         	goto	l173
  1456  000490                     u1440:
  1457  000490  FFFF               	dw	65535	; assembler added errata NOP
  1458  000492                     
  1459                           ; BSR set to: 0
  1460                           ;main.c: 389:                 LATCbits.LC1 = 1;
  1461  000492  828B               	bsf	139,1,c	;volatile
  1462                           
  1463                           ;main.c: 390:                 LATDbits.LD2 = 1;
  1464  000494  848C               	bsf	140,2,c	;volatile
  1465  000496                     
  1466                           ; BSR set to: 0
  1467                           ;main.c: 391:                 nowFL = 3;
  1468  000496  0E00               	movlw	0
  1469  000498  6E52               	movwf	(_nowFL+1)^0,c
  1470  00049A  0E03               	movlw	3
  1471  00049C  6E51               	movwf	_nowFL^0,c
  1472                           
  1473                           ;main.c: 393:                 for (int i = 0; i < tasksUp; i++) {
  1474  00049E  0E00               	movlw	0
  1475  0004A0  6F89               	movwf	(modeUpControl@i_514+1)& (0+255),b
  1476  0004A2  0E00               	movlw	0
  1477  0004A4  6F88               	movwf	modeUpControl@i_514& (0+255),b
  1478  0004A6  EF6E  F002         	goto	l2186
  1479  0004AA                     l2182:
  1480  0004AA  FFFF               	dw	65535	; assembler added errata NOP
  1481                           
  1482                           ; BSR set to: 0
  1483                           ;main.c: 394:                     queueUp[i] = queueUp[i + 1];
  1484  0004AC  90D8               	bcf	status,0,c
  1485  0004AE  3588               	rlcf	modeUpControl@i_514& (0+255),w,b
  1486  0004B0  6ED9               	movwf	fsr2l,c
  1487  0004B2  3589               	rlcf	(modeUpControl@i_514+1)& (0+255),w,b
  1488  0004B4  6EDA               	movwf	fsr2h,c
  1489  0004B6  0E02               	movlw	low (_queueUp+2)
  1490  0004B8  26D9               	addwf	fsr2l,f,c
  1491  0004BA  0E03               	movlw	high (_queueUp+2)
  1492  0004BC  22DA               	addwfc	fsr2h,f,c
  1493  0004BE  90D8               	bcf	status,0,c
  1494  0004C0  3588               	rlcf	modeUpControl@i_514& (0+255),w,b
  1495  0004C2  6EE1               	movwf	fsr1l,c
  1496  0004C4  3589               	rlcf	(modeUpControl@i_514+1)& (0+255),w,b
  1497  0004C6  6EE2               	movwf	fsr1h,c
  1498  0004C8  0E00               	movlw	low _queueUp
  1499  0004CA  26E1               	addwf	fsr1l,f,c
  1500  0004CC  0E03               	movlw	high _queueUp
  1501  0004CE  22E2               	addwfc	fsr1h,f,c
  1502  0004D0  CFDE FFE6          	movff	postinc2,postinc1
  1503  0004D4  CFDD FFE5          	movff	postdec2,postdec1
  1504  0004D8                     
  1505                           ; BSR set to: 0
  1506                           ;main.c: 395:                 }
  1507  0004D8  4B88               	infsnz	modeUpControl@i_514& (0+255),f,b
  1508  0004DA  2B89               	incf	(modeUpControl@i_514+1)& (0+255),f,b
  1509  0004DC                     l2186:
  1510  0004DC  FFFF               	dw	65535	; assembler added errata NOP
  1511                           
  1512                           ; BSR set to: 0
  1513  0004DE  505B               	movf	_tasksUp^0,w,c
  1514  0004E0  5D88               	subwf	modeUpControl@i_514& (0+255),w,b
  1515  0004E2  5189               	movf	(modeUpControl@i_514+1)& (0+255),w,b
  1516  0004E4  0A80               	xorlw	128
  1517  0004E6  6F82               	movwf	??_modeUpControl& (0+255),b
  1518  0004E8  505C               	movf	(_tasksUp+1)^0,w,c
  1519  0004EA  0A80               	xorlw	128
  1520  0004EC  5982               	subwfb	??_modeUpControl& (0+255),w,b
  1521  0004EE  A0D8               	btfss	status,0,c
  1522  0004F0  EF7C  F002         	goto	u1451
  1523  0004F4  EF7F  F002         	goto	u1450
  1524  0004F8                     u1451:
  1525  0004F8  FFFF               	dw	65535	; assembler added errata NOP
  1526  0004FA  EF55  F002         	goto	l2182
  1527  0004FE                     u1450:
  1528  0004FE  FFFF               	dw	65535	; assembler added errata NOP
  1529  000500                     
  1530                           ; BSR set to: 0
  1531                           ;main.c: 396:                 tasksUp--;
  1532  000500  065B               	decf	_tasksUp^0,f,c
  1533  000502  A0D8               	btfss	status,0,c
  1534  000504  065C               	decf	(_tasksUp+1)^0,f,c
  1535  000506                     
  1536                           ; BSR set to: 0
  1537                           ;main.c: 397:                 dataPanelUp();
  1538  000506  EC47  F005         	call	_dataPanelUp	;wreg free
  1539  00050A                     
  1540                           ;main.c: 398:                 LATDbits.LD2 = 0;
  1541  00050A  948C               	bcf	140,2,c	;volatile
  1542  00050C                     
  1543                           ;main.c: 399:                 _delay((unsigned long)((300)*(20000000/4000.0)));
  1544  00050C  0E06               	movlw	6
  1545  00050E  0100               	movlb	0	; () banked
  1546  000510  6F83               	movwf	(??_modeUpControl+1)& (0+255),b
  1547  000512  0EB6               	movlw	182
  1548  000514  6F82               	movwf	??_modeUpControl& (0+255),b
  1549  000516  0EF8               	movlw	248
  1550  000518                     u1657:
  1551  000518  FFFF               	dw	65535	; errata NOP
  1552  00051A  2EE8               	decfsz	wreg,f,c
  1553  00051C  D7FD               	bra	u1657
  1554  00051E  2F82               	decfsz	??_modeUpControl& (0+255),f,b
  1555  000520  D7FB               	bra	u1657
  1556  000522  2F83               	decfsz	(??_modeUpControl+1)& (0+255),f,b
  1557  000524  D7F9               	bra	u1657
  1558  000526  D000               	nop2	
  1559  000528  F000               	nop	
  1560  00052A                     
  1561                           ;main.c: 401:                 LATCbits.LC1 = 0;
  1562  00052A  928B               	bcf	139,1,c	;volatile
  1563  00052C  EF12  F003         	goto	l173
  1564  000530                     l168:
  1565  000530  FFFF               	dw	65535	; assembler added errata NOP
  1566                           
  1567                           ; BSR set to: 0
  1568                           ;main.c: 406:             if (PORTDbits.RD7) {
  1569  000532  AE83               	btfss	131,7,c	;volatile
  1570  000534  EF9E  F002         	goto	u1461
  1571  000538  EFA1  F002         	goto	u1460
  1572  00053C                     u1461:
  1573  00053C  FFFF               	dw	65535	; assembler added errata NOP
  1574  00053E  EF12  F003         	goto	l173
  1575  000542                     u1460:
  1576  000542  FFFF               	dw	65535	; assembler added errata NOP
  1577  000544                     
  1578                           ; BSR set to: 0
  1579                           ;main.c: 411:                 LATCbits.LC1 = 1;
  1580  000544  828B               	bsf	139,1,c	;volatile
  1581                           
  1582                           ;main.c: 412:                 LATDbits.LD3 = 1;
  1583  000546  868C               	bsf	140,3,c	;volatile
  1584  000548                     
  1585                           ; BSR set to: 0
  1586                           ;main.c: 413:                 nowFL = 4;
  1587  000548  0E00               	movlw	0
  1588  00054A  6E52               	movwf	(_nowFL+1)^0,c
  1589  00054C  0E04               	movlw	4
  1590  00054E  6E51               	movwf	_nowFL^0,c
  1591                           
  1592                           ;main.c: 415:                 for (int i = 0; i < tasksUp; i++) {
  1593  000550  0E00               	movlw	0
  1594  000552  6F8B               	movwf	(modeUpControl@i_515+1)& (0+255),b
  1595  000554  0E00               	movlw	0
  1596  000556  6F8A               	movwf	modeUpControl@i_515& (0+255),b
  1597  000558  EFC7  F002         	goto	l2206
  1598  00055C                     l2202:
  1599  00055C  FFFF               	dw	65535	; assembler added errata NOP
  1600                           
  1601                           ; BSR set to: 0
  1602                           ;main.c: 416:                     queueUp[i] = queueUp[i + 1];
  1603  00055E  90D8               	bcf	status,0,c
  1604  000560  358A               	rlcf	modeUpControl@i_515& (0+255),w,b
  1605  000562  6ED9               	movwf	fsr2l,c
  1606  000564  358B               	rlcf	(modeUpControl@i_515+1)& (0+255),w,b
  1607  000566  6EDA               	movwf	fsr2h,c
  1608  000568  0E02               	movlw	low (_queueUp+2)
  1609  00056A  26D9               	addwf	fsr2l,f,c
  1610  00056C  0E03               	movlw	high (_queueUp+2)
  1611  00056E  22DA               	addwfc	fsr2h,f,c
  1612  000570  90D8               	bcf	status,0,c
  1613  000572  358A               	rlcf	modeUpControl@i_515& (0+255),w,b
  1614  000574  6EE1               	movwf	fsr1l,c
  1615  000576  358B               	rlcf	(modeUpControl@i_515+1)& (0+255),w,b
  1616  000578  6EE2               	movwf	fsr1h,c
  1617  00057A  0E00               	movlw	low _queueUp
  1618  00057C  26E1               	addwf	fsr1l,f,c
  1619  00057E  0E03               	movlw	high _queueUp
  1620  000580  22E2               	addwfc	fsr1h,f,c
  1621  000582  CFDE FFE6          	movff	postinc2,postinc1
  1622  000586  CFDD FFE5          	movff	postdec2,postdec1
  1623  00058A                     
  1624                           ; BSR set to: 0
  1625                           ;main.c: 417:                 }
  1626  00058A  4B8A               	infsnz	modeUpControl@i_515& (0+255),f,b
  1627  00058C  2B8B               	incf	(modeUpControl@i_515+1)& (0+255),f,b
  1628  00058E                     l2206:
  1629  00058E  FFFF               	dw	65535	; assembler added errata NOP
  1630                           
  1631                           ; BSR set to: 0
  1632  000590  505B               	movf	_tasksUp^0,w,c
  1633  000592  5D8A               	subwf	modeUpControl@i_515& (0+255),w,b
  1634  000594  518B               	movf	(modeUpControl@i_515+1)& (0+255),w,b
  1635  000596  0A80               	xorlw	128
  1636  000598  6F82               	movwf	??_modeUpControl& (0+255),b
  1637  00059A  505C               	movf	(_tasksUp+1)^0,w,c
  1638  00059C  0A80               	xorlw	128
  1639  00059E  5982               	subwfb	??_modeUpControl& (0+255),w,b
  1640  0005A0  A0D8               	btfss	status,0,c
  1641  0005A2  EFD5  F002         	goto	u1471
  1642  0005A6  EFD8  F002         	goto	u1470
  1643  0005AA                     u1471:
  1644  0005AA  FFFF               	dw	65535	; assembler added errata NOP
  1645  0005AC  EFAE  F002         	goto	l2202
  1646  0005B0                     u1470:
  1647  0005B0  FFFF               	dw	65535	; assembler added errata NOP
  1648  0005B2                     
  1649                           ; BSR set to: 0
  1650                           ;main.c: 418:                 tasksUp--;
  1651  0005B2  065B               	decf	_tasksUp^0,f,c
  1652  0005B4  A0D8               	btfss	status,0,c
  1653  0005B6  065C               	decf	(_tasksUp+1)^0,f,c
  1654  0005B8                     
  1655                           ; BSR set to: 0
  1656                           ;main.c: 419:                 dataPanelUp();
  1657  0005B8  EC47  F005         	call	_dataPanelUp	;wreg free
  1658  0005BC                     
  1659                           ;main.c: 420:                 LATDbits.LD3 = 0;
  1660  0005BC  968C               	bcf	140,3,c	;volatile
  1661  0005BE                     
  1662                           ;main.c: 421:                 _delay((unsigned long)((300)*(20000000/4000.0)));
  1663  0005BE  0E06               	movlw	6
  1664  0005C0  0100               	movlb	0	; () banked
  1665  0005C2  6F83               	movwf	(??_modeUpControl+1)& (0+255),b
  1666  0005C4  0EB6               	movlw	182
  1667  0005C6  6F82               	movwf	??_modeUpControl& (0+255),b
  1668  0005C8  0EF8               	movlw	248
  1669  0005CA                     u1667:
  1670  0005CA  FFFF               	dw	65535	; errata NOP
  1671  0005CC  2EE8               	decfsz	wreg,f,c
  1672  0005CE  D7FD               	bra	u1667
  1673  0005D0  2F82               	decfsz	??_modeUpControl& (0+255),f,b
  1674  0005D2  D7FB               	bra	u1667
  1675  0005D4  2F83               	decfsz	(??_modeUpControl+1)& (0+255),f,b
  1676  0005D6  D7F9               	bra	u1667
  1677  0005D8  D000               	nop2	
  1678  0005DA  F000               	nop	
  1679  0005DC                     
  1680                           ;main.c: 423:                 LATCbits.LC1 = 0;
  1681  0005DC  928B               	bcf	139,1,c	;volatile
  1682  0005DE  EF12  F003         	goto	l173
  1683  0005E2                     l2220:
  1684  0005E2  FFFF               	dw	65535	; assembler added errata NOP
  1685  0005E4  C300  F082         	movff	_queueUp,??_modeUpControl
  1686  0005E8  C301  F083         	movff	_queueUp+1,??_modeUpControl+1
  1687                           
  1688                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1689                           ; Switch size 1, requested type "simple"
  1690                           ; Number of cases is 1, Range of values is 0 to 0
  1691                           ; switch strategies available:
  1692                           ; Name         Instructions Cycles
  1693                           ; simple_byte            4     3 (average)
  1694                           ;	Chosen strategy is simple_byte
  1695  0005EC  0100               	movlb	0	; () banked
  1696  0005EE  5183               	movf	(??_modeUpControl+1)& (0+255),w,b
  1697  0005F0  0A00               	xorlw	0	; case 0
  1698  0005F2  B4D8               	btfsc	status,2,c
  1699  0005F4  EFFE  F002         	goto	l2412
  1700  0005F8  EF12  F003         	goto	l173
  1701  0005FC                     l2412:
  1702  0005FC  FFFF               	dw	65535	; assembler added errata NOP
  1703                           
  1704                           ; BSR set to: 0
  1705                           ; Switch size 1, requested type "simple"
  1706                           ; Number of cases is 4, Range of values is 1 to 4
  1707                           ; switch strategies available:
  1708                           ; Name         Instructions Cycles
  1709                           ; simple_byte           13     7 (average)
  1710                           ;	Chosen strategy is simple_byte
  1711  0005FE  5182               	movf	??_modeUpControl& (0+255),w,b
  1712  000600  0A01               	xorlw	1	; case 1
  1713  000602  B4D8               	btfsc	status,2,c
  1714  000604  EF8D  F001         	goto	l152
  1715  000608  0A03               	xorlw	3	; case 2
  1716  00060A  B4D8               	btfsc	status,2,c
  1717  00060C  EFE6  F001         	goto	l158
  1718  000610  0A01               	xorlw	1	; case 3
  1719  000612  B4D8               	btfsc	status,2,c
  1720  000614  EF3F  F002         	goto	l163
  1721  000618  0A07               	xorlw	7	; case 4
  1722  00061A  B4D8               	btfsc	status,2,c
  1723  00061C  EF98  F002         	goto	l168
  1724  000620  EF12  F003         	goto	l173
  1725  000624                     l173:
  1726  000624  FFFF               	dw	65535	; assembler added errata NOP
  1727  000626  0012               	return		;funcret
  1728  000628  FFFF               	dw	65535	; errata NOP
  1729  00062A                     __end_of_modeUpControl:
  1730                           	callstack 0
  1731                           
  1732 ;; *************** function _dataPanelUp *****************
  1733 ;; Defined at:
  1734 ;;		line 273 in file "main.c"
  1735 ;; Parameters:    Size  Location     Type
  1736 ;;		None
  1737 ;; Auto vars:     Size  Location     Type
  1738 ;;  new_size        2    0[BANK0 ] int 
  1739 ;; Return value:  Size  Location     Type
  1740 ;;                  1    wreg      void 
  1741 ;; Registers used:
  1742 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1743 ;; Tracked objects:
  1744 ;;		On entry : 0/0
  1745 ;;		On exit  : 0/0
  1746 ;;		Unchanged: 0/0
  1747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1748 ;;      Params:         0       0       0       0       0       0       0
  1749 ;;      Locals:         0       2       0       0       0       0       0
  1750 ;;      Temps:          0       0       0       0       0       0       0
  1751 ;;      Totals:         0       2       0       0       0       0       0
  1752 ;;Total ram usage:        2 bytes
  1753 ;; Hardware stack levels used: 1
  1754 ;; Hardware stack levels required when called: 3
  1755 ;; This function calls:
  1756 ;;		_noRepeat
  1757 ;;		_sort
  1758 ;; This function is called by:
  1759 ;;		_modeUpControl
  1760 ;;		_modeUp
  1761 ;; This function uses a non-reentrant model
  1762 ;;
  1763                           
  1764                           	psect	text4
  1765  000A8E                     __ptext4:
  1766                           	callstack 0
  1767  000A8E                     _dataPanelUp:
  1768                           	callstack 0
  1769  000A8E  FFFF               	dw	65535	; assembler added errata NOP
  1770  000A90                     l129:
  1771  000A90  FFFF               	dw	65535	; assembler added errata NOP
  1772                           
  1773                           ;main.c: 275:         if (PORTAbits.RA0) {
  1774  000A92  A080               	btfss	128,0,c	;volatile
  1775  000A94  EF4E  F005         	goto	u1311
  1776  000A98  EF51  F005         	goto	u1310
  1777  000A9C                     u1311:
  1778  000A9C  FFFF               	dw	65535	; assembler added errata NOP
  1779  000A9E  EF82  F005         	goto	l2090
  1780  000AA2                     u1310:
  1781  000AA2  FFFF               	dw	65535	; assembler added errata NOP
  1782  000AA4                     
  1783                           ;main.c: 277:                 if (nowFL < 1) {
  1784  000AA4  BE52               	btfsc	(_nowFL+1)^0,7,c
  1785  000AA6  EF60  F005         	goto	u1320
  1786  000AAA  5052               	movf	(_nowFL+1)^0,w,c
  1787  000AAC  E106               	bnz	u1321
  1788  000AAE  0451               	decf	_nowFL^0,w,c
  1789  000AB0  B0D8               	btfsc	status,0,c
  1790  000AB2  EF5D  F005         	goto	u1321
  1791  000AB6  EF60  F005         	goto	u1320
  1792  000ABA                     u1321:
  1793  000ABA  FFFF               	dw	65535	; assembler added errata NOP
  1794  000ABC  EF72  F005         	goto	l2086
  1795  000AC0                     u1320:
  1796  000AC0  FFFF               	dw	65535	; assembler added errata NOP
  1797  000AC2                     
  1798                           ;main.c: 278:                     queueUp[tasksUp] = 1;
  1799  000AC2  90D8               	bcf	status,0,c
  1800  000AC4  345B               	rlcf	_tasksUp^0,w,c
  1801  000AC6  6ED9               	movwf	fsr2l,c
  1802  000AC8  345C               	rlcf	(_tasksUp+1)^0,w,c
  1803  000ACA  6EDA               	movwf	fsr2h,c
  1804  000ACC  0E00               	movlw	low _queueUp
  1805  000ACE  26D9               	addwf	fsr2l,f,c
  1806  000AD0  0E03               	movlw	high _queueUp
  1807  000AD2  22DA               	addwfc	fsr2h,f,c
  1808  000AD4  0E01               	movlw	1
  1809  000AD6  6EDE               	movwf	postinc2,c
  1810  000AD8  0E00               	movlw	0
  1811  000ADA  6EDD               	movwf	postdec2,c
  1812  000ADC                     
  1813                           ;main.c: 279:                     tasksUp++;
  1814  000ADC  4A5B               	infsnz	_tasksUp^0,f,c
  1815  000ADE  2A5C               	incf	(_tasksUp+1)^0,f,c
  1816                           
  1817                           ;main.c: 280:                 } else {
  1818  000AE0  EF82  F005         	goto	l2090
  1819  000AE4                     l2086:
  1820  000AE4  FFFF               	dw	65535	; assembler added errata NOP
  1821                           
  1822                           ;main.c: 281:                     queueDown[tasksDown] = 1;
  1823  000AE6  90D8               	bcf	status,0,c
  1824  000AE8  345D               	rlcf	_tasksDown^0,w,c
  1825  000AEA  6ED9               	movwf	fsr2l,c
  1826  000AEC  345E               	rlcf	(_tasksDown+1)^0,w,c
  1827  000AEE  6EDA               	movwf	fsr2h,c
  1828  000AF0  0E00               	movlw	low _queueDown
  1829  000AF2  26D9               	addwf	fsr2l,f,c
  1830  000AF4  0E04               	movlw	high _queueDown
  1831  000AF6  22DA               	addwfc	fsr2h,f,c
  1832  000AF8  0E01               	movlw	1
  1833  000AFA  6EDE               	movwf	postinc2,c
  1834  000AFC  0E00               	movlw	0
  1835  000AFE  6EDD               	movwf	postdec2,c
  1836  000B00                     
  1837                           ;main.c: 282:                     tasksDown++;
  1838  000B00  4A5D               	infsnz	_tasksDown^0,f,c
  1839  000B02  2A5E               	incf	(_tasksDown+1)^0,f,c
  1840  000B04                     l2090:
  1841  000B04  FFFF               	dw	65535	; assembler added errata NOP
  1842                           
  1843                           ;main.c: 286:         if (PORTAbits.RA1) {
  1844  000B06  A280               	btfss	128,1,c	;volatile
  1845  000B08  EF88  F005         	goto	u1331
  1846  000B0C  EF8B  F005         	goto	u1330
  1847  000B10                     u1331:
  1848  000B10  FFFF               	dw	65535	; assembler added errata NOP
  1849  000B12  EFBD  F005         	goto	l2102
  1850  000B16                     u1330:
  1851  000B16  FFFF               	dw	65535	; assembler added errata NOP
  1852  000B18                     
  1853                           ;main.c: 288:                 if (nowFL < 2) {
  1854  000B18  BE52               	btfsc	(_nowFL+1)^0,7,c
  1855  000B1A  EF9B  F005         	goto	u1340
  1856  000B1E  5052               	movf	(_nowFL+1)^0,w,c
  1857  000B20  E107               	bnz	u1341
  1858  000B22  0E02               	movlw	2
  1859  000B24  5C51               	subwf	_nowFL^0,w,c
  1860  000B26  B0D8               	btfsc	status,0,c
  1861  000B28  EF98  F005         	goto	u1341
  1862  000B2C  EF9B  F005         	goto	u1340
  1863  000B30                     u1341:
  1864  000B30  FFFF               	dw	65535	; assembler added errata NOP
  1865  000B32  EFAD  F005         	goto	l2098
  1866  000B36                     u1340:
  1867  000B36  FFFF               	dw	65535	; assembler added errata NOP
  1868  000B38                     
  1869                           ;main.c: 289:                     queueUp[tasksUp] = 2;
  1870  000B38  90D8               	bcf	status,0,c
  1871  000B3A  345B               	rlcf	_tasksUp^0,w,c
  1872  000B3C  6ED9               	movwf	fsr2l,c
  1873  000B3E  345C               	rlcf	(_tasksUp+1)^0,w,c
  1874  000B40  6EDA               	movwf	fsr2h,c
  1875  000B42  0E00               	movlw	low _queueUp
  1876  000B44  26D9               	addwf	fsr2l,f,c
  1877  000B46  0E03               	movlw	high _queueUp
  1878  000B48  22DA               	addwfc	fsr2h,f,c
  1879  000B4A  0E02               	movlw	2
  1880  000B4C  6EDE               	movwf	postinc2,c
  1881  000B4E  0E00               	movlw	0
  1882  000B50  6EDD               	movwf	postdec2,c
  1883  000B52                     
  1884                           ;main.c: 290:                     tasksUp++;
  1885  000B52  4A5B               	infsnz	_tasksUp^0,f,c
  1886  000B54  2A5C               	incf	(_tasksUp+1)^0,f,c
  1887                           
  1888                           ;main.c: 292:                 } else {
  1889  000B56  EFBD  F005         	goto	l2102
  1890  000B5A                     l2098:
  1891  000B5A  FFFF               	dw	65535	; assembler added errata NOP
  1892                           
  1893                           ;main.c: 293:                     queueDown[tasksDown] = 2;
  1894  000B5C  90D8               	bcf	status,0,c
  1895  000B5E  345D               	rlcf	_tasksDown^0,w,c
  1896  000B60  6ED9               	movwf	fsr2l,c
  1897  000B62  345E               	rlcf	(_tasksDown+1)^0,w,c
  1898  000B64  6EDA               	movwf	fsr2h,c
  1899  000B66  0E00               	movlw	low _queueDown
  1900  000B68  26D9               	addwf	fsr2l,f,c
  1901  000B6A  0E04               	movlw	high _queueDown
  1902  000B6C  22DA               	addwfc	fsr2h,f,c
  1903  000B6E  0E02               	movlw	2
  1904  000B70  6EDE               	movwf	postinc2,c
  1905  000B72  0E00               	movlw	0
  1906  000B74  6EDD               	movwf	postdec2,c
  1907  000B76                     
  1908                           ;main.c: 294:                     tasksDown++;
  1909  000B76  4A5D               	infsnz	_tasksDown^0,f,c
  1910  000B78  2A5E               	incf	(_tasksDown+1)^0,f,c
  1911  000B7A                     l2102:
  1912  000B7A  FFFF               	dw	65535	; assembler added errata NOP
  1913                           
  1914                           ;main.c: 298:         if (PORTAbits.RA2) {
  1915  000B7C  A480               	btfss	128,2,c	;volatile
  1916  000B7E  EFC3  F005         	goto	u1351
  1917  000B82  EFC6  F005         	goto	u1350
  1918  000B86                     u1351:
  1919  000B86  FFFF               	dw	65535	; assembler added errata NOP
  1920  000B88  EFF8  F005         	goto	l2114
  1921  000B8C                     u1350:
  1922  000B8C  FFFF               	dw	65535	; assembler added errata NOP
  1923  000B8E                     
  1924                           ;main.c: 300:                 if (nowFL < 3) {
  1925  000B8E  BE52               	btfsc	(_nowFL+1)^0,7,c
  1926  000B90  EFD6  F005         	goto	u1360
  1927  000B94  5052               	movf	(_nowFL+1)^0,w,c
  1928  000B96  E107               	bnz	u1361
  1929  000B98  0E03               	movlw	3
  1930  000B9A  5C51               	subwf	_nowFL^0,w,c
  1931  000B9C  B0D8               	btfsc	status,0,c
  1932  000B9E  EFD3  F005         	goto	u1361
  1933  000BA2  EFD6  F005         	goto	u1360
  1934  000BA6                     u1361:
  1935  000BA6  FFFF               	dw	65535	; assembler added errata NOP
  1936  000BA8  EFE8  F005         	goto	l2110
  1937  000BAC                     u1360:
  1938  000BAC  FFFF               	dw	65535	; assembler added errata NOP
  1939  000BAE                     
  1940                           ;main.c: 301:                     queueUp[tasksUp] = 3;
  1941  000BAE  90D8               	bcf	status,0,c
  1942  000BB0  345B               	rlcf	_tasksUp^0,w,c
  1943  000BB2  6ED9               	movwf	fsr2l,c
  1944  000BB4  345C               	rlcf	(_tasksUp+1)^0,w,c
  1945  000BB6  6EDA               	movwf	fsr2h,c
  1946  000BB8  0E00               	movlw	low _queueUp
  1947  000BBA  26D9               	addwf	fsr2l,f,c
  1948  000BBC  0E03               	movlw	high _queueUp
  1949  000BBE  22DA               	addwfc	fsr2h,f,c
  1950  000BC0  0E03               	movlw	3
  1951  000BC2  6EDE               	movwf	postinc2,c
  1952  000BC4  0E00               	movlw	0
  1953  000BC6  6EDD               	movwf	postdec2,c
  1954  000BC8                     
  1955                           ;main.c: 302:                     tasksUp++;
  1956  000BC8  4A5B               	infsnz	_tasksUp^0,f,c
  1957  000BCA  2A5C               	incf	(_tasksUp+1)^0,f,c
  1958                           
  1959                           ;main.c: 303:                 } else {
  1960  000BCC  EFF8  F005         	goto	l2114
  1961  000BD0                     l2110:
  1962  000BD0  FFFF               	dw	65535	; assembler added errata NOP
  1963                           
  1964                           ;main.c: 304:                     queueDown[tasksDown] = 3;
  1965  000BD2  90D8               	bcf	status,0,c
  1966  000BD4  345D               	rlcf	_tasksDown^0,w,c
  1967  000BD6  6ED9               	movwf	fsr2l,c
  1968  000BD8  345E               	rlcf	(_tasksDown+1)^0,w,c
  1969  000BDA  6EDA               	movwf	fsr2h,c
  1970  000BDC  0E00               	movlw	low _queueDown
  1971  000BDE  26D9               	addwf	fsr2l,f,c
  1972  000BE0  0E04               	movlw	high _queueDown
  1973  000BE2  22DA               	addwfc	fsr2h,f,c
  1974  000BE4  0E03               	movlw	3
  1975  000BE6  6EDE               	movwf	postinc2,c
  1976  000BE8  0E00               	movlw	0
  1977  000BEA  6EDD               	movwf	postdec2,c
  1978  000BEC                     
  1979                           ;main.c: 305:                     tasksDown++;
  1980  000BEC  4A5D               	infsnz	_tasksDown^0,f,c
  1981  000BEE  2A5E               	incf	(_tasksDown+1)^0,f,c
  1982  000BF0                     l2114:
  1983  000BF0  FFFF               	dw	65535	; assembler added errata NOP
  1984                           
  1985                           ;main.c: 310:         if (PORTAbits.RA3) {
  1986  000BF2  A680               	btfss	128,3,c	;volatile
  1987  000BF4  EFFE  F005         	goto	u1371
  1988  000BF8  EF01  F006         	goto	u1370
  1989  000BFC                     u1371:
  1990  000BFC  FFFF               	dw	65535	; assembler added errata NOP
  1991  000BFE  EF33  F006         	goto	l2126
  1992  000C02                     u1370:
  1993  000C02  FFFF               	dw	65535	; assembler added errata NOP
  1994  000C04                     
  1995                           ;main.c: 312:                 if (nowFL < 4) {
  1996  000C04  BE52               	btfsc	(_nowFL+1)^0,7,c
  1997  000C06  EF11  F006         	goto	u1380
  1998  000C0A  5052               	movf	(_nowFL+1)^0,w,c
  1999  000C0C  E107               	bnz	u1381
  2000  000C0E  0E04               	movlw	4
  2001  000C10  5C51               	subwf	_nowFL^0,w,c
  2002  000C12  B0D8               	btfsc	status,0,c
  2003  000C14  EF0E  F006         	goto	u1381
  2004  000C18  EF11  F006         	goto	u1380
  2005  000C1C                     u1381:
  2006  000C1C  FFFF               	dw	65535	; assembler added errata NOP
  2007  000C1E  EF23  F006         	goto	l2122
  2008  000C22                     u1380:
  2009  000C22  FFFF               	dw	65535	; assembler added errata NOP
  2010  000C24                     
  2011                           ;main.c: 313:                     queueUp[tasksUp] = 4;
  2012  000C24  90D8               	bcf	status,0,c
  2013  000C26  345B               	rlcf	_tasksUp^0,w,c
  2014  000C28  6ED9               	movwf	fsr2l,c
  2015  000C2A  345C               	rlcf	(_tasksUp+1)^0,w,c
  2016  000C2C  6EDA               	movwf	fsr2h,c
  2017  000C2E  0E00               	movlw	low _queueUp
  2018  000C30  26D9               	addwf	fsr2l,f,c
  2019  000C32  0E03               	movlw	high _queueUp
  2020  000C34  22DA               	addwfc	fsr2h,f,c
  2021  000C36  0E04               	movlw	4
  2022  000C38  6EDE               	movwf	postinc2,c
  2023  000C3A  0E00               	movlw	0
  2024  000C3C  6EDD               	movwf	postdec2,c
  2025  000C3E                     
  2026                           ;main.c: 314:                     tasksUp++;
  2027  000C3E  4A5B               	infsnz	_tasksUp^0,f,c
  2028  000C40  2A5C               	incf	(_tasksUp+1)^0,f,c
  2029                           
  2030                           ;main.c: 315:                 } else {
  2031  000C42  EF33  F006         	goto	l2126
  2032  000C46                     l2122:
  2033  000C46  FFFF               	dw	65535	; assembler added errata NOP
  2034                           
  2035                           ;main.c: 316:                     queueDown[tasksDown] = 4;
  2036  000C48  90D8               	bcf	status,0,c
  2037  000C4A  345D               	rlcf	_tasksDown^0,w,c
  2038  000C4C  6ED9               	movwf	fsr2l,c
  2039  000C4E  345E               	rlcf	(_tasksDown+1)^0,w,c
  2040  000C50  6EDA               	movwf	fsr2h,c
  2041  000C52  0E00               	movlw	low _queueDown
  2042  000C54  26D9               	addwf	fsr2l,f,c
  2043  000C56  0E04               	movlw	high _queueDown
  2044  000C58  22DA               	addwfc	fsr2h,f,c
  2045  000C5A  0E04               	movlw	4
  2046  000C5C  6EDE               	movwf	postinc2,c
  2047  000C5E  0E00               	movlw	0
  2048  000C60  6EDD               	movwf	postdec2,c
  2049  000C62                     
  2050                           ;main.c: 317:                     tasksDown++;
  2051  000C62  4A5D               	infsnz	_tasksDown^0,f,c
  2052  000C64  2A5E               	incf	(_tasksDown+1)^0,f,c
  2053  000C66                     l2126:
  2054  000C66  FFFF               	dw	65535	; assembler added errata NOP
  2055                           
  2056                           ;main.c: 321:     } while (!PORTAbits.RA4);
  2057  000C68  A880               	btfss	128,4,c	;volatile
  2058  000C6A  EF39  F006         	goto	u1391
  2059  000C6E  EF3C  F006         	goto	u1390
  2060  000C72                     u1391:
  2061  000C72  FFFF               	dw	65535	; assembler added errata NOP
  2062  000C74  EF48  F005         	goto	l129
  2063  000C78                     u1390:
  2064  000C78  FFFF               	dw	65535	; assembler added errata NOP
  2065  000C7A                     
  2066                           ;main.c: 324:     sort(&queueUp[0], tasksUp);
  2067  000C7A  0E00               	movlw	low _queueUp
  2068  000C7C  6E1F               	movwf	sort@p^0,c
  2069  000C7E  0E03               	movlw	high _queueUp
  2070  000C80  6E20               	movwf	(sort@p+1)^0,c
  2071  000C82  C05B  F021         	movff	_tasksUp,sort@sizes
  2072  000C86  C05C  F022         	movff	_tasksUp+1,sort@sizes+1
  2073  000C8A  EC15  F003         	call	_sort	;wreg free
  2074                           
  2075                           ;main.c: 325:     int new_size = noRepeat(&queueUp[0], tasksUp);
  2076  000C8E  0E00               	movlw	low _queueUp
  2077  000C90  6E1F               	movwf	noRepeat@po^0,c
  2078  000C92  0E03               	movlw	high _queueUp
  2079  000C94  6E20               	movwf	(noRepeat@po+1)^0,c
  2080  000C96  C05B  F021         	movff	_tasksUp,noRepeat@sixes
  2081  000C9A  C05C  F022         	movff	_tasksUp+1,noRepeat@sixes+1
  2082  000C9E  EC7F  F008         	call	_noRepeat	;wreg free
  2083  000CA2  C01F  F080         	movff	?_noRepeat,dataPanelUp@new_size
  2084  000CA6  C020  F081         	movff	?_noRepeat+1,dataPanelUp@new_size+1
  2085  000CAA                     
  2086                           ;main.c: 326:     tasksUp = new_size;
  2087  000CAA  C080  F05B         	movff	dataPanelUp@new_size,_tasksUp
  2088  000CAE  C081  F05C         	movff	dataPanelUp@new_size+1,_tasksUp+1
  2089  000CB2  0012               	return		;funcret
  2090  000CB4  FFFF               	dw	65535	; errata NOP
  2091  000CB6                     __end_of_dataPanelUp:
  2092                           	callstack 0
  2093                           
  2094 ;; *************** function _sort *****************
  2095 ;; Defined at:
  2096 ;;		line 230 in file "main.c"
  2097 ;; Parameters:    Size  Location     Type
  2098 ;;  p               2   30[COMRAM] PTR int 
  2099 ;;		 -> queueDown(200), queueUp(200), 
  2100 ;;  sizes           2   32[COMRAM] int 
  2101 ;; Auto vars:     Size  Location     Type
  2102 ;;  k               2  206[BANK2 ] int 
  2103 ;;  h               2  212[BANK2 ] int 
  2104 ;;  j               2  208[BANK2 ] int 
  2105 ;;  result        200    0[BANK2 ] int [100]
  2106 ;;  temp            2  210[BANK2 ] int 
  2107 ;;  sizesMod        2  204[BANK2 ] int 
  2108 ;;  nums            2  202[BANK2 ] int 
  2109 ;;  pos             2  200[BANK2 ] int 
  2110 ;; Return value:  Size  Location     Type
  2111 ;;                  1    wreg      void 
  2112 ;; Registers used:
  2113 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2114 ;; Tracked objects:
  2115 ;;		On entry : 0/0
  2116 ;;		On exit  : 0/0
  2117 ;;		Unchanged: 0/0
  2118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2119 ;;      Params:         4       0       0       0       0       0       0
  2120 ;;      Locals:         0       0       0     214       0       0       0
  2121 ;;      Temps:          5       0       0       0       0       0       0
  2122 ;;      Totals:         9       0       0     214       0       0       0
  2123 ;;Total ram usage:      223 bytes
  2124 ;; Hardware stack levels used: 1
  2125 ;; Hardware stack levels required when called: 2
  2126 ;; This function calls:
  2127 ;;		Nothing
  2128 ;; This function is called by:
  2129 ;;		_dataPanelUp
  2130 ;;		_rutine_up
  2131 ;; This function uses a non-reentrant model
  2132 ;;
  2133                           
  2134                           	psect	text5
  2135  00062A                     __ptext5:
  2136                           	callstack 0
  2137  00062A                     _sort:
  2138                           	callstack 0
  2139  00062A  FFFF               	dw	65535	; assembler added errata NOP
  2140  00062C                     
  2141                           ;main.c: 231:     int temp, nums = 0, pos = 0, sizesMod = sizes;
  2142  00062C  0E00               	movlw	0
  2143  00062E  0102               	movlb	2	; () banked
  2144  000630  6FCB               	movwf	(sort@nums+1)& (0+255),b
  2145  000632  0E00               	movlw	0
  2146  000634  6FCA               	movwf	sort@nums& (0+255),b
  2147  000636  0E00               	movlw	0
  2148  000638  6FC9               	movwf	(sort@pos+1)& (0+255),b
  2149  00063A  0E00               	movlw	0
  2150  00063C  6FC8               	movwf	sort@pos& (0+255),b
  2151  00063E                     
  2152                           ; BSR set to: 2
  2153  00063E  C021  F2CC         	movff	sort@sizes,sort@sizesMod
  2154  000642  C022  F2CD         	movff	sort@sizes+1,sort@sizesMod+1
  2155  000646                     l2038:
  2156  000646  FFFF               	dw	65535	; assembler added errata NOP
  2157                           
  2158                           ; BSR set to: 2
  2159                           ;main.c: 238:         temp = *(p + 0);
  2160  000648  C01F  FFD9         	movff	sort@p,fsr2l
  2161  00064C  C020  FFDA         	movff	sort@p+1,fsr2h
  2162  000650  CFDE F2D2          	movff	postinc2,sort@temp
  2163  000654  CFDD F2D3          	movff	postdec2,sort@temp+1
  2164  000658                     
  2165                           ; BSR set to: 2
  2166                           ;main.c: 240:         for (int h = 0; h < sizesMod; h++) {
  2167  000658  0E00               	movlw	0
  2168  00065A  6FD5               	movwf	(sort@h+1)& (0+255),b
  2169  00065C  0E00               	movlw	0
  2170  00065E  6FD4               	movwf	sort@h& (0+255),b
  2171  000660  EF7D  F003         	goto	l2056
  2172  000664                     l2042:
  2173  000664  FFFF               	dw	65535	; assembler added errata NOP
  2174                           
  2175                           ; BSR set to: 2
  2176                           ;main.c: 242:             if (*(p + h) == temp) {
  2177  000666  90D8               	bcf	status,0,c
  2178  000668  35D4               	rlcf	sort@h& (0+255),w,b
  2179  00066A  6ED9               	movwf	fsr2l,c
  2180  00066C  35D5               	rlcf	(sort@h+1)& (0+255),w,b
  2181  00066E  6EDA               	movwf	fsr2h,c
  2182  000670  501F               	movf	sort@p^0,w,c
  2183  000672  26D9               	addwf	fsr2l,f,c
  2184  000674  5020               	movf	(sort@p+1)^0,w,c
  2185  000676  22DA               	addwfc	fsr2h,f,c
  2186  000678  51D2               	movf	sort@temp& (0+255),w,b
  2187  00067A  18DE               	xorwf	postinc2,w,c
  2188  00067C  E107               	bnz	u1251
  2189  00067E  51D3               	movf	(sort@temp+1)& (0+255),w,b
  2190  000680  18DE               	xorwf	postinc2,w,c
  2191  000682  A4D8               	btfss	status,2,c
  2192  000684  EF46  F003         	goto	u1251
  2193  000688  EF49  F003         	goto	u1250
  2194  00068C                     u1251:
  2195  00068C  FFFF               	dw	65535	; assembler added errata NOP
  2196  00068E  EF4E  F003         	goto	l2048
  2197  000692                     u1250:
  2198  000692  FFFF               	dw	65535	; assembler added errata NOP
  2199  000694                     
  2200                           ; BSR set to: 2
  2201                           ;main.c: 244:                 pos = h;
  2202  000694  C2D4  F2C8         	movff	sort@h,sort@pos
  2203  000698  C2D5  F2C9         	movff	sort@h+1,sort@pos+1
  2204  00069C                     l2048:
  2205  00069C  FFFF               	dw	65535	; assembler added errata NOP
  2206                           
  2207                           ; BSR set to: 2
  2208                           ;main.c: 251:             if (*(p + h) < temp) {
  2209  00069E  90D8               	bcf	status,0,c
  2210  0006A0  35D4               	rlcf	sort@h& (0+255),w,b
  2211  0006A2  6ED9               	movwf	fsr2l,c
  2212  0006A4  35D5               	rlcf	(sort@h+1)& (0+255),w,b
  2213  0006A6  6EDA               	movwf	fsr2h,c
  2214  0006A8  501F               	movf	sort@p^0,w,c
  2215  0006AA  26D9               	addwf	fsr2l,f,c
  2216  0006AC  5020               	movf	(sort@p+1)^0,w,c
  2217  0006AE  22DA               	addwfc	fsr2h,f,c
  2218  0006B0  51D2               	movf	sort@temp& (0+255),w,b
  2219  0006B2  5CDE               	subwf	postinc2,w,c
  2220  0006B4  50DE               	movf	postinc2,w,c
  2221  0006B6  0A80               	xorlw	128
  2222  0006B8  6E25               	movwf	(??_sort+2)^0,c
  2223  0006BA  51D3               	movf	(sort@temp+1)& (0+255),w,b
  2224  0006BC  0A80               	xorlw	128
  2225  0006BE  5825               	subwfb	(??_sort+2)^0,w,c
  2226  0006C0  B0D8               	btfsc	status,0,c
  2227  0006C2  EF65  F003         	goto	u1261
  2228  0006C6  EF68  F003         	goto	u1260
  2229  0006CA                     u1261:
  2230  0006CA  FFFF               	dw	65535	; assembler added errata NOP
  2231  0006CC  EF7A  F003         	goto	l2054
  2232  0006D0                     u1260:
  2233  0006D0  FFFF               	dw	65535	; assembler added errata NOP
  2234  0006D2                     
  2235                           ; BSR set to: 2
  2236                           ;main.c: 252:                 temp = *(p + h);
  2237  0006D2  90D8               	bcf	status,0,c
  2238  0006D4  35D4               	rlcf	sort@h& (0+255),w,b
  2239  0006D6  6ED9               	movwf	fsr2l,c
  2240  0006D8  35D5               	rlcf	(sort@h+1)& (0+255),w,b
  2241  0006DA  6EDA               	movwf	fsr2h,c
  2242  0006DC  501F               	movf	sort@p^0,w,c
  2243  0006DE  26D9               	addwf	fsr2l,f,c
  2244  0006E0  5020               	movf	(sort@p+1)^0,w,c
  2245  0006E2  22DA               	addwfc	fsr2h,f,c
  2246  0006E4  CFDE F2D2          	movff	postinc2,sort@temp
  2247  0006E8  CFDD F2D3          	movff	postdec2,sort@temp+1
  2248  0006EC                     
  2249                           ; BSR set to: 2
  2250                           ;main.c: 253:                 pos = h;
  2251  0006EC  C2D4  F2C8         	movff	sort@h,sort@pos
  2252  0006F0  C2D5  F2C9         	movff	sort@h+1,sort@pos+1
  2253  0006F4                     l2054:
  2254  0006F4  FFFF               	dw	65535	; assembler added errata NOP
  2255                           
  2256                           ; BSR set to: 2
  2257                           ;main.c: 255:         }
  2258  0006F6  4BD4               	infsnz	sort@h& (0+255),f,b
  2259  0006F8  2BD5               	incf	(sort@h+1)& (0+255),f,b
  2260  0006FA                     l2056:
  2261  0006FA  FFFF               	dw	65535	; assembler added errata NOP
  2262                           
  2263                           ; BSR set to: 2
  2264  0006FC  51CC               	movf	sort@sizesMod& (0+255),w,b
  2265  0006FE  5DD4               	subwf	sort@h& (0+255),w,b
  2266  000700  51D5               	movf	(sort@h+1)& (0+255),w,b
  2267  000702  0A80               	xorlw	128
  2268  000704  6E23               	movwf	??_sort^0,c
  2269  000706  51CD               	movf	(sort@sizesMod+1)& (0+255),w,b
  2270  000708  0A80               	xorlw	128
  2271  00070A  5823               	subwfb	??_sort^0,w,c
  2272  00070C  A0D8               	btfss	status,0,c
  2273  00070E  EF8B  F003         	goto	u1271
  2274  000712  EF8E  F003         	goto	u1270
  2275  000716                     u1271:
  2276  000716  FFFF               	dw	65535	; assembler added errata NOP
  2277  000718  EF32  F003         	goto	l2042
  2278  00071C                     u1270:
  2279  00071C  FFFF               	dw	65535	; assembler added errata NOP
  2280  00071E                     
  2281                           ; BSR set to: 2
  2282                           ;main.c: 258:         for (int k = pos; k < sizesMod; k++) {
  2283  00071E  C2C8  F2CE         	movff	sort@pos,sort@k
  2284  000722  C2C9  F2CF         	movff	sort@pos+1,sort@k+1
  2285  000726  EFBA  F003         	goto	l2062
  2286  00072A                     l2058:
  2287  00072A  FFFF               	dw	65535	; assembler added errata NOP
  2288                           
  2289                           ; BSR set to: 2
  2290                           ;main.c: 259:             *(p + k) = *(p + (k + 1));
  2291  00072C  C2CE  F023         	movff	sort@k,??_sort
  2292  000730  C2CF  F024         	movff	sort@k+1,??_sort+1
  2293  000734  90D8               	bcf	status,0,c
  2294  000736  3623               	rlcf	??_sort^0,f,c
  2295  000738  3624               	rlcf	(??_sort+1)^0,f,c
  2296  00073A  C01F  F025         	movff	sort@p,??_sort+2
  2297  00073E  C020  F026         	movff	sort@p+1,??_sort+3
  2298  000742  5023               	movf	??_sort^0,w,c
  2299  000744  2625               	addwf	(??_sort+2)^0,f,c
  2300  000746  5024               	movf	(??_sort+1)^0,w,c
  2301  000748  2226               	addwfc	(??_sort+3)^0,f,c
  2302  00074A  0E02               	movlw	2
  2303  00074C  2425               	addwf	(??_sort+2)^0,w,c
  2304  00074E  6ED9               	movwf	fsr2l,c
  2305  000750  0E00               	movlw	0
  2306  000752  2026               	addwfc	(??_sort+3)^0,w,c
  2307  000754  6EDA               	movwf	fsr2h,c
  2308  000756  90D8               	bcf	status,0,c
  2309  000758  35CE               	rlcf	sort@k& (0+255),w,b
  2310  00075A  6EE1               	movwf	fsr1l,c
  2311  00075C  35CF               	rlcf	(sort@k+1)& (0+255),w,b
  2312  00075E  6EE2               	movwf	fsr1h,c
  2313  000760  501F               	movf	sort@p^0,w,c
  2314  000762  26E1               	addwf	fsr1l,f,c
  2315  000764  5020               	movf	(sort@p+1)^0,w,c
  2316  000766  22E2               	addwfc	fsr1h,f,c
  2317  000768  CFDE FFE6          	movff	postinc2,postinc1
  2318  00076C  CFDD FFE5          	movff	postdec2,postdec1
  2319  000770                     
  2320                           ; BSR set to: 2
  2321                           ;main.c: 260:         }
  2322  000770  4BCE               	infsnz	sort@k& (0+255),f,b
  2323  000772  2BCF               	incf	(sort@k+1)& (0+255),f,b
  2324  000774                     l2062:
  2325  000774  FFFF               	dw	65535	; assembler added errata NOP
  2326                           
  2327                           ; BSR set to: 2
  2328  000776  51CC               	movf	sort@sizesMod& (0+255),w,b
  2329  000778  5DCE               	subwf	sort@k& (0+255),w,b
  2330  00077A  51CF               	movf	(sort@k+1)& (0+255),w,b
  2331  00077C  0A80               	xorlw	128
  2332  00077E  6E23               	movwf	??_sort^0,c
  2333  000780  51CD               	movf	(sort@sizesMod+1)& (0+255),w,b
  2334  000782  0A80               	xorlw	128
  2335  000784  5823               	subwfb	??_sort^0,w,c
  2336  000786  A0D8               	btfss	status,0,c
  2337  000788  EFC8  F003         	goto	u1281
  2338  00078C  EFCB  F003         	goto	u1280
  2339  000790                     u1281:
  2340  000790  FFFF               	dw	65535	; assembler added errata NOP
  2341  000792  EF95  F003         	goto	l2058
  2342  000796                     u1280:
  2343  000796  FFFF               	dw	65535	; assembler added errata NOP
  2344  000798                     
  2345                           ; BSR set to: 2
  2346                           ;main.c: 261:         result[nums] = temp;
  2347  000798  90D8               	bcf	status,0,c
  2348  00079A  35CA               	rlcf	sort@nums& (0+255),w,b
  2349  00079C  6ED9               	movwf	fsr2l,c
  2350  00079E  35CB               	rlcf	(sort@nums+1)& (0+255),w,b
  2351  0007A0  6EDA               	movwf	fsr2h,c
  2352  0007A2  0E00               	movlw	low sort@result
  2353  0007A4  26D9               	addwf	fsr2l,f,c
  2354  0007A6  0E02               	movlw	high sort@result
  2355  0007A8  22DA               	addwfc	fsr2h,f,c
  2356  0007AA  C2D2  FFDE         	movff	sort@temp,postinc2
  2357  0007AE  C2D3  FFDD         	movff	sort@temp+1,postdec2
  2358  0007B2                     
  2359                           ; BSR set to: 2
  2360                           ;main.c: 262:         sizesMod--;
  2361  0007B2  07CC               	decf	sort@sizesMod& (0+255),f,b
  2362  0007B4  A0D8               	btfss	status,0,c
  2363  0007B6  07CD               	decf	(sort@sizesMod+1)& (0+255),f,b
  2364  0007B8                     
  2365                           ; BSR set to: 2
  2366                           ;main.c: 263:         nums++;
  2367  0007B8  4BCA               	infsnz	sort@nums& (0+255),f,b
  2368  0007BA  2BCB               	incf	(sort@nums+1)& (0+255),f,b
  2369  0007BC                     
  2370                           ; BSR set to: 2
  2371                           ;main.c: 264:     } while (nums <= sizes - 1);
  2372  0007BC  0EFF               	movlw	255
  2373  0007BE  6E23               	movwf	??_sort^0,c
  2374  0007C0  0EFF               	movlw	255
  2375  0007C2  6E24               	movwf	(??_sort+1)^0,c
  2376  0007C4  C021  F025         	movff	sort@sizes,??_sort+2
  2377  0007C8  C022  F026         	movff	sort@sizes+1,??_sort+3
  2378  0007CC  5023               	movf	??_sort^0,w,c
  2379  0007CE  2625               	addwf	(??_sort+2)^0,f,c
  2380  0007D0  5024               	movf	(??_sort+1)^0,w,c
  2381  0007D2  2226               	addwfc	(??_sort+3)^0,f,c
  2382  0007D4  51CA               	movf	sort@nums& (0+255),w,b
  2383  0007D6  5C25               	subwf	(??_sort+2)^0,w,c
  2384  0007D8  5026               	movf	(??_sort+3)^0,w,c
  2385  0007DA  0A80               	xorlw	128
  2386  0007DC  6E27               	movwf	(??_sort+4)^0,c
  2387  0007DE  51CB               	movf	(sort@nums+1)& (0+255),w,b
  2388  0007E0  0A80               	xorlw	128
  2389  0007E2  5827               	subwfb	(??_sort+4)^0,w,c
  2390  0007E4  B0D8               	btfsc	status,0,c
  2391  0007E6  EFF7  F003         	goto	u1291
  2392  0007EA  EFFA  F003         	goto	u1290
  2393  0007EE                     u1291:
  2394  0007EE  FFFF               	dw	65535	; assembler added errata NOP
  2395  0007F0  EF23  F003         	goto	l2038
  2396  0007F4                     u1290:
  2397  0007F4  FFFF               	dw	65535	; assembler added errata NOP
  2398  0007F6                     
  2399                           ; BSR set to: 2
  2400                           ;main.c: 267:     for (int j = 0; j < sizes; j++) {
  2401  0007F6  0E00               	movlw	0
  2402  0007F8  6FD1               	movwf	(sort@j+1)& (0+255),b
  2403  0007FA  0E00               	movlw	0
  2404  0007FC  6FD0               	movwf	sort@j& (0+255),b
  2405  0007FE  EF1A  F004         	goto	l2078
  2406  000802                     l2074:
  2407  000802  FFFF               	dw	65535	; assembler added errata NOP
  2408                           
  2409                           ; BSR set to: 2
  2410                           ;main.c: 268:         *(p + j) = result[j];
  2411  000804  90D8               	bcf	status,0,c
  2412  000806  35D0               	rlcf	sort@j& (0+255),w,b
  2413  000808  6ED9               	movwf	fsr2l,c
  2414  00080A  35D1               	rlcf	(sort@j+1)& (0+255),w,b
  2415  00080C  6EDA               	movwf	fsr2h,c
  2416  00080E  0E00               	movlw	low sort@result
  2417  000810  26D9               	addwf	fsr2l,f,c
  2418  000812  0E02               	movlw	high sort@result
  2419  000814  22DA               	addwfc	fsr2h,f,c
  2420  000816  90D8               	bcf	status,0,c
  2421  000818  35D0               	rlcf	sort@j& (0+255),w,b
  2422  00081A  6EE1               	movwf	fsr1l,c
  2423  00081C  35D1               	rlcf	(sort@j+1)& (0+255),w,b
  2424  00081E  6EE2               	movwf	fsr1h,c
  2425  000820  501F               	movf	sort@p^0,w,c
  2426  000822  26E1               	addwf	fsr1l,f,c
  2427  000824  5020               	movf	(sort@p+1)^0,w,c
  2428  000826  22E2               	addwfc	fsr1h,f,c
  2429  000828  CFDE FFE6          	movff	postinc2,postinc1
  2430  00082C  CFDD FFE5          	movff	postdec2,postdec1
  2431  000830                     
  2432                           ; BSR set to: 2
  2433                           ;main.c: 269:     }
  2434  000830  4BD0               	infsnz	sort@j& (0+255),f,b
  2435  000832  2BD1               	incf	(sort@j+1)& (0+255),f,b
  2436  000834                     l2078:
  2437  000834  FFFF               	dw	65535	; assembler added errata NOP
  2438                           
  2439                           ; BSR set to: 2
  2440  000836  5021               	movf	sort@sizes^0,w,c
  2441  000838  5DD0               	subwf	sort@j& (0+255),w,b
  2442  00083A  51D1               	movf	(sort@j+1)& (0+255),w,b
  2443  00083C  0A80               	xorlw	128
  2444  00083E  6E23               	movwf	??_sort^0,c
  2445  000840  5022               	movf	(sort@sizes+1)^0,w,c
  2446  000842  0A80               	xorlw	128
  2447  000844  5823               	subwfb	??_sort^0,w,c
  2448  000846  A0D8               	btfss	status,0,c
  2449  000848  EF28  F004         	goto	u1301
  2450  00084C  EF2B  F004         	goto	u1300
  2451  000850                     u1301:
  2452  000850  FFFF               	dw	65535	; assembler added errata NOP
  2453  000852  EF01  F004         	goto	l2074
  2454  000856                     u1300:
  2455  000856  FFFF               	dw	65535	; assembler added errata NOP
  2456  000858                     
  2457                           ; BSR set to: 2
  2458  000858  0012               	return		;funcret
  2459  00085A  FFFF               	dw	65535	; errata NOP
  2460  00085C                     __end_of_sort:
  2461                           	callstack 0
  2462                           
  2463 ;; *************** function _noRepeat *****************
  2464 ;; Defined at:
  2465 ;;		line 199 in file "main.c"
  2466 ;; Parameters:    Size  Location     Type
  2467 ;;  po              2   30[COMRAM] PTR int 
  2468 ;;		 -> NULL(0), queueDown(200), queueUp(200), 
  2469 ;;  sixes           2   32[COMRAM] int 
  2470 ;; Auto vars:     Size  Location     Type
  2471 ;;  shift           2   40[COMRAM] int 
  2472 ;;  t               2   38[COMRAM] int 
  2473 ;;  comp            2   46[COMRAM] int 
  2474 ;;  temp            2   42[COMRAM] int 
  2475 ;;  size            2   44[COMRAM] int 
  2476 ;; Return value:  Size  Location     Type
  2477 ;;                  2   30[COMRAM] int 
  2478 ;; Registers used:
  2479 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2480 ;; Tracked objects:
  2481 ;;		On entry : 0/0
  2482 ;;		On exit  : 0/0
  2483 ;;		Unchanged: 0/0
  2484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2485 ;;      Params:         4       0       0       0       0       0       0
  2486 ;;      Locals:        10       0       0       0       0       0       0
  2487 ;;      Temps:          4       0       0       0       0       0       0
  2488 ;;      Totals:        18       0       0       0       0       0       0
  2489 ;;Total ram usage:       18 bytes
  2490 ;; Hardware stack levels used: 1
  2491 ;; Hardware stack levels required when called: 2
  2492 ;; This function calls:
  2493 ;;		Nothing
  2494 ;; This function is called by:
  2495 ;;		_dataPanelUp
  2496 ;;		_rutine_up
  2497 ;; This function uses a non-reentrant model
  2498 ;;
  2499                           
  2500                           	psect	text6
  2501  0010FE                     __ptext6:
  2502                           	callstack 0
  2503  0010FE                     _noRepeat:
  2504                           	callstack 0
  2505  0010FE  FFFF               	dw	65535	; assembler added errata NOP
  2506  001100                     
  2507                           ;main.c: 200:     int size = sixes;
  2508  001100  C021  F02D         	movff	noRepeat@sixes,noRepeat@size
  2509  001104  C022  F02E         	movff	noRepeat@sixes+1,noRepeat@size+1
  2510  001108                     
  2511                           ;main.c: 208:     for (int temp = 0; temp < size; temp++){
  2512  001108  0E00               	movlw	0
  2513  00110A  6E2C               	movwf	(noRepeat@temp+1)^0,c
  2514  00110C  0E00               	movlw	0
  2515  00110E  6E2B               	movwf	noRepeat@temp^0,c
  2516  001110  EF14  F009         	goto	l2032
  2517  001114                     l2012:
  2518  001114  FFFF               	dw	65535	; assembler added errata NOP
  2519                           
  2520                           ;main.c: 210:         for(int comp = temp + 1; comp < size; comp++){
  2521  001116  0E01               	movlw	1
  2522  001118  242B               	addwf	noRepeat@temp^0,w,c
  2523  00111A  6E2F               	movwf	noRepeat@comp^0,c
  2524  00111C  0E00               	movlw	0
  2525  00111E  202C               	addwfc	(noRepeat@temp+1)^0,w,c
  2526  001120  6E30               	movwf	(noRepeat@comp+1)^0,c
  2527  001122  EF00  F009         	goto	l2028
  2528  001126                     l2014:
  2529  001126  FFFF               	dw	65535	; assembler added errata NOP
  2530                           
  2531                           ;main.c: 212:             if (*(po + temp) == *(po + comp)){
  2532  001128  90D8               	bcf	status,0,c
  2533  00112A  342F               	rlcf	noRepeat@comp^0,w,c
  2534  00112C  6ED9               	movwf	fsr2l,c
  2535  00112E  3430               	rlcf	(noRepeat@comp+1)^0,w,c
  2536  001130  6EDA               	movwf	fsr2h,c
  2537  001132  501F               	movf	noRepeat@po^0,w,c
  2538  001134  26D9               	addwf	fsr2l,f,c
  2539  001136  5020               	movf	(noRepeat@po+1)^0,w,c
  2540  001138  22DA               	addwfc	fsr2h,f,c
  2541  00113A  90D8               	bcf	status,0,c
  2542  00113C  342B               	rlcf	noRepeat@temp^0,w,c
  2543  00113E  6EE1               	movwf	fsr1l,c
  2544  001140  342C               	rlcf	(noRepeat@temp+1)^0,w,c
  2545  001142  6EE2               	movwf	fsr1h,c
  2546  001144  501F               	movf	noRepeat@po^0,w,c
  2547  001146  26E1               	addwf	fsr1l,f,c
  2548  001148  5020               	movf	(noRepeat@po+1)^0,w,c
  2549  00114A  22E2               	addwfc	fsr1h,f,c
  2550  00114C  50DE               	movf	postinc2,w,c
  2551  00114E  18E6               	xorwf	postinc1,w,c
  2552  001150  E107               	bnz	u1211
  2553  001152  50DE               	movf	postinc2,w,c
  2554  001154  18E6               	xorwf	postinc1,w,c
  2555  001156  A4D8               	btfss	status,2,c
  2556  001158  EFB0  F008         	goto	u1211
  2557  00115C  EFB3  F008         	goto	u1210
  2558  001160                     u1211:
  2559  001160  FFFF               	dw	65535	; assembler added errata NOP
  2560  001162  EFFD  F008         	goto	l103
  2561  001166                     u1210:
  2562  001166  FFFF               	dw	65535	; assembler added errata NOP
  2563  001168                     
  2564                           ;main.c: 213:                 int t = comp;
  2565  001168  C02F  F027         	movff	noRepeat@comp,noRepeat@t
  2566  00116C  C030  F028         	movff	noRepeat@comp+1,noRepeat@t+1
  2567                           
  2568                           ;main.c: 215:                 for (int shift = comp; shift < size; shift++){
  2569  001170  C02F  F029         	movff	noRepeat@comp,noRepeat@shift
  2570  001174  C030  F02A         	movff	noRepeat@comp+1,noRepeat@shift+1
  2571  001178  EFE5  F008         	goto	l2024
  2572  00117C                     l2018:
  2573  00117C  FFFF               	dw	65535	; assembler added errata NOP
  2574                           
  2575                           ;main.c: 216:                     *(po + t) = *(po + (shift + 1));
  2576  00117E  C029  F023         	movff	noRepeat@shift,??_noRepeat
  2577  001182  C02A  F024         	movff	noRepeat@shift+1,??_noRepeat+1
  2578  001186  90D8               	bcf	status,0,c
  2579  001188  3623               	rlcf	??_noRepeat^0,f,c
  2580  00118A  3624               	rlcf	(??_noRepeat+1)^0,f,c
  2581  00118C  C01F  F025         	movff	noRepeat@po,??_noRepeat+2
  2582  001190  C020  F026         	movff	noRepeat@po+1,??_noRepeat+3
  2583  001194  5023               	movf	??_noRepeat^0,w,c
  2584  001196  2625               	addwf	(??_noRepeat+2)^0,f,c
  2585  001198  5024               	movf	(??_noRepeat+1)^0,w,c
  2586  00119A  2226               	addwfc	(??_noRepeat+3)^0,f,c
  2587  00119C  0E02               	movlw	2
  2588  00119E  2425               	addwf	(??_noRepeat+2)^0,w,c
  2589  0011A0  6ED9               	movwf	fsr2l,c
  2590  0011A2  0E00               	movlw	0
  2591  0011A4  2026               	addwfc	(??_noRepeat+3)^0,w,c
  2592  0011A6  6EDA               	movwf	fsr2h,c
  2593  0011A8  90D8               	bcf	status,0,c
  2594  0011AA  3427               	rlcf	noRepeat@t^0,w,c
  2595  0011AC  6EE1               	movwf	fsr1l,c
  2596  0011AE  3428               	rlcf	(noRepeat@t+1)^0,w,c
  2597  0011B0  6EE2               	movwf	fsr1h,c
  2598  0011B2  501F               	movf	noRepeat@po^0,w,c
  2599  0011B4  26E1               	addwf	fsr1l,f,c
  2600  0011B6  5020               	movf	(noRepeat@po+1)^0,w,c
  2601  0011B8  22E2               	addwfc	fsr1h,f,c
  2602  0011BA  CFDE FFE6          	movff	postinc2,postinc1
  2603  0011BE  CFDD FFE5          	movff	postdec2,postdec1
  2604  0011C2                     
  2605                           ;main.c: 217:                     t++;
  2606  0011C2  4A27               	infsnz	noRepeat@t^0,f,c
  2607  0011C4  2A28               	incf	(noRepeat@t+1)^0,f,c
  2608  0011C6                     
  2609                           ;main.c: 218:                 }
  2610  0011C6  4A29               	infsnz	noRepeat@shift^0,f,c
  2611  0011C8  2A2A               	incf	(noRepeat@shift+1)^0,f,c
  2612  0011CA                     l2024:
  2613  0011CA  FFFF               	dw	65535	; assembler added errata NOP
  2614  0011CC  502D               	movf	noRepeat@size^0,w,c
  2615  0011CE  5C29               	subwf	noRepeat@shift^0,w,c
  2616  0011D0  502A               	movf	(noRepeat@shift+1)^0,w,c
  2617  0011D2  0A80               	xorlw	128
  2618  0011D4  6E23               	movwf	??_noRepeat^0,c
  2619  0011D6  502E               	movf	(noRepeat@size+1)^0,w,c
  2620  0011D8  0A80               	xorlw	128
  2621  0011DA  5823               	subwfb	??_noRepeat^0,w,c
  2622  0011DC  A0D8               	btfss	status,0,c
  2623  0011DE  EFF3  F008         	goto	u1221
  2624  0011E2  EFF6  F008         	goto	u1220
  2625  0011E6                     u1221:
  2626  0011E6  FFFF               	dw	65535	; assembler added errata NOP
  2627  0011E8  EFBE  F008         	goto	l2018
  2628  0011EC                     u1220:
  2629  0011EC  FFFF               	dw	65535	; assembler added errata NOP
  2630  0011EE                     
  2631                           ;main.c: 219:                 size--;
  2632  0011EE  062D               	decf	noRepeat@size^0,f,c
  2633  0011F0  A0D8               	btfss	status,0,c
  2634  0011F2  062E               	decf	(noRepeat@size+1)^0,f,c
  2635                           
  2636                           ;main.c: 220:                 comp--;
  2637  0011F4  062F               	decf	noRepeat@comp^0,f,c
  2638  0011F6  A0D8               	btfss	status,0,c
  2639  0011F8  0630               	decf	(noRepeat@comp+1)^0,f,c
  2640  0011FA                     l103:
  2641  0011FA  FFFF               	dw	65535	; assembler added errata NOP
  2642                           
  2643                           ;main.c: 224:         }
  2644  0011FC  4A2F               	infsnz	noRepeat@comp^0,f,c
  2645  0011FE  2A30               	incf	(noRepeat@comp+1)^0,f,c
  2646  001200                     l2028:
  2647  001200  FFFF               	dw	65535	; assembler added errata NOP
  2648  001202  502D               	movf	noRepeat@size^0,w,c
  2649  001204  5C2F               	subwf	noRepeat@comp^0,w,c
  2650  001206  5030               	movf	(noRepeat@comp+1)^0,w,c
  2651  001208  0A80               	xorlw	128
  2652  00120A  6E23               	movwf	??_noRepeat^0,c
  2653  00120C  502E               	movf	(noRepeat@size+1)^0,w,c
  2654  00120E  0A80               	xorlw	128
  2655  001210  5823               	subwfb	??_noRepeat^0,w,c
  2656  001212  A0D8               	btfss	status,0,c
  2657  001214  EF0E  F009         	goto	u1231
  2658  001218  EF11  F009         	goto	u1230
  2659  00121C                     u1231:
  2660  00121C  FFFF               	dw	65535	; assembler added errata NOP
  2661  00121E  EF93  F008         	goto	l2014
  2662  001222                     u1230:
  2663  001222  FFFF               	dw	65535	; assembler added errata NOP
  2664  001224                     
  2665                           ;main.c: 225:     }
  2666  001224  4A2B               	infsnz	noRepeat@temp^0,f,c
  2667  001226  2A2C               	incf	(noRepeat@temp+1)^0,f,c
  2668  001228                     l2032:
  2669  001228  FFFF               	dw	65535	; assembler added errata NOP
  2670  00122A  502D               	movf	noRepeat@size^0,w,c
  2671  00122C  5C2B               	subwf	noRepeat@temp^0,w,c
  2672  00122E  502C               	movf	(noRepeat@temp+1)^0,w,c
  2673  001230  0A80               	xorlw	128
  2674  001232  6E23               	movwf	??_noRepeat^0,c
  2675  001234  502E               	movf	(noRepeat@size+1)^0,w,c
  2676  001236  0A80               	xorlw	128
  2677  001238  5823               	subwfb	??_noRepeat^0,w,c
  2678  00123A  A0D8               	btfss	status,0,c
  2679  00123C  EF22  F009         	goto	u1241
  2680  001240  EF25  F009         	goto	u1240
  2681  001244                     u1241:
  2682  001244  FFFF               	dw	65535	; assembler added errata NOP
  2683  001246  EF8A  F008         	goto	l2012
  2684  00124A                     u1240:
  2685  00124A  FFFF               	dw	65535	; assembler added errata NOP
  2686  00124C                     
  2687                           ;main.c: 226:     return size;
  2688  00124C  C02D  F01F         	movff	noRepeat@size,?_noRepeat
  2689  001250  C02E  F020         	movff	noRepeat@size+1,?_noRepeat+1
  2690  001254  0012               	return		;funcret
  2691  001256  FFFF               	dw	65535	; errata NOP
  2692  001258                     __end_of_noRepeat:
  2693                           	callstack 0
  2694                           
  2695 ;; *************** function _modeDown *****************
  2696 ;; Defined at:
  2697 ;;		line 461 in file "main.c"
  2698 ;; Parameters:    Size  Location     Type
  2699 ;;		None
  2700 ;; Auto vars:     Size  Location     Type
  2701 ;;		None
  2702 ;; Return value:  Size  Location     Type
  2703 ;;                  1    wreg      void 
  2704 ;; Registers used:
  2705 ;;		wreg, status,2
  2706 ;; Tracked objects:
  2707 ;;		On entry : 0/0
  2708 ;;		On exit  : 0/0
  2709 ;;		Unchanged: 0/0
  2710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2711 ;;      Params:         0       0       0       0       0       0       0
  2712 ;;      Locals:         0       0       0       0       0       0       0
  2713 ;;      Temps:          0       0       0       0       0       0       0
  2714 ;;      Totals:         0       0       0       0       0       0       0
  2715 ;;Total ram usage:        0 bytes
  2716 ;; Hardware stack levels used: 1
  2717 ;; Hardware stack levels required when called: 2
  2718 ;; This function calls:
  2719 ;;		Nothing
  2720 ;; This function is called by:
  2721 ;;		_rutine_up
  2722 ;; This function uses a non-reentrant model
  2723 ;;
  2724                           
  2725                           	psect	text7
  2726  0013BE                     __ptext7:
  2727                           	callstack 0
  2728  0013BE                     _modeDown:
  2729                           	callstack 0
  2730  0013BE  FFFF               	dw	65535	; assembler added errata NOP
  2731  0013C0                     
  2732                           ;main.c: 462:     modeUp_F = 0;
  2733  0013C0  0E00               	movlw	0
  2734  0013C2  6E4E               	movwf	(_modeUp_F+1)^0,c
  2735  0013C4  0E00               	movlw	0
  2736  0013C6  6E4D               	movwf	_modeUp_F^0,c
  2737                           
  2738                           ;main.c: 463:     modeDown_F = 1;
  2739  0013C8  0E00               	movlw	0
  2740  0013CA  6E4C               	movwf	(_modeDown_F+1)^0,c
  2741  0013CC  0E01               	movlw	1
  2742  0013CE  6E4B               	movwf	_modeDown_F^0,c
  2743                           
  2744                           ;main.c: 465:     callsD = 0;
  2745  0013D0  0E00               	movlw	0
  2746  0013D2  6E58               	movwf	(_callsD+1)^0,c
  2747  0013D4  0E00               	movlw	0
  2748  0013D6  6E57               	movwf	_callsD^0,c
  2749                           
  2750                           ;main.c: 467:     tasksUp = 0;
  2751  0013D8  0E00               	movlw	0
  2752  0013DA  6E5C               	movwf	(_tasksUp+1)^0,c
  2753  0013DC  0E00               	movlw	0
  2754  0013DE  6E5B               	movwf	_tasksUp^0,c
  2755  0013E0  0012               	return		;funcret
  2756  0013E2  FFFF               	dw	65535	; errata NOP
  2757  0013E4                     __end_of_modeDown:
  2758                           	callstack 0
  2759                           
  2760 ;; *************** function _interruptsInit *****************
  2761 ;; Defined at:
  2762 ;;		line 175 in file "main.c"
  2763 ;; Parameters:    Size  Location     Type
  2764 ;;		None
  2765 ;; Auto vars:     Size  Location     Type
  2766 ;;		None
  2767 ;; Return value:  Size  Location     Type
  2768 ;;                  1    wreg      void 
  2769 ;; Registers used:
  2770 ;;		None
  2771 ;; Tracked objects:
  2772 ;;		On entry : 0/0
  2773 ;;		On exit  : 0/0
  2774 ;;		Unchanged: 0/0
  2775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2776 ;;      Params:         0       0       0       0       0       0       0
  2777 ;;      Locals:         0       0       0       0       0       0       0
  2778 ;;      Temps:          0       0       0       0       0       0       0
  2779 ;;      Totals:         0       0       0       0       0       0       0
  2780 ;;Total ram usage:        0 bytes
  2781 ;; Hardware stack levels used: 1
  2782 ;; Hardware stack levels required when called: 2
  2783 ;; This function calls:
  2784 ;;		Nothing
  2785 ;; This function is called by:
  2786 ;;		_main
  2787 ;; This function uses a non-reentrant model
  2788 ;;
  2789                           
  2790                           	psect	text8
  2791  0013E4                     __ptext8:
  2792                           	callstack 0
  2793  0013E4                     _interruptsInit:
  2794                           	callstack 0
  2795  0013E4  FFFF               	dw	65535	; assembler added errata NOP
  2796  0013E6                     
  2797                           ;main.c: 176:     RCONbits.IPEN = 0;
  2798  0013E6  9ED0               	bcf	208,7,c	;volatile
  2799                           
  2800                           ;main.c: 177:     INTCONbits.GIE = 1;
  2801  0013E8  8EF2               	bsf	242,7,c	;volatile
  2802                           
  2803                           ;main.c: 178:     INTCONbits.PEIE = 1;
  2804  0013EA  8CF2               	bsf	242,6,c	;volatile
  2805  0013EC  0012               	return		;funcret
  2806  0013EE  FFFF               	dw	65535	; errata NOP
  2807  0013F0                     __end_of_interruptsInit:
  2808                           	callstack 0
  2809                           
  2810 ;; *************** function _bootAscensor *****************
  2811 ;; Defined at:
  2812 ;;		line 181 in file "main.c"
  2813 ;; Parameters:    Size  Location     Type
  2814 ;;		None
  2815 ;; Auto vars:     Size  Location     Type
  2816 ;;		None
  2817 ;; Return value:  Size  Location     Type
  2818 ;;                  1    wreg      void 
  2819 ;; Registers used:
  2820 ;;		wreg, status,2
  2821 ;; Tracked objects:
  2822 ;;		On entry : 0/0
  2823 ;;		On exit  : 0/0
  2824 ;;		Unchanged: 0/0
  2825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2826 ;;      Params:         0       0       0       0       0       0       0
  2827 ;;      Locals:         0       0       0       0       0       0       0
  2828 ;;      Temps:          0       0       0       0       0       0       0
  2829 ;;      Totals:         0       0       0       0       0       0       0
  2830 ;;Total ram usage:        0 bytes
  2831 ;; Hardware stack levels used: 1
  2832 ;; Hardware stack levels required when called: 2
  2833 ;; This function calls:
  2834 ;;		Nothing
  2835 ;; This function is called by:
  2836 ;;		_main
  2837 ;; This function uses a non-reentrant model
  2838 ;;
  2839                           
  2840                           	psect	text9
  2841  001336                     __ptext9:
  2842                           	callstack 0
  2843  001336                     _bootAscensor:
  2844                           	callstack 0
  2845  001336  FFFF               	dw	65535	; assembler added errata NOP
  2846  001338                     
  2847                           ;main.c: 182:     LATCbits.LC0 = 1;
  2848  001338  808B               	bsf	139,0,c	;volatile
  2849                           
  2850                           ;main.c: 183:     LATCbits.LC1 = 1;
  2851  00133A  828B               	bsf	139,1,c	;volatile
  2852                           
  2853                           ;main.c: 185:     if (PORTDbits.RD4 == 1) {
  2854  00133C  A883               	btfss	131,4,c	;volatile
  2855  00133E  EFA3  F009         	goto	u331
  2856  001342  EFA6  F009         	goto	u330
  2857  001346                     u331:
  2858  001346  FFFF               	dw	65535	; assembler added errata NOP
  2859  001348  EFAE  F009         	goto	l91
  2860  00134C                     u330:
  2861  00134C  FFFF               	dw	65535	; assembler added errata NOP
  2862  00134E                     l1192:
  2863  00134E  FFFF               	dw	65535	; assembler added errata NOP
  2864                           
  2865                           ;main.c: 186:         nowFL = 1;
  2866  001350  0E00               	movlw	0
  2867  001352  6E52               	movwf	(_nowFL+1)^0,c
  2868  001354  0E01               	movlw	1
  2869  001356  6E51               	movwf	_nowFL^0,c
  2870  001358  EFBD  F009         	goto	l92
  2871  00135C                     l91:
  2872  00135C  FFFF               	dw	65535	; assembler added errata NOP
  2873                           
  2874                           ;main.c: 189:         LATCbits.LC0 = 0;
  2875  00135E  908B               	bcf	139,0,c	;volatile
  2876  001360                     l94:
  2877  001360  FFFF               	dw	65535	; assembler added errata NOP
  2878                           
  2879                           ;main.c: 190:         while (!PORTDbits.RD4) {
  2880  001362  A883               	btfss	131,4,c	;volatile
  2881  001364  EFB6  F009         	goto	u341
  2882  001368  EFB9  F009         	goto	u340
  2883  00136C                     u341:
  2884  00136C  FFFF               	dw	65535	; assembler added errata NOP
  2885  00136E  EFB0  F009         	goto	l94
  2886  001372                     u340:
  2887  001372  FFFF               	dw	65535	; assembler added errata NOP
  2888  001374                     
  2889                           ;main.c: 193:         LATCbits.LC0 = 1;
  2890  001374  808B               	bsf	139,0,c	;volatile
  2891  001376  EFA7  F009         	goto	l1192
  2892  00137A                     l92:
  2893  00137A  FFFF               	dw	65535	; assembler added errata NOP
  2894  00137C  0012               	return		;funcret
  2895  00137E  FFFF               	dw	65535	; errata NOP
  2896  001380                     __end_of_bootAscensor:
  2897                           	callstack 0
  2898                           
  2899 ;; *************** function _boot *****************
  2900 ;; Defined at:
  2901 ;;		line 139 in file "main.c"
  2902 ;; Parameters:    Size  Location     Type
  2903 ;;		None
  2904 ;; Auto vars:     Size  Location     Type
  2905 ;;		None
  2906 ;; Return value:  Size  Location     Type
  2907 ;;                  1    wreg      void 
  2908 ;; Registers used:
  2909 ;;		wreg, status,2, status,0
  2910 ;; Tracked objects:
  2911 ;;		On entry : 0/0
  2912 ;;		On exit  : 0/0
  2913 ;;		Unchanged: 0/0
  2914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2915 ;;      Params:         0       0       0       0       0       0       0
  2916 ;;      Locals:         0       0       0       0       0       0       0
  2917 ;;      Temps:          0       0       0       0       0       0       0
  2918 ;;      Totals:         0       0       0       0       0       0       0
  2919 ;;Total ram usage:        0 bytes
  2920 ;; Hardware stack levels used: 1
  2921 ;; Hardware stack levels required when called: 2
  2922 ;; This function calls:
  2923 ;;		Nothing
  2924 ;; This function is called by:
  2925 ;;		_main
  2926 ;; This function uses a non-reentrant model
  2927 ;;
  2928                           
  2929                           	psect	text10
  2930  0012D8                     __ptext10:
  2931                           	callstack 0
  2932  0012D8                     _boot:
  2933                           	callstack 0
  2934  0012D8  FFFF               	dw	65535	; assembler added errata NOP
  2935  0012DA                     
  2936                           ;main.c: 140:     ADCON1 = 0x06;
  2937  0012DA  0E06               	movlw	6
  2938  0012DC  6EC1               	movwf	193,c	;volatile
  2939  0012DE                     
  2940                           ;main.c: 141:     TRISB = 0xFF;
  2941  0012DE  6893               	setf	147,c	;volatile
  2942                           
  2943                           ;main.c: 142:     TRISD = 0xF0;
  2944  0012E0  0EF0               	movlw	240
  2945  0012E2  6E95               	movwf	149,c	;volatile
  2946  0012E4                     
  2947                           ;main.c: 143:     TRISA = 0xFF;
  2948  0012E4  6892               	setf	146,c	;volatile
  2949                           
  2950                           ;main.c: 144:     TRISC = 0xFC;
  2951  0012E6  0EFC               	movlw	252
  2952  0012E8  6E94               	movwf	148,c	;volatile
  2953                           
  2954                           ;main.c: 147:     tasksDown = 0;
  2955  0012EA  0E00               	movlw	0
  2956  0012EC  6E5E               	movwf	(_tasksDown+1)^0,c
  2957  0012EE  0E00               	movlw	0
  2958  0012F0  6E5D               	movwf	_tasksDown^0,c
  2959                           
  2960                           ;main.c: 148:     tasksUp = 0;
  2961  0012F2  0E00               	movlw	0
  2962  0012F4  6E5C               	movwf	(_tasksUp+1)^0,c
  2963  0012F6  0E00               	movlw	0
  2964  0012F8  6E5B               	movwf	_tasksUp^0,c
  2965                           
  2966                           ;main.c: 149:     calls = 0;
  2967  0012FA  0E00               	movlw	0
  2968  0012FC  6E5A               	movwf	(_calls+1)^0,c
  2969  0012FE  0E00               	movlw	0
  2970  001300  6E59               	movwf	_calls^0,c
  2971                           
  2972                           ;main.c: 150:     callsD = 0;
  2973  001302  0E00               	movlw	0
  2974  001304  6E58               	movwf	(_callsD+1)^0,c
  2975  001306  0E00               	movlw	0
  2976  001308  6E57               	movwf	_callsD^0,c
  2977                           
  2978                           ;main.c: 151:     callFL_up = 0;
  2979  00130A  0E00               	movlw	0
  2980  00130C  6E56               	movwf	(_callFL_up+1)^0,c
  2981  00130E  0E00               	movlw	0
  2982  001310  6E55               	movwf	_callFL_up^0,c
  2983                           
  2984                           ;main.c: 152:     nowFL = 0;
  2985  001312  0E00               	movlw	0
  2986  001314  6E52               	movwf	(_nowFL+1)^0,c
  2987  001316  0E00               	movlw	0
  2988  001318  6E51               	movwf	_nowFL^0,c
  2989                           
  2990                           ;main.c: 155:     modeUp_F = 0;
  2991  00131A  0E00               	movlw	0
  2992  00131C  6E4E               	movwf	(_modeUp_F+1)^0,c
  2993  00131E  0E00               	movlw	0
  2994  001320  6E4D               	movwf	_modeUp_F^0,c
  2995                           
  2996                           ;main.c: 156:     modeDown_F = 0;
  2997  001322  0E00               	movlw	0
  2998  001324  6E4C               	movwf	(_modeDown_F+1)^0,c
  2999  001326  0E00               	movlw	0
  3000  001328  6E4B               	movwf	_modeDown_F^0,c
  3001  00132A                     
  3002                           ;main.c: 172:     UpTasks = &queueUp[0];
  3003  00132A  0E00               	movlw	low _queueUp
  3004  00132C  6E5F               	movwf	_UpTasks^0,c
  3005  00132E  0E03               	movlw	high _queueUp
  3006  001330  6E60               	movwf	(_UpTasks+1)^0,c
  3007  001332  0012               	return		;funcret
  3008  001334  FFFF               	dw	65535	; errata NOP
  3009  001336                     __end_of_boot:
  3010                           	callstack 0
  3011                           
  3012 ;; *************** function _ISR *****************
  3013 ;; Defined at:
  3014 ;;		line 569 in file "main.c"
  3015 ;; Parameters:    Size  Location     Type
  3016 ;;		None
  3017 ;; Auto vars:     Size  Location     Type
  3018 ;;  si              2   28[COMRAM] int 
  3019 ;;  si              2   26[COMRAM] int 
  3020 ;;  si              2   24[COMRAM] int 
  3021 ;; Return value:  Size  Location     Type
  3022 ;;                  1    wreg      void 
  3023 ;; Registers used:
  3024 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3025 ;; Tracked objects:
  3026 ;;		On entry : 0/0
  3027 ;;		On exit  : 0/0
  3028 ;;		Unchanged: 0/0
  3029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3030 ;;      Params:         0       0       0       0       0       0       0
  3031 ;;      Locals:         6       0       0       0       0       0       0
  3032 ;;      Temps:          6       0       0       0       0       0       0
  3033 ;;      Totals:        12       0       0       0       0       0       0
  3034 ;;Total ram usage:       12 bytes
  3035 ;; Hardware stack levels used: 1
  3036 ;; Hardware stack levels required when called: 1
  3037 ;; This function calls:
  3038 ;;		i2_noRepeat
  3039 ;;		i2_sort
  3040 ;; This function is called by:
  3041 ;;		Interrupt level 2
  3042 ;; This function uses a non-reentrant model
  3043 ;;
  3044                           
  3045                           	psect	intcode
  3046  000008                     __pintcode:
  3047                           	callstack 0
  3048  000008                     _ISR:
  3049                           	callstack 0
  3050  000008  FFFF               	dw	65535	; assembler added errata NOP
  3051                           
  3052                           ;incstack = 0
  3053  00000A  8261               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3054  00000C  CFE1 F015          	movff	fsr1l,??_ISR+2
  3055  000010  CFE2 F016          	movff	fsr1h,??_ISR+3
  3056  000014  CFD9 F017          	movff	fsr2l,??_ISR+4
  3057  000018  CFDA F018          	movff	fsr2h,??_ISR+5
  3058  00001C                     
  3059                           ;main.c: 571:     switch (PORTB) {
  3060  00001C  EF4D  F001         	goto	i2l1942
  3061  000020                     i2l1874:
  3062  000020  FFFF               	dw	65535	; assembler added errata NOP
  3063                           
  3064                           ;main.c: 573:             if (modeUp_F){
  3065  000022  504D               	movf	_modeUp_F^0,w,c
  3066  000024  104E               	iorwf	(_modeUp_F+1)^0,w,c
  3067  000026  B4D8               	btfsc	status,2,c
  3068  000028  EF18  F000         	goto	i2u112_41
  3069  00002C  EF1B  F000         	goto	i2u112_40
  3070  000030                     i2u112_41:
  3071  000030  FFFF               	dw	65535	; assembler added errata NOP
  3072  000032  EF7C  F001         	goto	i2l250
  3073  000036                     i2u112_40:
  3074  000036  FFFF               	dw	65535	; assembler added errata NOP
  3075  000038                     
  3076                           ;main.c: 574:                     if (nowFL < 1){
  3077  000038  BE52               	btfsc	(_nowFL+1)^0,7,c
  3078  00003A  EF2A  F000         	goto	i2u113_40
  3079  00003E  5052               	movf	(_nowFL+1)^0,w,c
  3080  000040  E106               	bnz	i2u113_41
  3081  000042  0451               	decf	_nowFL^0,w,c
  3082  000044  B0D8               	btfsc	status,0,c
  3083  000046  EF27  F000         	goto	i2u113_41
  3084  00004A  EF2A  F000         	goto	i2u113_40
  3085  00004E                     i2u113_41:
  3086  00004E  FFFF               	dw	65535	; assembler added errata NOP
  3087  000050  EF7C  F001         	goto	i2l250
  3088  000054                     i2u113_40:
  3089  000054  FFFF               	dw	65535	; assembler added errata NOP
  3090  000056                     
  3091                           ;main.c: 575:                         queueUp[tasksUp] = 1;
  3092  000056  90D8               	bcf	status,0,c
  3093  000058  345B               	rlcf	_tasksUp^0,w,c
  3094  00005A  6ED9               	movwf	fsr2l,c
  3095  00005C  345C               	rlcf	(_tasksUp+1)^0,w,c
  3096  00005E  6EDA               	movwf	fsr2h,c
  3097  000060  0E00               	movlw	low _queueUp
  3098  000062  26D9               	addwf	fsr2l,f,c
  3099  000064  0E03               	movlw	high _queueUp
  3100  000066  22DA               	addwfc	fsr2h,f,c
  3101  000068  0E01               	movlw	1
  3102  00006A  6EDE               	movwf	postinc2,c
  3103  00006C  0E00               	movlw	0
  3104  00006E  6EDD               	movwf	postdec2,c
  3105  000070                     
  3106                           ;main.c: 576:                         tasksUp++;
  3107  000070  4A5B               	infsnz	_tasksUp^0,f,c
  3108  000072  2A5C               	incf	(_tasksUp+1)^0,f,c
  3109  000074                     
  3110                           ;main.c: 577:                         sort(&queueUp[0], tasksUp);
  3111  000074  0E00               	movlw	low _queueUp
  3112  000076  6E01               	movwf	i2sort@p^0,c
  3113  000078  0E03               	movlw	high _queueUp
  3114  00007A  6E02               	movwf	(i2sort@p+1)^0,c
  3115  00007C  C05B  F003         	movff	_tasksUp,i2sort@sizes
  3116  000080  C05C  F004         	movff	_tasksUp+1,i2sort@sizes+1
  3117  000084  EC2E  F004         	call	i2_sort	;wreg free
  3118  000088                     
  3119                           ;main.c: 578:                         int si = noRepeat(UpTasks, tasksUp);
  3120  000088  C05F  F001         	movff	_UpTasks,i2noRepeat@po
  3121  00008C  C060  F002         	movff	_UpTasks+1,i2noRepeat@po+1
  3122  000090  C05B  F003         	movff	_tasksUp,i2noRepeat@sixes
  3123  000094  C05C  F004         	movff	_tasksUp+1,i2noRepeat@sixes+1
  3124  000098  EC24  F007         	call	i2_noRepeat	;wreg free
  3125  00009C  C001  F019         	movff	?i2_noRepeat,ISR@si
  3126  0000A0  C002  F01A         	movff	?i2_noRepeat+1,ISR@si+1
  3127  0000A4                     
  3128                           ;main.c: 579:                         tasksUp = si;
  3129  0000A4  C019  F05B         	movff	ISR@si,_tasksUp
  3130  0000A8  C01A  F05C         	movff	ISR@si+1,_tasksUp+1
  3131  0000AC  EF7C  F001         	goto	i2l250
  3132  0000B0                     i2l1888:
  3133  0000B0  FFFF               	dw	65535	; assembler added errata NOP
  3134                           
  3135                           ;main.c: 586:             if (modeUp_F){
  3136  0000B2  504D               	movf	_modeUp_F^0,w,c
  3137  0000B4  104E               	iorwf	(_modeUp_F+1)^0,w,c
  3138  0000B6  B4D8               	btfsc	status,2,c
  3139  0000B8  EF60  F000         	goto	i2u114_41
  3140  0000BC  EF63  F000         	goto	i2u114_40
  3141  0000C0                     i2u114_41:
  3142  0000C0  FFFF               	dw	65535	; assembler added errata NOP
  3143  0000C2  EF7C  F001         	goto	i2l250
  3144  0000C6                     i2u114_40:
  3145  0000C6  FFFF               	dw	65535	; assembler added errata NOP
  3146  0000C8                     
  3147                           ;main.c: 587:                     if (nowFL < 2){
  3148  0000C8  BE52               	btfsc	(_nowFL+1)^0,7,c
  3149  0000CA  EF73  F000         	goto	i2u115_40
  3150  0000CE  5052               	movf	(_nowFL+1)^0,w,c
  3151  0000D0  E107               	bnz	i2u115_41
  3152  0000D2  0E02               	movlw	2
  3153  0000D4  5C51               	subwf	_nowFL^0,w,c
  3154  0000D6  B0D8               	btfsc	status,0,c
  3155  0000D8  EF70  F000         	goto	i2u115_41
  3156  0000DC  EF73  F000         	goto	i2u115_40
  3157  0000E0                     i2u115_41:
  3158  0000E0  FFFF               	dw	65535	; assembler added errata NOP
  3159  0000E2  EF7C  F001         	goto	i2l250
  3160  0000E6                     i2u115_40:
  3161  0000E6  FFFF               	dw	65535	; assembler added errata NOP
  3162  0000E8                     
  3163                           ;main.c: 588:                         queueUp[tasksUp] = 2;
  3164  0000E8  90D8               	bcf	status,0,c
  3165  0000EA  345B               	rlcf	_tasksUp^0,w,c
  3166  0000EC  6ED9               	movwf	fsr2l,c
  3167  0000EE  345C               	rlcf	(_tasksUp+1)^0,w,c
  3168  0000F0  6EDA               	movwf	fsr2h,c
  3169  0000F2  0E00               	movlw	low _queueUp
  3170  0000F4  26D9               	addwf	fsr2l,f,c
  3171  0000F6  0E03               	movlw	high _queueUp
  3172  0000F8  22DA               	addwfc	fsr2h,f,c
  3173  0000FA  0E02               	movlw	2
  3174  0000FC  6EDE               	movwf	postinc2,c
  3175  0000FE  0E00               	movlw	0
  3176  000100  6EDD               	movwf	postdec2,c
  3177  000102                     
  3178                           ;main.c: 589:                         tasksUp++;
  3179  000102  4A5B               	infsnz	_tasksUp^0,f,c
  3180  000104  2A5C               	incf	(_tasksUp+1)^0,f,c
  3181  000106                     
  3182                           ;main.c: 591:                         sort(&queueUp[0], tasksUp);
  3183  000106  0E00               	movlw	low _queueUp
  3184  000108  6E01               	movwf	i2sort@p^0,c
  3185  00010A  0E03               	movlw	high _queueUp
  3186  00010C  6E02               	movwf	(i2sort@p+1)^0,c
  3187  00010E  C05B  F003         	movff	_tasksUp,i2sort@sizes
  3188  000112  C05C  F004         	movff	_tasksUp+1,i2sort@sizes+1
  3189  000116  EC2E  F004         	call	i2_sort	;wreg free
  3190  00011A                     
  3191                           ;main.c: 592:                         int si = noRepeat(&queueUp[0], tasksUp);
  3192  00011A  0E00               	movlw	low _queueUp
  3193  00011C  6E01               	movwf	i2noRepeat@po^0,c
  3194  00011E  0E03               	movlw	high _queueUp
  3195  000120  6E02               	movwf	(i2noRepeat@po+1)^0,c
  3196  000122  C05B  F003         	movff	_tasksUp,i2noRepeat@sixes
  3197  000126  C05C  F004         	movff	_tasksUp+1,i2noRepeat@sixes+1
  3198  00012A  EC24  F007         	call	i2_noRepeat	;wreg free
  3199  00012E  C001  F01B         	movff	?i2_noRepeat,ISR@si_547
  3200  000132  C002  F01C         	movff	?i2_noRepeat+1,ISR@si_547+1
  3201  000136                     
  3202                           ;main.c: 593:                         tasksUp = si;
  3203  000136  C01B  F05B         	movff	ISR@si_547,_tasksUp
  3204  00013A  C01C  F05C         	movff	ISR@si_547+1,_tasksUp+1
  3205  00013E  EF7C  F001         	goto	i2l250
  3206  000142                     i2l1902:
  3207  000142  FFFF               	dw	65535	; assembler added errata NOP
  3208                           
  3209                           ;main.c: 599:             if (modeUp_F){
  3210  000144  504D               	movf	_modeUp_F^0,w,c
  3211  000146  104E               	iorwf	(_modeUp_F+1)^0,w,c
  3212  000148  B4D8               	btfsc	status,2,c
  3213  00014A  EFA9  F000         	goto	i2u116_41
  3214  00014E  EFAC  F000         	goto	i2u116_40
  3215  000152                     i2u116_41:
  3216  000152  FFFF               	dw	65535	; assembler added errata NOP
  3217  000154  EF7C  F001         	goto	i2l250
  3218  000158                     i2u116_40:
  3219  000158  FFFF               	dw	65535	; assembler added errata NOP
  3220  00015A                     
  3221                           ;main.c: 600:                     callsInUp[callsD] = 2;
  3222  00015A  90D8               	bcf	status,0,c
  3223  00015C  3457               	rlcf	_callsD^0,w,c
  3224  00015E  6ED9               	movwf	fsr2l,c
  3225  000160  3458               	rlcf	(_callsD+1)^0,w,c
  3226  000162  6EDA               	movwf	fsr2h,c
  3227  000164  0E00               	movlw	low _callsInUp
  3228  000166  26D9               	addwf	fsr2l,f,c
  3229  000168  0E05               	movlw	high _callsInUp
  3230  00016A  22DA               	addwfc	fsr2h,f,c
  3231  00016C  0E02               	movlw	2
  3232  00016E  6EDE               	movwf	postinc2,c
  3233  000170  0E00               	movlw	0
  3234  000172  6EDD               	movwf	postdec2,c
  3235  000174                     
  3236                           ;main.c: 601:                     callsD++;
  3237  000174  4A57               	infsnz	_callsD^0,f,c
  3238  000176  2A58               	incf	(_callsD+1)^0,f,c
  3239  000178                     
  3240                           ;main.c: 602:                     down2_f = 1;
  3241  000178  0E00               	movlw	0
  3242  00017A  6E3A               	movwf	(_down2_f+1)^0,c
  3243  00017C  0E01               	movlw	1
  3244  00017E  6E39               	movwf	_down2_f^0,c
  3245  000180  EF7C  F001         	goto	i2l250
  3246  000184                     i2l1910:
  3247  000184  FFFF               	dw	65535	; assembler added errata NOP
  3248                           
  3249                           ;main.c: 611:             if (modeUp_F){
  3250  000186  504D               	movf	_modeUp_F^0,w,c
  3251  000188  104E               	iorwf	(_modeUp_F+1)^0,w,c
  3252  00018A  B4D8               	btfsc	status,2,c
  3253  00018C  EFCA  F000         	goto	i2u117_41
  3254  000190  EFCD  F000         	goto	i2u117_40
  3255  000194                     i2u117_41:
  3256  000194  FFFF               	dw	65535	; assembler added errata NOP
  3257  000196  EF7C  F001         	goto	i2l250
  3258  00019A                     i2u117_40:
  3259  00019A  FFFF               	dw	65535	; assembler added errata NOP
  3260  00019C                     
  3261                           ;main.c: 612:                     if (nowFL < 3){
  3262  00019C  BE52               	btfsc	(_nowFL+1)^0,7,c
  3263  00019E  EFDD  F000         	goto	i2u118_40
  3264  0001A2  5052               	movf	(_nowFL+1)^0,w,c
  3265  0001A4  E107               	bnz	i2u118_41
  3266  0001A6  0E03               	movlw	3
  3267  0001A8  5C51               	subwf	_nowFL^0,w,c
  3268  0001AA  B0D8               	btfsc	status,0,c
  3269  0001AC  EFDA  F000         	goto	i2u118_41
  3270  0001B0  EFDD  F000         	goto	i2u118_40
  3271  0001B4                     i2u118_41:
  3272  0001B4  FFFF               	dw	65535	; assembler added errata NOP
  3273  0001B6  EF7C  F001         	goto	i2l250
  3274  0001BA                     i2u118_40:
  3275  0001BA  FFFF               	dw	65535	; assembler added errata NOP
  3276  0001BC                     
  3277                           ;main.c: 613:                         queueUp[tasksUp] = 3;
  3278  0001BC  90D8               	bcf	status,0,c
  3279  0001BE  345B               	rlcf	_tasksUp^0,w,c
  3280  0001C0  6ED9               	movwf	fsr2l,c
  3281  0001C2  345C               	rlcf	(_tasksUp+1)^0,w,c
  3282  0001C4  6EDA               	movwf	fsr2h,c
  3283  0001C6  0E00               	movlw	low _queueUp
  3284  0001C8  26D9               	addwf	fsr2l,f,c
  3285  0001CA  0E03               	movlw	high _queueUp
  3286  0001CC  22DA               	addwfc	fsr2h,f,c
  3287  0001CE  0E03               	movlw	3
  3288  0001D0  6EDE               	movwf	postinc2,c
  3289  0001D2  0E00               	movlw	0
  3290  0001D4  6EDD               	movwf	postdec2,c
  3291  0001D6                     
  3292                           ;main.c: 614:                         tasksUp++;
  3293  0001D6  4A5B               	infsnz	_tasksUp^0,f,c
  3294  0001D8  2A5C               	incf	(_tasksUp+1)^0,f,c
  3295  0001DA                     
  3296                           ;main.c: 615:                         sort(&queueUp[0], tasksUp);
  3297  0001DA  0E00               	movlw	low _queueUp
  3298  0001DC  6E01               	movwf	i2sort@p^0,c
  3299  0001DE  0E03               	movlw	high _queueUp
  3300  0001E0  6E02               	movwf	(i2sort@p+1)^0,c
  3301  0001E2  C05B  F003         	movff	_tasksUp,i2sort@sizes
  3302  0001E6  C05C  F004         	movff	_tasksUp+1,i2sort@sizes+1
  3303  0001EA  EC2E  F004         	call	i2_sort	;wreg free
  3304  0001EE                     
  3305                           ;main.c: 616:                         int si = noRepeat(&queueUp[0], tasksUp);
  3306  0001EE  0E00               	movlw	low _queueUp
  3307  0001F0  6E01               	movwf	i2noRepeat@po^0,c
  3308  0001F2  0E03               	movlw	high _queueUp
  3309  0001F4  6E02               	movwf	(i2noRepeat@po+1)^0,c
  3310  0001F6  C05B  F003         	movff	_tasksUp,i2noRepeat@sixes
  3311  0001FA  C05C  F004         	movff	_tasksUp+1,i2noRepeat@sixes+1
  3312  0001FE  EC24  F007         	call	i2_noRepeat	;wreg free
  3313  000202  C001  F01D         	movff	?i2_noRepeat,ISR@si_548
  3314  000206  C002  F01E         	movff	?i2_noRepeat+1,ISR@si_548+1
  3315  00020A                     
  3316                           ;main.c: 617:                         tasksUp = si;
  3317  00020A  C01D  F05B         	movff	ISR@si_548,_tasksUp
  3318  00020E  C01E  F05C         	movff	ISR@si_548+1,_tasksUp+1
  3319  000212  EF7C  F001         	goto	i2l250
  3320  000216                     i2l1924:
  3321  000216  FFFF               	dw	65535	; assembler added errata NOP
  3322                           
  3323                           ;main.c: 623:             if (modeUp_F){
  3324  000218  504D               	movf	_modeUp_F^0,w,c
  3325  00021A  104E               	iorwf	(_modeUp_F+1)^0,w,c
  3326  00021C  B4D8               	btfsc	status,2,c
  3327  00021E  EF13  F001         	goto	i2u119_41
  3328  000222  EF16  F001         	goto	i2u119_40
  3329  000226                     i2u119_41:
  3330  000226  FFFF               	dw	65535	; assembler added errata NOP
  3331  000228  EF7C  F001         	goto	i2l250
  3332  00022C                     i2u119_40:
  3333  00022C  FFFF               	dw	65535	; assembler added errata NOP
  3334  00022E                     
  3335                           ;main.c: 624:                     callsInUp[callsD] = 3;
  3336  00022E  90D8               	bcf	status,0,c
  3337  000230  3457               	rlcf	_callsD^0,w,c
  3338  000232  6ED9               	movwf	fsr2l,c
  3339  000234  3458               	rlcf	(_callsD+1)^0,w,c
  3340  000236  6EDA               	movwf	fsr2h,c
  3341  000238  0E00               	movlw	low _callsInUp
  3342  00023A  26D9               	addwf	fsr2l,f,c
  3343  00023C  0E05               	movlw	high _callsInUp
  3344  00023E  22DA               	addwfc	fsr2h,f,c
  3345  000240  0E03               	movlw	3
  3346  000242  6EDE               	movwf	postinc2,c
  3347  000244  0E00               	movlw	0
  3348  000246  6EDD               	movwf	postdec2,c
  3349  000248                     
  3350                           ;main.c: 625:                     callsD++;
  3351  000248  4A57               	infsnz	_callsD^0,f,c
  3352  00024A  2A58               	incf	(_callsD+1)^0,f,c
  3353  00024C                     
  3354                           ;main.c: 626:                     down3_f = 1;
  3355  00024C  0E00               	movlw	0
  3356  00024E  6E36               	movwf	(_down3_f+1)^0,c
  3357  000250  0E01               	movlw	1
  3358  000252  6E35               	movwf	_down3_f^0,c
  3359  000254  EF7C  F001         	goto	i2l250
  3360  000258                     i2l1932:
  3361  000258  FFFF               	dw	65535	; assembler added errata NOP
  3362                           
  3363                           ;main.c: 631:             if (modeUp_F){
  3364  00025A  504D               	movf	_modeUp_F^0,w,c
  3365  00025C  104E               	iorwf	(_modeUp_F+1)^0,w,c
  3366  00025E  B4D8               	btfsc	status,2,c
  3367  000260  EF34  F001         	goto	i2u120_41
  3368  000264  EF37  F001         	goto	i2u120_40
  3369  000268                     i2u120_41:
  3370  000268  FFFF               	dw	65535	; assembler added errata NOP
  3371  00026A  EF7C  F001         	goto	i2l250
  3372  00026E                     i2u120_40:
  3373  00026E  FFFF               	dw	65535	; assembler added errata NOP
  3374  000270                     
  3375                           ;main.c: 632:                     callsInUp[callsD] = 4;
  3376  000270  90D8               	bcf	status,0,c
  3377  000272  3457               	rlcf	_callsD^0,w,c
  3378  000274  6ED9               	movwf	fsr2l,c
  3379  000276  3458               	rlcf	(_callsD+1)^0,w,c
  3380  000278  6EDA               	movwf	fsr2h,c
  3381  00027A  0E00               	movlw	low _callsInUp
  3382  00027C  26D9               	addwf	fsr2l,f,c
  3383  00027E  0E05               	movlw	high _callsInUp
  3384  000280  22DA               	addwfc	fsr2h,f,c
  3385  000282  0E04               	movlw	4
  3386  000284  6EDE               	movwf	postinc2,c
  3387  000286  0E00               	movlw	0
  3388  000288  6EDD               	movwf	postdec2,c
  3389  00028A                     
  3390                           ;main.c: 633:                     callsD++;
  3391  00028A  4A57               	infsnz	_callsD^0,f,c
  3392  00028C  2A58               	incf	(_callsD+1)^0,f,c
  3393  00028E                     
  3394                           ;main.c: 634:                     down4_f = 1;
  3395  00028E  0E00               	movlw	0
  3396  000290  6E34               	movwf	(_down4_f+1)^0,c
  3397  000292  0E01               	movlw	1
  3398  000294  6E33               	movwf	_down4_f^0,c
  3399  000296  EF7C  F001         	goto	i2l250
  3400  00029A                     i2l1942:
  3401  00029A  FFFF               	dw	65535	; assembler added errata NOP
  3402  00029C  5081               	movf	129,w,c	;volatile
  3403  00029E  6E13               	movwf	??_ISR^0,c
  3404  0002A0  6A14               	clrf	(??_ISR+1)^0,c
  3405                           
  3406                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3407                           ; Switch size 1, requested type "simple"
  3408                           ; Number of cases is 1, Range of values is 0 to 0
  3409                           ; switch strategies available:
  3410                           ; Name         Instructions Cycles
  3411                           ; simple_byte            4     3 (average)
  3412                           ;	Chosen strategy is simple_byte
  3413  0002A2  5014               	movf	(??_ISR+1)^0,w,c
  3414  0002A4  0A00               	xorlw	0	; case 0
  3415  0002A6  B4D8               	btfsc	status,2,c
  3416  0002A8  EF58  F001         	goto	i2l2414
  3417  0002AC  EF7C  F001         	goto	i2l250
  3418  0002B0                     i2l2414:
  3419  0002B0  FFFF               	dw	65535	; assembler added errata NOP
  3420                           
  3421                           ; Switch size 1, requested type "simple"
  3422                           ; Number of cases is 8, Range of values is 1 to 128
  3423                           ; switch strategies available:
  3424                           ; Name         Instructions Cycles
  3425                           ; simple_byte           25    13 (average)
  3426                           ;	Chosen strategy is simple_byte
  3427  0002B2  5013               	movf	??_ISR^0,w,c
  3428  0002B4  0A01               	xorlw	1	; case 1
  3429  0002B6  B4D8               	btfsc	status,2,c
  3430  0002B8  EF10  F000         	goto	i2l1874
  3431  0002BC  0A03               	xorlw	3	; case 2
  3432  0002BE  B4D8               	btfsc	status,2,c
  3433  0002C0  EF58  F000         	goto	i2l1888
  3434  0002C4  0A06               	xorlw	6	; case 4
  3435  0002C6  B4D8               	btfsc	status,2,c
  3436  0002C8  EFA1  F000         	goto	i2l1902
  3437  0002CC  0A0C               	xorlw	12	; case 8
  3438  0002CE  B4D8               	btfsc	status,2,c
  3439  0002D0  EF7C  F001         	goto	i2l250
  3440  0002D4  0A18               	xorlw	24	; case 16
  3441  0002D6  B4D8               	btfsc	status,2,c
  3442  0002D8  EFC2  F000         	goto	i2l1910
  3443  0002DC  0A30               	xorlw	48	; case 32
  3444  0002DE  B4D8               	btfsc	status,2,c
  3445  0002E0  EF0B  F001         	goto	i2l1924
  3446  0002E4  0A60               	xorlw	96	; case 64
  3447  0002E6  B4D8               	btfsc	status,2,c
  3448  0002E8  EF2C  F001         	goto	i2l1932
  3449  0002EC  0AC0               	xorlw	192	; case 128
  3450  0002EE  B4D8               	btfsc	status,2,c
  3451  0002F0  EF7C  F001         	goto	i2l250
  3452  0002F4  EF7C  F001         	goto	i2l250
  3453  0002F8                     i2l250:
  3454  0002F8  FFFF               	dw	65535	; assembler added errata NOP
  3455  0002FA  C018  FFDA         	movff	??_ISR+5,fsr2h
  3456  0002FE  C017  FFD9         	movff	??_ISR+4,fsr2l
  3457  000302  C016  FFE2         	movff	??_ISR+3,fsr1h
  3458  000306  C015  FFE1         	movff	??_ISR+2,fsr1l
  3459  00030A  9261               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3460  00030C  0011               	retfie		f
  3461  00030E  FFFF               	dw	65535	; errata NOP
  3462  000310                     __end_of_ISR:
  3463                           	callstack 0
  3464                           
  3465 ;; *************** function i2_sort *****************
  3466 ;; Defined at:
  3467 ;;		line 230 in file "main.c"
  3468 ;; Parameters:    Size  Location     Type
  3469 ;;  p               2    0[COMRAM] PTR int 
  3470 ;;		 -> queueDown(200), queueUp(200), 
  3471 ;;  sizes           2    2[COMRAM] int 
  3472 ;; Auto vars:     Size  Location     Type
  3473 ;;  result        200    0[BANK1 ] int [100]
  3474 ;;  h               2  212[BANK1 ] int 
  3475 ;;  temp            2  210[BANK1 ] int 
  3476 ;;  j               2  208[BANK1 ] int 
  3477 ;;  k               2  206[BANK1 ] int 
  3478 ;;  sizesMod        2  204[BANK1 ] int 
  3479 ;;  nums            2  202[BANK1 ] int 
  3480 ;;  pos             2  200[BANK1 ] int 
  3481 ;; Return value:  Size  Location     Type
  3482 ;;                  1    wreg      void 
  3483 ;; Registers used:
  3484 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3485 ;; Tracked objects:
  3486 ;;		On entry : 0/0
  3487 ;;		On exit  : 0/0
  3488 ;;		Unchanged: 0/0
  3489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3490 ;;      Params:         4       0       0       0       0       0       0
  3491 ;;      Locals:         0       0     214       0       0       0       0
  3492 ;;      Temps:          5       0       0       0       0       0       0
  3493 ;;      Totals:         9       0     214       0       0       0       0
  3494 ;;Total ram usage:      223 bytes
  3495 ;; Hardware stack levels used: 1
  3496 ;; This function calls:
  3497 ;;		Nothing
  3498 ;; This function is called by:
  3499 ;;		_ISR
  3500 ;; This function uses a non-reentrant model
  3501 ;;
  3502                           
  3503                           	psect	text12
  3504  00085C                     __ptext12:
  3505                           	callstack 0
  3506  00085C                     i2_sort:
  3507                           	callstack 0
  3508  00085C  FFFF               	dw	65535	; assembler added errata NOP
  3509  00085E                     
  3510                           ;main.c: 231:     int temp, nums = 0, pos = 0, sizesMod = sizes;
  3511  00085E  0E00               	movlw	0
  3512  000860  0101               	movlb	1	; () banked
  3513  000862  6FCB               	movwf	(i2sort@nums+1)& (0+255),b
  3514  000864  0E00               	movlw	0
  3515  000866  6FCA               	movwf	i2sort@nums& (0+255),b
  3516  000868  0E00               	movlw	0
  3517  00086A  6FC9               	movwf	(i2sort@pos+1)& (0+255),b
  3518  00086C  0E00               	movlw	0
  3519  00086E  6FC8               	movwf	i2sort@pos& (0+255),b
  3520  000870                     
  3521                           ; BSR set to: 1
  3522  000870  C003  F1CC         	movff	i2sort@sizes,i2sort@sizesMod
  3523  000874  C004  F1CD         	movff	i2sort@sizes+1,i2sort@sizesMod+1
  3524  000878                     i2l1808:
  3525  000878  FFFF               	dw	65535	; assembler added errata NOP
  3526                           
  3527                           ; BSR set to: 1
  3528                           ;main.c: 238:         temp = *(p + 0);
  3529  00087A  C001  FFD9         	movff	i2sort@p,fsr2l
  3530  00087E  C002  FFDA         	movff	i2sort@p+1,fsr2h
  3531  000882  CFDE F1D2          	movff	postinc2,i2sort@temp
  3532  000886  CFDD F1D3          	movff	postdec2,i2sort@temp+1
  3533  00088A                     
  3534                           ; BSR set to: 1
  3535                           ;main.c: 240:         for (int h = 0; h < sizesMod; h++) {
  3536  00088A  0E00               	movlw	0
  3537  00088C  6FD5               	movwf	(i2sort@h+1)& (0+255),b
  3538  00088E  0E00               	movlw	0
  3539  000890  6FD4               	movwf	i2sort@h& (0+255),b
  3540  000892  EF96  F004         	goto	i2l1826
  3541  000896                     i2l1812:
  3542  000896  FFFF               	dw	65535	; assembler added errata NOP
  3543                           
  3544                           ; BSR set to: 1
  3545                           ;main.c: 242:             if (*(p + h) == temp) {
  3546  000898  90D8               	bcf	status,0,c
  3547  00089A  35D4               	rlcf	i2sort@h& (0+255),w,b
  3548  00089C  6ED9               	movwf	fsr2l,c
  3549  00089E  35D5               	rlcf	(i2sort@h+1)& (0+255),w,b
  3550  0008A0  6EDA               	movwf	fsr2h,c
  3551  0008A2  5001               	movf	i2sort@p^0,w,c
  3552  0008A4  26D9               	addwf	fsr2l,f,c
  3553  0008A6  5002               	movf	(i2sort@p+1)^0,w,c
  3554  0008A8  22DA               	addwfc	fsr2h,f,c
  3555  0008AA  51D2               	movf	i2sort@temp& (0+255),w,b
  3556  0008AC  18DE               	xorwf	postinc2,w,c
  3557  0008AE  E107               	bnz	i2u103_41
  3558  0008B0  51D3               	movf	(i2sort@temp+1)& (0+255),w,b
  3559  0008B2  18DE               	xorwf	postinc2,w,c
  3560  0008B4  A4D8               	btfss	status,2,c
  3561  0008B6  EF5F  F004         	goto	i2u103_41
  3562  0008BA  EF62  F004         	goto	i2u103_40
  3563  0008BE                     i2u103_41:
  3564  0008BE  FFFF               	dw	65535	; assembler added errata NOP
  3565  0008C0  EF67  F004         	goto	i2l1818
  3566  0008C4                     i2u103_40:
  3567  0008C4  FFFF               	dw	65535	; assembler added errata NOP
  3568  0008C6                     
  3569                           ; BSR set to: 1
  3570                           ;main.c: 244:                 pos = h;
  3571  0008C6  C1D4  F1C8         	movff	i2sort@h,i2sort@pos
  3572  0008CA  C1D5  F1C9         	movff	i2sort@h+1,i2sort@pos+1
  3573  0008CE                     i2l1818:
  3574  0008CE  FFFF               	dw	65535	; assembler added errata NOP
  3575                           
  3576                           ; BSR set to: 1
  3577                           ;main.c: 251:             if (*(p + h) < temp) {
  3578  0008D0  90D8               	bcf	status,0,c
  3579  0008D2  35D4               	rlcf	i2sort@h& (0+255),w,b
  3580  0008D4  6ED9               	movwf	fsr2l,c
  3581  0008D6  35D5               	rlcf	(i2sort@h+1)& (0+255),w,b
  3582  0008D8  6EDA               	movwf	fsr2h,c
  3583  0008DA  5001               	movf	i2sort@p^0,w,c
  3584  0008DC  26D9               	addwf	fsr2l,f,c
  3585  0008DE  5002               	movf	(i2sort@p+1)^0,w,c
  3586  0008E0  22DA               	addwfc	fsr2h,f,c
  3587  0008E2  51D2               	movf	i2sort@temp& (0+255),w,b
  3588  0008E4  5CDE               	subwf	postinc2,w,c
  3589  0008E6  50DE               	movf	postinc2,w,c
  3590  0008E8  0A80               	xorlw	128
  3591  0008EA  6E07               	movwf	(??i2_sort+2)^0,c
  3592  0008EC  51D3               	movf	(i2sort@temp+1)& (0+255),w,b
  3593  0008EE  0A80               	xorlw	128
  3594  0008F0  5807               	subwfb	(??i2_sort+2)^0,w,c
  3595  0008F2  B0D8               	btfsc	status,0,c
  3596  0008F4  EF7E  F004         	goto	i2u104_41
  3597  0008F8  EF81  F004         	goto	i2u104_40
  3598  0008FC                     i2u104_41:
  3599  0008FC  FFFF               	dw	65535	; assembler added errata NOP
  3600  0008FE  EF93  F004         	goto	i2l1824
  3601  000902                     i2u104_40:
  3602  000902  FFFF               	dw	65535	; assembler added errata NOP
  3603  000904                     
  3604                           ; BSR set to: 1
  3605                           ;main.c: 252:                 temp = *(p + h);
  3606  000904  90D8               	bcf	status,0,c
  3607  000906  35D4               	rlcf	i2sort@h& (0+255),w,b
  3608  000908  6ED9               	movwf	fsr2l,c
  3609  00090A  35D5               	rlcf	(i2sort@h+1)& (0+255),w,b
  3610  00090C  6EDA               	movwf	fsr2h,c
  3611  00090E  5001               	movf	i2sort@p^0,w,c
  3612  000910  26D9               	addwf	fsr2l,f,c
  3613  000912  5002               	movf	(i2sort@p+1)^0,w,c
  3614  000914  22DA               	addwfc	fsr2h,f,c
  3615  000916  CFDE F1D2          	movff	postinc2,i2sort@temp
  3616  00091A  CFDD F1D3          	movff	postdec2,i2sort@temp+1
  3617  00091E                     
  3618                           ; BSR set to: 1
  3619                           ;main.c: 253:                 pos = h;
  3620  00091E  C1D4  F1C8         	movff	i2sort@h,i2sort@pos
  3621  000922  C1D5  F1C9         	movff	i2sort@h+1,i2sort@pos+1
  3622  000926                     i2l1824:
  3623  000926  FFFF               	dw	65535	; assembler added errata NOP
  3624                           
  3625                           ; BSR set to: 1
  3626                           ;main.c: 255:         }
  3627  000928  4BD4               	infsnz	i2sort@h& (0+255),f,b
  3628  00092A  2BD5               	incf	(i2sort@h+1)& (0+255),f,b
  3629  00092C                     i2l1826:
  3630  00092C  FFFF               	dw	65535	; assembler added errata NOP
  3631                           
  3632                           ; BSR set to: 1
  3633  00092E  51CC               	movf	i2sort@sizesMod& (0+255),w,b
  3634  000930  5DD4               	subwf	i2sort@h& (0+255),w,b
  3635  000932  51D5               	movf	(i2sort@h+1)& (0+255),w,b
  3636  000934  0A80               	xorlw	128
  3637  000936  6E05               	movwf	??i2_sort^0,c
  3638  000938  51CD               	movf	(i2sort@sizesMod+1)& (0+255),w,b
  3639  00093A  0A80               	xorlw	128
  3640  00093C  5805               	subwfb	??i2_sort^0,w,c
  3641  00093E  A0D8               	btfss	status,0,c
  3642  000940  EFA4  F004         	goto	i2u105_41
  3643  000944  EFA7  F004         	goto	i2u105_40
  3644  000948                     i2u105_41:
  3645  000948  FFFF               	dw	65535	; assembler added errata NOP
  3646  00094A  EF4B  F004         	goto	i2l1812
  3647  00094E                     i2u105_40:
  3648  00094E  FFFF               	dw	65535	; assembler added errata NOP
  3649  000950                     
  3650                           ; BSR set to: 1
  3651                           ;main.c: 258:         for (int k = pos; k < sizesMod; k++) {
  3652  000950  C1C8  F1CE         	movff	i2sort@pos,i2sort@k
  3653  000954  C1C9  F1CF         	movff	i2sort@pos+1,i2sort@k+1
  3654  000958  EFD3  F004         	goto	i2l1832
  3655  00095C                     i2l1828:
  3656  00095C  FFFF               	dw	65535	; assembler added errata NOP
  3657                           
  3658                           ; BSR set to: 1
  3659                           ;main.c: 259:             *(p + k) = *(p + (k + 1));
  3660  00095E  C1CE  F005         	movff	i2sort@k,??i2_sort
  3661  000962  C1CF  F006         	movff	i2sort@k+1,??i2_sort+1
  3662  000966  90D8               	bcf	status,0,c
  3663  000968  3605               	rlcf	??i2_sort^0,f,c
  3664  00096A  3606               	rlcf	(??i2_sort+1)^0,f,c
  3665  00096C  C001  F007         	movff	i2sort@p,??i2_sort+2
  3666  000970  C002  F008         	movff	i2sort@p+1,??i2_sort+3
  3667  000974  5005               	movf	??i2_sort^0,w,c
  3668  000976  2607               	addwf	(??i2_sort+2)^0,f,c
  3669  000978  5006               	movf	(??i2_sort+1)^0,w,c
  3670  00097A  2208               	addwfc	(??i2_sort+3)^0,f,c
  3671  00097C  0E02               	movlw	2
  3672  00097E  2407               	addwf	(??i2_sort+2)^0,w,c
  3673  000980  6ED9               	movwf	fsr2l,c
  3674  000982  0E00               	movlw	0
  3675  000984  2008               	addwfc	(??i2_sort+3)^0,w,c
  3676  000986  6EDA               	movwf	fsr2h,c
  3677  000988  90D8               	bcf	status,0,c
  3678  00098A  35CE               	rlcf	i2sort@k& (0+255),w,b
  3679  00098C  6EE1               	movwf	fsr1l,c
  3680  00098E  35CF               	rlcf	(i2sort@k+1)& (0+255),w,b
  3681  000990  6EE2               	movwf	fsr1h,c
  3682  000992  5001               	movf	i2sort@p^0,w,c
  3683  000994  26E1               	addwf	fsr1l,f,c
  3684  000996  5002               	movf	(i2sort@p+1)^0,w,c
  3685  000998  22E2               	addwfc	fsr1h,f,c
  3686  00099A  CFDE FFE6          	movff	postinc2,postinc1
  3687  00099E  CFDD FFE5          	movff	postdec2,postdec1
  3688  0009A2                     
  3689                           ; BSR set to: 1
  3690                           ;main.c: 260:         }
  3691  0009A2  4BCE               	infsnz	i2sort@k& (0+255),f,b
  3692  0009A4  2BCF               	incf	(i2sort@k+1)& (0+255),f,b
  3693  0009A6                     i2l1832:
  3694  0009A6  FFFF               	dw	65535	; assembler added errata NOP
  3695                           
  3696                           ; BSR set to: 1
  3697  0009A8  51CC               	movf	i2sort@sizesMod& (0+255),w,b
  3698  0009AA  5DCE               	subwf	i2sort@k& (0+255),w,b
  3699  0009AC  51CF               	movf	(i2sort@k+1)& (0+255),w,b
  3700  0009AE  0A80               	xorlw	128
  3701  0009B0  6E05               	movwf	??i2_sort^0,c
  3702  0009B2  51CD               	movf	(i2sort@sizesMod+1)& (0+255),w,b
  3703  0009B4  0A80               	xorlw	128
  3704  0009B6  5805               	subwfb	??i2_sort^0,w,c
  3705  0009B8  A0D8               	btfss	status,0,c
  3706  0009BA  EFE1  F004         	goto	i2u106_41
  3707  0009BE  EFE4  F004         	goto	i2u106_40
  3708  0009C2                     i2u106_41:
  3709  0009C2  FFFF               	dw	65535	; assembler added errata NOP
  3710  0009C4  EFAE  F004         	goto	i2l1828
  3711  0009C8                     i2u106_40:
  3712  0009C8  FFFF               	dw	65535	; assembler added errata NOP
  3713  0009CA                     
  3714                           ; BSR set to: 1
  3715                           ;main.c: 261:         result[nums] = temp;
  3716  0009CA  90D8               	bcf	status,0,c
  3717  0009CC  35CA               	rlcf	i2sort@nums& (0+255),w,b
  3718  0009CE  6ED9               	movwf	fsr2l,c
  3719  0009D0  35CB               	rlcf	(i2sort@nums+1)& (0+255),w,b
  3720  0009D2  6EDA               	movwf	fsr2h,c
  3721  0009D4  0E00               	movlw	low i2sort@result
  3722  0009D6  26D9               	addwf	fsr2l,f,c
  3723  0009D8  0E01               	movlw	high i2sort@result
  3724  0009DA  22DA               	addwfc	fsr2h,f,c
  3725  0009DC  C1D2  FFDE         	movff	i2sort@temp,postinc2
  3726  0009E0  C1D3  FFDD         	movff	i2sort@temp+1,postdec2
  3727  0009E4                     
  3728                           ; BSR set to: 1
  3729                           ;main.c: 262:         sizesMod--;
  3730  0009E4  07CC               	decf	i2sort@sizesMod& (0+255),f,b
  3731  0009E6  A0D8               	btfss	status,0,c
  3732  0009E8  07CD               	decf	(i2sort@sizesMod+1)& (0+255),f,b
  3733  0009EA                     
  3734                           ; BSR set to: 1
  3735                           ;main.c: 263:         nums++;
  3736  0009EA  4BCA               	infsnz	i2sort@nums& (0+255),f,b
  3737  0009EC  2BCB               	incf	(i2sort@nums+1)& (0+255),f,b
  3738  0009EE                     
  3739                           ; BSR set to: 1
  3740                           ;main.c: 264:     } while (nums <= sizes - 1);
  3741  0009EE  0EFF               	movlw	255
  3742  0009F0  6E05               	movwf	??i2_sort^0,c
  3743  0009F2  0EFF               	movlw	255
  3744  0009F4  6E06               	movwf	(??i2_sort+1)^0,c
  3745  0009F6  C003  F007         	movff	i2sort@sizes,??i2_sort+2
  3746  0009FA  C004  F008         	movff	i2sort@sizes+1,??i2_sort+3
  3747  0009FE  5005               	movf	??i2_sort^0,w,c
  3748  000A00  2607               	addwf	(??i2_sort+2)^0,f,c
  3749  000A02  5006               	movf	(??i2_sort+1)^0,w,c
  3750  000A04  2208               	addwfc	(??i2_sort+3)^0,f,c
  3751  000A06  51CA               	movf	i2sort@nums& (0+255),w,b
  3752  000A08  5C07               	subwf	(??i2_sort+2)^0,w,c
  3753  000A0A  5008               	movf	(??i2_sort+3)^0,w,c
  3754  000A0C  0A80               	xorlw	128
  3755  000A0E  6E09               	movwf	(??i2_sort+4)^0,c
  3756  000A10  51CB               	movf	(i2sort@nums+1)& (0+255),w,b
  3757  000A12  0A80               	xorlw	128
  3758  000A14  5809               	subwfb	(??i2_sort+4)^0,w,c
  3759  000A16  B0D8               	btfsc	status,0,c
  3760  000A18  EF10  F005         	goto	i2u107_41
  3761  000A1C  EF13  F005         	goto	i2u107_40
  3762  000A20                     i2u107_41:
  3763  000A20  FFFF               	dw	65535	; assembler added errata NOP
  3764  000A22  EF3C  F004         	goto	i2l1808
  3765  000A26                     i2u107_40:
  3766  000A26  FFFF               	dw	65535	; assembler added errata NOP
  3767  000A28                     
  3768                           ; BSR set to: 1
  3769                           ;main.c: 267:     for (int j = 0; j < sizes; j++) {
  3770  000A28  0E00               	movlw	0
  3771  000A2A  6FD1               	movwf	(i2sort@j+1)& (0+255),b
  3772  000A2C  0E00               	movlw	0
  3773  000A2E  6FD0               	movwf	i2sort@j& (0+255),b
  3774  000A30  EF33  F005         	goto	i2l1848
  3775  000A34                     i2l1844:
  3776  000A34  FFFF               	dw	65535	; assembler added errata NOP
  3777                           
  3778                           ; BSR set to: 1
  3779                           ;main.c: 268:         *(p + j) = result[j];
  3780  000A36  90D8               	bcf	status,0,c
  3781  000A38  35D0               	rlcf	i2sort@j& (0+255),w,b
  3782  000A3A  6ED9               	movwf	fsr2l,c
  3783  000A3C  35D1               	rlcf	(i2sort@j+1)& (0+255),w,b
  3784  000A3E  6EDA               	movwf	fsr2h,c
  3785  000A40  0E00               	movlw	low i2sort@result
  3786  000A42  26D9               	addwf	fsr2l,f,c
  3787  000A44  0E01               	movlw	high i2sort@result
  3788  000A46  22DA               	addwfc	fsr2h,f,c
  3789  000A48  90D8               	bcf	status,0,c
  3790  000A4A  35D0               	rlcf	i2sort@j& (0+255),w,b
  3791  000A4C  6EE1               	movwf	fsr1l,c
  3792  000A4E  35D1               	rlcf	(i2sort@j+1)& (0+255),w,b
  3793  000A50  6EE2               	movwf	fsr1h,c
  3794  000A52  5001               	movf	i2sort@p^0,w,c
  3795  000A54  26E1               	addwf	fsr1l,f,c
  3796  000A56  5002               	movf	(i2sort@p+1)^0,w,c
  3797  000A58  22E2               	addwfc	fsr1h,f,c
  3798  000A5A  CFDE FFE6          	movff	postinc2,postinc1
  3799  000A5E  CFDD FFE5          	movff	postdec2,postdec1
  3800  000A62                     
  3801                           ; BSR set to: 1
  3802                           ;main.c: 269:     }
  3803  000A62  4BD0               	infsnz	i2sort@j& (0+255),f,b
  3804  000A64  2BD1               	incf	(i2sort@j+1)& (0+255),f,b
  3805  000A66                     i2l1848:
  3806  000A66  FFFF               	dw	65535	; assembler added errata NOP
  3807                           
  3808                           ; BSR set to: 1
  3809  000A68  5003               	movf	i2sort@sizes^0,w,c
  3810  000A6A  5DD0               	subwf	i2sort@j& (0+255),w,b
  3811  000A6C  51D1               	movf	(i2sort@j+1)& (0+255),w,b
  3812  000A6E  0A80               	xorlw	128
  3813  000A70  6E05               	movwf	??i2_sort^0,c
  3814  000A72  5004               	movf	(i2sort@sizes+1)^0,w,c
  3815  000A74  0A80               	xorlw	128
  3816  000A76  5805               	subwfb	??i2_sort^0,w,c
  3817  000A78  A0D8               	btfss	status,0,c
  3818  000A7A  EF41  F005         	goto	i2u108_41
  3819  000A7E  EF44  F005         	goto	i2u108_40
  3820  000A82                     i2u108_41:
  3821  000A82  FFFF               	dw	65535	; assembler added errata NOP
  3822  000A84  EF1A  F005         	goto	i2l1844
  3823  000A88                     i2u108_40:
  3824  000A88  FFFF               	dw	65535	; assembler added errata NOP
  3825  000A8A                     
  3826                           ; BSR set to: 1
  3827  000A8A  0012               	return		;funcret
  3828  000A8C  FFFF               	dw	65535	; errata NOP
  3829  000A8E                     __end_ofi2_sort:
  3830                           	callstack 0
  3831                           
  3832 ;; *************** function i2_noRepeat *****************
  3833 ;; Defined at:
  3834 ;;		line 199 in file "main.c"
  3835 ;; Parameters:    Size  Location     Type
  3836 ;;  po              2    0[COMRAM] PTR int 
  3837 ;;		 -> NULL(0), queueDown(200), queueUp(200), 
  3838 ;;  sixes           2    2[COMRAM] int 
  3839 ;; Auto vars:     Size  Location     Type
  3840 ;;  comp            2   16[COMRAM] int 
  3841 ;;  size            2   14[COMRAM] int 
  3842 ;;  temp            2   12[COMRAM] int 
  3843 ;;  shift           2   10[COMRAM] int 
  3844 ;;  t               2    8[COMRAM] int 
  3845 ;; Return value:  Size  Location     Type
  3846 ;;                  2    0[COMRAM] int 
  3847 ;; Registers used:
  3848 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3849 ;; Tracked objects:
  3850 ;;		On entry : 0/0
  3851 ;;		On exit  : 0/0
  3852 ;;		Unchanged: 0/0
  3853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3854 ;;      Params:         4       0       0       0       0       0       0
  3855 ;;      Locals:        10       0       0       0       0       0       0
  3856 ;;      Temps:          4       0       0       0       0       0       0
  3857 ;;      Totals:        18       0       0       0       0       0       0
  3858 ;;Total ram usage:       18 bytes
  3859 ;; Hardware stack levels used: 1
  3860 ;; This function calls:
  3861 ;;		Nothing
  3862 ;; This function is called by:
  3863 ;;		_ISR
  3864 ;; This function uses a non-reentrant model
  3865 ;;
  3866                           
  3867                           	psect	text13
  3868  000E48                     __ptext13:
  3869                           	callstack 0
  3870  000E48                     i2_noRepeat:
  3871                           	callstack 0
  3872  000E48  FFFF               	dw	65535	; assembler added errata NOP
  3873  000E4A                     
  3874                           ;main.c: 200:     int size = sixes;
  3875  000E4A  C003  F00F         	movff	i2noRepeat@sixes,i2noRepeat@size
  3876  000E4E  C004  F010         	movff	i2noRepeat@sixes+1,i2noRepeat@size+1
  3877  000E52                     
  3878                           ;main.c: 208:     for (int temp = 0; temp < size; temp++){
  3879  000E52  0E00               	movlw	0
  3880  000E54  6E0E               	movwf	(i2noRepeat@temp+1)^0,c
  3881  000E56  0E00               	movlw	0
  3882  000E58  6E0D               	movwf	i2noRepeat@temp^0,c
  3883  000E5A  EFB9  F007         	goto	i2l1802
  3884  000E5E                     i2l1782:
  3885  000E5E  FFFF               	dw	65535	; assembler added errata NOP
  3886                           
  3887                           ;main.c: 210:         for(int comp = temp + 1; comp < size; comp++){
  3888  000E60  0E01               	movlw	1
  3889  000E62  240D               	addwf	i2noRepeat@temp^0,w,c
  3890  000E64  6E11               	movwf	i2noRepeat@comp^0,c
  3891  000E66  0E00               	movlw	0
  3892  000E68  200E               	addwfc	(i2noRepeat@temp+1)^0,w,c
  3893  000E6A  6E12               	movwf	(i2noRepeat@comp+1)^0,c
  3894  000E6C  EFA5  F007         	goto	i2l1798
  3895  000E70                     i2l1784:
  3896  000E70  FFFF               	dw	65535	; assembler added errata NOP
  3897                           
  3898                           ;main.c: 212:             if (*(po + temp) == *(po + comp)){
  3899  000E72  90D8               	bcf	status,0,c
  3900  000E74  3411               	rlcf	i2noRepeat@comp^0,w,c
  3901  000E76  6ED9               	movwf	fsr2l,c
  3902  000E78  3412               	rlcf	(i2noRepeat@comp+1)^0,w,c
  3903  000E7A  6EDA               	movwf	fsr2h,c
  3904  000E7C  5001               	movf	i2noRepeat@po^0,w,c
  3905  000E7E  26D9               	addwf	fsr2l,f,c
  3906  000E80  5002               	movf	(i2noRepeat@po+1)^0,w,c
  3907  000E82  22DA               	addwfc	fsr2h,f,c
  3908  000E84  90D8               	bcf	status,0,c
  3909  000E86  340D               	rlcf	i2noRepeat@temp^0,w,c
  3910  000E88  6EE1               	movwf	fsr1l,c
  3911  000E8A  340E               	rlcf	(i2noRepeat@temp+1)^0,w,c
  3912  000E8C  6EE2               	movwf	fsr1h,c
  3913  000E8E  5001               	movf	i2noRepeat@po^0,w,c
  3914  000E90  26E1               	addwf	fsr1l,f,c
  3915  000E92  5002               	movf	(i2noRepeat@po+1)^0,w,c
  3916  000E94  22E2               	addwfc	fsr1h,f,c
  3917  000E96  50DE               	movf	postinc2,w,c
  3918  000E98  18E6               	xorwf	postinc1,w,c
  3919  000E9A  E107               	bnz	i2u99_41
  3920  000E9C  50DE               	movf	postinc2,w,c
  3921  000E9E  18E6               	xorwf	postinc1,w,c
  3922  000EA0  A4D8               	btfss	status,2,c
  3923  000EA2  EF55  F007         	goto	i2u99_41
  3924  000EA6  EF58  F007         	goto	i2u99_40
  3925  000EAA                     i2u99_41:
  3926  000EAA  FFFF               	dw	65535	; assembler added errata NOP
  3927  000EAC  EFA2  F007         	goto	i2l103
  3928  000EB0                     i2u99_40:
  3929  000EB0  FFFF               	dw	65535	; assembler added errata NOP
  3930  000EB2                     
  3931                           ;main.c: 213:                 int t = comp;
  3932  000EB2  C011  F009         	movff	i2noRepeat@comp,i2noRepeat@t
  3933  000EB6  C012  F00A         	movff	i2noRepeat@comp+1,i2noRepeat@t+1
  3934                           
  3935                           ;main.c: 215:                 for (int shift = comp; shift < size; shift++){
  3936  000EBA  C011  F00B         	movff	i2noRepeat@comp,i2noRepeat@shift
  3937  000EBE  C012  F00C         	movff	i2noRepeat@comp+1,i2noRepeat@shift+1
  3938  000EC2  EF8A  F007         	goto	i2l1794
  3939  000EC6                     i2l1788:
  3940  000EC6  FFFF               	dw	65535	; assembler added errata NOP
  3941                           
  3942                           ;main.c: 216:                     *(po + t) = *(po + (shift + 1));
  3943  000EC8  C00B  F005         	movff	i2noRepeat@shift,??i2_noRepeat
  3944  000ECC  C00C  F006         	movff	i2noRepeat@shift+1,??i2_noRepeat+1
  3945  000ED0  90D8               	bcf	status,0,c
  3946  000ED2  3605               	rlcf	??i2_noRepeat^0,f,c
  3947  000ED4  3606               	rlcf	(??i2_noRepeat+1)^0,f,c
  3948  000ED6  C001  F007         	movff	i2noRepeat@po,??i2_noRepeat+2
  3949  000EDA  C002  F008         	movff	i2noRepeat@po+1,??i2_noRepeat+3
  3950  000EDE  5005               	movf	??i2_noRepeat^0,w,c
  3951  000EE0  2607               	addwf	(??i2_noRepeat+2)^0,f,c
  3952  000EE2  5006               	movf	(??i2_noRepeat+1)^0,w,c
  3953  000EE4  2208               	addwfc	(??i2_noRepeat+3)^0,f,c
  3954  000EE6  0E02               	movlw	2
  3955  000EE8  2407               	addwf	(??i2_noRepeat+2)^0,w,c
  3956  000EEA  6ED9               	movwf	fsr2l,c
  3957  000EEC  0E00               	movlw	0
  3958  000EEE  2008               	addwfc	(??i2_noRepeat+3)^0,w,c
  3959  000EF0  6EDA               	movwf	fsr2h,c
  3960  000EF2  90D8               	bcf	status,0,c
  3961  000EF4  3409               	rlcf	i2noRepeat@t^0,w,c
  3962  000EF6  6EE1               	movwf	fsr1l,c
  3963  000EF8  340A               	rlcf	(i2noRepeat@t+1)^0,w,c
  3964  000EFA  6EE2               	movwf	fsr1h,c
  3965  000EFC  5001               	movf	i2noRepeat@po^0,w,c
  3966  000EFE  26E1               	addwf	fsr1l,f,c
  3967  000F00  5002               	movf	(i2noRepeat@po+1)^0,w,c
  3968  000F02  22E2               	addwfc	fsr1h,f,c
  3969  000F04  CFDE FFE6          	movff	postinc2,postinc1
  3970  000F08  CFDD FFE5          	movff	postdec2,postdec1
  3971  000F0C                     
  3972                           ;main.c: 217:                     t++;
  3973  000F0C  4A09               	infsnz	i2noRepeat@t^0,f,c
  3974  000F0E  2A0A               	incf	(i2noRepeat@t+1)^0,f,c
  3975  000F10                     
  3976                           ;main.c: 218:                 }
  3977  000F10  4A0B               	infsnz	i2noRepeat@shift^0,f,c
  3978  000F12  2A0C               	incf	(i2noRepeat@shift+1)^0,f,c
  3979  000F14                     i2l1794:
  3980  000F14  FFFF               	dw	65535	; assembler added errata NOP
  3981  000F16  500F               	movf	i2noRepeat@size^0,w,c
  3982  000F18  5C0B               	subwf	i2noRepeat@shift^0,w,c
  3983  000F1A  500C               	movf	(i2noRepeat@shift+1)^0,w,c
  3984  000F1C  0A80               	xorlw	128
  3985  000F1E  6E05               	movwf	??i2_noRepeat^0,c
  3986  000F20  5010               	movf	(i2noRepeat@size+1)^0,w,c
  3987  000F22  0A80               	xorlw	128
  3988  000F24  5805               	subwfb	??i2_noRepeat^0,w,c
  3989  000F26  A0D8               	btfss	status,0,c
  3990  000F28  EF98  F007         	goto	i2u100_41
  3991  000F2C  EF9B  F007         	goto	i2u100_40
  3992  000F30                     i2u100_41:
  3993  000F30  FFFF               	dw	65535	; assembler added errata NOP
  3994  000F32  EF63  F007         	goto	i2l1788
  3995  000F36                     i2u100_40:
  3996  000F36  FFFF               	dw	65535	; assembler added errata NOP
  3997  000F38                     
  3998                           ;main.c: 219:                 size--;
  3999  000F38  060F               	decf	i2noRepeat@size^0,f,c
  4000  000F3A  A0D8               	btfss	status,0,c
  4001  000F3C  0610               	decf	(i2noRepeat@size+1)^0,f,c
  4002                           
  4003                           ;main.c: 220:                 comp--;
  4004  000F3E  0611               	decf	i2noRepeat@comp^0,f,c
  4005  000F40  A0D8               	btfss	status,0,c
  4006  000F42  0612               	decf	(i2noRepeat@comp+1)^0,f,c
  4007  000F44                     i2l103:
  4008  000F44  FFFF               	dw	65535	; assembler added errata NOP
  4009                           
  4010                           ;main.c: 224:         }
  4011  000F46  4A11               	infsnz	i2noRepeat@comp^0,f,c
  4012  000F48  2A12               	incf	(i2noRepeat@comp+1)^0,f,c
  4013  000F4A                     i2l1798:
  4014  000F4A  FFFF               	dw	65535	; assembler added errata NOP
  4015  000F4C  500F               	movf	i2noRepeat@size^0,w,c
  4016  000F4E  5C11               	subwf	i2noRepeat@comp^0,w,c
  4017  000F50  5012               	movf	(i2noRepeat@comp+1)^0,w,c
  4018  000F52  0A80               	xorlw	128
  4019  000F54  6E05               	movwf	??i2_noRepeat^0,c
  4020  000F56  5010               	movf	(i2noRepeat@size+1)^0,w,c
  4021  000F58  0A80               	xorlw	128
  4022  000F5A  5805               	subwfb	??i2_noRepeat^0,w,c
  4023  000F5C  A0D8               	btfss	status,0,c
  4024  000F5E  EFB3  F007         	goto	i2u101_41
  4025  000F62  EFB6  F007         	goto	i2u101_40
  4026  000F66                     i2u101_41:
  4027  000F66  FFFF               	dw	65535	; assembler added errata NOP
  4028  000F68  EF38  F007         	goto	i2l1784
  4029  000F6C                     i2u101_40:
  4030  000F6C  FFFF               	dw	65535	; assembler added errata NOP
  4031  000F6E                     
  4032                           ;main.c: 225:     }
  4033  000F6E  4A0D               	infsnz	i2noRepeat@temp^0,f,c
  4034  000F70  2A0E               	incf	(i2noRepeat@temp+1)^0,f,c
  4035  000F72                     i2l1802:
  4036  000F72  FFFF               	dw	65535	; assembler added errata NOP
  4037  000F74  500F               	movf	i2noRepeat@size^0,w,c
  4038  000F76  5C0D               	subwf	i2noRepeat@temp^0,w,c
  4039  000F78  500E               	movf	(i2noRepeat@temp+1)^0,w,c
  4040  000F7A  0A80               	xorlw	128
  4041  000F7C  6E05               	movwf	??i2_noRepeat^0,c
  4042  000F7E  5010               	movf	(i2noRepeat@size+1)^0,w,c
  4043  000F80  0A80               	xorlw	128
  4044  000F82  5805               	subwfb	??i2_noRepeat^0,w,c
  4045  000F84  A0D8               	btfss	status,0,c
  4046  000F86  EFC7  F007         	goto	i2u102_41
  4047  000F8A  EFCA  F007         	goto	i2u102_40
  4048  000F8E                     i2u102_41:
  4049  000F8E  FFFF               	dw	65535	; assembler added errata NOP
  4050  000F90  EF2F  F007         	goto	i2l1782
  4051  000F94                     i2u102_40:
  4052  000F94  FFFF               	dw	65535	; assembler added errata NOP
  4053  000F96                     
  4054                           ;main.c: 226:     return size;
  4055  000F96  C00F  F001         	movff	i2noRepeat@size,?i2_noRepeat
  4056  000F9A  C010  F002         	movff	i2noRepeat@size+1,?i2_noRepeat+1
  4057  000F9E  0012               	return		;funcret
  4058  000FA0  FFFF               	dw	65535	; errata NOP
  4059  000FA2                     __end_ofi2_noRepeat:
  4060                           	callstack 0
  4061  000FA2  FFFF               	dw	65535	; assembler added errata NOP
  4062                           
  4063                           	psect	rparam
  4064  0000                     
  4065                           	psect	temp
  4066  000061                     btemp:
  4067                           	callstack 0
  4068  000061                     	ds	1
  4069  0000                     int$flags	set	btemp
  4070  0000                     wtemp8	set	btemp+1
  4071  0000                     ttemp5	set	btemp+1
  4072  0000                     ttemp6	set	btemp+4
  4073  0000                     ttemp7	set	btemp+8
  4074                           
  4075                           	psect	idloc
  4076                           
  4077                           ;Config register IDLOC0 @ 0x200000
  4078                           ;	unspecified, using default values
  4079  200000                     	org	2097152
  4080  200000  FF                 	db	255
  4081                           
  4082                           ;Config register IDLOC1 @ 0x200001
  4083                           ;	unspecified, using default values
  4084  200001                     	org	2097153
  4085  200001  FF                 	db	255
  4086                           
  4087                           ;Config register IDLOC2 @ 0x200002
  4088                           ;	unspecified, using default values
  4089  200002                     	org	2097154
  4090  200002  FF                 	db	255
  4091                           
  4092                           ;Config register IDLOC3 @ 0x200003
  4093                           ;	unspecified, using default values
  4094  200003                     	org	2097155
  4095  200003  FF                 	db	255
  4096                           
  4097                           ;Config register IDLOC4 @ 0x200004
  4098                           ;	unspecified, using default values
  4099  200004                     	org	2097156
  4100  200004  FF                 	db	255
  4101                           
  4102                           ;Config register IDLOC5 @ 0x200005
  4103                           ;	unspecified, using default values
  4104  200005                     	org	2097157
  4105  200005  FF                 	db	255
  4106                           
  4107                           ;Config register IDLOC6 @ 0x200006
  4108                           ;	unspecified, using default values
  4109  200006                     	org	2097158
  4110  200006  FF                 	db	255
  4111                           
  4112                           ;Config register IDLOC7 @ 0x200007
  4113                           ;	unspecified, using default values
  4114  200007                     	org	2097159
  4115  200007  FF                 	db	255
  4116                           
  4117                           	psect	config
  4118                           
  4119                           ; Padding undefined space
  4120  300000                     	org	3145728
  4121  300000  FF                 	db	255
  4122                           
  4123                           ;Config register CONFIG1H @ 0x300001
  4124                           ;	Oscillator Selection bits
  4125                           ;	OSC = HS, HS oscillator
  4126                           ;	Oscillator System Clock Switch Enable bit
  4127                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
  4128  300001                     	org	3145729
  4129  300001  22                 	db	34
  4130                           
  4131                           ;Config register CONFIG2L @ 0x300002
  4132                           ;	Power-up Timer Enable bit
  4133                           ;	PWRT = OFF, PWRT disabled
  4134                           ;	Brown-out Reset Enable bit
  4135                           ;	BOR = OFF, Brown-out Reset disabled
  4136                           ;	Brown-out Reset Voltage bits
  4137                           ;	BORV = 20, VBOR set to 2.0V
  4138  300002                     	org	3145730
  4139  300002  0D                 	db	13
  4140                           
  4141                           ;Config register CONFIG2H @ 0x300003
  4142                           ;	Watchdog Timer Enable bit
  4143                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4144                           ;	Watchdog Timer Postscale Select bits
  4145                           ;	WDTPS = 128, 1:128
  4146  300003                     	org	3145731
  4147  300003  0E                 	db	14
  4148                           
  4149                           ; Padding undefined space
  4150  300004                     	org	3145732
  4151  300004  FF                 	db	255
  4152                           
  4153                           ;Config register CONFIG3H @ 0x300005
  4154                           ;	CCP2 Mux bit
  4155                           ;	CCP2MUX = OFF, CCP2 input/output is multiplexed with RB3
  4156  300005                     	org	3145733
  4157  300005  00                 	db	0
  4158                           
  4159                           ;Config register CONFIG4L @ 0x300006
  4160                           ;	Stack Full/Underflow Reset Enable bit
  4161                           ;	STVR = OFF, Stack Full/Underflow will not cause RESET
  4162                           ;	Low Voltage ICSP Enable bit
  4163                           ;	LVP = OFF, Low Voltage ICSP disabled
  4164                           ;	Background Debugger Enable bit
  4165                           ;	DEBUG = 0x1, unprogrammed default
  4166  300006                     	org	3145734
  4167  300006  80                 	db	128
  4168                           
  4169                           ; Padding undefined space
  4170  300007                     	org	3145735
  4171  300007  FF                 	db	255
  4172                           
  4173                           ;Config register CONFIG5L @ 0x300008
  4174                           ;	Code Protection bit
  4175                           ;	CP0 = ON, Block 0 (000200-001FFFh) code protected
  4176                           ;	Code Protection bit
  4177                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code protected
  4178                           ;	Code Protection bit
  4179                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code protected
  4180                           ;	Code Protection bit
  4181                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code protected
  4182  300008                     	org	3145736
  4183  300008  0E                 	db	14
  4184                           
  4185                           ;Config register CONFIG5H @ 0x300009
  4186                           ;	Boot Block Code Protection bit
  4187                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code protected
  4188                           ;	Data EEPROM Code Protection bit
  4189                           ;	CPD = OFF, Data EEPROM not code protected
  4190  300009                     	org	3145737
  4191  300009  C0                 	db	192
  4192                           
  4193                           ;Config register CONFIG6L @ 0x30000A
  4194                           ;	Write Protection bit
  4195                           ;	WRT0 = OFF, Block 0 (000200-001FFFh) not write protected
  4196                           ;	Write Protection bit
  4197                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write protected
  4198                           ;	Write Protection bit
  4199                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write protected
  4200                           ;	Write Protection bit
  4201                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write protected
  4202  30000A                     	org	3145738
  4203  30000A  0F                 	db	15
  4204                           
  4205                           ;Config register CONFIG6H @ 0x30000B
  4206                           ;	Configuration Register Write Protection bit
  4207                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write protected
  4208                           ;	Boot Block Write Protection bit
  4209                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write protected
  4210                           ;	Data EEPROM Write Protection bit
  4211                           ;	WRTD = OFF, Data EEPROM not write protected
  4212  30000B                     	org	3145739
  4213  30000B  E0                 	db	224
  4214                           
  4215                           ;Config register CONFIG7L @ 0x30000C
  4216                           ;	Table Read Protection bit
  4217                           ;	EBTR0 = OFF, Block 0 (000200-001FFFh) not protected from Table Reads executed in other
      +                           blocks
  4218                           ;	Table Read Protection bit
  4219                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from Table Reads executed in other
      +                           blocks
  4220                           ;	Table Read Protection bit
  4221                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from Table Reads executed in other
      +                           blocks
  4222                           ;	Table Read Protection bit
  4223                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from Table Reads executed in other
      +                           blocks
  4224  30000C                     	org	3145740
  4225  30000C  0F                 	db	15
  4226                           
  4227                           ;Config register CONFIG7H @ 0x30000D
  4228                           ;	Boot Block Table Read Protection bit
  4229                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from Table Reads executed in ot
      +                          her blocks
  4230  30000D                     	org	3145741
  4231  30000D  40                 	db	64
  4232                           tosu	equ	0xFFF
  4233                           tosh	equ	0xFFE
  4234                           tosl	equ	0xFFD
  4235                           stkptr	equ	0xFFC
  4236                           pclatu	equ	0xFFB
  4237                           pclath	equ	0xFFA
  4238                           pcl	equ	0xFF9
  4239                           tblptru	equ	0xFF8
  4240                           tblptrh	equ	0xFF7
  4241                           tblptrl	equ	0xFF6
  4242                           tablat	equ	0xFF5
  4243                           prodh	equ	0xFF4
  4244                           prodl	equ	0xFF3
  4245                           indf0	equ	0xFEF
  4246                           postinc0	equ	0xFEE
  4247                           postdec0	equ	0xFED
  4248                           preinc0	equ	0xFEC
  4249                           plusw0	equ	0xFEB
  4250                           fsr0h	equ	0xFEA
  4251                           fsr0l	equ	0xFE9
  4252                           wreg	equ	0xFE8
  4253                           indf1	equ	0xFE7
  4254                           postinc1	equ	0xFE6
  4255                           postdec1	equ	0xFE5
  4256                           preinc1	equ	0xFE4
  4257                           plusw1	equ	0xFE3
  4258                           fsr1h	equ	0xFE2
  4259                           fsr1l	equ	0xFE1
  4260                           bsr	equ	0xFE0
  4261                           indf2	equ	0xFDF
  4262                           postinc2	equ	0xFDE
  4263                           postdec2	equ	0xFDD
  4264                           preinc2	equ	0xFDC
  4265                           plusw2	equ	0xFDB
  4266                           fsr2h	equ	0xFDA
  4267                           fsr2l	equ	0xFD9
  4268                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         646
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     48      96
    BANK0           128     20      20
    BANK1           256    214     214
    BANK2           256    214     214
    BANK3           256      0     200
    BANK4           256      0     200
    BANK5           256      0     200

Pointer List with Targets:

    func_norepeat	PTR FTN()int  size(2) Largest target is 2
		 -> Absolute function(), 

    sort@p	PTR int  size(2) Largest target is 200
		 -> queueDown(BANK4[200]), queueUp(BANK3[200]), 

    noRepeat@po	PTR int  size(2) Largest target is 200
		 -> NULL(NULL[0]), queueDown(BANK4[200]), queueUp(BANK3[200]), 

    UpTasks	PTR int  size(2) Largest target is 200
		 -> NULL(NULL[0]), queueUp(BANK3[200]), 


Critical Paths under _main in COMRAM

    _rutine_up->_noRepeat
    _dataPanelUp->_noRepeat

Critical Paths under _ISR in COMRAM

    _ISR->i2_noRepeat

Critical Paths under _main in BANK0

    _main->_modeUp
    _modeUp->_rutine_up
    _rutine_up->_modeUpControl
    _modeUpControl->_dataPanelUp

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    _ISR->i2_sort

Critical Paths under _main in BANK2

    _rutine_up->_sort
    _dataPanelUp->_sort

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   10088
                               _boot
                       _bootAscensor
                     _interruptsInit
                             _modeUp
 ---------------------------------------------------------------------------------
 (1) _modeUp                                               4     4      0   10088
                                             18 BANK0      2     2      0
                        _dataPanelUp
                          _rutine_up
 ---------------------------------------------------------------------------------
 (2) _rutine_up                                            6     6      0    6910
                                             12 BANK0      6     6      0
                           _modeDown
                      _modeUpControl
                           _noRepeat
                               _sort
 ---------------------------------------------------------------------------------
 (3) _modeUpControl                                       10    10      0    3571
                                              2 BANK0     10    10      0
                        _dataPanelUp
 ---------------------------------------------------------------------------------
 (4) _dataPanelUp                                          2     2      0    3175
                                              0 BANK0      2     2      0
                           _noRepeat
                               _sort
 ---------------------------------------------------------------------------------
 (3) _sort                                               223   219      4    1829
                                             30 COMRAM     9     5      4
                                              0 BANK2    214   214      0
 ---------------------------------------------------------------------------------
 (3) _noRepeat                                            18    14      4    1312
                                             30 COMRAM    18    14      4
 ---------------------------------------------------------------------------------
 (3) _modeDown                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _interruptsInit                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _bootAscensor                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _boot                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                 12    12      0    1598
                                             18 COMRAM    12    12      0
                         i2_noRepeat
                             i2_sort
 ---------------------------------------------------------------------------------
 (7) i2_sort                                             223   219      4     944
                                              0 COMRAM     9     5      4
                                              0 BANK1    214   214      0
 ---------------------------------------------------------------------------------
 (7) i2_noRepeat                                          18    14      4     585
                                              0 COMRAM    18    14      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _boot
   _bootAscensor
   _interruptsInit
   _modeUp
     _dataPanelUp
       _noRepeat
       _sort
     _rutine_up
       _modeDown
       _modeUpControl
         _dataPanelUp
       _noRepeat
       _sort

 _ISR (ROOT)
   i2_noRepeat
   i2_sort

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0      C8      14       78.1%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      C8      13       78.1%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C8      11       78.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100     D6      D6       9       83.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100     D6      D6       7       83.6%
BITBANK0            80      0       0       4        0.0%
BANK0               80     14      14       5       15.6%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     30      60       1       76.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     478      15        0.0%
DATA                 0      0     478       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Thu Nov 11 18:27:31 2021

                                                                     l91 135C  
                                                                     l92 137A  
                                                                     l85 1332  
                                                                     l94 1360  
                                                                     l96 1374  
                                                                     l88 13EC  
                                                                    l103 11FA  
                                                                    l200 101C  
                                                                    l201 1032  
                                                                    l210 10C0  
                                                                    l108 124C  
                                                                    l212 10F8  
                                                                    l220 12AC  
                                                                    l109 1254  
                                                                    l126 0858  
                                                                    l118 071E  
                                                                    l143 0CB2  
                                                 __end_of_interruptsInit 13F0  
                                                                    l152 031A  
                                                                    l129 0A90  
                                                                    l209 10AA  
                                                         ??_bootAscensor 001F  
                                                                    l218 128C  
                                                                    l163 047E  
                                                                    l173 0624  
                                                                    l190 13E0  
                                                                    l158 03CC  
                                                                    l168 0530  
                                                                    l187 0E42  
                                                                    u330 134C  
                                                                    u331 1346  
                                                                    u340 1372  
                                                                    u341 136C  
                                                                    _ISR 0008  
                                                                    wreg 000FE8  
                                                                   ?_ISR 0001  
                                                                   l2010 1108  
                                                                   l2020 11C2  
                                                                   l2012 1114  
                                                                   l2100 0B76  
                                                                   l2030 1224  
                                                                   l2022 11C6  
                                                                   l2014 1126  
                                                                   l2110 0BD0  
                                                                   l2102 0B7A  
                                                                   l2024 11CA  
                                                                   l2016 1168  
                                                                   l2032 1228  
                                                                   l2008 1100  
                                                                   l2040 0658  
                                                                   l2120 0C3E  
                                                                   l2112 0BEC  
                                                                   l2104 0B8E  
                                                                   l2200 0548  
                                                                   l2026 11EE  
                                                                   l2018 117C  
                                                                   l2050 06D2  
                                                                   l2042 0664  
                                                                   l2034 062C  
                                                                   l2130 0CAA  
                                                                   l2122 0C46  
                                                                   l2106 0BAE  
                                                                   l2114 0BF0  
                                                                   l2210 05B8  
                                                                   l2202 055C  
                                                                   l2028 1200  
                                                                   l2060 0770  
                                                                   l2052 06EC  
                                                                   l2044 0694  
                                                                   l2036 063E  
                                                                   l2124 0C62  
                                                                   l2116 0C04  
                                                                   l2108 0BC8  
                                                                   l2212 05BC  
                                                                   l2204 058A  
                                                                   l2140 036A  
                                                                   l2220 05E2  
                                                                   l2132 0316  
                                                                   l2300 10C6  
                                                                   l1190 1338  
                                                                   l2070 07BC  
                                                                   l2062 0774  
                                                                   l2054 06F4  
                                                                   l2038 0646  
                                                                   l2118 0C24  
                                                                   l2126 0C66  
                                                                   l2214 05BE  
                                                                   l2206 058E  
                                                                   l2150 03A2  
                                                                   l2142 036E  
                                                                   l2134 032E  
                                                                   l2230 0CB8  
                                                                   l2310 125E  
                                                                   l1192 134E  
                                                                   l2072 07F6  
                                                                   l2064 0798  
                                                                   l2048 069C  
                                                                   l2056 06FA  
                                                                   l2128 0C7A  
                                                                   l2080 0AA4  
                                                                   l2216 05DC  
                                                                   l2208 05B2  
                                                                   l2160 03E4  
                                                                   l2152 03A6  
                                                                   l2144 0392  
                                                                   l2136 0330  
                                                                   l2240 0D1C  
                                                                   l2232 0CBC  
                                                                   l2320 12A0  
                                                                   l2312 1262  
                                                                   l2074 0802  
                                                                   l2066 07B2  
                                                                   l2058 072A  
                                                                   l2082 0AC2  
                                                                   l2090 0B04  
                                                                   l2170 0454  
                                                                   l2162 03F8  
                                                                   l2154 03A8  
                                                                   l2146 0398  
                                                                   l2138 033C  
                                                                   l2250 0DBE  
                                                                   l2242 0D56  
                                                                   l2234 0CD2  
                                                                   l2410 10E0  
                                                                   l2314 1266  
                                                                   l1188 13E6  
                                                                   l2228 13C0  
                                                                   l2076 0830  
                                                                   l2068 07B8  
                                                                   l2092 0B18  
                                                                   l2084 0ADC  
                                                                   l2412 05FC  
                                                                   l2180 0496  
                                                                   l2172 0458  
                                                                   l2164 0426  
                                                                   l2156 03C6  
                                                                   l2148 039A  
                                                                   l2260 0E28  
                                                                   l2252 0DCC  
                                                                   l2244 0D5A  
                                                                   l2236 0CF0  
                                                                   l2324 12C0  
                                                                   l2316 127A  
                                                                   l2308 1258  
                                                                   l2078 0834  
                                                                   l2094 0B38  
                                                                   l2086 0AE4  
                                                                   l2190 0506  
                                                                   l2182 04AA  
                                                                   l2174 045A  
                                                                   l2166 042A  
                                                                   l2158 03E0  
                                                                   l2254 0DFA  
                                                                   l2246 0D7E  
                                                                   l2262 0E30  
                                                                   l2238 0D0C  
                                                                   l2270 0FEC  
                                                                   l2318 1282  
                                                                   l2096 0B52  
                                                                   l2088 0B00  
                                                                   l2192 050A  
                                                                   l2184 04D8  
                                                                   l2176 0478  
                                                                   l2168 044E  
                                                                   l2256 0DFE  
                                                                   l2248 0DB6  
                                                                   l2280 1036  
                                                                   l2272 0FF0  
                                                                   l2264 0FA6  
                                                                   l2328 12CC  
                                                                   l1730 12DE  
                                                                   l2098 0B5A  
                                                                   l2194 050C  
                                                                   l2186 04DC  
                                                                   l2178 0492  
                                                                   l2258 0E22  
                                                                   l2290 105C  
                                                                   l2282 103A  
                                                                   l2274 0FF2  
                                                                   l2266 0FD2  
                                                                   l1732 12E4  
                                                                   l2196 052A  
                                                                   l2188 0500  
                                                                   l2292 105E  
                                                                   l2284 103C  
                                                                   l2276 1010  
                                                                   l2268 0FEA  
                                                                   l1734 132A  
                                                                   l2198 0544  
                                                                   l2294 107C  
                                                                   l2286 1056  
                                                                   l2278 1012  
                                                                   l1728 12DA  
                                                                   l2296 107E  
                                                                   l2288 1058  
                                                                   l2298 1088  
                                                                   u1210 1166  
                                                                   u1211 1160  
                                                                   u1220 11EC  
                                                                   u1300 0856  
                                                                   u1221 11E6  
                                                                   u1301 0850  
                                                                   u1230 1222  
                                                                   u1310 0AA2  
                                                                   u1231 121C  
                                                                   u1311 0A9C  
                                                                   u1240 124A  
                                                                   u1320 0AC0  
                                                                   u1400 032C  
                                                                   u1241 1244  
                                                                   u1321 0ABA  
                                                                   u1401 0326  
                                                                   u1250 0692  
                                                                   u1330 0B16  
                                                                   u1410 0390  
                                                                   u1251 068C  
                                                                   u1331 0B10  
                                                                   u1411 038A  
                                                                   u1260 06D0  
                                                                   u1340 0B36  
                                                                   u1420 03DE  
                                                                   u1500 0D0C  
                                                                   u1261 06CA  
                                                                   u1341 0B30  
                                                                   u1421 03D8  
                                                                   u1501 0D06  
                                                                   u1270 071C  
                                                                   u1350 0B8C  
                                                                   u1430 044C  
                                                                   u1510 0D7C  
                                                                   u1271 0716  
                                                                   u1351 0B86  
                                                                   u1431 0446  
                                                                   u1511 0D76  
                                                                   u1280 0796  
                                                                   u1360 0BAC  
                                                                   u1440 0490  
                                                                   u1520 0E20  
                                                                   u1600 12BE  
                                                                   u1281 0790  
                                                                   u1361 0BA6  
                                                                   u1441 048A  
                                                                   u1521 0E1A  
                                                                   u1601 12B8  
                                                                   u1290 07F4  
                                                                   u1370 0C02  
                                                                   u1450 04FE  
                                                                   u1530 0FE8  
                                                                   u1291 07EE  
                                                                   u1371 0BFC  
                                                                   u1451 04F8  
                                                                   u1531 0FE2  
                                                                   u1380 0C22  
                                                                   u1460 0542  
                                                                   u1540 1030  
                                                                   u1381 0C1C  
                                                                   u1461 053C  
                                                                   u1541 102A  
                                                                   u1390 0C78  
                                                                   u1470 05B0  
                                                                   u1550 1054  
                                                                   u1391 0C72  
                                                                   u1471 05AA  
                                                                   u1551 104E  
                                                                   u1480 0CD0  
                                                                   u1560 10A8  
                                                                   u1481 0CCA  
                                                                   u1561 10A2  
                                                                   u1617 0FFE  
                                                                   u1490 0CEE  
                                                                   u1570 10BE  
                                                                   u1491 0CE8  
                                                                   u1571 10B8  
                                                                   u1627 106A  
                                                                   u1580 1278  
                                                                   u1637 03B4  
                                                                   u1581 1272  
                                                                   u1590 129E  
                                                                   u1647 0466  
                                                                   u1591 1298  
                                                                   u1657 0518  
                                                                   u1667 05CA  
                                                             i2_noRepeat 0E48  
                                                                   _boot 12D8  
                                                                   _main 1258  
                                                                   fsr1h 000FE2  
                                                                   fsr2h 000FDA  
                                                                   fsr1l 000FE1  
                                                                   fsr2l 000FD9  
                                                                   _sort 062A  
                                                                   btemp 0061  
                                                                   start 0310  
                                                           ___param_bank 000000  
                                                                  ??_ISR 0013  
                                                      modeUpControl@cont 0031  
                                                                  ISR@si 0019  
                                                                  ?_boot 0001  
                                                                  ?_main 0001  
                                                                  ?_sort 001F  
                                                        ?_interruptsInit 0001  
                                                                  i2l103 0F44  
                                                                  i2l108 0F96  
                                                                  i2l109 0F9E  
                                                                  i2l126 0A8A  
                                                                  i2l118 0950  
                                                                  i2l250 02F8  
                                                                  _PORTB 000F81  
                                                   __size_of_dataPanelUp 0228  
                                                                  _TRISA 000F92  
                                                                  _TRISB 000F93  
                                                                  _TRISC 000F94  
                                                                  _TRISD 000F95  
                                                                  _calls 0059  
                                                                  _up1_f 003D  
                                                                  _up2_f 003B  
                                                                  _up3_f 0037  
                                                                  _nowFL 0051  
                                                        i2noRepeat@shift 000B  
                                                        i2noRepeat@sixes 0003  
                                                                  sort@h 02D4  
                                                                  sort@j 02D0  
                                                                  sort@k 02CE  
                                                                  sort@p 001F  
                                                                  ttemp5 0062  
                                                                  ttemp6 0065  
                                                                  ttemp7 0069  
                                                                  status 000FD8  
                                                                  wtemp8 0062  
                                                        __initialization 1380  
                                                           __end_of_boot 1336  
                                                           __end_of_main 12D8  
                                                           __end_of_sort 085C  
                                                     modeUpControl@i_513 0086  
                                                     modeUpControl@i_514 0088  
                                                     modeUpControl@i_515 008A  
                                                             i2sort@temp 01D2  
                                                             i2sort@nums 01CA  
                                                                 ??_boot 001F  
                                                                 ??_main 0031  
                                                                 ??_sort 0023  
                                                          __activetblptr 000002  
                                                                 _ADCON1 000FC1  
                                                                 i2l2414 02B0  
                                                                 i2l1800 0F6E  
                                                                 i2l1802 0F72  
                                                                 i2l1810 088A  
                                                                 i2l1820 0904  
                                                                 i2l1812 0896  
                                                                 i2l1804 085E  
                                                                 i2l1900 0136  
                                                                 i2l1830 09A2  
                                                                 i2l1822 091E  
                                                                 i2l1814 08C6  
                                                                 i2l1806 0870  
                                                                 i2l1910 0184  
                                                                 i2l1902 0142  
                                                                 i2l1840 09EE  
                                                                 i2l1832 09A6  
                                                                 i2l1824 0926  
                                                                 i2l1808 0878  
                                                                 i2l1920 01EE  
                                                                 i2l1912 019C  
                                                                 i2l1904 015A  
                                                                 i2l1842 0A28  
                                                                 i2l1834 09CA  
                                                                 i2l1818 08CE  
                                                                 i2l1826 092C  
                                                                 i2l1930 024C  
                                                                 i2l1922 020A  
                                                                 i2l1914 01BC  
                                                                 i2l1906 0174  
                                                                 i2l1780 0E52  
                                                                 i2l1844 0A34  
                                                                 i2l1836 09E4  
                                                                 i2l1828 095C  
                                                                 i2l1932 0258  
                                                                 i2l1924 0216  
                                                                 i2l1916 01D6  
                                                                 i2l1908 0178  
                                                                 i2l1790 0F0C  
                                                                 i2l1782 0E5E  
                                                                 i2l1846 0A62  
                                                                 i2l1838 09EA  
                                                                 i2l1934 0270  
                                                                 i2l1926 022E  
                                                                 i2l1918 01DA  
                                                                 i2l1942 029A  
                                                                 i2l1792 0F10  
                                                                 i2l1784 0E70  
                                                                 i2l1848 0A66  
                                                                 i2l1936 028A  
                                                                 i2l1928 0248  
                                                                 i2l1880 0070  
                                                                 i2l1872 001C  
                                                                 i2l1794 0F14  
                                                                 i2l1786 0EB2  
                                                                 i2l1778 0E4A  
                                                                 i2l1938 028E  
                                                                 i2l1890 00C8  
                                                                 i2l1882 0074  
                                                                 i2l1874 0020  
                                                                 i2l1796 0F38  
                                                                 i2l1788 0EC6  
                                                                 i2l1892 00E8  
                                                                 i2l1884 0088  
                                                                 i2l1876 0038  
                                                                 i2l1798 0F4A  
                                                                 i2l1894 0102  
                                                                 i2l1886 00A4  
                                                                 i2l1878 0056  
                                                                 i2l1896 0106  
                                                                 i2l1888 00B0  
                                                                 i2l1898 011A  
                                                            ?i2_noRepeat 0001  
                                                   __end_of_bootAscensor 1380  
                                                                 i2_sort 085C  
                                                            i2noRepeat@t 0009  
                                                           sort@sizesMod 02CC  
                                                                 _callsD 0057  
                                                                 _btn1_f 0049  
                                                                 _btn2_f 0047  
                                                                 _btn3_f 0045  
                                                                 _btn4_f 0043  
                                                       __end_of_noRepeat 1258  
                                                       __end_of_modeDown 13E4  
                                                                 _modeUp 0FA4  
                                                                 clear_0 1386  
                                                                 clear_1 1392  
                                                                 clear_2 139E  
                                                                 clear_3 13AA  
                                                                 isa$std 000001  
                                                                 tblptru 000FF8  
                                                 __size_of_modeUpControl 0316  
                                                             __accesstop 0080  
                                                __end_of__initialization 13B0  
                                                          ___rparam_used 000001  
                                                         __pcstackCOMRAM 0001  
                                                    __size_ofi2_noRepeat 015A  
                                                          _func_norepeat 004F  
                                                            i2sort@sizes 0003  
                                                             __pbssBANK3 0300  
                                                             __pbssBANK4 0400  
                                                             __pbssBANK5 0500  
                                                              ISR@si_547 001B  
                                                              ISR@si_548 001D  
                                                             __pnvCOMRAM 005F  
                                                                ?i2_sort 0001  
                                                          _modeUpControl 0314  
                                                       ??_interruptsInit 001F  
                                                           noRepeat@comp 002F  
                                                           noRepeat@temp 002B  
                                                                ?_modeUp 0001  
                                                           noRepeat@size 002D  
                                                                i2u99_40 0EB0  
                                                                i2u99_41 0EAA  
                                                  __size_of_bootAscensor 004A  
                                                              ?_noRepeat 001F  
                                                              ?_modeDown 0001  
                                                     __size_of_rutine_up 0192  
                                                           i2noRepeat@po 0001  
                                                                i2sort@h 01D4  
                                                                i2sort@j 01D0  
                                                                i2sort@k 01CE  
                                                                i2sort@p 0001  
                                                        __size_ofi2_sort 0232  
                                                                __Hparam 0000  
                                                                __Lparam 0000  
                                                         ?_modeUpControl 0001  
                                                                _UpTasks 005F  
                                                         i2sort@sizesMod 01CC  
                                                             _modeDown_F 004B  
                                                                _btnCD_f 0041  
                                                                __pcinit 1380  
                                                          ??_dataPanelUp 0031  
                                                        __size_of_modeUp 015A  
                                                                _btnOD_f 003F  
                                                                __ramtop 0600  
                                                                __ptext0 1258  
                                                                __ptext1 0FA4  
                                                                __ptext2 0CB6  
                                                                __ptext3 0314  
                                                                __ptext4 0A8E  
                                                                __ptext5 062A  
                                                                __ptext6 10FE  
                                                                __ptext7 13BE  
                                                                __ptext8 13E4  
                                                                __ptext9 1336  
                                                                _down2_f 0039  
                                                                _down3_f 0035  
                                                                _down4_f 0033  
                                                           __size_of_ISR 0308  
                                                           _bootAscensor 1336  
                                                                _tasksUp 005B  
                                                                _queueUp 0300  
                                                   end_of_initialization 13B0  
                                                           ??i2_noRepeat 0005  
                                                             ??_noRepeat 0023  
                                                          __Lmediumconst 0000  
                                                             ??_modeDown 001F  
                                                                postdec1 000FE5  
                                                                postdec2 000FDD  
                                                                postinc0 000FEE  
                                                                postinc1 000FE6  
                                                                postinc2 000FDE  
                                                                sort@pos 02C8  
                                                              _PORTAbits 000F80  
                                                              _PORTBbits 000F81  
                                                              _PORTDbits 000F83  
                                                      __end_of_rutine_up 0E48  
                                                     __end_ofi2_noRepeat 0FA2  
                                                    __end_of_dataPanelUp 0CB6  
                                                        ??_modeUpControl 0082  
                                                         __end_ofi2_sort 0A8E  
                                                         __end_of_modeUp 10FE  
                                                         i2noRepeat@comp 0011  
                                                         i2noRepeat@temp 000D  
                                                         i2noRepeat@size 000F  
                                                    start_initialization 1380  
                                                            __end_of_ISR 0310  
                                                            _callFL_down 0053  
                                                              i2sort@pos 01C8  
                                                    dataPanelUp@new_size 0080  
                                                             noRepeat@po 001F  
                                                               ??i2_sort 0005  
                                                           i2sort@result 0100  
                                                               ??_modeUp 0092  
                                                            _dataPanelUp 0A8E  
                                                            __pbssCOMRAM 0031  
                                                          __pcstackBANK0 0080  
                                                          __pcstackBANK1 0100  
                                                          __pcstackBANK2 0200  
                                                              _callFL_up 0055  
                                                              _callsInUp 0500  
                                                      __size_of_noRepeat 015A  
                                                      __size_of_modeDown 0026  
                                                              __pintcode 0008  
                                                          noRepeat@shift 0029  
                                                          noRepeat@sixes 0021  
                                                            rutine_up@re 0090  
                                                               _LATCbits 000F8B  
                                                               _LATDbits 000F8C  
                                                               i2u100_40 0F36  
                                                               i2u100_41 0F30  
                                                               i2u101_40 0F6C  
                                                               i2u101_41 0F66  
                                                               i2u102_40 0F94  
                                                               i2u102_41 0F8E  
                                                               i2u103_40 08C4  
                                                               i2u103_41 08BE  
                                                               i2u104_40 0902  
                                                               i2u120_40 026E  
                                                               i2u112_40 0036  
                                                               i2u104_41 08FC  
                                                               i2u120_41 0268  
                                                               i2u112_41 0030  
                                                               i2u105_40 094E  
                                                               i2u113_40 0054  
                                                               i2u105_41 0948  
                                                               i2u113_41 004E  
                                                               i2u106_40 09C8  
                                                               i2u114_40 00C6  
                                                               i2u106_41 09C2  
                                                               i2u114_41 00C0  
                                                               i2u107_40 0A26  
                                                               i2u115_40 00E6  
                                                               i2u107_41 0A20  
                                                               i2u115_41 00E0  
                                                               i2u108_40 0A88  
                                                               i2u116_40 0158  
                                                               i2u108_41 0A82  
                                                               i2u116_41 0152  
                                                               i2u117_40 019A  
                                                               i2u117_41 0194  
                                                               i2u118_40 01BA  
                                                               i2u118_41 01B4  
                                                               i2u119_40 022C  
                                                               i2u119_41 0226  
                                                              _tasksDown 005D  
                                                               _RCONbits 000FD0  
                                                              _queueDown 0400  
                                                __size_of_interruptsInit 000C  
                                                              _rutine_up 0CB6  
                                                              noRepeat@t 0027  
                                                               __Hrparam 0000  
                                                             sort@result 0200  
                                                               __Lrparam 0000  
                                                             ?_rutine_up 0001  
                                                               __ptext10 12D8  
                                                               __ptext12 085C  
                                                               __ptext13 0E48  
                                                               _noRepeat 10FE  
                                                          __size_of_boot 005E  
                                                               _modeDown 13BE  
                                                          __size_of_main 0080  
                                                               _modeUp_F 004D  
                                                          __size_of_sort 0232  
                                                             rutine_up@i 008E  
                                                  __end_of_modeUpControl 062A  
                                                               isa$xinst 000000  
                                                               int$flags 0061  
                                                           ?_dataPanelUp 0001  
                                                         modeUpControl@i 0084  
                                                             _INTCONbits 000FF2  
                                                              sort@sizes 0021  
                                                               intlevel2 13F0  
                                                               sort@temp 02D2  
                                                               sort@nums 02CA  
                                                          ?_bootAscensor 0001  
                                                         _interruptsInit 13E4  
                                                            ??_rutine_up 008C  
