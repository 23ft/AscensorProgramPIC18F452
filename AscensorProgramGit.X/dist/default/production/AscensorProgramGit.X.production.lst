

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Nov 12 02:34:49 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	18F452
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     8                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
     9                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1,lowdata,noexec
    11                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    31                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    32                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    33                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    34  0000                     
    35                           ; Version 2.20
    36                           ; Generated 12/02/2020 GMT
    37                           ; 
    38                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC18F452 Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     
    70                           	psect	nvCOMRAM
    71  00005F                     __pnvCOMRAM:
    72                           	callstack 0
    73  00005F                     _UpTasks:
    74                           	callstack 0
    75  00005F                     	ds	2
    76  0000                     _PORTB	set	3969
    77  0000                     _PORTBbits	set	3969
    78  0000                     _LATDbits	set	3980
    79  0000                     _PORTAbits	set	3968
    80  0000                     _PORTDbits	set	3971
    81  0000                     _LATCbits	set	3979
    82  0000                     _INTCONbits	set	4082
    83  0000                     _RCONbits	set	4048
    84  0000                     _TRISC	set	3988
    85  0000                     _TRISA	set	3986
    86  0000                     _TRISD	set	3989
    87  0000                     _TRISB	set	3987
    88  0000                     _ADCON1	set	4033
    89                           
    90                           ; #config settings
    91                           
    92                           	psect	cinit
    93  00137E                     __pcinit:
    94                           	callstack 0
    95  00137E                     start_initialization:
    96                           	callstack 0
    97  00137E                     __initialization:
    98                           	callstack 0
    99                           
   100                           ; Clear objects allocated to BANK5 (200 bytes)
   101  00137E  EE05  F000         	lfsr	0,__pbssBANK5
   102  001382  0EC8               	movlw	200
   103  001384                     clear_0:
   104  001384  6AEE               	clrf	postinc0,c
   105  001386  06E8               	decf	wreg,f,c
   106  001388  E1FD               	bnz	clear_0
   107                           
   108                           ; Clear objects allocated to BANK4 (200 bytes)
   109  00138A  EE04  F000         	lfsr	0,__pbssBANK4
   110  00138E  0EC8               	movlw	200
   111  001390                     clear_1:
   112  001390  6AEE               	clrf	postinc0,c
   113  001392  06E8               	decf	wreg,f,c
   114  001394  E1FD               	bnz	clear_1
   115                           
   116                           ; Clear objects allocated to BANK3 (200 bytes)
   117  001396  EE03  F000         	lfsr	0,__pbssBANK3
   118  00139A  0EC8               	movlw	200
   119  00139C                     clear_2:
   120  00139C  6AEE               	clrf	postinc0,c
   121  00139E  06E8               	decf	wreg,f,c
   122  0013A0  E1FD               	bnz	clear_2
   123                           
   124                           ; Clear objects allocated to COMRAM (44 bytes)
   125  0013A2  EE00  F033         	lfsr	0,__pbssCOMRAM
   126  0013A6  0E2C               	movlw	44
   127  0013A8                     clear_3:
   128  0013A8  6AEE               	clrf	postinc0,c
   129  0013AA  06E8               	decf	wreg,f,c
   130  0013AC  E1FD               	bnz	clear_3
   131  0013AE                     end_of_initialization:
   132                           	callstack 0
   133  0013AE                     __end_of__initialization:
   134                           	callstack 0
   135  0013AE  9061               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   136  0013B0  9261               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   137  0013B2  0E00               	movlw	low (__Lmediumconst shr (0+16))
   138  0013B4  6EF8               	movwf	tblptru,c
   139  0013B6  0100               	movlb	0
   140  0013B8  EF2B  F009         	goto	_main	;jump to C main() function
   141                           
   142                           	psect	bssCOMRAM
   143  000033                     __pbssCOMRAM:
   144                           	callstack 0
   145  000033                     	ds	2
   146  000035                     _down4_f:
   147                           	callstack 0
   148  000035                     	ds	2
   149  000037                     _down3_f:
   150                           	callstack 0
   151  000037                     	ds	2
   152  000039                     _up3_f:
   153                           	callstack 0
   154  000039                     	ds	2
   155  00003B                     _down2_f:
   156                           	callstack 0
   157  00003B                     	ds	2
   158  00003D                     _up2_f:
   159                           	callstack 0
   160  00003D                     	ds	2
   161  00003F                     _up1_f:
   162                           	callstack 0
   163  00003F                     	ds	2
   164  000041                     _btnOD_f:
   165                           	callstack 0
   166  000041                     	ds	2
   167  000043                     _btnCD_f:
   168                           	callstack 0
   169  000043                     	ds	2
   170  000045                     _btn4_f:
   171                           	callstack 0
   172  000045                     	ds	2
   173  000047                     _btn3_f:
   174                           	callstack 0
   175  000047                     	ds	2
   176  000049                     _btn2_f:
   177                           	callstack 0
   178  000049                     	ds	2
   179  00004B                     _btn1_f:
   180                           	callstack 0
   181  00004B                     	ds	2
   182  00004D                     _modeDown_F:
   183                           	callstack 0
   184  00004D                     	ds	2
   185  00004F                     _modeUp_F:
   186                           	callstack 0
   187  00004F                     	ds	2
   188  000051                     _nowFL:
   189                           	callstack 0
   190  000051                     	ds	2
   191  000053                     _callFL_down:
   192                           	callstack 0
   193  000053                     	ds	2
   194  000055                     _callFL_up:
   195                           	callstack 0
   196  000055                     	ds	2
   197  000057                     _callsD:
   198                           	callstack 0
   199  000057                     	ds	2
   200  000059                     _calls:
   201                           	callstack 0
   202  000059                     	ds	2
   203  00005B                     _tasksUp:
   204                           	callstack 0
   205  00005B                     	ds	2
   206  00005D                     _tasksDown:
   207                           	callstack 0
   208  00005D                     	ds	2
   209                           
   210                           	psect	bssBANK3
   211  000300                     __pbssBANK3:
   212                           	callstack 0
   213  000300                     _queueUp:
   214                           	callstack 0
   215  000300                     	ds	200
   216                           
   217                           	psect	bssBANK4
   218  000400                     __pbssBANK4:
   219                           	callstack 0
   220  000400                     _queueDown:
   221                           	callstack 0
   222  000400                     	ds	200
   223                           
   224                           	psect	bssBANK5
   225  000500                     __pbssBANK5:
   226                           	callstack 0
   227  000500                     _callsInUp:
   228                           	callstack 0
   229  000500                     	ds	200
   230                           
   231                           	psect	cstackBANK2
   232  000200                     __pcstackBANK2:
   233                           	callstack 0
   234  000200                     sort@result:
   235                           	callstack 0
   236                           
   237                           ; 200 bytes @ 0x0
   238  000200                     	ds	200
   239  0002C8                     sort@pos:
   240                           	callstack 0
   241                           
   242                           ; 2 bytes @ 0xC8
   243  0002C8                     	ds	2
   244  0002CA                     sort@nums:
   245                           	callstack 0
   246                           
   247                           ; 2 bytes @ 0xCA
   248  0002CA                     	ds	2
   249  0002CC                     sort@sizesMod:
   250                           	callstack 0
   251                           
   252                           ; 2 bytes @ 0xCC
   253  0002CC                     	ds	2
   254  0002CE                     sort@k:
   255                           	callstack 0
   256                           
   257                           ; 2 bytes @ 0xCE
   258  0002CE                     	ds	2
   259  0002D0                     sort@j:
   260                           	callstack 0
   261                           
   262                           ; 2 bytes @ 0xD0
   263  0002D0                     	ds	2
   264  0002D2                     sort@temp:
   265                           	callstack 0
   266                           
   267                           ; 2 bytes @ 0xD2
   268  0002D2                     	ds	2
   269  0002D4                     sort@h:
   270                           	callstack 0
   271                           
   272                           ; 2 bytes @ 0xD4
   273  0002D4                     	ds	2
   274                           
   275                           	psect	cstackBANK1
   276  000100                     __pcstackBANK1:
   277                           	callstack 0
   278  000100                     i2sort@result:
   279                           	callstack 0
   280                           
   281                           ; 200 bytes @ 0x0
   282  000100                     	ds	200
   283  0001C8                     i2sort@pos:
   284                           	callstack 0
   285                           
   286                           ; 2 bytes @ 0xC8
   287  0001C8                     	ds	2
   288  0001CA                     i2sort@nums:
   289                           	callstack 0
   290                           
   291                           ; 2 bytes @ 0xCA
   292  0001CA                     	ds	2
   293  0001CC                     i2sort@sizesMod:
   294                           	callstack 0
   295                           
   296                           ; 2 bytes @ 0xCC
   297  0001CC                     	ds	2
   298  0001CE                     i2sort@k:
   299                           	callstack 0
   300                           
   301                           ; 2 bytes @ 0xCE
   302  0001CE                     	ds	2
   303  0001D0                     i2sort@j:
   304                           	callstack 0
   305                           
   306                           ; 2 bytes @ 0xD0
   307  0001D0                     	ds	2
   308  0001D2                     i2sort@temp:
   309                           	callstack 0
   310                           
   311                           ; 2 bytes @ 0xD2
   312  0001D2                     	ds	2
   313  0001D4                     i2sort@h:
   314                           	callstack 0
   315                           
   316                           ; 2 bytes @ 0xD4
   317  0001D4                     	ds	2
   318                           
   319                           	psect	cstackBANK0
   320  000080                     __pcstackBANK0:
   321                           	callstack 0
   322  000080                     ??_modeUpControl:
   323                           
   324                           ; 1 bytes @ 0x0
   325  000080                     	ds	2
   326  000082                     modeUpControl@i:
   327                           	callstack 0
   328                           
   329                           ; 2 bytes @ 0x2
   330  000082                     	ds	2
   331  000084                     modeUpControl@i_510:
   332                           	callstack 0
   333                           
   334                           ; 2 bytes @ 0x4
   335  000084                     	ds	2
   336  000086                     modeUpControl@i_511:
   337                           	callstack 0
   338                           
   339                           ; 2 bytes @ 0x6
   340  000086                     	ds	2
   341  000088                     modeUpControl@i_512:
   342                           	callstack 0
   343                           
   344                           ; 2 bytes @ 0x8
   345  000088                     	ds	2
   346  00008A                     ??_rutine_up:
   347                           
   348                           ; 1 bytes @ 0xA
   349  00008A                     	ds	2
   350  00008C                     rutine_up@i:
   351                           	callstack 0
   352                           
   353                           ; 2 bytes @ 0xC
   354  00008C                     	ds	2
   355  00008E                     rutine_up@re:
   356                           	callstack 0
   357                           
   358                           ; 2 bytes @ 0xE
   359  00008E                     	ds	2
   360  000090                     ??_modeUp:
   361                           
   362                           ; 1 bytes @ 0x10
   363  000090                     	ds	2
   364                           
   365                           	psect	cstackCOMRAM
   366  000001                     __pcstackCOMRAM:
   367                           	callstack 0
   368  000001                     ?i2_noRepeat:
   369                           	callstack 0
   370  000001                     i2noRepeat@po:
   371                           	callstack 0
   372  000001                     i2sort@p:
   373                           	callstack 0
   374                           
   375                           ; 2 bytes @ 0x0
   376  000001                     	ds	2
   377  000003                     i2noRepeat@sixes:
   378                           	callstack 0
   379  000003                     i2sort@sizes:
   380                           	callstack 0
   381                           
   382                           ; 2 bytes @ 0x2
   383  000003                     	ds	2
   384  000005                     ??i2_noRepeat:
   385  000005                     ??i2_sort:
   386                           
   387                           ; 1 bytes @ 0x4
   388  000005                     	ds	4
   389  000009                     i2noRepeat@t:
   390                           	callstack 0
   391                           
   392                           ; 2 bytes @ 0x8
   393  000009                     	ds	2
   394  00000B                     i2noRepeat@shift:
   395                           	callstack 0
   396                           
   397                           ; 2 bytes @ 0xA
   398  00000B                     	ds	2
   399  00000D                     i2noRepeat@temp:
   400                           	callstack 0
   401                           
   402                           ; 2 bytes @ 0xC
   403  00000D                     	ds	2
   404  00000F                     i2noRepeat@size:
   405                           	callstack 0
   406                           
   407                           ; 2 bytes @ 0xE
   408  00000F                     	ds	2
   409  000011                     i2noRepeat@comp:
   410                           	callstack 0
   411                           
   412                           ; 2 bytes @ 0x10
   413  000011                     	ds	2
   414  000013                     ??_ISR:
   415                           
   416                           ; 1 bytes @ 0x12
   417  000013                     	ds	6
   418  000019                     ISR@si:
   419                           	callstack 0
   420                           
   421                           ; 2 bytes @ 0x18
   422  000019                     	ds	2
   423  00001B                     ISR@si_544:
   424                           	callstack 0
   425                           
   426                           ; 2 bytes @ 0x1A
   427  00001B                     	ds	2
   428  00001D                     ISR@si_545:
   429                           	callstack 0
   430                           
   431                           ; 2 bytes @ 0x1C
   432  00001D                     	ds	2
   433  00001F                     ?_noRepeat:
   434                           	callstack 0
   435  00001F                     noRepeat@po:
   436                           	callstack 0
   437  00001F                     sort@p:
   438                           	callstack 0
   439                           
   440                           ; 2 bytes @ 0x1E
   441  00001F                     	ds	2
   442  000021                     noRepeat@sixes:
   443                           	callstack 0
   444  000021                     sort@sizes:
   445                           	callstack 0
   446                           
   447                           ; 2 bytes @ 0x20
   448  000021                     	ds	2
   449  000023                     ??_noRepeat:
   450  000023                     ??_sort:
   451                           
   452                           ; 1 bytes @ 0x22
   453  000023                     	ds	4
   454  000027                     noRepeat@t:
   455                           	callstack 0
   456                           
   457                           ; 2 bytes @ 0x26
   458  000027                     	ds	2
   459  000029                     noRepeat@shift:
   460                           	callstack 0
   461                           
   462                           ; 2 bytes @ 0x28
   463  000029                     	ds	2
   464  00002B                     noRepeat@temp:
   465                           	callstack 0
   466                           
   467                           ; 2 bytes @ 0x2A
   468  00002B                     	ds	2
   469  00002D                     noRepeat@size:
   470                           	callstack 0
   471                           
   472                           ; 2 bytes @ 0x2C
   473  00002D                     	ds	2
   474  00002F                     noRepeat@comp:
   475                           	callstack 0
   476                           
   477                           ; 2 bytes @ 0x2E
   478  00002F                     	ds	2
   479  000031                     dataPanelUp@new_size:
   480                           	callstack 0
   481                           
   482                           ; 2 bytes @ 0x30
   483  000031                     	ds	2
   484  000033                     
   485                           ; 1 bytes @ 0x32
   486 ;;
   487 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   488 ;;
   489 ;; *************** function _main *****************
   490 ;; Defined at:
   491 ;;		line 541 in file "main.c"
   492 ;; Parameters:    Size  Location     Type
   493 ;;		None
   494 ;; Auto vars:     Size  Location     Type
   495 ;;		None
   496 ;; Return value:  Size  Location     Type
   497 ;;                  1    wreg      void 
   498 ;; Registers used:
   499 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   500 ;; Tracked objects:
   501 ;;		On entry : 0/0
   502 ;;		On exit  : 0/0
   503 ;;		Unchanged: 0/0
   504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   505 ;;      Params:         0       0       0       0       0       0       0
   506 ;;      Locals:         0       0       0       0       0       0       0
   507 ;;      Temps:          0       0       0       0       0       0       0
   508 ;;      Totals:         0       0       0       0       0       0       0
   509 ;;Total ram usage:        0 bytes
   510 ;; Hardware stack levels required when called: 7
   511 ;; This function calls:
   512 ;;		_boot
   513 ;;		_bootAscensor
   514 ;;		_interruptsInit
   515 ;;		_modeUp
   516 ;; This function is called by:
   517 ;;		Startup code after reset
   518 ;; This function uses a non-reentrant model
   519 ;;
   520                           
   521                           	psect	text0
   522  001256                     __ptext0:
   523                           	callstack 0
   524  001256                     _main:
   525                           	callstack 24
   526  001256  FFFF               	dw	65535	; assembler added errata NOP
   527                           
   528                           ;main.c: 542:     boot();
   529  001258  EC6B  F009         	call	_boot	;wreg free
   530  00125C                     
   531                           ;main.c: 543:     interruptsInit();
   532  00125C  ECF1  F009         	call	_interruptsInit	;wreg free
   533  001260                     
   534                           ;main.c: 544:     bootAscensor();
   535  001260  EC9A  F009         	call	_bootAscensor	;wreg free
   536  001264                     l2303:
   537  001264  FFFF               	dw	65535	; assembler added errata NOP
   538                           
   539                           ;main.c: 547:         if (PORTBbits.RB0) {
   540  001266  A081               	btfss	129,0,c	;volatile
   541  001268  EF38  F009         	goto	u1581
   542  00126C  EF3B  F009         	goto	u1580
   543  001270                     u1581:
   544  001270  FFFF               	dw	65535	; assembler added errata NOP
   545  001272  EF45  F009         	goto	l213
   546  001276                     u1580:
   547  001276  FFFF               	dw	65535	; assembler added errata NOP
   548  001278                     
   549                           ;main.c: 548:             callFL_up = 1;
   550  001278  0E00               	movlw	0
   551  00127A  6E56               	movwf	(_callFL_up+1)^0,c
   552  00127C  0E01               	movlw	1
   553  00127E  6E55               	movwf	_callFL_up^0,c
   554  001280                     l2307:
   555  001280  FFFF               	dw	65535	; assembler added errata NOP
   556                           
   557                           ;main.c: 549:             modeUp();
   558  001282  ECD1  F007         	call	_modeUp	;wreg free
   559                           
   560                           ;main.c: 550:         }
   561  001286  EF65  F009         	goto	l2317
   562  00128A                     l213:
   563  00128A  FFFF               	dw	65535	; assembler added errata NOP
   564  00128C  A281               	btfss	129,1,c	;volatile
   565  00128E  EF4B  F009         	goto	u1591
   566  001292  EF4E  F009         	goto	u1590
   567  001296                     u1591:
   568  001296  FFFF               	dw	65535	; assembler added errata NOP
   569  001298  EF55  F009         	goto	l215
   570  00129C                     u1590:
   571  00129C  FFFF               	dw	65535	; assembler added errata NOP
   572  00129E                     
   573                           ;main.c: 552:             callFL_up = 2;
   574  00129E  0E00               	movlw	0
   575  0012A0  6E56               	movwf	(_callFL_up+1)^0,c
   576  0012A2  0E02               	movlw	2
   577  0012A4  6E55               	movwf	_callFL_up^0,c
   578  0012A6  EF40  F009         	goto	l2307
   579  0012AA                     l215:
   580  0012AA  FFFF               	dw	65535	; assembler added errata NOP
   581  0012AC  A881               	btfss	129,4,c	;volatile
   582  0012AE  EF5B  F009         	goto	u1601
   583  0012B2  EF5E  F009         	goto	u1600
   584  0012B6                     u1601:
   585  0012B6  FFFF               	dw	65535	; assembler added errata NOP
   586  0012B8  EF65  F009         	goto	l2317
   587  0012BC                     u1600:
   588  0012BC  FFFF               	dw	65535	; assembler added errata NOP
   589  0012BE                     
   590                           ;main.c: 556:             callFL_up = 3;
   591  0012BE  0E00               	movlw	0
   592  0012C0  6E56               	movwf	(_callFL_up+1)^0,c
   593  0012C2  0E03               	movlw	3
   594  0012C4  6E55               	movwf	_callFL_up^0,c
   595  0012C6  EF40  F009         	goto	l2307
   596  0012CA                     l2317:
   597  0012CA  FFFF               	dw	65535	; assembler added errata NOP
   598                           
   599                           ;main.c: 560:         if(PORTBbits.RB2){
   600  0012CC  5081               	movf	129,w,c	;volatile
   601  0012CE  EF32  F009         	goto	l2303
   602  0012D2  EF88  F001         	goto	start
   603  0012D6                     __end_of_main:
   604                           	callstack 0
   605                           
   606 ;; *************** function _modeUp *****************
   607 ;; Defined at:
   608 ;;		line 472 in file "main.c"
   609 ;; Parameters:    Size  Location     Type
   610 ;;		None
   611 ;; Auto vars:     Size  Location     Type
   612 ;;  end_size        2    0        unsigned int 
   613 ;; Return value:  Size  Location     Type
   614 ;;                  1    wreg      void 
   615 ;; Registers used:
   616 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   617 ;; Tracked objects:
   618 ;;		On entry : 0/0
   619 ;;		On exit  : 0/0
   620 ;;		Unchanged: 0/0
   621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   622 ;;      Params:         0       0       0       0       0       0       0
   623 ;;      Locals:         0       0       0       0       0       0       0
   624 ;;      Temps:          0       2       0       0       0       0       0
   625 ;;      Totals:         0       2       0       0       0       0       0
   626 ;;Total ram usage:        2 bytes
   627 ;; Hardware stack levels used: 1
   628 ;; Hardware stack levels required when called: 6
   629 ;; This function calls:
   630 ;;		_dataPanelUp
   631 ;;		_rutine_up
   632 ;; This function is called by:
   633 ;;		_main
   634 ;; This function uses a non-reentrant model
   635 ;;
   636                           
   637                           	psect	text1
   638  000FA2                     __ptext1:
   639                           	callstack 0
   640  000FA2                     _modeUp:
   641                           	callstack 0
   642  000FA2  FFFF               	dw	65535	; assembler added errata NOP
   643  000FA4                     
   644                           ;main.c: 473:     modeDown_F = 0;
   645  000FA4  0E00               	movlw	0
   646  000FA6  6E4E               	movwf	(_modeDown_F+1)^0,c
   647  000FA8  0E00               	movlw	0
   648  000FAA  6E4D               	movwf	_modeDown_F^0,c
   649                           
   650                           ;main.c: 474:     modeUp_F = 1;
   651  000FAC  0E00               	movlw	0
   652  000FAE  6E50               	movwf	(_modeUp_F+1)^0,c
   653  000FB0  0E01               	movlw	1
   654  000FB2  6E4F               	movwf	_modeUp_F^0,c
   655                           
   656                           ;main.c: 477:     callsD = 0;
   657  000FB4  0E00               	movlw	0
   658  000FB6  6E58               	movwf	(_callsD+1)^0,c
   659  000FB8  0E00               	movlw	0
   660  000FBA  6E57               	movwf	_callsD^0,c
   661                           
   662                           ;main.c: 478:     calls = 0;
   663  000FBC  0E00               	movlw	0
   664  000FBE  6E5A               	movwf	(_calls+1)^0,c
   665  000FC0  0E00               	movlw	0
   666  000FC2  6E59               	movwf	_calls^0,c
   667                           
   668                           ;main.c: 482:     tasksDown = 0;
   669  000FC4  0E00               	movlw	0
   670  000FC6  6E5E               	movwf	(_tasksDown+1)^0,c
   671  000FC8  0E00               	movlw	0
   672  000FCA  6E5D               	movwf	_tasksDown^0,c
   673                           
   674                           ;main.c: 486:     switch (callFL_up) {
   675  000FCC  EF62  F008         	goto	l2289
   676  000FD0                     l2255:
   677  000FD0  FFFF               	dw	65535	; assembler added errata NOP
   678                           
   679                           ; BSR set to: 0
   680                           ;main.c: 488:             if (nowFL == 1) {
   681  000FD2  0451               	decf	_nowFL^0,w,c
   682  000FD4  1052               	iorwf	(_nowFL+1)^0,w,c
   683  000FD6  A4D8               	btfss	status,2,c
   684  000FD8  EFF0  F007         	goto	u1531
   685  000FDC  EFF3  F007         	goto	u1530
   686  000FE0                     u1531:
   687  000FE0  FFFF               	dw	65535	; assembler added errata NOP
   688  000FE2  EF0D  F008         	goto	l195
   689  000FE6                     u1530:
   690  000FE6  FFFF               	dw	65535	; assembler added errata NOP
   691  000FE8                     
   692                           ; BSR set to: 0
   693                           ;main.c: 490:                 LATDbits.LD0 = 1;
   694  000FE8  808C               	bsf	140,0,c	;volatile
   695  000FEA                     
   696                           ; BSR set to: 0
   697                           ;main.c: 491:                 dataPanelUp();
   698  000FEA  EC46  F005         	call	_dataPanelUp	;wreg free
   699  000FEE                     
   700                           ;main.c: 492:                 LATDbits.LD0 = 0;
   701  000FEE  908C               	bcf	140,0,c	;volatile
   702  000FF0                     
   703                           ;main.c: 493:                 _delay((unsigned long)((300)*(20000000/4000.0)));
   704  000FF0  0E06               	movlw	6
   705  000FF2  0100               	movlb	0	; () banked
   706  000FF4  6F91               	movwf	(??_modeUp+1)& (0+255),b
   707  000FF6  0EB6               	movlw	182
   708  000FF8  6F90               	movwf	??_modeUp& (0+255),b
   709  000FFA  0EF8               	movlw	248
   710  000FFC                     u1617:
   711  000FFC  FFFF               	dw	65535	; errata NOP
   712  000FFE  2EE8               	decfsz	wreg,f,c
   713  001000  D7FD               	bra	u1617
   714  001002  2F90               	decfsz	??_modeUp& (0+255),f,b
   715  001004  D7FB               	bra	u1617
   716  001006  2F91               	decfsz	(??_modeUp+1)& (0+255),f,b
   717  001008  D7F9               	bra	u1617
   718  00100A  D000               	nop2	
   719  00100C  F000               	nop	
   720  00100E                     
   721                           ;main.c: 496:                 LATCbits.LC1 = 0;
   722  00100E  928B               	bcf	139,1,c	;volatile
   723  001010                     l2267:
   724  001010  FFFF               	dw	65535	; assembler added errata NOP
   725                           
   726                           ;main.c: 500:                     rutine_up();
   727  001012  EC5A  F006         	call	_rutine_up	;wreg free
   728  001016  EF08  F008         	goto	l2267
   729  00101A                     l195:
   730  00101A  FFFF               	dw	65535	; assembler added errata NOP
   731                           
   732                           ;main.c: 505:                     LATCbits.LC0 = 0;
   733  00101C  908B               	bcf	139,0,c	;volatile
   734                           
   735                           ;main.c: 506:                 } while (!PORTDbits.RD4);
   736  00101E  A883               	btfss	131,4,c	;volatile
   737  001020  EF14  F008         	goto	u1541
   738  001024  EF17  F008         	goto	u1540
   739  001028                     u1541:
   740  001028  FFFF               	dw	65535	; assembler added errata NOP
   741  00102A  EF0D  F008         	goto	l195
   742  00102E                     u1540:
   743  00102E  FFFF               	dw	65535	; assembler added errata NOP
   744  001030                     
   745                           ;main.c: 507:                 LATCbits.LC0 = 1;
   746  001030  808B               	bsf	139,0,c	;volatile
   747                           
   748                           ;main.c: 509:                 LATDbits.LD0 = 1;
   749  001032  808C               	bsf	140,0,c	;volatile
   750  001034                     
   751                           ;main.c: 510:                 dataPanelUp();
   752  001034  EC46  F005         	call	_dataPanelUp	;wreg free
   753  001038                     
   754                           ;main.c: 511:                 LATDbits.LD0 = 0;
   755  001038  908C               	bcf	140,0,c	;volatile
   756  00103A                     l2273:
   757  00103A  FFFF               	dw	65535	; assembler added errata NOP
   758                           
   759                           ;main.c: 515:             if (nowFL == 2) {
   760  00103C  0E02               	movlw	2
   761  00103E  1851               	xorwf	_nowFL^0,w,c
   762  001040  1052               	iorwf	(_nowFL+1)^0,w,c
   763  001042  A4D8               	btfss	status,2,c
   764  001044  EF26  F008         	goto	u1551
   765  001048  EF29  F008         	goto	u1550
   766  00104C                     u1551:
   767  00104C  FFFF               	dw	65535	; assembler added errata NOP
   768  00104E  EF43  F008         	goto	l2287
   769  001052                     u1550:
   770  001052  FFFF               	dw	65535	; assembler added errata NOP
   771  001054                     
   772                           ;main.c: 517:                 LATDbits.LD1 = 1;
   773  001054  828C               	bsf	140,1,c	;volatile
   774  001056                     
   775                           ;main.c: 518:                 dataPanelUp();
   776  001056  EC46  F005         	call	_dataPanelUp	;wreg free
   777  00105A                     
   778                           ;main.c: 519:                 LATDbits.LD1 = 0;
   779  00105A  928C               	bcf	140,1,c	;volatile
   780  00105C                     
   781                           ;main.c: 520:                 _delay((unsigned long)((300)*(20000000/4000.0)));
   782  00105C  0E06               	movlw	6
   783  00105E  0100               	movlb	0	; () banked
   784  001060  6F91               	movwf	(??_modeUp+1)& (0+255),b
   785  001062  0EB6               	movlw	182
   786  001064  6F90               	movwf	??_modeUp& (0+255),b
   787  001066  0EF8               	movlw	248
   788  001068                     u1627:
   789  001068  FFFF               	dw	65535	; errata NOP
   790  00106A  2EE8               	decfsz	wreg,f,c
   791  00106C  D7FD               	bra	u1627
   792  00106E  2F90               	decfsz	??_modeUp& (0+255),f,b
   793  001070  D7FB               	bra	u1627
   794  001072  2F91               	decfsz	(??_modeUp+1)& (0+255),f,b
   795  001074  D7F9               	bra	u1627
   796  001076  D000               	nop2	
   797  001078  F000               	nop	
   798  00107A                     
   799                           ;main.c: 523:                 LATCbits.LC1 = 0;
   800  00107A  928B               	bcf	139,1,c	;volatile
   801  00107C                     l2285:
   802  00107C  FFFF               	dw	65535	; assembler added errata NOP
   803                           
   804                           ;main.c: 526:                     rutine_up();
   805  00107E  EC5A  F006         	call	_rutine_up	;wreg free
   806  001082  EF3E  F008         	goto	l2285
   807  001086                     l2287:
   808  001086  FFFF               	dw	65535	; assembler added errata NOP
   809                           
   810                           ;main.c: 530:                 if (nowFL < 2){
   811  001088  BE52               	btfsc	(_nowFL+1)^0,7,c
   812  00108A  EF53  F008         	goto	u1560
   813  00108E  5052               	movf	(_nowFL+1)^0,w,c
   814  001090  E107               	bnz	u1561
   815  001092  0E02               	movlw	2
   816  001094  5C51               	subwf	_nowFL^0,w,c
   817  001096  B0D8               	btfsc	status,0,c
   818  001098  EF50  F008         	goto	u1561
   819  00109C  EF53  F008         	goto	u1560
   820  0010A0                     u1561:
   821  0010A0  FFFF               	dw	65535	; assembler added errata NOP
   822  0010A2  EF7B  F008         	goto	l207
   823  0010A6                     u1560:
   824  0010A6  FFFF               	dw	65535	; assembler added errata NOP
   825  0010A8                     l204:
   826  0010A8  FFFF               	dw	65535	; assembler added errata NOP
   827                           
   828                           ;main.c: 532:                         LATCbits.LC1 = 0;
   829  0010AA  928B               	bcf	139,1,c	;volatile
   830                           
   831                           ;main.c: 533:                     }while(!PORTDbits.RD5);
   832  0010AC  AA83               	btfss	131,5,c	;volatile
   833  0010AE  EF5B  F008         	goto	u1571
   834  0010B2  EF5E  F008         	goto	u1570
   835  0010B6                     u1571:
   836  0010B6  FFFF               	dw	65535	; assembler added errata NOP
   837  0010B8  EF54  F008         	goto	l204
   838  0010BC                     u1570:
   839  0010BC  FFFF               	dw	65535	; assembler added errata NOP
   840  0010BE                     
   841                           ;main.c: 534:                     LATCbits.LC1 = 0;
   842  0010BE  928B               	bcf	139,1,c	;volatile
   843  0010C0  EF7B  F008         	goto	l207
   844  0010C4                     l2289:
   845  0010C4  FFFF               	dw	65535	; assembler added errata NOP
   846  0010C6  C055  F090         	movff	_callFL_up,??_modeUp
   847  0010CA  C056  F091         	movff	_callFL_up+1,??_modeUp+1
   848                           
   849                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   850                           ; Switch size 1, requested type "simple"
   851                           ; Number of cases is 1, Range of values is 0 to 0
   852                           ; switch strategies available:
   853                           ; Name         Instructions Cycles
   854                           ; simple_byte            4     3 (average)
   855                           ;	Chosen strategy is simple_byte
   856  0010CE  0100               	movlb	0	; () banked
   857  0010D0  5191               	movf	(??_modeUp+1)& (0+255),w,b
   858  0010D2  0A00               	xorlw	0	; case 0
   859  0010D4  B4D8               	btfsc	status,2,c
   860  0010D6  EF6F  F008         	goto	l2399
   861  0010DA  EF7B  F008         	goto	l207
   862  0010DE                     l2399:
   863  0010DE  FFFF               	dw	65535	; assembler added errata NOP
   864                           
   865                           ; BSR set to: 0
   866                           ; Switch size 1, requested type "simple"
   867                           ; Number of cases is 2, Range of values is 1 to 2
   868                           ; switch strategies available:
   869                           ; Name         Instructions Cycles
   870                           ; simple_byte            7     4 (average)
   871                           ;	Chosen strategy is simple_byte
   872  0010E0  5190               	movf	??_modeUp& (0+255),w,b
   873  0010E2  0A01               	xorlw	1	; case 1
   874  0010E4  B4D8               	btfsc	status,2,c
   875  0010E6  EFE8  F007         	goto	l2255
   876  0010EA  0A03               	xorlw	3	; case 2
   877  0010EC  B4D8               	btfsc	status,2,c
   878  0010EE  EF1D  F008         	goto	l2273
   879  0010F2  EF7B  F008         	goto	l207
   880  0010F6                     l207:
   881  0010F6  FFFF               	dw	65535	; assembler added errata NOP
   882  0010F8  0012               	return		;funcret
   883  0010FA  FFFF               	dw	65535	; errata NOP
   884  0010FC                     __end_of_modeUp:
   885                           	callstack 0
   886                           
   887 ;; *************** function _rutine_up *****************
   888 ;; Defined at:
   889 ;;		line 432 in file "main.c"
   890 ;; Parameters:    Size  Location     Type
   891 ;;		None
   892 ;; Auto vars:     Size  Location     Type
   893 ;;  re              2   14[BANK0 ] int 
   894 ;;  i               2   12[BANK0 ] int 
   895 ;; Return value:  Size  Location     Type
   896 ;;                  1    wreg      void 
   897 ;; Registers used:
   898 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
   899 ;; Tracked objects:
   900 ;;		On entry : 0/0
   901 ;;		On exit  : 0/0
   902 ;;		Unchanged: 0/0
   903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   904 ;;      Params:         0       0       0       0       0       0       0
   905 ;;      Locals:         0       4       0       0       0       0       0
   906 ;;      Temps:          0       2       0       0       0       0       0
   907 ;;      Totals:         0       6       0       0       0       0       0
   908 ;;Total ram usage:        6 bytes
   909 ;; Hardware stack levels used: 1
   910 ;; Hardware stack levels required when called: 5
   911 ;; This function calls:
   912 ;;		_modeDown
   913 ;;		_modeUpControl
   914 ;;		_noRepeat
   915 ;;		_sort
   916 ;; This function is called by:
   917 ;;		_modeUp
   918 ;; This function uses a non-reentrant model
   919 ;;
   920                           
   921                           	psect	text2
   922  000CB4                     __ptext2:
   923                           	callstack 0
   924  000CB4                     _rutine_up:
   925                           	callstack 0
   926  000CB4  FFFF               	dw	65535	; assembler added errata NOP
   927  000CB6                     
   928                           ;main.c: 434:     modeUpControl();
   929  000CB6  EC8A  F001         	call	_modeUpControl	;wreg free
   930  000CBA                     
   931                           ;main.c: 435:     if (tasksUp == 0){
   932  000CBA  505B               	movf	_tasksUp^0,w,c
   933  000CBC  105C               	iorwf	(_tasksUp+1)^0,w,c
   934  000CBE  A4D8               	btfss	status,2,c
   935  000CC0  EF64  F006         	goto	u1481
   936  000CC4  EF67  F006         	goto	u1480
   937  000CC8                     u1481:
   938  000CC8  FFFF               	dw	65535	; assembler added errata NOP
   939  000CCA  EF20  F007         	goto	l182
   940  000CCE                     u1480:
   941  000CCE  FFFF               	dw	65535	; assembler added errata NOP
   942  000CD0                     
   943                           ;main.c: 436:         if((tasksDown > 0) || callsD > 0){
   944  000CD0  BE5E               	btfsc	(_tasksDown+1)^0,7,c
   945  000CD2  EF76  F006         	goto	u1490
   946  000CD6  505E               	movf	(_tasksDown+1)^0,w,c
   947  000CD8  E106               	bnz	u1491
   948  000CDA  045D               	decf	_tasksDown^0,w,c
   949  000CDC  B0D8               	btfsc	status,0,c
   950  000CDE  EF73  F006         	goto	u1491
   951  000CE2  EF76  F006         	goto	u1490
   952  000CE6                     u1491:
   953  000CE6  FFFF               	dw	65535	; assembler added errata NOP
   954  000CE8  EF85  F006         	goto	l2227
   955  000CEC                     u1490:
   956  000CEC  FFFF               	dw	65535	; assembler added errata NOP
   957  000CEE  BE58               	btfsc	(_callsD+1)^0,7,c
   958  000CF0  EF82  F006         	goto	u1501
   959  000CF4  5058               	movf	(_callsD+1)^0,w,c
   960  000CF6  E109               	bnz	u1500
   961  000CF8  0457               	decf	_callsD^0,w,c
   962  000CFA  A0D8               	btfss	status,0,c
   963  000CFC  EF82  F006         	goto	u1501
   964  000D00  EF85  F006         	goto	u1500
   965  000D04                     u1501:
   966  000D04  FFFF               	dw	65535	; assembler added errata NOP
   967  000D06  EF17  F007         	goto	l2251
   968  000D0A                     u1500:
   969  000D0A                     l2227:
   970  000D0A  FFFF               	dw	65535	; assembler added errata NOP
   971                           
   972                           ;main.c: 437:             for(int i = 0; i < callsD; i++){
   973  000D0C  0E00               	movlw	0
   974  000D0E  0100               	movlb	0	; () banked
   975  000D10  6F8D               	movwf	(rutine_up@i+1)& (0+255),b
   976  000D12  0E00               	movlw	0
   977  000D14  6F8C               	movwf	rutine_up@i& (0+255),b
   978  000D16  EFAC  F006         	goto	l2233
   979  000D1A                     l2229:
   980  000D1A  FFFF               	dw	65535	; assembler added errata NOP
   981                           
   982                           ; BSR set to: 0
   983                           ;main.c: 438:                 queueDown[tasksDown + i] = callsInUp[i];
   984  000D1C  90D8               	bcf	status,0,c
   985  000D1E  358C               	rlcf	rutine_up@i& (0+255),w,b
   986  000D20  6ED9               	movwf	fsr2l,c
   987  000D22  358D               	rlcf	(rutine_up@i+1)& (0+255),w,b
   988  000D24  6EDA               	movwf	fsr2h,c
   989  000D26  0E00               	movlw	low _callsInUp
   990  000D28  26D9               	addwf	fsr2l,f,c
   991  000D2A  0E05               	movlw	high _callsInUp
   992  000D2C  22DA               	addwfc	fsr2h,f,c
   993  000D2E  518C               	movf	rutine_up@i& (0+255),w,b
   994  000D30  245D               	addwf	_tasksDown^0,w,c
   995  000D32  6F8A               	movwf	??_rutine_up& (0+255),b
   996  000D34  518D               	movf	(rutine_up@i+1)& (0+255),w,b
   997  000D36  205E               	addwfc	(_tasksDown+1)^0,w,c
   998  000D38  6F8B               	movwf	(??_rutine_up+1)& (0+255),b
   999  000D3A  90D8               	bcf	status,0,c
  1000  000D3C  378A               	rlcf	??_rutine_up& (0+255),f,b
  1001  000D3E  378B               	rlcf	(??_rutine_up+1)& (0+255),f,b
  1002  000D40  0E00               	movlw	low _queueDown
  1003  000D42  258A               	addwf	??_rutine_up& (0+255),w,b
  1004  000D44  6EE1               	movwf	fsr1l,c
  1005  000D46  0E04               	movlw	high _queueDown
  1006  000D48  218B               	addwfc	(??_rutine_up+1)& (0+255),w,b
  1007  000D4A  6EE2               	movwf	fsr1h,c
  1008  000D4C  CFDE FFE6          	movff	postinc2,postinc1
  1009  000D50  CFDD FFE5          	movff	postdec2,postdec1
  1010  000D54                     
  1011                           ; BSR set to: 0
  1012                           ;main.c: 439:             }
  1013  000D54  4B8C               	infsnz	rutine_up@i& (0+255),f,b
  1014  000D56  2B8D               	incf	(rutine_up@i+1)& (0+255),f,b
  1015  000D58                     l2233:
  1016  000D58  FFFF               	dw	65535	; assembler added errata NOP
  1017                           
  1018                           ; BSR set to: 0
  1019  000D5A  5057               	movf	_callsD^0,w,c
  1020  000D5C  5D8C               	subwf	rutine_up@i& (0+255),w,b
  1021  000D5E  518D               	movf	(rutine_up@i+1)& (0+255),w,b
  1022  000D60  0A80               	xorlw	128
  1023  000D62  6F8A               	movwf	??_rutine_up& (0+255),b
  1024  000D64  5058               	movf	(_callsD+1)^0,w,c
  1025  000D66  0A80               	xorlw	128
  1026  000D68  598A               	subwfb	??_rutine_up& (0+255),w,b
  1027  000D6A  A0D8               	btfss	status,0,c
  1028  000D6C  EFBA  F006         	goto	u1511
  1029  000D70  EFBD  F006         	goto	u1510
  1030  000D74                     u1511:
  1031  000D74  FFFF               	dw	65535	; assembler added errata NOP
  1032  000D76  EF8D  F006         	goto	l2229
  1033  000D7A                     u1510:
  1034  000D7A  FFFF               	dw	65535	; assembler added errata NOP
  1035  000D7C                     
  1036                           ; BSR set to: 0
  1037                           ;main.c: 441:             sort(&queueDown[0], tasksDown + callsD);
  1038  000D7C  0E00               	movlw	low _queueDown
  1039  000D7E  6E1F               	movwf	sort@p^0,c
  1040  000D80  0E04               	movlw	high _queueDown
  1041  000D82  6E20               	movwf	(sort@p+1)^0,c
  1042  000D84  5057               	movf	_callsD^0,w,c
  1043  000D86  245D               	addwf	_tasksDown^0,w,c
  1044  000D88  6E21               	movwf	sort@sizes^0,c
  1045  000D8A  5058               	movf	(_callsD+1)^0,w,c
  1046  000D8C  205E               	addwfc	(_tasksDown+1)^0,w,c
  1047  000D8E  6E22               	movwf	(sort@sizes+1)^0,c
  1048  000D90  EC14  F003         	call	_sort	;wreg free
  1049                           
  1050                           ;main.c: 442:             tasksDown = noRepeat(&queueDown[0], tasksDown + callsD);
  1051  000D94  0E00               	movlw	low _queueDown
  1052  000D96  6E1F               	movwf	noRepeat@po^0,c
  1053  000D98  0E04               	movlw	high _queueDown
  1054  000D9A  6E20               	movwf	(noRepeat@po+1)^0,c
  1055  000D9C  5057               	movf	_callsD^0,w,c
  1056  000D9E  245D               	addwf	_tasksDown^0,w,c
  1057  000DA0  6E21               	movwf	noRepeat@sixes^0,c
  1058  000DA2  5058               	movf	(_callsD+1)^0,w,c
  1059  000DA4  205E               	addwfc	(_tasksDown+1)^0,w,c
  1060  000DA6  6E22               	movwf	(noRepeat@sixes+1)^0,c
  1061  000DA8  EC7E  F008         	call	_noRepeat	;wreg free
  1062  000DAC  C01F  F05D         	movff	?_noRepeat,_tasksDown
  1063  000DB0  C020  F05E         	movff	?_noRepeat+1,_tasksDown+1
  1064  000DB4                     
  1065                           ;main.c: 444:             callFL_down = queueDown[0];
  1066  000DB4  C400  F053         	movff	_queueDown,_callFL_down
  1067  000DB8  C401  F054         	movff	_queueDown+1,_callFL_down+1
  1068  000DBC                     
  1069                           ;main.c: 445:             for (int re = 0; re < tasksDown; re++){
  1070  000DBC  0E00               	movlw	0
  1071  000DBE  0100               	movlb	0	; () banked
  1072  000DC0  6F8F               	movwf	(rutine_up@re+1)& (0+255),b
  1073  000DC2  0E00               	movlw	0
  1074  000DC4  6F8E               	movwf	rutine_up@re& (0+255),b
  1075  000DC6  EFFE  F006         	goto	l2245
  1076  000DCA                     l2241:
  1077  000DCA  FFFF               	dw	65535	; assembler added errata NOP
  1078                           
  1079                           ; BSR set to: 0
  1080                           ;main.c: 446:                 queueDown[re] = queueDown[re + 1];
  1081  000DCC  90D8               	bcf	status,0,c
  1082  000DCE  358E               	rlcf	rutine_up@re& (0+255),w,b
  1083  000DD0  6ED9               	movwf	fsr2l,c
  1084  000DD2  358F               	rlcf	(rutine_up@re+1)& (0+255),w,b
  1085  000DD4  6EDA               	movwf	fsr2h,c
  1086  000DD6  0E02               	movlw	low (_queueDown+2)
  1087  000DD8  26D9               	addwf	fsr2l,f,c
  1088  000DDA  0E04               	movlw	high (_queueDown+2)
  1089  000DDC  22DA               	addwfc	fsr2h,f,c
  1090  000DDE  90D8               	bcf	status,0,c
  1091  000DE0  358E               	rlcf	rutine_up@re& (0+255),w,b
  1092  000DE2  6EE1               	movwf	fsr1l,c
  1093  000DE4  358F               	rlcf	(rutine_up@re+1)& (0+255),w,b
  1094  000DE6  6EE2               	movwf	fsr1h,c
  1095  000DE8  0E00               	movlw	low _queueDown
  1096  000DEA  26E1               	addwf	fsr1l,f,c
  1097  000DEC  0E04               	movlw	high _queueDown
  1098  000DEE  22E2               	addwfc	fsr1h,f,c
  1099  000DF0  CFDE FFE6          	movff	postinc2,postinc1
  1100  000DF4  CFDD FFE5          	movff	postdec2,postdec1
  1101  000DF8                     
  1102                           ; BSR set to: 0
  1103                           ;main.c: 447:             }
  1104  000DF8  4B8E               	infsnz	rutine_up@re& (0+255),f,b
  1105  000DFA  2B8F               	incf	(rutine_up@re+1)& (0+255),f,b
  1106  000DFC                     l2245:
  1107  000DFC  FFFF               	dw	65535	; assembler added errata NOP
  1108                           
  1109                           ; BSR set to: 0
  1110  000DFE  505D               	movf	_tasksDown^0,w,c
  1111  000E00  5D8E               	subwf	rutine_up@re& (0+255),w,b
  1112  000E02  518F               	movf	(rutine_up@re+1)& (0+255),w,b
  1113  000E04  0A80               	xorlw	128
  1114  000E06  6F8A               	movwf	??_rutine_up& (0+255),b
  1115  000E08  505E               	movf	(_tasksDown+1)^0,w,c
  1116  000E0A  0A80               	xorlw	128
  1117  000E0C  598A               	subwfb	??_rutine_up& (0+255),w,b
  1118  000E0E  A0D8               	btfss	status,0,c
  1119  000E10  EF0C  F007         	goto	u1521
  1120  000E14  EF0F  F007         	goto	u1520
  1121  000E18                     u1521:
  1122  000E18  FFFF               	dw	65535	; assembler added errata NOP
  1123  000E1A  EFE5  F006         	goto	l2241
  1124  000E1E                     u1520:
  1125  000E1E  FFFF               	dw	65535	; assembler added errata NOP
  1126  000E20                     
  1127                           ; BSR set to: 0
  1128                           ;main.c: 448:             tasksDown--;
  1129  000E20  065D               	decf	_tasksDown^0,f,c
  1130  000E22  A0D8               	btfss	status,0,c
  1131  000E24  065E               	decf	(_tasksDown+1)^0,f,c
  1132  000E26                     
  1133                           ; BSR set to: 0
  1134                           ;main.c: 451:             modeDown();
  1135  000E26  ECDE  F009         	call	_modeDown	;wreg free
  1136                           
  1137                           ;main.c: 452:         }
  1138  000E2A  EF20  F007         	goto	l182
  1139  000E2E                     l2251:
  1140  000E2E  FFFF               	dw	65535	; assembler added errata NOP
  1141                           
  1142                           ;main.c: 455:             callFL_up = 0;
  1143  000E30  0E00               	movlw	0
  1144  000E32  6E56               	movwf	(_callFL_up+1)^0,c
  1145  000E34  0E00               	movlw	0
  1146  000E36  6E55               	movwf	_callFL_up^0,c
  1147                           
  1148                           ;main.c: 456:             modeUp_F = 0;
  1149  000E38  0E00               	movlw	0
  1150  000E3A  6E50               	movwf	(_modeUp_F+1)^0,c
  1151  000E3C  0E00               	movlw	0
  1152  000E3E  6E4F               	movwf	_modeUp_F^0,c
  1153  000E40                     l182:
  1154  000E40  FFFF               	dw	65535	; assembler added errata NOP
  1155  000E42  0012               	return		;funcret
  1156  000E44  FFFF               	dw	65535	; errata NOP
  1157  000E46                     __end_of_rutine_up:
  1158                           	callstack 0
  1159                           
  1160 ;; *************** function _modeUpControl *****************
  1161 ;; Defined at:
  1162 ;;		line 336 in file "main.c"
  1163 ;; Parameters:    Size  Location     Type
  1164 ;;		None
  1165 ;; Auto vars:     Size  Location     Type
  1166 ;;  i               2    8[BANK0 ] int 
  1167 ;;  i               2    6[BANK0 ] int 
  1168 ;;  i               2    4[BANK0 ] int 
  1169 ;;  i               2    2[BANK0 ] int 
  1170 ;; Return value:  Size  Location     Type
  1171 ;;                  1    wreg      void 
  1172 ;; Registers used:
  1173 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1174 ;; Tracked objects:
  1175 ;;		On entry : 0/0
  1176 ;;		On exit  : 0/0
  1177 ;;		Unchanged: 0/0
  1178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1179 ;;      Params:         0       0       0       0       0       0       0
  1180 ;;      Locals:         0       8       0       0       0       0       0
  1181 ;;      Temps:          0       2       0       0       0       0       0
  1182 ;;      Totals:         0      10       0       0       0       0       0
  1183 ;;Total ram usage:       10 bytes
  1184 ;; Hardware stack levels used: 1
  1185 ;; Hardware stack levels required when called: 4
  1186 ;; This function calls:
  1187 ;;		_dataPanelUp
  1188 ;; This function is called by:
  1189 ;;		_rutine_up
  1190 ;; This function uses a non-reentrant model
  1191 ;;
  1192                           
  1193                           	psect	text3
  1194  000314                     __ptext3:
  1195                           	callstack 0
  1196  000314                     _modeUpControl:
  1197                           	callstack 0
  1198  000314  FFFF               	dw	65535	; assembler added errata NOP
  1199  000316                     
  1200                           ;main.c: 338:     static int cont = 0;;main.c: 340:     switch (queueUp[cont]) {
  1201  000316  EFF0  F002         	goto	l2209
  1202  00031A                     l147:
  1203  00031A  FFFF               	dw	65535	; assembler added errata NOP
  1204                           
  1205                           ; BSR set to: 0
  1206                           ;main.c: 342:             if (PORTDbits.RD4) {
  1207  00031C  A883               	btfss	131,4,c	;volatile
  1208  00031E  EF93  F001         	goto	u1401
  1209  000322  EF96  F001         	goto	u1400
  1210  000326                     u1401:
  1211  000326  FFFF               	dw	65535	; assembler added errata NOP
  1212  000328  EF11  F003         	goto	l168
  1213  00032C                     u1400:
  1214  00032C  FFFF               	dw	65535	; assembler added errata NOP
  1215  00032E                     
  1216                           ; BSR set to: 0
  1217                           ;main.c: 346:                 LATCbits.LC1 = 1;
  1218  00032E  828B               	bsf	139,1,c	;volatile
  1219  000330                     
  1220                           ; BSR set to: 0
  1221                           ;main.c: 349:                 for (int i = 0; i < tasksUp; i++) {
  1222  000330  0E00               	movlw	0
  1223  000332  6F83               	movwf	(modeUpControl@i+1)& (0+255),b
  1224  000334  0E00               	movlw	0
  1225  000336  6F82               	movwf	modeUpControl@i& (0+255),b
  1226  000338  EFB7  F001         	goto	l2133
  1227  00033C                     l2129:
  1228  00033C  FFFF               	dw	65535	; assembler added errata NOP
  1229                           
  1230                           ; BSR set to: 0
  1231                           ;main.c: 350:                     queueUp[i] = queueUp[i + 1];
  1232  00033E  90D8               	bcf	status,0,c
  1233  000340  3582               	rlcf	modeUpControl@i& (0+255),w,b
  1234  000342  6ED9               	movwf	fsr2l,c
  1235  000344  3583               	rlcf	(modeUpControl@i+1)& (0+255),w,b
  1236  000346  6EDA               	movwf	fsr2h,c
  1237  000348  0E02               	movlw	low (_queueUp+2)
  1238  00034A  26D9               	addwf	fsr2l,f,c
  1239  00034C  0E03               	movlw	high (_queueUp+2)
  1240  00034E  22DA               	addwfc	fsr2h,f,c
  1241  000350  90D8               	bcf	status,0,c
  1242  000352  3582               	rlcf	modeUpControl@i& (0+255),w,b
  1243  000354  6EE1               	movwf	fsr1l,c
  1244  000356  3583               	rlcf	(modeUpControl@i+1)& (0+255),w,b
  1245  000358  6EE2               	movwf	fsr1h,c
  1246  00035A  0E00               	movlw	low _queueUp
  1247  00035C  26E1               	addwf	fsr1l,f,c
  1248  00035E  0E03               	movlw	high _queueUp
  1249  000360  22E2               	addwfc	fsr1h,f,c
  1250  000362  CFDE FFE6          	movff	postinc2,postinc1
  1251  000366  CFDD FFE5          	movff	postdec2,postdec1
  1252  00036A                     
  1253                           ; BSR set to: 0
  1254                           ;main.c: 351:                 }
  1255  00036A  4B82               	infsnz	modeUpControl@i& (0+255),f,b
  1256  00036C  2B83               	incf	(modeUpControl@i+1)& (0+255),f,b
  1257  00036E                     l2133:
  1258  00036E  FFFF               	dw	65535	; assembler added errata NOP
  1259                           
  1260                           ; BSR set to: 0
  1261  000370  505B               	movf	_tasksUp^0,w,c
  1262  000372  5D82               	subwf	modeUpControl@i& (0+255),w,b
  1263  000374  5183               	movf	(modeUpControl@i+1)& (0+255),w,b
  1264  000376  0A80               	xorlw	128
  1265  000378  6F80               	movwf	??_modeUpControl& (0+255),b
  1266  00037A  505C               	movf	(_tasksUp+1)^0,w,c
  1267  00037C  0A80               	xorlw	128
  1268  00037E  5980               	subwfb	??_modeUpControl& (0+255),w,b
  1269  000380  A0D8               	btfss	status,0,c
  1270  000382  EFC5  F001         	goto	u1411
  1271  000386  EFC8  F001         	goto	u1410
  1272  00038A                     u1411:
  1273  00038A  FFFF               	dw	65535	; assembler added errata NOP
  1274  00038C  EF9E  F001         	goto	l2129
  1275  000390                     u1410:
  1276  000390  FFFF               	dw	65535	; assembler added errata NOP
  1277  000392                     
  1278                           ; BSR set to: 0
  1279                           ;main.c: 352:                 tasksUp--;
  1280  000392  065B               	decf	_tasksUp^0,f,c
  1281  000394  A0D8               	btfss	status,0,c
  1282  000396  065C               	decf	(_tasksUp+1)^0,f,c
  1283  000398                     
  1284                           ; BSR set to: 0
  1285                           ;main.c: 353:                 LATDbits.LD0 = 1;
  1286  000398  808C               	bsf	140,0,c	;volatile
  1287  00039A                     
  1288                           ; BSR set to: 0
  1289                           ;main.c: 354:                 nowFL = 1;
  1290  00039A  0E00               	movlw	0
  1291  00039C  6E52               	movwf	(_nowFL+1)^0,c
  1292  00039E  0E01               	movlw	1
  1293  0003A0  6E51               	movwf	_nowFL^0,c
  1294  0003A2                     
  1295                           ; BSR set to: 0
  1296                           ;main.c: 356:                 dataPanelUp();
  1297  0003A2  EC46  F005         	call	_dataPanelUp	;wreg free
  1298  0003A6                     
  1299                           ;main.c: 358:                 LATDbits.LD0 = 0;
  1300  0003A6  908C               	bcf	140,0,c	;volatile
  1301  0003A8                     
  1302                           ;main.c: 359:                 _delay((unsigned long)((300)*(20000000/4000.0)));
  1303  0003A8  0E06               	movlw	6
  1304  0003AA  0100               	movlb	0	; () banked
  1305  0003AC  6F81               	movwf	(??_modeUpControl+1)& (0+255),b
  1306  0003AE  0EB6               	movlw	182
  1307  0003B0  6F80               	movwf	??_modeUpControl& (0+255),b
  1308  0003B2  0EF8               	movlw	248
  1309  0003B4                     u1637:
  1310  0003B4  FFFF               	dw	65535	; errata NOP
  1311  0003B6  2EE8               	decfsz	wreg,f,c
  1312  0003B8  D7FD               	bra	u1637
  1313  0003BA  2F80               	decfsz	??_modeUpControl& (0+255),f,b
  1314  0003BC  D7FB               	bra	u1637
  1315  0003BE  2F81               	decfsz	(??_modeUpControl+1)& (0+255),f,b
  1316  0003C0  D7F9               	bra	u1637
  1317  0003C2  D000               	nop2	
  1318  0003C4  F000               	nop	
  1319  0003C6                     
  1320                           ;main.c: 361:                 LATCbits.LC1 = 0;
  1321  0003C6  928B               	bcf	139,1,c	;volatile
  1322  0003C8  EF11  F003         	goto	l168
  1323  0003CC                     l153:
  1324  0003CC  FFFF               	dw	65535	; assembler added errata NOP
  1325                           
  1326                           ; BSR set to: 0
  1327                           ;main.c: 366:             if (PORTDbits.RD5) {
  1328  0003CE  AA83               	btfss	131,5,c	;volatile
  1329  0003D0  EFEC  F001         	goto	u1421
  1330  0003D4  EFEF  F001         	goto	u1420
  1331  0003D8                     u1421:
  1332  0003D8  FFFF               	dw	65535	; assembler added errata NOP
  1333  0003DA  EF11  F003         	goto	l168
  1334  0003DE                     u1420:
  1335  0003DE  FFFF               	dw	65535	; assembler added errata NOP
  1336  0003E0                     
  1337                           ; BSR set to: 0
  1338                           ;main.c: 370:                 LATCbits.LC1 = 1;
  1339  0003E0  828B               	bsf	139,1,c	;volatile
  1340                           
  1341                           ;main.c: 371:                 LATDbits.LD1 = 1;
  1342  0003E2  828C               	bsf	140,1,c	;volatile
  1343  0003E4                     
  1344                           ; BSR set to: 0
  1345                           ;main.c: 372:                 nowFL = 2;
  1346  0003E4  0E00               	movlw	0
  1347  0003E6  6E52               	movwf	(_nowFL+1)^0,c
  1348  0003E8  0E02               	movlw	2
  1349  0003EA  6E51               	movwf	_nowFL^0,c
  1350                           
  1351                           ;main.c: 374:                 for (int i = 0; i < tasksUp; i++) {
  1352  0003EC  0E00               	movlw	0
  1353  0003EE  6F85               	movwf	(modeUpControl@i_510+1)& (0+255),b
  1354  0003F0  0E00               	movlw	0
  1355  0003F2  6F84               	movwf	modeUpControl@i_510& (0+255),b
  1356  0003F4  EF15  F002         	goto	l2157
  1357  0003F8                     l2153:
  1358  0003F8  FFFF               	dw	65535	; assembler added errata NOP
  1359                           
  1360                           ; BSR set to: 0
  1361                           ;main.c: 375:                     queueUp[i] = queueUp[i + 1];
  1362  0003FA  90D8               	bcf	status,0,c
  1363  0003FC  3584               	rlcf	modeUpControl@i_510& (0+255),w,b
  1364  0003FE  6ED9               	movwf	fsr2l,c
  1365  000400  3585               	rlcf	(modeUpControl@i_510+1)& (0+255),w,b
  1366  000402  6EDA               	movwf	fsr2h,c
  1367  000404  0E02               	movlw	low (_queueUp+2)
  1368  000406  26D9               	addwf	fsr2l,f,c
  1369  000408  0E03               	movlw	high (_queueUp+2)
  1370  00040A  22DA               	addwfc	fsr2h,f,c
  1371  00040C  90D8               	bcf	status,0,c
  1372  00040E  3584               	rlcf	modeUpControl@i_510& (0+255),w,b
  1373  000410  6EE1               	movwf	fsr1l,c
  1374  000412  3585               	rlcf	(modeUpControl@i_510+1)& (0+255),w,b
  1375  000414  6EE2               	movwf	fsr1h,c
  1376  000416  0E00               	movlw	low _queueUp
  1377  000418  26E1               	addwf	fsr1l,f,c
  1378  00041A  0E03               	movlw	high _queueUp
  1379  00041C  22E2               	addwfc	fsr1h,f,c
  1380  00041E  CFDE FFE6          	movff	postinc2,postinc1
  1381  000422  CFDD FFE5          	movff	postdec2,postdec1
  1382  000426                     
  1383                           ; BSR set to: 0
  1384                           ;main.c: 376:                 }
  1385  000426  4B84               	infsnz	modeUpControl@i_510& (0+255),f,b
  1386  000428  2B85               	incf	(modeUpControl@i_510+1)& (0+255),f,b
  1387  00042A                     l2157:
  1388  00042A  FFFF               	dw	65535	; assembler added errata NOP
  1389                           
  1390                           ; BSR set to: 0
  1391  00042C  505B               	movf	_tasksUp^0,w,c
  1392  00042E  5D84               	subwf	modeUpControl@i_510& (0+255),w,b
  1393  000430  5185               	movf	(modeUpControl@i_510+1)& (0+255),w,b
  1394  000432  0A80               	xorlw	128
  1395  000434  6F80               	movwf	??_modeUpControl& (0+255),b
  1396  000436  505C               	movf	(_tasksUp+1)^0,w,c
  1397  000438  0A80               	xorlw	128
  1398  00043A  5980               	subwfb	??_modeUpControl& (0+255),w,b
  1399  00043C  A0D8               	btfss	status,0,c
  1400  00043E  EF23  F002         	goto	u1431
  1401  000442  EF26  F002         	goto	u1430
  1402  000446                     u1431:
  1403  000446  FFFF               	dw	65535	; assembler added errata NOP
  1404  000448  EFFC  F001         	goto	l2153
  1405  00044C                     u1430:
  1406  00044C  FFFF               	dw	65535	; assembler added errata NOP
  1407  00044E                     
  1408                           ; BSR set to: 0
  1409                           ;main.c: 377:                 tasksUp--;
  1410  00044E  065B               	decf	_tasksUp^0,f,c
  1411  000450  A0D8               	btfss	status,0,c
  1412  000452  065C               	decf	(_tasksUp+1)^0,f,c
  1413  000454                     
  1414                           ; BSR set to: 0
  1415                           ;main.c: 378:                 dataPanelUp();
  1416  000454  EC46  F005         	call	_dataPanelUp	;wreg free
  1417  000458                     
  1418                           ;main.c: 379:                 LATDbits.LD1 = 0;
  1419  000458  928C               	bcf	140,1,c	;volatile
  1420  00045A                     
  1421                           ;main.c: 380:                 _delay((unsigned long)((300)*(20000000/4000.0)));
  1422  00045A  0E06               	movlw	6
  1423  00045C  0100               	movlb	0	; () banked
  1424  00045E  6F81               	movwf	(??_modeUpControl+1)& (0+255),b
  1425  000460  0EB6               	movlw	182
  1426  000462  6F80               	movwf	??_modeUpControl& (0+255),b
  1427  000464  0EF8               	movlw	248
  1428  000466                     u1647:
  1429  000466  FFFF               	dw	65535	; errata NOP
  1430  000468  2EE8               	decfsz	wreg,f,c
  1431  00046A  D7FD               	bra	u1647
  1432  00046C  2F80               	decfsz	??_modeUpControl& (0+255),f,b
  1433  00046E  D7FB               	bra	u1647
  1434  000470  2F81               	decfsz	(??_modeUpControl+1)& (0+255),f,b
  1435  000472  D7F9               	bra	u1647
  1436  000474  D000               	nop2	
  1437  000476  F000               	nop	
  1438  000478                     
  1439                           ;main.c: 382:                 LATCbits.LC1 = 0;
  1440  000478  928B               	bcf	139,1,c	;volatile
  1441  00047A  EF11  F003         	goto	l168
  1442  00047E                     l158:
  1443  00047E  FFFF               	dw	65535	; assembler added errata NOP
  1444                           
  1445                           ; BSR set to: 0
  1446                           ;main.c: 387:             if (PORTDbits.RD6) {
  1447  000480  AC83               	btfss	131,6,c	;volatile
  1448  000482  EF45  F002         	goto	u1441
  1449  000486  EF48  F002         	goto	u1440
  1450  00048A                     u1441:
  1451  00048A  FFFF               	dw	65535	; assembler added errata NOP
  1452  00048C  EF11  F003         	goto	l168
  1453  000490                     u1440:
  1454  000490  FFFF               	dw	65535	; assembler added errata NOP
  1455  000492                     
  1456                           ; BSR set to: 0
  1457                           ;main.c: 391:                 LATCbits.LC1 = 1;
  1458  000492  828B               	bsf	139,1,c	;volatile
  1459                           
  1460                           ;main.c: 392:                 LATDbits.LD2 = 1;
  1461  000494  848C               	bsf	140,2,c	;volatile
  1462  000496                     
  1463                           ; BSR set to: 0
  1464                           ;main.c: 393:                 nowFL = 3;
  1465  000496  0E00               	movlw	0
  1466  000498  6E52               	movwf	(_nowFL+1)^0,c
  1467  00049A  0E03               	movlw	3
  1468  00049C  6E51               	movwf	_nowFL^0,c
  1469                           
  1470                           ;main.c: 395:                 for (int i = 0; i < tasksUp; i++) {
  1471  00049E  0E00               	movlw	0
  1472  0004A0  6F87               	movwf	(modeUpControl@i_511+1)& (0+255),b
  1473  0004A2  0E00               	movlw	0
  1474  0004A4  6F86               	movwf	modeUpControl@i_511& (0+255),b
  1475  0004A6  EF6E  F002         	goto	l2177
  1476  0004AA                     l2173:
  1477  0004AA  FFFF               	dw	65535	; assembler added errata NOP
  1478                           
  1479                           ; BSR set to: 0
  1480                           ;main.c: 396:                     queueUp[i] = queueUp[i + 1];
  1481  0004AC  90D8               	bcf	status,0,c
  1482  0004AE  3586               	rlcf	modeUpControl@i_511& (0+255),w,b
  1483  0004B0  6ED9               	movwf	fsr2l,c
  1484  0004B2  3587               	rlcf	(modeUpControl@i_511+1)& (0+255),w,b
  1485  0004B4  6EDA               	movwf	fsr2h,c
  1486  0004B6  0E02               	movlw	low (_queueUp+2)
  1487  0004B8  26D9               	addwf	fsr2l,f,c
  1488  0004BA  0E03               	movlw	high (_queueUp+2)
  1489  0004BC  22DA               	addwfc	fsr2h,f,c
  1490  0004BE  90D8               	bcf	status,0,c
  1491  0004C0  3586               	rlcf	modeUpControl@i_511& (0+255),w,b
  1492  0004C2  6EE1               	movwf	fsr1l,c
  1493  0004C4  3587               	rlcf	(modeUpControl@i_511+1)& (0+255),w,b
  1494  0004C6  6EE2               	movwf	fsr1h,c
  1495  0004C8  0E00               	movlw	low _queueUp
  1496  0004CA  26E1               	addwf	fsr1l,f,c
  1497  0004CC  0E03               	movlw	high _queueUp
  1498  0004CE  22E2               	addwfc	fsr1h,f,c
  1499  0004D0  CFDE FFE6          	movff	postinc2,postinc1
  1500  0004D4  CFDD FFE5          	movff	postdec2,postdec1
  1501  0004D8                     
  1502                           ; BSR set to: 0
  1503                           ;main.c: 397:                 }
  1504  0004D8  4B86               	infsnz	modeUpControl@i_511& (0+255),f,b
  1505  0004DA  2B87               	incf	(modeUpControl@i_511+1)& (0+255),f,b
  1506  0004DC                     l2177:
  1507  0004DC  FFFF               	dw	65535	; assembler added errata NOP
  1508                           
  1509                           ; BSR set to: 0
  1510  0004DE  505B               	movf	_tasksUp^0,w,c
  1511  0004E0  5D86               	subwf	modeUpControl@i_511& (0+255),w,b
  1512  0004E2  5187               	movf	(modeUpControl@i_511+1)& (0+255),w,b
  1513  0004E4  0A80               	xorlw	128
  1514  0004E6  6F80               	movwf	??_modeUpControl& (0+255),b
  1515  0004E8  505C               	movf	(_tasksUp+1)^0,w,c
  1516  0004EA  0A80               	xorlw	128
  1517  0004EC  5980               	subwfb	??_modeUpControl& (0+255),w,b
  1518  0004EE  A0D8               	btfss	status,0,c
  1519  0004F0  EF7C  F002         	goto	u1451
  1520  0004F4  EF7F  F002         	goto	u1450
  1521  0004F8                     u1451:
  1522  0004F8  FFFF               	dw	65535	; assembler added errata NOP
  1523  0004FA  EF55  F002         	goto	l2173
  1524  0004FE                     u1450:
  1525  0004FE  FFFF               	dw	65535	; assembler added errata NOP
  1526  000500                     
  1527                           ; BSR set to: 0
  1528                           ;main.c: 398:                 tasksUp--;
  1529  000500  065B               	decf	_tasksUp^0,f,c
  1530  000502  A0D8               	btfss	status,0,c
  1531  000504  065C               	decf	(_tasksUp+1)^0,f,c
  1532  000506                     
  1533                           ; BSR set to: 0
  1534                           ;main.c: 399:                 dataPanelUp();
  1535  000506  EC46  F005         	call	_dataPanelUp	;wreg free
  1536  00050A                     
  1537                           ;main.c: 400:                 LATDbits.LD2 = 0;
  1538  00050A  948C               	bcf	140,2,c	;volatile
  1539  00050C                     
  1540                           ;main.c: 401:                 _delay((unsigned long)((300)*(20000000/4000.0)));
  1541  00050C  0E06               	movlw	6
  1542  00050E  0100               	movlb	0	; () banked
  1543  000510  6F81               	movwf	(??_modeUpControl+1)& (0+255),b
  1544  000512  0EB6               	movlw	182
  1545  000514  6F80               	movwf	??_modeUpControl& (0+255),b
  1546  000516  0EF8               	movlw	248
  1547  000518                     u1657:
  1548  000518  FFFF               	dw	65535	; errata NOP
  1549  00051A  2EE8               	decfsz	wreg,f,c
  1550  00051C  D7FD               	bra	u1657
  1551  00051E  2F80               	decfsz	??_modeUpControl& (0+255),f,b
  1552  000520  D7FB               	bra	u1657
  1553  000522  2F81               	decfsz	(??_modeUpControl+1)& (0+255),f,b
  1554  000524  D7F9               	bra	u1657
  1555  000526  D000               	nop2	
  1556  000528  F000               	nop	
  1557  00052A                     
  1558                           ;main.c: 403:                 LATCbits.LC1 = 0;
  1559  00052A  928B               	bcf	139,1,c	;volatile
  1560  00052C  EF11  F003         	goto	l168
  1561  000530                     l163:
  1562  000530  FFFF               	dw	65535	; assembler added errata NOP
  1563                           
  1564                           ; BSR set to: 0
  1565                           ;main.c: 408:             if (PORTDbits.RD7) {
  1566  000532  AE83               	btfss	131,7,c	;volatile
  1567  000534  EF9E  F002         	goto	u1461
  1568  000538  EFA1  F002         	goto	u1460
  1569  00053C                     u1461:
  1570  00053C  FFFF               	dw	65535	; assembler added errata NOP
  1571  00053E  EF11  F003         	goto	l168
  1572  000542                     u1460:
  1573  000542  FFFF               	dw	65535	; assembler added errata NOP
  1574  000544                     
  1575                           ; BSR set to: 0
  1576                           ;main.c: 413:                 LATCbits.LC1 = 1;
  1577  000544  828B               	bsf	139,1,c	;volatile
  1578                           
  1579                           ;main.c: 414:                 LATDbits.LD3 = 1;
  1580  000546  868C               	bsf	140,3,c	;volatile
  1581  000548                     
  1582                           ; BSR set to: 0
  1583                           ;main.c: 415:                 nowFL = 4;
  1584  000548  0E00               	movlw	0
  1585  00054A  6E52               	movwf	(_nowFL+1)^0,c
  1586  00054C  0E04               	movlw	4
  1587  00054E  6E51               	movwf	_nowFL^0,c
  1588                           
  1589                           ;main.c: 417:                 for (int i = 0; i < tasksUp; i++) {
  1590  000550  0E00               	movlw	0
  1591  000552  6F89               	movwf	(modeUpControl@i_512+1)& (0+255),b
  1592  000554  0E00               	movlw	0
  1593  000556  6F88               	movwf	modeUpControl@i_512& (0+255),b
  1594  000558  EFC7  F002         	goto	l2197
  1595  00055C                     l2193:
  1596  00055C  FFFF               	dw	65535	; assembler added errata NOP
  1597                           
  1598                           ; BSR set to: 0
  1599                           ;main.c: 418:                     queueUp[i] = queueUp[i + 1];
  1600  00055E  90D8               	bcf	status,0,c
  1601  000560  3588               	rlcf	modeUpControl@i_512& (0+255),w,b
  1602  000562  6ED9               	movwf	fsr2l,c
  1603  000564  3589               	rlcf	(modeUpControl@i_512+1)& (0+255),w,b
  1604  000566  6EDA               	movwf	fsr2h,c
  1605  000568  0E02               	movlw	low (_queueUp+2)
  1606  00056A  26D9               	addwf	fsr2l,f,c
  1607  00056C  0E03               	movlw	high (_queueUp+2)
  1608  00056E  22DA               	addwfc	fsr2h,f,c
  1609  000570  90D8               	bcf	status,0,c
  1610  000572  3588               	rlcf	modeUpControl@i_512& (0+255),w,b
  1611  000574  6EE1               	movwf	fsr1l,c
  1612  000576  3589               	rlcf	(modeUpControl@i_512+1)& (0+255),w,b
  1613  000578  6EE2               	movwf	fsr1h,c
  1614  00057A  0E00               	movlw	low _queueUp
  1615  00057C  26E1               	addwf	fsr1l,f,c
  1616  00057E  0E03               	movlw	high _queueUp
  1617  000580  22E2               	addwfc	fsr1h,f,c
  1618  000582  CFDE FFE6          	movff	postinc2,postinc1
  1619  000586  CFDD FFE5          	movff	postdec2,postdec1
  1620  00058A                     
  1621                           ; BSR set to: 0
  1622                           ;main.c: 419:                 }
  1623  00058A  4B88               	infsnz	modeUpControl@i_512& (0+255),f,b
  1624  00058C  2B89               	incf	(modeUpControl@i_512+1)& (0+255),f,b
  1625  00058E                     l2197:
  1626  00058E  FFFF               	dw	65535	; assembler added errata NOP
  1627                           
  1628                           ; BSR set to: 0
  1629  000590  505B               	movf	_tasksUp^0,w,c
  1630  000592  5D88               	subwf	modeUpControl@i_512& (0+255),w,b
  1631  000594  5189               	movf	(modeUpControl@i_512+1)& (0+255),w,b
  1632  000596  0A80               	xorlw	128
  1633  000598  6F80               	movwf	??_modeUpControl& (0+255),b
  1634  00059A  505C               	movf	(_tasksUp+1)^0,w,c
  1635  00059C  0A80               	xorlw	128
  1636  00059E  5980               	subwfb	??_modeUpControl& (0+255),w,b
  1637  0005A0  A0D8               	btfss	status,0,c
  1638  0005A2  EFD5  F002         	goto	u1471
  1639  0005A6  EFD8  F002         	goto	u1470
  1640  0005AA                     u1471:
  1641  0005AA  FFFF               	dw	65535	; assembler added errata NOP
  1642  0005AC  EFAE  F002         	goto	l2193
  1643  0005B0                     u1470:
  1644  0005B0  FFFF               	dw	65535	; assembler added errata NOP
  1645  0005B2                     
  1646                           ; BSR set to: 0
  1647                           ;main.c: 420:                 tasksUp--;
  1648  0005B2  065B               	decf	_tasksUp^0,f,c
  1649  0005B4  A0D8               	btfss	status,0,c
  1650  0005B6  065C               	decf	(_tasksUp+1)^0,f,c
  1651  0005B8                     
  1652                           ; BSR set to: 0
  1653                           ;main.c: 421:                 dataPanelUp();
  1654  0005B8  EC46  F005         	call	_dataPanelUp	;wreg free
  1655  0005BC                     
  1656                           ;main.c: 422:                 LATDbits.LD3 = 0;
  1657  0005BC  968C               	bcf	140,3,c	;volatile
  1658  0005BE                     
  1659                           ;main.c: 423:                 _delay((unsigned long)((300)*(20000000/4000.0)));
  1660  0005BE  0E06               	movlw	6
  1661  0005C0  0100               	movlb	0	; () banked
  1662  0005C2  6F81               	movwf	(??_modeUpControl+1)& (0+255),b
  1663  0005C4  0EB6               	movlw	182
  1664  0005C6  6F80               	movwf	??_modeUpControl& (0+255),b
  1665  0005C8  0EF8               	movlw	248
  1666  0005CA                     u1667:
  1667  0005CA  FFFF               	dw	65535	; errata NOP
  1668  0005CC  2EE8               	decfsz	wreg,f,c
  1669  0005CE  D7FD               	bra	u1667
  1670  0005D0  2F80               	decfsz	??_modeUpControl& (0+255),f,b
  1671  0005D2  D7FB               	bra	u1667
  1672  0005D4  2F81               	decfsz	(??_modeUpControl+1)& (0+255),f,b
  1673  0005D6  D7F9               	bra	u1667
  1674  0005D8  D000               	nop2	
  1675  0005DA  F000               	nop	
  1676  0005DC  EF11  F003         	goto	l168
  1677  0005E0                     l2209:
  1678  0005E0  FFFF               	dw	65535	; assembler added errata NOP
  1679  0005E2  C300  F080         	movff	_queueUp,??_modeUpControl
  1680  0005E6  C301  F081         	movff	_queueUp+1,??_modeUpControl+1
  1681                           
  1682                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1683                           ; Switch size 1, requested type "simple"
  1684                           ; Number of cases is 1, Range of values is 0 to 0
  1685                           ; switch strategies available:
  1686                           ; Name         Instructions Cycles
  1687                           ; simple_byte            4     3 (average)
  1688                           ;	Chosen strategy is simple_byte
  1689  0005EA  0100               	movlb	0	; () banked
  1690  0005EC  5181               	movf	(??_modeUpControl+1)& (0+255),w,b
  1691  0005EE  0A00               	xorlw	0	; case 0
  1692  0005F0  B4D8               	btfsc	status,2,c
  1693  0005F2  EFFD  F002         	goto	l2401
  1694  0005F6  EF11  F003         	goto	l168
  1695  0005FA                     l2401:
  1696  0005FA  FFFF               	dw	65535	; assembler added errata NOP
  1697                           
  1698                           ; BSR set to: 0
  1699                           ; Switch size 1, requested type "simple"
  1700                           ; Number of cases is 4, Range of values is 1 to 4
  1701                           ; switch strategies available:
  1702                           ; Name         Instructions Cycles
  1703                           ; simple_byte           13     7 (average)
  1704                           ;	Chosen strategy is simple_byte
  1705  0005FC  5180               	movf	??_modeUpControl& (0+255),w,b
  1706  0005FE  0A01               	xorlw	1	; case 1
  1707  000600  B4D8               	btfsc	status,2,c
  1708  000602  EF8D  F001         	goto	l147
  1709  000606  0A03               	xorlw	3	; case 2
  1710  000608  B4D8               	btfsc	status,2,c
  1711  00060A  EFE6  F001         	goto	l153
  1712  00060E  0A01               	xorlw	1	; case 3
  1713  000610  B4D8               	btfsc	status,2,c
  1714  000612  EF3F  F002         	goto	l158
  1715  000616  0A07               	xorlw	7	; case 4
  1716  000618  B4D8               	btfsc	status,2,c
  1717  00061A  EF98  F002         	goto	l163
  1718  00061E  EF11  F003         	goto	l168
  1719  000622                     l168:
  1720  000622  FFFF               	dw	65535	; assembler added errata NOP
  1721  000624  0012               	return		;funcret
  1722  000626  FFFF               	dw	65535	; errata NOP
  1723  000628                     __end_of_modeUpControl:
  1724                           	callstack 0
  1725                           
  1726 ;; *************** function _dataPanelUp *****************
  1727 ;; Defined at:
  1728 ;;		line 278 in file "main.c"
  1729 ;; Parameters:    Size  Location     Type
  1730 ;;		None
  1731 ;; Auto vars:     Size  Location     Type
  1732 ;;  new_size        2   48[COMRAM] int 
  1733 ;; Return value:  Size  Location     Type
  1734 ;;                  1    wreg      void 
  1735 ;; Registers used:
  1736 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  1737 ;; Tracked objects:
  1738 ;;		On entry : 0/0
  1739 ;;		On exit  : 0/0
  1740 ;;		Unchanged: 0/0
  1741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1742 ;;      Params:         0       0       0       0       0       0       0
  1743 ;;      Locals:         2       0       0       0       0       0       0
  1744 ;;      Temps:          0       0       0       0       0       0       0
  1745 ;;      Totals:         2       0       0       0       0       0       0
  1746 ;;Total ram usage:        2 bytes
  1747 ;; Hardware stack levels used: 1
  1748 ;; Hardware stack levels required when called: 3
  1749 ;; This function calls:
  1750 ;;		_noRepeat
  1751 ;;		_sort
  1752 ;; This function is called by:
  1753 ;;		_modeUpControl
  1754 ;;		_modeUp
  1755 ;; This function uses a non-reentrant model
  1756 ;;
  1757                           
  1758                           	psect	text4
  1759  000A8C                     __ptext4:
  1760                           	callstack 0
  1761  000A8C                     _dataPanelUp:
  1762                           	callstack 0
  1763  000A8C  FFFF               	dw	65535	; assembler added errata NOP
  1764  000A8E                     l127:
  1765  000A8E  FFFF               	dw	65535	; assembler added errata NOP
  1766                           
  1767                           ;main.c: 280:         if (PORTAbits.RA0) {
  1768  000A90  A080               	btfss	128,0,c	;volatile
  1769  000A92  EF4D  F005         	goto	u1311
  1770  000A96  EF50  F005         	goto	u1310
  1771  000A9A                     u1311:
  1772  000A9A  FFFF               	dw	65535	; assembler added errata NOP
  1773  000A9C  EF81  F005         	goto	l2081
  1774  000AA0                     u1310:
  1775  000AA0  FFFF               	dw	65535	; assembler added errata NOP
  1776  000AA2                     
  1777                           ;main.c: 282:                 if (nowFL < 1) {
  1778  000AA2  BE52               	btfsc	(_nowFL+1)^0,7,c
  1779  000AA4  EF5F  F005         	goto	u1320
  1780  000AA8  5052               	movf	(_nowFL+1)^0,w,c
  1781  000AAA  E106               	bnz	u1321
  1782  000AAC  0451               	decf	_nowFL^0,w,c
  1783  000AAE  B0D8               	btfsc	status,0,c
  1784  000AB0  EF5C  F005         	goto	u1321
  1785  000AB4  EF5F  F005         	goto	u1320
  1786  000AB8                     u1321:
  1787  000AB8  FFFF               	dw	65535	; assembler added errata NOP
  1788  000ABA  EF71  F005         	goto	l2077
  1789  000ABE                     u1320:
  1790  000ABE  FFFF               	dw	65535	; assembler added errata NOP
  1791  000AC0                     
  1792                           ;main.c: 283:                     queueUp[tasksUp] = 1;
  1793  000AC0  90D8               	bcf	status,0,c
  1794  000AC2  345B               	rlcf	_tasksUp^0,w,c
  1795  000AC4  6ED9               	movwf	fsr2l,c
  1796  000AC6  345C               	rlcf	(_tasksUp+1)^0,w,c
  1797  000AC8  6EDA               	movwf	fsr2h,c
  1798  000ACA  0E00               	movlw	low _queueUp
  1799  000ACC  26D9               	addwf	fsr2l,f,c
  1800  000ACE  0E03               	movlw	high _queueUp
  1801  000AD0  22DA               	addwfc	fsr2h,f,c
  1802  000AD2  0E01               	movlw	1
  1803  000AD4  6EDE               	movwf	postinc2,c
  1804  000AD6  0E00               	movlw	0
  1805  000AD8  6EDD               	movwf	postdec2,c
  1806  000ADA                     
  1807                           ;main.c: 284:                     tasksUp++;
  1808  000ADA  4A5B               	infsnz	_tasksUp^0,f,c
  1809  000ADC  2A5C               	incf	(_tasksUp+1)^0,f,c
  1810                           
  1811                           ;main.c: 285:                 } else {
  1812  000ADE  EF81  F005         	goto	l2081
  1813  000AE2                     l2077:
  1814  000AE2  FFFF               	dw	65535	; assembler added errata NOP
  1815                           
  1816                           ;main.c: 286:                     queueDown[tasksDown] = 1;
  1817  000AE4  90D8               	bcf	status,0,c
  1818  000AE6  345D               	rlcf	_tasksDown^0,w,c
  1819  000AE8  6ED9               	movwf	fsr2l,c
  1820  000AEA  345E               	rlcf	(_tasksDown+1)^0,w,c
  1821  000AEC  6EDA               	movwf	fsr2h,c
  1822  000AEE  0E00               	movlw	low _queueDown
  1823  000AF0  26D9               	addwf	fsr2l,f,c
  1824  000AF2  0E04               	movlw	high _queueDown
  1825  000AF4  22DA               	addwfc	fsr2h,f,c
  1826  000AF6  0E01               	movlw	1
  1827  000AF8  6EDE               	movwf	postinc2,c
  1828  000AFA  0E00               	movlw	0
  1829  000AFC  6EDD               	movwf	postdec2,c
  1830  000AFE                     
  1831                           ;main.c: 287:                     tasksDown++;
  1832  000AFE  4A5D               	infsnz	_tasksDown^0,f,c
  1833  000B00  2A5E               	incf	(_tasksDown+1)^0,f,c
  1834  000B02                     l2081:
  1835  000B02  FFFF               	dw	65535	; assembler added errata NOP
  1836                           
  1837                           ;main.c: 291:         if (PORTAbits.RA1) {
  1838  000B04  A280               	btfss	128,1,c	;volatile
  1839  000B06  EF87  F005         	goto	u1331
  1840  000B0A  EF8A  F005         	goto	u1330
  1841  000B0E                     u1331:
  1842  000B0E  FFFF               	dw	65535	; assembler added errata NOP
  1843  000B10  EFBC  F005         	goto	l2093
  1844  000B14                     u1330:
  1845  000B14  FFFF               	dw	65535	; assembler added errata NOP
  1846  000B16                     
  1847                           ;main.c: 293:                 if (nowFL < 2) {
  1848  000B16  BE52               	btfsc	(_nowFL+1)^0,7,c
  1849  000B18  EF9A  F005         	goto	u1340
  1850  000B1C  5052               	movf	(_nowFL+1)^0,w,c
  1851  000B1E  E107               	bnz	u1341
  1852  000B20  0E02               	movlw	2
  1853  000B22  5C51               	subwf	_nowFL^0,w,c
  1854  000B24  B0D8               	btfsc	status,0,c
  1855  000B26  EF97  F005         	goto	u1341
  1856  000B2A  EF9A  F005         	goto	u1340
  1857  000B2E                     u1341:
  1858  000B2E  FFFF               	dw	65535	; assembler added errata NOP
  1859  000B30  EFAC  F005         	goto	l2089
  1860  000B34                     u1340:
  1861  000B34  FFFF               	dw	65535	; assembler added errata NOP
  1862  000B36                     
  1863                           ;main.c: 294:                     queueUp[tasksUp] = 2;
  1864  000B36  90D8               	bcf	status,0,c
  1865  000B38  345B               	rlcf	_tasksUp^0,w,c
  1866  000B3A  6ED9               	movwf	fsr2l,c
  1867  000B3C  345C               	rlcf	(_tasksUp+1)^0,w,c
  1868  000B3E  6EDA               	movwf	fsr2h,c
  1869  000B40  0E00               	movlw	low _queueUp
  1870  000B42  26D9               	addwf	fsr2l,f,c
  1871  000B44  0E03               	movlw	high _queueUp
  1872  000B46  22DA               	addwfc	fsr2h,f,c
  1873  000B48  0E02               	movlw	2
  1874  000B4A  6EDE               	movwf	postinc2,c
  1875  000B4C  0E00               	movlw	0
  1876  000B4E  6EDD               	movwf	postdec2,c
  1877  000B50                     
  1878                           ;main.c: 295:                     tasksUp++;
  1879  000B50  4A5B               	infsnz	_tasksUp^0,f,c
  1880  000B52  2A5C               	incf	(_tasksUp+1)^0,f,c
  1881                           
  1882                           ;main.c: 297:                 } else {
  1883  000B54  EFBC  F005         	goto	l2093
  1884  000B58                     l2089:
  1885  000B58  FFFF               	dw	65535	; assembler added errata NOP
  1886                           
  1887                           ;main.c: 298:                     queueDown[tasksDown] = 2;
  1888  000B5A  90D8               	bcf	status,0,c
  1889  000B5C  345D               	rlcf	_tasksDown^0,w,c
  1890  000B5E  6ED9               	movwf	fsr2l,c
  1891  000B60  345E               	rlcf	(_tasksDown+1)^0,w,c
  1892  000B62  6EDA               	movwf	fsr2h,c
  1893  000B64  0E00               	movlw	low _queueDown
  1894  000B66  26D9               	addwf	fsr2l,f,c
  1895  000B68  0E04               	movlw	high _queueDown
  1896  000B6A  22DA               	addwfc	fsr2h,f,c
  1897  000B6C  0E02               	movlw	2
  1898  000B6E  6EDE               	movwf	postinc2,c
  1899  000B70  0E00               	movlw	0
  1900  000B72  6EDD               	movwf	postdec2,c
  1901  000B74                     
  1902                           ;main.c: 299:                     tasksDown++;
  1903  000B74  4A5D               	infsnz	_tasksDown^0,f,c
  1904  000B76  2A5E               	incf	(_tasksDown+1)^0,f,c
  1905  000B78                     l2093:
  1906  000B78  FFFF               	dw	65535	; assembler added errata NOP
  1907                           
  1908                           ;main.c: 303:         if (PORTAbits.RA2) {
  1909  000B7A  A480               	btfss	128,2,c	;volatile
  1910  000B7C  EFC2  F005         	goto	u1351
  1911  000B80  EFC5  F005         	goto	u1350
  1912  000B84                     u1351:
  1913  000B84  FFFF               	dw	65535	; assembler added errata NOP
  1914  000B86  EFF7  F005         	goto	l2105
  1915  000B8A                     u1350:
  1916  000B8A  FFFF               	dw	65535	; assembler added errata NOP
  1917  000B8C                     
  1918                           ;main.c: 305:                 if (nowFL < 3) {
  1919  000B8C  BE52               	btfsc	(_nowFL+1)^0,7,c
  1920  000B8E  EFD5  F005         	goto	u1360
  1921  000B92  5052               	movf	(_nowFL+1)^0,w,c
  1922  000B94  E107               	bnz	u1361
  1923  000B96  0E03               	movlw	3
  1924  000B98  5C51               	subwf	_nowFL^0,w,c
  1925  000B9A  B0D8               	btfsc	status,0,c
  1926  000B9C  EFD2  F005         	goto	u1361
  1927  000BA0  EFD5  F005         	goto	u1360
  1928  000BA4                     u1361:
  1929  000BA4  FFFF               	dw	65535	; assembler added errata NOP
  1930  000BA6  EFE7  F005         	goto	l2101
  1931  000BAA                     u1360:
  1932  000BAA  FFFF               	dw	65535	; assembler added errata NOP
  1933  000BAC                     
  1934                           ;main.c: 306:                     queueUp[tasksUp] = 3;
  1935  000BAC  90D8               	bcf	status,0,c
  1936  000BAE  345B               	rlcf	_tasksUp^0,w,c
  1937  000BB0  6ED9               	movwf	fsr2l,c
  1938  000BB2  345C               	rlcf	(_tasksUp+1)^0,w,c
  1939  000BB4  6EDA               	movwf	fsr2h,c
  1940  000BB6  0E00               	movlw	low _queueUp
  1941  000BB8  26D9               	addwf	fsr2l,f,c
  1942  000BBA  0E03               	movlw	high _queueUp
  1943  000BBC  22DA               	addwfc	fsr2h,f,c
  1944  000BBE  0E03               	movlw	3
  1945  000BC0  6EDE               	movwf	postinc2,c
  1946  000BC2  0E00               	movlw	0
  1947  000BC4  6EDD               	movwf	postdec2,c
  1948  000BC6                     
  1949                           ;main.c: 307:                     tasksUp++;
  1950  000BC6  4A5B               	infsnz	_tasksUp^0,f,c
  1951  000BC8  2A5C               	incf	(_tasksUp+1)^0,f,c
  1952                           
  1953                           ;main.c: 308:                 } else {
  1954  000BCA  EFF7  F005         	goto	l2105
  1955  000BCE                     l2101:
  1956  000BCE  FFFF               	dw	65535	; assembler added errata NOP
  1957                           
  1958                           ;main.c: 309:                     queueDown[tasksDown] = 3;
  1959  000BD0  90D8               	bcf	status,0,c
  1960  000BD2  345D               	rlcf	_tasksDown^0,w,c
  1961  000BD4  6ED9               	movwf	fsr2l,c
  1962  000BD6  345E               	rlcf	(_tasksDown+1)^0,w,c
  1963  000BD8  6EDA               	movwf	fsr2h,c
  1964  000BDA  0E00               	movlw	low _queueDown
  1965  000BDC  26D9               	addwf	fsr2l,f,c
  1966  000BDE  0E04               	movlw	high _queueDown
  1967  000BE0  22DA               	addwfc	fsr2h,f,c
  1968  000BE2  0E03               	movlw	3
  1969  000BE4  6EDE               	movwf	postinc2,c
  1970  000BE6  0E00               	movlw	0
  1971  000BE8  6EDD               	movwf	postdec2,c
  1972  000BEA                     
  1973                           ;main.c: 310:                     tasksDown++;
  1974  000BEA  4A5D               	infsnz	_tasksDown^0,f,c
  1975  000BEC  2A5E               	incf	(_tasksDown+1)^0,f,c
  1976  000BEE                     l2105:
  1977  000BEE  FFFF               	dw	65535	; assembler added errata NOP
  1978                           
  1979                           ;main.c: 315:         if (PORTAbits.RA3) {
  1980  000BF0  A680               	btfss	128,3,c	;volatile
  1981  000BF2  EFFD  F005         	goto	u1371
  1982  000BF6  EF00  F006         	goto	u1370
  1983  000BFA                     u1371:
  1984  000BFA  FFFF               	dw	65535	; assembler added errata NOP
  1985  000BFC  EF32  F006         	goto	l2117
  1986  000C00                     u1370:
  1987  000C00  FFFF               	dw	65535	; assembler added errata NOP
  1988  000C02                     
  1989                           ;main.c: 317:                 if (nowFL < 4) {
  1990  000C02  BE52               	btfsc	(_nowFL+1)^0,7,c
  1991  000C04  EF10  F006         	goto	u1380
  1992  000C08  5052               	movf	(_nowFL+1)^0,w,c
  1993  000C0A  E107               	bnz	u1381
  1994  000C0C  0E04               	movlw	4
  1995  000C0E  5C51               	subwf	_nowFL^0,w,c
  1996  000C10  B0D8               	btfsc	status,0,c
  1997  000C12  EF0D  F006         	goto	u1381
  1998  000C16  EF10  F006         	goto	u1380
  1999  000C1A                     u1381:
  2000  000C1A  FFFF               	dw	65535	; assembler added errata NOP
  2001  000C1C  EF22  F006         	goto	l2113
  2002  000C20                     u1380:
  2003  000C20  FFFF               	dw	65535	; assembler added errata NOP
  2004  000C22                     
  2005                           ;main.c: 318:                     queueUp[tasksUp] = 4;
  2006  000C22  90D8               	bcf	status,0,c
  2007  000C24  345B               	rlcf	_tasksUp^0,w,c
  2008  000C26  6ED9               	movwf	fsr2l,c
  2009  000C28  345C               	rlcf	(_tasksUp+1)^0,w,c
  2010  000C2A  6EDA               	movwf	fsr2h,c
  2011  000C2C  0E00               	movlw	low _queueUp
  2012  000C2E  26D9               	addwf	fsr2l,f,c
  2013  000C30  0E03               	movlw	high _queueUp
  2014  000C32  22DA               	addwfc	fsr2h,f,c
  2015  000C34  0E04               	movlw	4
  2016  000C36  6EDE               	movwf	postinc2,c
  2017  000C38  0E00               	movlw	0
  2018  000C3A  6EDD               	movwf	postdec2,c
  2019  000C3C                     
  2020                           ;main.c: 319:                     tasksUp++;
  2021  000C3C  4A5B               	infsnz	_tasksUp^0,f,c
  2022  000C3E  2A5C               	incf	(_tasksUp+1)^0,f,c
  2023                           
  2024                           ;main.c: 320:                 } else {
  2025  000C40  EF32  F006         	goto	l2117
  2026  000C44                     l2113:
  2027  000C44  FFFF               	dw	65535	; assembler added errata NOP
  2028                           
  2029                           ;main.c: 321:                     queueDown[tasksDown] = 4;
  2030  000C46  90D8               	bcf	status,0,c
  2031  000C48  345D               	rlcf	_tasksDown^0,w,c
  2032  000C4A  6ED9               	movwf	fsr2l,c
  2033  000C4C  345E               	rlcf	(_tasksDown+1)^0,w,c
  2034  000C4E  6EDA               	movwf	fsr2h,c
  2035  000C50  0E00               	movlw	low _queueDown
  2036  000C52  26D9               	addwf	fsr2l,f,c
  2037  000C54  0E04               	movlw	high _queueDown
  2038  000C56  22DA               	addwfc	fsr2h,f,c
  2039  000C58  0E04               	movlw	4
  2040  000C5A  6EDE               	movwf	postinc2,c
  2041  000C5C  0E00               	movlw	0
  2042  000C5E  6EDD               	movwf	postdec2,c
  2043  000C60                     
  2044                           ;main.c: 322:                     tasksDown++;
  2045  000C60  4A5D               	infsnz	_tasksDown^0,f,c
  2046  000C62  2A5E               	incf	(_tasksDown+1)^0,f,c
  2047  000C64                     l2117:
  2048  000C64  FFFF               	dw	65535	; assembler added errata NOP
  2049                           
  2050                           ;main.c: 326:     } while (!PORTAbits.RA4);
  2051  000C66  A880               	btfss	128,4,c	;volatile
  2052  000C68  EF38  F006         	goto	u1391
  2053  000C6C  EF3B  F006         	goto	u1390
  2054  000C70                     u1391:
  2055  000C70  FFFF               	dw	65535	; assembler added errata NOP
  2056  000C72  EF47  F005         	goto	l127
  2057  000C76                     u1390:
  2058  000C76  FFFF               	dw	65535	; assembler added errata NOP
  2059  000C78                     
  2060                           ;main.c: 329:     sort(&queueUp[0], tasksUp);
  2061  000C78  0E00               	movlw	low _queueUp
  2062  000C7A  6E1F               	movwf	sort@p^0,c
  2063  000C7C  0E03               	movlw	high _queueUp
  2064  000C7E  6E20               	movwf	(sort@p+1)^0,c
  2065  000C80  C05B  F021         	movff	_tasksUp,sort@sizes
  2066  000C84  C05C  F022         	movff	_tasksUp+1,sort@sizes+1
  2067  000C88  EC14  F003         	call	_sort	;wreg free
  2068                           
  2069                           ;main.c: 330:     int new_size = noRepeat(&queueUp[0], tasksUp);
  2070  000C8C  0E00               	movlw	low _queueUp
  2071  000C8E  6E1F               	movwf	noRepeat@po^0,c
  2072  000C90  0E03               	movlw	high _queueUp
  2073  000C92  6E20               	movwf	(noRepeat@po+1)^0,c
  2074  000C94  C05B  F021         	movff	_tasksUp,noRepeat@sixes
  2075  000C98  C05C  F022         	movff	_tasksUp+1,noRepeat@sixes+1
  2076  000C9C  EC7E  F008         	call	_noRepeat	;wreg free
  2077  000CA0  C01F  F031         	movff	?_noRepeat,dataPanelUp@new_size
  2078  000CA4  C020  F032         	movff	?_noRepeat+1,dataPanelUp@new_size+1
  2079  000CA8                     
  2080                           ;main.c: 331:     tasksUp = new_size;
  2081  000CA8  C031  F05B         	movff	dataPanelUp@new_size,_tasksUp
  2082  000CAC  C032  F05C         	movff	dataPanelUp@new_size+1,_tasksUp+1
  2083  000CB0  0012               	return		;funcret
  2084  000CB2  FFFF               	dw	65535	; errata NOP
  2085  000CB4                     __end_of_dataPanelUp:
  2086                           	callstack 0
  2087                           
  2088 ;; *************** function _sort *****************
  2089 ;; Defined at:
  2090 ;;		line 235 in file "main.c"
  2091 ;; Parameters:    Size  Location     Type
  2092 ;;  p               2   30[COMRAM] PTR int 
  2093 ;;		 -> queueDown(200), queueUp(200), 
  2094 ;;  sizes           2   32[COMRAM] int 
  2095 ;; Auto vars:     Size  Location     Type
  2096 ;;  k               2  206[BANK2 ] int 
  2097 ;;  h               2  212[BANK2 ] int 
  2098 ;;  j               2  208[BANK2 ] int 
  2099 ;;  result        200    0[BANK2 ] int [100]
  2100 ;;  temp            2  210[BANK2 ] int 
  2101 ;;  sizesMod        2  204[BANK2 ] int 
  2102 ;;  nums            2  202[BANK2 ] int 
  2103 ;;  pos             2  200[BANK2 ] int 
  2104 ;; Return value:  Size  Location     Type
  2105 ;;                  1    wreg      void 
  2106 ;; Registers used:
  2107 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2108 ;; Tracked objects:
  2109 ;;		On entry : 0/0
  2110 ;;		On exit  : 0/0
  2111 ;;		Unchanged: 0/0
  2112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2113 ;;      Params:         4       0       0       0       0       0       0
  2114 ;;      Locals:         0       0       0     214       0       0       0
  2115 ;;      Temps:          5       0       0       0       0       0       0
  2116 ;;      Totals:         9       0       0     214       0       0       0
  2117 ;;Total ram usage:      223 bytes
  2118 ;; Hardware stack levels used: 1
  2119 ;; Hardware stack levels required when called: 2
  2120 ;; This function calls:
  2121 ;;		Nothing
  2122 ;; This function is called by:
  2123 ;;		_dataPanelUp
  2124 ;;		_rutine_up
  2125 ;; This function uses a non-reentrant model
  2126 ;;
  2127                           
  2128                           	psect	text5
  2129  000628                     __ptext5:
  2130                           	callstack 0
  2131  000628                     _sort:
  2132                           	callstack 0
  2133  000628  FFFF               	dw	65535	; assembler added errata NOP
  2134  00062A                     
  2135                           ;main.c: 236:     int temp, nums = 0, pos = 0, sizesMod = sizes;
  2136  00062A  0E00               	movlw	0
  2137  00062C  0102               	movlb	2	; () banked
  2138  00062E  6FCB               	movwf	(sort@nums+1)& (0+255),b
  2139  000630  0E00               	movlw	0
  2140  000632  6FCA               	movwf	sort@nums& (0+255),b
  2141  000634  0E00               	movlw	0
  2142  000636  6FC9               	movwf	(sort@pos+1)& (0+255),b
  2143  000638  0E00               	movlw	0
  2144  00063A  6FC8               	movwf	sort@pos& (0+255),b
  2145  00063C                     
  2146                           ; BSR set to: 2
  2147  00063C  C021  F2CC         	movff	sort@sizes,sort@sizesMod
  2148  000640  C022  F2CD         	movff	sort@sizes+1,sort@sizesMod+1
  2149  000644                     l2029:
  2150  000644  FFFF               	dw	65535	; assembler added errata NOP
  2151                           
  2152                           ; BSR set to: 2
  2153                           ;main.c: 243:         temp = *(p + 0);
  2154  000646  C01F  FFD9         	movff	sort@p,fsr2l
  2155  00064A  C020  FFDA         	movff	sort@p+1,fsr2h
  2156  00064E  CFDE F2D2          	movff	postinc2,sort@temp
  2157  000652  CFDD F2D3          	movff	postdec2,sort@temp+1
  2158  000656                     
  2159                           ; BSR set to: 2
  2160                           ;main.c: 245:         for (int h = 0; h < sizesMod; h++) {
  2161  000656  0E00               	movlw	0
  2162  000658  6FD5               	movwf	(sort@h+1)& (0+255),b
  2163  00065A  0E00               	movlw	0
  2164  00065C  6FD4               	movwf	sort@h& (0+255),b
  2165  00065E  EF7C  F003         	goto	l2047
  2166  000662                     l2033:
  2167  000662  FFFF               	dw	65535	; assembler added errata NOP
  2168                           
  2169                           ; BSR set to: 2
  2170                           ;main.c: 247:             if (*(p + h) == temp) {
  2171  000664  90D8               	bcf	status,0,c
  2172  000666  35D4               	rlcf	sort@h& (0+255),w,b
  2173  000668  6ED9               	movwf	fsr2l,c
  2174  00066A  35D5               	rlcf	(sort@h+1)& (0+255),w,b
  2175  00066C  6EDA               	movwf	fsr2h,c
  2176  00066E  501F               	movf	sort@p^0,w,c
  2177  000670  26D9               	addwf	fsr2l,f,c
  2178  000672  5020               	movf	(sort@p+1)^0,w,c
  2179  000674  22DA               	addwfc	fsr2h,f,c
  2180  000676  51D2               	movf	sort@temp& (0+255),w,b
  2181  000678  18DE               	xorwf	postinc2,w,c
  2182  00067A  E107               	bnz	u1251
  2183  00067C  51D3               	movf	(sort@temp+1)& (0+255),w,b
  2184  00067E  18DE               	xorwf	postinc2,w,c
  2185  000680  A4D8               	btfss	status,2,c
  2186  000682  EF45  F003         	goto	u1251
  2187  000686  EF48  F003         	goto	u1250
  2188  00068A                     u1251:
  2189  00068A  FFFF               	dw	65535	; assembler added errata NOP
  2190  00068C  EF4D  F003         	goto	l2039
  2191  000690                     u1250:
  2192  000690  FFFF               	dw	65535	; assembler added errata NOP
  2193  000692                     
  2194                           ; BSR set to: 2
  2195                           ;main.c: 249:                 pos = h;
  2196  000692  C2D4  F2C8         	movff	sort@h,sort@pos
  2197  000696  C2D5  F2C9         	movff	sort@h+1,sort@pos+1
  2198  00069A                     l2039:
  2199  00069A  FFFF               	dw	65535	; assembler added errata NOP
  2200                           
  2201                           ; BSR set to: 2
  2202                           ;main.c: 256:             if (*(p + h) < temp) {
  2203  00069C  90D8               	bcf	status,0,c
  2204  00069E  35D4               	rlcf	sort@h& (0+255),w,b
  2205  0006A0  6ED9               	movwf	fsr2l,c
  2206  0006A2  35D5               	rlcf	(sort@h+1)& (0+255),w,b
  2207  0006A4  6EDA               	movwf	fsr2h,c
  2208  0006A6  501F               	movf	sort@p^0,w,c
  2209  0006A8  26D9               	addwf	fsr2l,f,c
  2210  0006AA  5020               	movf	(sort@p+1)^0,w,c
  2211  0006AC  22DA               	addwfc	fsr2h,f,c
  2212  0006AE  51D2               	movf	sort@temp& (0+255),w,b
  2213  0006B0  5CDE               	subwf	postinc2,w,c
  2214  0006B2  50DE               	movf	postinc2,w,c
  2215  0006B4  0A80               	xorlw	128
  2216  0006B6  6E25               	movwf	(??_sort+2)^0,c
  2217  0006B8  51D3               	movf	(sort@temp+1)& (0+255),w,b
  2218  0006BA  0A80               	xorlw	128
  2219  0006BC  5825               	subwfb	(??_sort+2)^0,w,c
  2220  0006BE  B0D8               	btfsc	status,0,c
  2221  0006C0  EF64  F003         	goto	u1261
  2222  0006C4  EF67  F003         	goto	u1260
  2223  0006C8                     u1261:
  2224  0006C8  FFFF               	dw	65535	; assembler added errata NOP
  2225  0006CA  EF79  F003         	goto	l2045
  2226  0006CE                     u1260:
  2227  0006CE  FFFF               	dw	65535	; assembler added errata NOP
  2228  0006D0                     
  2229                           ; BSR set to: 2
  2230                           ;main.c: 257:                 temp = *(p + h);
  2231  0006D0  90D8               	bcf	status,0,c
  2232  0006D2  35D4               	rlcf	sort@h& (0+255),w,b
  2233  0006D4  6ED9               	movwf	fsr2l,c
  2234  0006D6  35D5               	rlcf	(sort@h+1)& (0+255),w,b
  2235  0006D8  6EDA               	movwf	fsr2h,c
  2236  0006DA  501F               	movf	sort@p^0,w,c
  2237  0006DC  26D9               	addwf	fsr2l,f,c
  2238  0006DE  5020               	movf	(sort@p+1)^0,w,c
  2239  0006E0  22DA               	addwfc	fsr2h,f,c
  2240  0006E2  CFDE F2D2          	movff	postinc2,sort@temp
  2241  0006E6  CFDD F2D3          	movff	postdec2,sort@temp+1
  2242  0006EA                     
  2243                           ; BSR set to: 2
  2244                           ;main.c: 258:                 pos = h;
  2245  0006EA  C2D4  F2C8         	movff	sort@h,sort@pos
  2246  0006EE  C2D5  F2C9         	movff	sort@h+1,sort@pos+1
  2247  0006F2                     l2045:
  2248  0006F2  FFFF               	dw	65535	; assembler added errata NOP
  2249                           
  2250                           ; BSR set to: 2
  2251                           ;main.c: 260:         }
  2252  0006F4  4BD4               	infsnz	sort@h& (0+255),f,b
  2253  0006F6  2BD5               	incf	(sort@h+1)& (0+255),f,b
  2254  0006F8                     l2047:
  2255  0006F8  FFFF               	dw	65535	; assembler added errata NOP
  2256                           
  2257                           ; BSR set to: 2
  2258  0006FA  51CC               	movf	sort@sizesMod& (0+255),w,b
  2259  0006FC  5DD4               	subwf	sort@h& (0+255),w,b
  2260  0006FE  51D5               	movf	(sort@h+1)& (0+255),w,b
  2261  000700  0A80               	xorlw	128
  2262  000702  6E23               	movwf	??_sort^0,c
  2263  000704  51CD               	movf	(sort@sizesMod+1)& (0+255),w,b
  2264  000706  0A80               	xorlw	128
  2265  000708  5823               	subwfb	??_sort^0,w,c
  2266  00070A  A0D8               	btfss	status,0,c
  2267  00070C  EF8A  F003         	goto	u1271
  2268  000710  EF8D  F003         	goto	u1270
  2269  000714                     u1271:
  2270  000714  FFFF               	dw	65535	; assembler added errata NOP
  2271  000716  EF31  F003         	goto	l2033
  2272  00071A                     u1270:
  2273  00071A  FFFF               	dw	65535	; assembler added errata NOP
  2274  00071C                     
  2275                           ; BSR set to: 2
  2276                           ;main.c: 263:         for (int k = pos; k < sizesMod; k++) {
  2277  00071C  C2C8  F2CE         	movff	sort@pos,sort@k
  2278  000720  C2C9  F2CF         	movff	sort@pos+1,sort@k+1
  2279  000724  EFB9  F003         	goto	l2053
  2280  000728                     l2049:
  2281  000728  FFFF               	dw	65535	; assembler added errata NOP
  2282                           
  2283                           ; BSR set to: 2
  2284                           ;main.c: 264:             *(p + k) = *(p + (k + 1));
  2285  00072A  C2CE  F023         	movff	sort@k,??_sort
  2286  00072E  C2CF  F024         	movff	sort@k+1,??_sort+1
  2287  000732  90D8               	bcf	status,0,c
  2288  000734  3623               	rlcf	??_sort^0,f,c
  2289  000736  3624               	rlcf	(??_sort+1)^0,f,c
  2290  000738  C01F  F025         	movff	sort@p,??_sort+2
  2291  00073C  C020  F026         	movff	sort@p+1,??_sort+3
  2292  000740  5023               	movf	??_sort^0,w,c
  2293  000742  2625               	addwf	(??_sort+2)^0,f,c
  2294  000744  5024               	movf	(??_sort+1)^0,w,c
  2295  000746  2226               	addwfc	(??_sort+3)^0,f,c
  2296  000748  0E02               	movlw	2
  2297  00074A  2425               	addwf	(??_sort+2)^0,w,c
  2298  00074C  6ED9               	movwf	fsr2l,c
  2299  00074E  0E00               	movlw	0
  2300  000750  2026               	addwfc	(??_sort+3)^0,w,c
  2301  000752  6EDA               	movwf	fsr2h,c
  2302  000754  90D8               	bcf	status,0,c
  2303  000756  35CE               	rlcf	sort@k& (0+255),w,b
  2304  000758  6EE1               	movwf	fsr1l,c
  2305  00075A  35CF               	rlcf	(sort@k+1)& (0+255),w,b
  2306  00075C  6EE2               	movwf	fsr1h,c
  2307  00075E  501F               	movf	sort@p^0,w,c
  2308  000760  26E1               	addwf	fsr1l,f,c
  2309  000762  5020               	movf	(sort@p+1)^0,w,c
  2310  000764  22E2               	addwfc	fsr1h,f,c
  2311  000766  CFDE FFE6          	movff	postinc2,postinc1
  2312  00076A  CFDD FFE5          	movff	postdec2,postdec1
  2313  00076E                     
  2314                           ; BSR set to: 2
  2315                           ;main.c: 265:         }
  2316  00076E  4BCE               	infsnz	sort@k& (0+255),f,b
  2317  000770  2BCF               	incf	(sort@k+1)& (0+255),f,b
  2318  000772                     l2053:
  2319  000772  FFFF               	dw	65535	; assembler added errata NOP
  2320                           
  2321                           ; BSR set to: 2
  2322  000774  51CC               	movf	sort@sizesMod& (0+255),w,b
  2323  000776  5DCE               	subwf	sort@k& (0+255),w,b
  2324  000778  51CF               	movf	(sort@k+1)& (0+255),w,b
  2325  00077A  0A80               	xorlw	128
  2326  00077C  6E23               	movwf	??_sort^0,c
  2327  00077E  51CD               	movf	(sort@sizesMod+1)& (0+255),w,b
  2328  000780  0A80               	xorlw	128
  2329  000782  5823               	subwfb	??_sort^0,w,c
  2330  000784  A0D8               	btfss	status,0,c
  2331  000786  EFC7  F003         	goto	u1281
  2332  00078A  EFCA  F003         	goto	u1280
  2333  00078E                     u1281:
  2334  00078E  FFFF               	dw	65535	; assembler added errata NOP
  2335  000790  EF94  F003         	goto	l2049
  2336  000794                     u1280:
  2337  000794  FFFF               	dw	65535	; assembler added errata NOP
  2338  000796                     
  2339                           ; BSR set to: 2
  2340                           ;main.c: 266:         result[nums] = temp;
  2341  000796  90D8               	bcf	status,0,c
  2342  000798  35CA               	rlcf	sort@nums& (0+255),w,b
  2343  00079A  6ED9               	movwf	fsr2l,c
  2344  00079C  35CB               	rlcf	(sort@nums+1)& (0+255),w,b
  2345  00079E  6EDA               	movwf	fsr2h,c
  2346  0007A0  0E00               	movlw	low sort@result
  2347  0007A2  26D9               	addwf	fsr2l,f,c
  2348  0007A4  0E02               	movlw	high sort@result
  2349  0007A6  22DA               	addwfc	fsr2h,f,c
  2350  0007A8  C2D2  FFDE         	movff	sort@temp,postinc2
  2351  0007AC  C2D3  FFDD         	movff	sort@temp+1,postdec2
  2352  0007B0                     
  2353                           ; BSR set to: 2
  2354                           ;main.c: 267:         sizesMod--;
  2355  0007B0  07CC               	decf	sort@sizesMod& (0+255),f,b
  2356  0007B2  A0D8               	btfss	status,0,c
  2357  0007B4  07CD               	decf	(sort@sizesMod+1)& (0+255),f,b
  2358  0007B6                     
  2359                           ; BSR set to: 2
  2360                           ;main.c: 268:         nums++;
  2361  0007B6  4BCA               	infsnz	sort@nums& (0+255),f,b
  2362  0007B8  2BCB               	incf	(sort@nums+1)& (0+255),f,b
  2363  0007BA                     
  2364                           ; BSR set to: 2
  2365                           ;main.c: 269:     } while (nums <= sizes - 1);
  2366  0007BA  0EFF               	movlw	255
  2367  0007BC  6E23               	movwf	??_sort^0,c
  2368  0007BE  0EFF               	movlw	255
  2369  0007C0  6E24               	movwf	(??_sort+1)^0,c
  2370  0007C2  C021  F025         	movff	sort@sizes,??_sort+2
  2371  0007C6  C022  F026         	movff	sort@sizes+1,??_sort+3
  2372  0007CA  5023               	movf	??_sort^0,w,c
  2373  0007CC  2625               	addwf	(??_sort+2)^0,f,c
  2374  0007CE  5024               	movf	(??_sort+1)^0,w,c
  2375  0007D0  2226               	addwfc	(??_sort+3)^0,f,c
  2376  0007D2  51CA               	movf	sort@nums& (0+255),w,b
  2377  0007D4  5C25               	subwf	(??_sort+2)^0,w,c
  2378  0007D6  5026               	movf	(??_sort+3)^0,w,c
  2379  0007D8  0A80               	xorlw	128
  2380  0007DA  6E27               	movwf	(??_sort+4)^0,c
  2381  0007DC  51CB               	movf	(sort@nums+1)& (0+255),w,b
  2382  0007DE  0A80               	xorlw	128
  2383  0007E0  5827               	subwfb	(??_sort+4)^0,w,c
  2384  0007E2  B0D8               	btfsc	status,0,c
  2385  0007E4  EFF6  F003         	goto	u1291
  2386  0007E8  EFF9  F003         	goto	u1290
  2387  0007EC                     u1291:
  2388  0007EC  FFFF               	dw	65535	; assembler added errata NOP
  2389  0007EE  EF22  F003         	goto	l2029
  2390  0007F2                     u1290:
  2391  0007F2  FFFF               	dw	65535	; assembler added errata NOP
  2392  0007F4                     
  2393                           ; BSR set to: 2
  2394                           ;main.c: 272:     for (int j = 0; j < sizes; j++) {
  2395  0007F4  0E00               	movlw	0
  2396  0007F6  6FD1               	movwf	(sort@j+1)& (0+255),b
  2397  0007F8  0E00               	movlw	0
  2398  0007FA  6FD0               	movwf	sort@j& (0+255),b
  2399  0007FC  EF19  F004         	goto	l2069
  2400  000800                     l2065:
  2401  000800  FFFF               	dw	65535	; assembler added errata NOP
  2402                           
  2403                           ; BSR set to: 2
  2404                           ;main.c: 273:         *(p + j) = result[j];
  2405  000802  90D8               	bcf	status,0,c
  2406  000804  35D0               	rlcf	sort@j& (0+255),w,b
  2407  000806  6ED9               	movwf	fsr2l,c
  2408  000808  35D1               	rlcf	(sort@j+1)& (0+255),w,b
  2409  00080A  6EDA               	movwf	fsr2h,c
  2410  00080C  0E00               	movlw	low sort@result
  2411  00080E  26D9               	addwf	fsr2l,f,c
  2412  000810  0E02               	movlw	high sort@result
  2413  000812  22DA               	addwfc	fsr2h,f,c
  2414  000814  90D8               	bcf	status,0,c
  2415  000816  35D0               	rlcf	sort@j& (0+255),w,b
  2416  000818  6EE1               	movwf	fsr1l,c
  2417  00081A  35D1               	rlcf	(sort@j+1)& (0+255),w,b
  2418  00081C  6EE2               	movwf	fsr1h,c
  2419  00081E  501F               	movf	sort@p^0,w,c
  2420  000820  26E1               	addwf	fsr1l,f,c
  2421  000822  5020               	movf	(sort@p+1)^0,w,c
  2422  000824  22E2               	addwfc	fsr1h,f,c
  2423  000826  CFDE FFE6          	movff	postinc2,postinc1
  2424  00082A  CFDD FFE5          	movff	postdec2,postdec1
  2425  00082E                     
  2426                           ; BSR set to: 2
  2427                           ;main.c: 274:     }
  2428  00082E  4BD0               	infsnz	sort@j& (0+255),f,b
  2429  000830  2BD1               	incf	(sort@j+1)& (0+255),f,b
  2430  000832                     l2069:
  2431  000832  FFFF               	dw	65535	; assembler added errata NOP
  2432                           
  2433                           ; BSR set to: 2
  2434  000834  5021               	movf	sort@sizes^0,w,c
  2435  000836  5DD0               	subwf	sort@j& (0+255),w,b
  2436  000838  51D1               	movf	(sort@j+1)& (0+255),w,b
  2437  00083A  0A80               	xorlw	128
  2438  00083C  6E23               	movwf	??_sort^0,c
  2439  00083E  5022               	movf	(sort@sizes+1)^0,w,c
  2440  000840  0A80               	xorlw	128
  2441  000842  5823               	subwfb	??_sort^0,w,c
  2442  000844  A0D8               	btfss	status,0,c
  2443  000846  EF27  F004         	goto	u1301
  2444  00084A  EF2A  F004         	goto	u1300
  2445  00084E                     u1301:
  2446  00084E  FFFF               	dw	65535	; assembler added errata NOP
  2447  000850  EF00  F004         	goto	l2065
  2448  000854                     u1300:
  2449  000854  FFFF               	dw	65535	; assembler added errata NOP
  2450  000856                     
  2451                           ; BSR set to: 2
  2452  000856  0012               	return		;funcret
  2453  000858  FFFF               	dw	65535	; errata NOP
  2454  00085A                     __end_of_sort:
  2455                           	callstack 0
  2456                           
  2457 ;; *************** function _noRepeat *****************
  2458 ;; Defined at:
  2459 ;;		line 204 in file "main.c"
  2460 ;; Parameters:    Size  Location     Type
  2461 ;;  po              2   30[COMRAM] PTR int 
  2462 ;;		 -> NULL(0), queueDown(200), queueUp(200), 
  2463 ;;  sixes           2   32[COMRAM] int 
  2464 ;; Auto vars:     Size  Location     Type
  2465 ;;  shift           2   40[COMRAM] int 
  2466 ;;  t               2   38[COMRAM] int 
  2467 ;;  comp            2   46[COMRAM] int 
  2468 ;;  temp            2   42[COMRAM] int 
  2469 ;;  size            2   44[COMRAM] int 
  2470 ;; Return value:  Size  Location     Type
  2471 ;;                  2   30[COMRAM] int 
  2472 ;; Registers used:
  2473 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2474 ;; Tracked objects:
  2475 ;;		On entry : 0/0
  2476 ;;		On exit  : 0/0
  2477 ;;		Unchanged: 0/0
  2478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2479 ;;      Params:         4       0       0       0       0       0       0
  2480 ;;      Locals:        10       0       0       0       0       0       0
  2481 ;;      Temps:          4       0       0       0       0       0       0
  2482 ;;      Totals:        18       0       0       0       0       0       0
  2483 ;;Total ram usage:       18 bytes
  2484 ;; Hardware stack levels used: 1
  2485 ;; Hardware stack levels required when called: 2
  2486 ;; This function calls:
  2487 ;;		Nothing
  2488 ;; This function is called by:
  2489 ;;		_dataPanelUp
  2490 ;;		_rutine_up
  2491 ;; This function uses a non-reentrant model
  2492 ;;
  2493                           
  2494                           	psect	text6
  2495  0010FC                     __ptext6:
  2496                           	callstack 0
  2497  0010FC                     _noRepeat:
  2498                           	callstack 0
  2499  0010FC  FFFF               	dw	65535	; assembler added errata NOP
  2500  0010FE                     
  2501                           ;main.c: 205:     int size = sixes;
  2502  0010FE  C021  F02D         	movff	noRepeat@sixes,noRepeat@size
  2503  001102  C022  F02E         	movff	noRepeat@sixes+1,noRepeat@size+1
  2504  001106                     
  2505                           ;main.c: 213:     for (int temp = 0; temp < size; temp++){
  2506  001106  0E00               	movlw	0
  2507  001108  6E2C               	movwf	(noRepeat@temp+1)^0,c
  2508  00110A  0E00               	movlw	0
  2509  00110C  6E2B               	movwf	noRepeat@temp^0,c
  2510  00110E  EF13  F009         	goto	l2023
  2511  001112                     l2003:
  2512  001112  FFFF               	dw	65535	; assembler added errata NOP
  2513                           
  2514                           ;main.c: 215:         for(int comp = temp + 1; comp < size; comp++){
  2515  001114  0E01               	movlw	1
  2516  001116  242B               	addwf	noRepeat@temp^0,w,c
  2517  001118  6E2F               	movwf	noRepeat@comp^0,c
  2518  00111A  0E00               	movlw	0
  2519  00111C  202C               	addwfc	(noRepeat@temp+1)^0,w,c
  2520  00111E  6E30               	movwf	(noRepeat@comp+1)^0,c
  2521  001120  EFFF  F008         	goto	l2019
  2522  001124                     l2005:
  2523  001124  FFFF               	dw	65535	; assembler added errata NOP
  2524                           
  2525                           ;main.c: 217:             if (*(po + temp) == *(po + comp)){
  2526  001126  90D8               	bcf	status,0,c
  2527  001128  342F               	rlcf	noRepeat@comp^0,w,c
  2528  00112A  6ED9               	movwf	fsr2l,c
  2529  00112C  3430               	rlcf	(noRepeat@comp+1)^0,w,c
  2530  00112E  6EDA               	movwf	fsr2h,c
  2531  001130  501F               	movf	noRepeat@po^0,w,c
  2532  001132  26D9               	addwf	fsr2l,f,c
  2533  001134  5020               	movf	(noRepeat@po+1)^0,w,c
  2534  001136  22DA               	addwfc	fsr2h,f,c
  2535  001138  90D8               	bcf	status,0,c
  2536  00113A  342B               	rlcf	noRepeat@temp^0,w,c
  2537  00113C  6EE1               	movwf	fsr1l,c
  2538  00113E  342C               	rlcf	(noRepeat@temp+1)^0,w,c
  2539  001140  6EE2               	movwf	fsr1h,c
  2540  001142  501F               	movf	noRepeat@po^0,w,c
  2541  001144  26E1               	addwf	fsr1l,f,c
  2542  001146  5020               	movf	(noRepeat@po+1)^0,w,c
  2543  001148  22E2               	addwfc	fsr1h,f,c
  2544  00114A  50DE               	movf	postinc2,w,c
  2545  00114C  18E6               	xorwf	postinc1,w,c
  2546  00114E  E107               	bnz	u1211
  2547  001150  50DE               	movf	postinc2,w,c
  2548  001152  18E6               	xorwf	postinc1,w,c
  2549  001154  A4D8               	btfss	status,2,c
  2550  001156  EFAF  F008         	goto	u1211
  2551  00115A  EFB2  F008         	goto	u1210
  2552  00115E                     u1211:
  2553  00115E  FFFF               	dw	65535	; assembler added errata NOP
  2554  001160  EFFC  F008         	goto	l101
  2555  001164                     u1210:
  2556  001164  FFFF               	dw	65535	; assembler added errata NOP
  2557  001166                     
  2558                           ;main.c: 218:                 int t = comp;
  2559  001166  C02F  F027         	movff	noRepeat@comp,noRepeat@t
  2560  00116A  C030  F028         	movff	noRepeat@comp+1,noRepeat@t+1
  2561                           
  2562                           ;main.c: 220:                 for (int shift = comp; shift < size; shift++){
  2563  00116E  C02F  F029         	movff	noRepeat@comp,noRepeat@shift
  2564  001172  C030  F02A         	movff	noRepeat@comp+1,noRepeat@shift+1
  2565  001176  EFE4  F008         	goto	l2015
  2566  00117A                     l2009:
  2567  00117A  FFFF               	dw	65535	; assembler added errata NOP
  2568                           
  2569                           ;main.c: 221:                     *(po + t) = *(po + (shift + 1));
  2570  00117C  C029  F023         	movff	noRepeat@shift,??_noRepeat
  2571  001180  C02A  F024         	movff	noRepeat@shift+1,??_noRepeat+1
  2572  001184  90D8               	bcf	status,0,c
  2573  001186  3623               	rlcf	??_noRepeat^0,f,c
  2574  001188  3624               	rlcf	(??_noRepeat+1)^0,f,c
  2575  00118A  C01F  F025         	movff	noRepeat@po,??_noRepeat+2
  2576  00118E  C020  F026         	movff	noRepeat@po+1,??_noRepeat+3
  2577  001192  5023               	movf	??_noRepeat^0,w,c
  2578  001194  2625               	addwf	(??_noRepeat+2)^0,f,c
  2579  001196  5024               	movf	(??_noRepeat+1)^0,w,c
  2580  001198  2226               	addwfc	(??_noRepeat+3)^0,f,c
  2581  00119A  0E02               	movlw	2
  2582  00119C  2425               	addwf	(??_noRepeat+2)^0,w,c
  2583  00119E  6ED9               	movwf	fsr2l,c
  2584  0011A0  0E00               	movlw	0
  2585  0011A2  2026               	addwfc	(??_noRepeat+3)^0,w,c
  2586  0011A4  6EDA               	movwf	fsr2h,c
  2587  0011A6  90D8               	bcf	status,0,c
  2588  0011A8  3427               	rlcf	noRepeat@t^0,w,c
  2589  0011AA  6EE1               	movwf	fsr1l,c
  2590  0011AC  3428               	rlcf	(noRepeat@t+1)^0,w,c
  2591  0011AE  6EE2               	movwf	fsr1h,c
  2592  0011B0  501F               	movf	noRepeat@po^0,w,c
  2593  0011B2  26E1               	addwf	fsr1l,f,c
  2594  0011B4  5020               	movf	(noRepeat@po+1)^0,w,c
  2595  0011B6  22E2               	addwfc	fsr1h,f,c
  2596  0011B8  CFDE FFE6          	movff	postinc2,postinc1
  2597  0011BC  CFDD FFE5          	movff	postdec2,postdec1
  2598  0011C0                     
  2599                           ;main.c: 222:                     t++;
  2600  0011C0  4A27               	infsnz	noRepeat@t^0,f,c
  2601  0011C2  2A28               	incf	(noRepeat@t+1)^0,f,c
  2602  0011C4                     
  2603                           ;main.c: 223:                 }
  2604  0011C4  4A29               	infsnz	noRepeat@shift^0,f,c
  2605  0011C6  2A2A               	incf	(noRepeat@shift+1)^0,f,c
  2606  0011C8                     l2015:
  2607  0011C8  FFFF               	dw	65535	; assembler added errata NOP
  2608  0011CA  502D               	movf	noRepeat@size^0,w,c
  2609  0011CC  5C29               	subwf	noRepeat@shift^0,w,c
  2610  0011CE  502A               	movf	(noRepeat@shift+1)^0,w,c
  2611  0011D0  0A80               	xorlw	128
  2612  0011D2  6E23               	movwf	??_noRepeat^0,c
  2613  0011D4  502E               	movf	(noRepeat@size+1)^0,w,c
  2614  0011D6  0A80               	xorlw	128
  2615  0011D8  5823               	subwfb	??_noRepeat^0,w,c
  2616  0011DA  A0D8               	btfss	status,0,c
  2617  0011DC  EFF2  F008         	goto	u1221
  2618  0011E0  EFF5  F008         	goto	u1220
  2619  0011E4                     u1221:
  2620  0011E4  FFFF               	dw	65535	; assembler added errata NOP
  2621  0011E6  EFBD  F008         	goto	l2009
  2622  0011EA                     u1220:
  2623  0011EA  FFFF               	dw	65535	; assembler added errata NOP
  2624  0011EC                     
  2625                           ;main.c: 224:                 size--;
  2626  0011EC  062D               	decf	noRepeat@size^0,f,c
  2627  0011EE  A0D8               	btfss	status,0,c
  2628  0011F0  062E               	decf	(noRepeat@size+1)^0,f,c
  2629                           
  2630                           ;main.c: 225:                 comp--;
  2631  0011F2  062F               	decf	noRepeat@comp^0,f,c
  2632  0011F4  A0D8               	btfss	status,0,c
  2633  0011F6  0630               	decf	(noRepeat@comp+1)^0,f,c
  2634  0011F8                     l101:
  2635  0011F8  FFFF               	dw	65535	; assembler added errata NOP
  2636                           
  2637                           ;main.c: 229:         }
  2638  0011FA  4A2F               	infsnz	noRepeat@comp^0,f,c
  2639  0011FC  2A30               	incf	(noRepeat@comp+1)^0,f,c
  2640  0011FE                     l2019:
  2641  0011FE  FFFF               	dw	65535	; assembler added errata NOP
  2642  001200  502D               	movf	noRepeat@size^0,w,c
  2643  001202  5C2F               	subwf	noRepeat@comp^0,w,c
  2644  001204  5030               	movf	(noRepeat@comp+1)^0,w,c
  2645  001206  0A80               	xorlw	128
  2646  001208  6E23               	movwf	??_noRepeat^0,c
  2647  00120A  502E               	movf	(noRepeat@size+1)^0,w,c
  2648  00120C  0A80               	xorlw	128
  2649  00120E  5823               	subwfb	??_noRepeat^0,w,c
  2650  001210  A0D8               	btfss	status,0,c
  2651  001212  EF0D  F009         	goto	u1231
  2652  001216  EF10  F009         	goto	u1230
  2653  00121A                     u1231:
  2654  00121A  FFFF               	dw	65535	; assembler added errata NOP
  2655  00121C  EF92  F008         	goto	l2005
  2656  001220                     u1230:
  2657  001220  FFFF               	dw	65535	; assembler added errata NOP
  2658  001222                     
  2659                           ;main.c: 230:     }
  2660  001222  4A2B               	infsnz	noRepeat@temp^0,f,c
  2661  001224  2A2C               	incf	(noRepeat@temp+1)^0,f,c
  2662  001226                     l2023:
  2663  001226  FFFF               	dw	65535	; assembler added errata NOP
  2664  001228  502D               	movf	noRepeat@size^0,w,c
  2665  00122A  5C2B               	subwf	noRepeat@temp^0,w,c
  2666  00122C  502C               	movf	(noRepeat@temp+1)^0,w,c
  2667  00122E  0A80               	xorlw	128
  2668  001230  6E23               	movwf	??_noRepeat^0,c
  2669  001232  502E               	movf	(noRepeat@size+1)^0,w,c
  2670  001234  0A80               	xorlw	128
  2671  001236  5823               	subwfb	??_noRepeat^0,w,c
  2672  001238  A0D8               	btfss	status,0,c
  2673  00123A  EF21  F009         	goto	u1241
  2674  00123E  EF24  F009         	goto	u1240
  2675  001242                     u1241:
  2676  001242  FFFF               	dw	65535	; assembler added errata NOP
  2677  001244  EF89  F008         	goto	l2003
  2678  001248                     u1240:
  2679  001248  FFFF               	dw	65535	; assembler added errata NOP
  2680  00124A                     
  2681                           ;main.c: 231:     return size;
  2682  00124A  C02D  F01F         	movff	noRepeat@size,?_noRepeat
  2683  00124E  C02E  F020         	movff	noRepeat@size+1,?_noRepeat+1
  2684  001252  0012               	return		;funcret
  2685  001254  FFFF               	dw	65535	; errata NOP
  2686  001256                     __end_of_noRepeat:
  2687                           	callstack 0
  2688                           
  2689 ;; *************** function _modeDown *****************
  2690 ;; Defined at:
  2691 ;;		line 463 in file "main.c"
  2692 ;; Parameters:    Size  Location     Type
  2693 ;;		None
  2694 ;; Auto vars:     Size  Location     Type
  2695 ;;		None
  2696 ;; Return value:  Size  Location     Type
  2697 ;;                  1    wreg      void 
  2698 ;; Registers used:
  2699 ;;		wreg, status,2
  2700 ;; Tracked objects:
  2701 ;;		On entry : 0/0
  2702 ;;		On exit  : 0/0
  2703 ;;		Unchanged: 0/0
  2704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2705 ;;      Params:         0       0       0       0       0       0       0
  2706 ;;      Locals:         0       0       0       0       0       0       0
  2707 ;;      Temps:          0       0       0       0       0       0       0
  2708 ;;      Totals:         0       0       0       0       0       0       0
  2709 ;;Total ram usage:        0 bytes
  2710 ;; Hardware stack levels used: 1
  2711 ;; Hardware stack levels required when called: 2
  2712 ;; This function calls:
  2713 ;;		Nothing
  2714 ;; This function is called by:
  2715 ;;		_rutine_up
  2716 ;; This function uses a non-reentrant model
  2717 ;;
  2718                           
  2719                           	psect	text7
  2720  0013BC                     __ptext7:
  2721                           	callstack 0
  2722  0013BC                     _modeDown:
  2723                           	callstack 0
  2724  0013BC  FFFF               	dw	65535	; assembler added errata NOP
  2725  0013BE                     
  2726                           ;main.c: 464:     modeUp_F = 0;
  2727  0013BE  0E00               	movlw	0
  2728  0013C0  6E50               	movwf	(_modeUp_F+1)^0,c
  2729  0013C2  0E00               	movlw	0
  2730  0013C4  6E4F               	movwf	_modeUp_F^0,c
  2731                           
  2732                           ;main.c: 465:     modeDown_F = 1;
  2733  0013C6  0E00               	movlw	0
  2734  0013C8  6E4E               	movwf	(_modeDown_F+1)^0,c
  2735  0013CA  0E01               	movlw	1
  2736  0013CC  6E4D               	movwf	_modeDown_F^0,c
  2737                           
  2738                           ;main.c: 467:     callsD = 0;
  2739  0013CE  0E00               	movlw	0
  2740  0013D0  6E58               	movwf	(_callsD+1)^0,c
  2741  0013D2  0E00               	movlw	0
  2742  0013D4  6E57               	movwf	_callsD^0,c
  2743                           
  2744                           ;main.c: 469:     tasksUp = 0;
  2745  0013D6  0E00               	movlw	0
  2746  0013D8  6E5C               	movwf	(_tasksUp+1)^0,c
  2747  0013DA  0E00               	movlw	0
  2748  0013DC  6E5B               	movwf	_tasksUp^0,c
  2749  0013DE  0012               	return		;funcret
  2750  0013E0  FFFF               	dw	65535	; errata NOP
  2751  0013E2                     __end_of_modeDown:
  2752                           	callstack 0
  2753                           
  2754 ;; *************** function _interruptsInit *****************
  2755 ;; Defined at:
  2756 ;;		line 180 in file "main.c"
  2757 ;; Parameters:    Size  Location     Type
  2758 ;;		None
  2759 ;; Auto vars:     Size  Location     Type
  2760 ;;		None
  2761 ;; Return value:  Size  Location     Type
  2762 ;;                  1    wreg      void 
  2763 ;; Registers used:
  2764 ;;		None
  2765 ;; Tracked objects:
  2766 ;;		On entry : 0/0
  2767 ;;		On exit  : 0/0
  2768 ;;		Unchanged: 0/0
  2769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2770 ;;      Params:         0       0       0       0       0       0       0
  2771 ;;      Locals:         0       0       0       0       0       0       0
  2772 ;;      Temps:          0       0       0       0       0       0       0
  2773 ;;      Totals:         0       0       0       0       0       0       0
  2774 ;;Total ram usage:        0 bytes
  2775 ;; Hardware stack levels used: 1
  2776 ;; Hardware stack levels required when called: 2
  2777 ;; This function calls:
  2778 ;;		Nothing
  2779 ;; This function is called by:
  2780 ;;		_main
  2781 ;; This function uses a non-reentrant model
  2782 ;;
  2783                           
  2784                           	psect	text8
  2785  0013E2                     __ptext8:
  2786                           	callstack 0
  2787  0013E2                     _interruptsInit:
  2788                           	callstack 0
  2789  0013E2  FFFF               	dw	65535	; assembler added errata NOP
  2790  0013E4                     
  2791                           ;main.c: 181:     RCONbits.IPEN = 0;
  2792  0013E4  9ED0               	bcf	208,7,c	;volatile
  2793                           
  2794                           ;main.c: 182:     INTCONbits.GIE = 1;
  2795  0013E6  8EF2               	bsf	242,7,c	;volatile
  2796                           
  2797                           ;main.c: 183:     INTCONbits.PEIE = 1;
  2798  0013E8  8CF2               	bsf	242,6,c	;volatile
  2799  0013EA  0012               	return		;funcret
  2800  0013EC  FFFF               	dw	65535	; errata NOP
  2801  0013EE                     __end_of_interruptsInit:
  2802                           	callstack 0
  2803                           
  2804 ;; *************** function _bootAscensor *****************
  2805 ;; Defined at:
  2806 ;;		line 186 in file "main.c"
  2807 ;; Parameters:    Size  Location     Type
  2808 ;;		None
  2809 ;; Auto vars:     Size  Location     Type
  2810 ;;		None
  2811 ;; Return value:  Size  Location     Type
  2812 ;;                  1    wreg      void 
  2813 ;; Registers used:
  2814 ;;		wreg, status,2
  2815 ;; Tracked objects:
  2816 ;;		On entry : 0/0
  2817 ;;		On exit  : 0/0
  2818 ;;		Unchanged: 0/0
  2819 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2820 ;;      Params:         0       0       0       0       0       0       0
  2821 ;;      Locals:         0       0       0       0       0       0       0
  2822 ;;      Temps:          0       0       0       0       0       0       0
  2823 ;;      Totals:         0       0       0       0       0       0       0
  2824 ;;Total ram usage:        0 bytes
  2825 ;; Hardware stack levels used: 1
  2826 ;; Hardware stack levels required when called: 2
  2827 ;; This function calls:
  2828 ;;		Nothing
  2829 ;; This function is called by:
  2830 ;;		_main
  2831 ;; This function uses a non-reentrant model
  2832 ;;
  2833                           
  2834                           	psect	text9
  2835  001334                     __ptext9:
  2836                           	callstack 0
  2837  001334                     _bootAscensor:
  2838                           	callstack 0
  2839  001334  FFFF               	dw	65535	; assembler added errata NOP
  2840  001336                     
  2841                           ;main.c: 187:     LATCbits.LC0 = 1;
  2842  001336  808B               	bsf	139,0,c	;volatile
  2843                           
  2844                           ;main.c: 188:     LATCbits.LC1 = 1;
  2845  001338  828B               	bsf	139,1,c	;volatile
  2846                           
  2847                           ;main.c: 190:     if (PORTDbits.RD4 == 1) {
  2848  00133A  A883               	btfss	131,4,c	;volatile
  2849  00133C  EFA2  F009         	goto	u331
  2850  001340  EFA5  F009         	goto	u330
  2851  001344                     u331:
  2852  001344  FFFF               	dw	65535	; assembler added errata NOP
  2853  001346  EFAD  F009         	goto	l89
  2854  00134A                     u330:
  2855  00134A  FFFF               	dw	65535	; assembler added errata NOP
  2856  00134C                     l1185:
  2857  00134C  FFFF               	dw	65535	; assembler added errata NOP
  2858                           
  2859                           ;main.c: 191:         nowFL = 1;
  2860  00134E  0E00               	movlw	0
  2861  001350  6E52               	movwf	(_nowFL+1)^0,c
  2862  001352  0E01               	movlw	1
  2863  001354  6E51               	movwf	_nowFL^0,c
  2864  001356  EFBC  F009         	goto	l90
  2865  00135A                     l89:
  2866  00135A  FFFF               	dw	65535	; assembler added errata NOP
  2867                           
  2868                           ;main.c: 194:         LATCbits.LC0 = 0;
  2869  00135C  908B               	bcf	139,0,c	;volatile
  2870  00135E                     l92:
  2871  00135E  FFFF               	dw	65535	; assembler added errata NOP
  2872                           
  2873                           ;main.c: 195:         while (!PORTDbits.RD4) {
  2874  001360  A883               	btfss	131,4,c	;volatile
  2875  001362  EFB5  F009         	goto	u341
  2876  001366  EFB8  F009         	goto	u340
  2877  00136A                     u341:
  2878  00136A  FFFF               	dw	65535	; assembler added errata NOP
  2879  00136C  EFAF  F009         	goto	l92
  2880  001370                     u340:
  2881  001370  FFFF               	dw	65535	; assembler added errata NOP
  2882  001372                     
  2883                           ;main.c: 198:         LATCbits.LC0 = 1;
  2884  001372  808B               	bsf	139,0,c	;volatile
  2885  001374  EFA6  F009         	goto	l1185
  2886  001378                     l90:
  2887  001378  FFFF               	dw	65535	; assembler added errata NOP
  2888  00137A  0012               	return		;funcret
  2889  00137C  FFFF               	dw	65535	; errata NOP
  2890  00137E                     __end_of_bootAscensor:
  2891                           	callstack 0
  2892                           
  2893 ;; *************** function _boot *****************
  2894 ;; Defined at:
  2895 ;;		line 144 in file "main.c"
  2896 ;; Parameters:    Size  Location     Type
  2897 ;;		None
  2898 ;; Auto vars:     Size  Location     Type
  2899 ;;		None
  2900 ;; Return value:  Size  Location     Type
  2901 ;;                  1    wreg      void 
  2902 ;; Registers used:
  2903 ;;		wreg, status,2, status,0
  2904 ;; Tracked objects:
  2905 ;;		On entry : 0/0
  2906 ;;		On exit  : 0/0
  2907 ;;		Unchanged: 0/0
  2908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2909 ;;      Params:         0       0       0       0       0       0       0
  2910 ;;      Locals:         0       0       0       0       0       0       0
  2911 ;;      Temps:          0       0       0       0       0       0       0
  2912 ;;      Totals:         0       0       0       0       0       0       0
  2913 ;;Total ram usage:        0 bytes
  2914 ;; Hardware stack levels used: 1
  2915 ;; Hardware stack levels required when called: 2
  2916 ;; This function calls:
  2917 ;;		Nothing
  2918 ;; This function is called by:
  2919 ;;		_main
  2920 ;; This function uses a non-reentrant model
  2921 ;;
  2922                           
  2923                           	psect	text10
  2924  0012D6                     __ptext10:
  2925                           	callstack 0
  2926  0012D6                     _boot:
  2927                           	callstack 0
  2928  0012D6  FFFF               	dw	65535	; assembler added errata NOP
  2929  0012D8                     
  2930                           ;main.c: 145:     ADCON1 = 0x06;
  2931  0012D8  0E06               	movlw	6
  2932  0012DA  6EC1               	movwf	193,c	;volatile
  2933  0012DC                     
  2934                           ;main.c: 146:     TRISB = 0xFF;
  2935  0012DC  6893               	setf	147,c	;volatile
  2936                           
  2937                           ;main.c: 147:     TRISD = 0xF0;
  2938  0012DE  0EF0               	movlw	240
  2939  0012E0  6E95               	movwf	149,c	;volatile
  2940  0012E2                     
  2941                           ;main.c: 148:     TRISA = 0xFF;
  2942  0012E2  6892               	setf	146,c	;volatile
  2943                           
  2944                           ;main.c: 149:     TRISC = 0xFC;
  2945  0012E4  0EFC               	movlw	252
  2946  0012E6  6E94               	movwf	148,c	;volatile
  2947                           
  2948                           ;main.c: 152:     tasksDown = 0;
  2949  0012E8  0E00               	movlw	0
  2950  0012EA  6E5E               	movwf	(_tasksDown+1)^0,c
  2951  0012EC  0E00               	movlw	0
  2952  0012EE  6E5D               	movwf	_tasksDown^0,c
  2953                           
  2954                           ;main.c: 153:     tasksUp = 0;
  2955  0012F0  0E00               	movlw	0
  2956  0012F2  6E5C               	movwf	(_tasksUp+1)^0,c
  2957  0012F4  0E00               	movlw	0
  2958  0012F6  6E5B               	movwf	_tasksUp^0,c
  2959                           
  2960                           ;main.c: 154:     calls = 0;
  2961  0012F8  0E00               	movlw	0
  2962  0012FA  6E5A               	movwf	(_calls+1)^0,c
  2963  0012FC  0E00               	movlw	0
  2964  0012FE  6E59               	movwf	_calls^0,c
  2965                           
  2966                           ;main.c: 155:     callsD = 0;
  2967  001300  0E00               	movlw	0
  2968  001302  6E58               	movwf	(_callsD+1)^0,c
  2969  001304  0E00               	movlw	0
  2970  001306  6E57               	movwf	_callsD^0,c
  2971                           
  2972                           ;main.c: 156:     callFL_up = 0;
  2973  001308  0E00               	movlw	0
  2974  00130A  6E56               	movwf	(_callFL_up+1)^0,c
  2975  00130C  0E00               	movlw	0
  2976  00130E  6E55               	movwf	_callFL_up^0,c
  2977                           
  2978                           ;main.c: 157:     nowFL = 0;
  2979  001310  0E00               	movlw	0
  2980  001312  6E52               	movwf	(_nowFL+1)^0,c
  2981  001314  0E00               	movlw	0
  2982  001316  6E51               	movwf	_nowFL^0,c
  2983                           
  2984                           ;main.c: 160:     modeUp_F = 0;
  2985  001318  0E00               	movlw	0
  2986  00131A  6E50               	movwf	(_modeUp_F+1)^0,c
  2987  00131C  0E00               	movlw	0
  2988  00131E  6E4F               	movwf	_modeUp_F^0,c
  2989                           
  2990                           ;main.c: 161:     modeDown_F = 0;
  2991  001320  0E00               	movlw	0
  2992  001322  6E4E               	movwf	(_modeDown_F+1)^0,c
  2993  001324  0E00               	movlw	0
  2994  001326  6E4D               	movwf	_modeDown_F^0,c
  2995  001328                     
  2996                           ;main.c: 177:     UpTasks = &queueUp[0];
  2997  001328  0E00               	movlw	low _queueUp
  2998  00132A  6E5F               	movwf	_UpTasks^0,c
  2999  00132C  0E03               	movlw	high _queueUp
  3000  00132E  6E60               	movwf	(_UpTasks+1)^0,c
  3001  001330  0012               	return		;funcret
  3002  001332  FFFF               	dw	65535	; errata NOP
  3003  001334                     __end_of_boot:
  3004                           	callstack 0
  3005                           
  3006 ;; *************** function _ISR *****************
  3007 ;; Defined at:
  3008 ;;		line 571 in file "main.c"
  3009 ;; Parameters:    Size  Location     Type
  3010 ;;		None
  3011 ;; Auto vars:     Size  Location     Type
  3012 ;;  si              2   28[COMRAM] int 
  3013 ;;  si              2   26[COMRAM] int 
  3014 ;;  si              2   24[COMRAM] int 
  3015 ;; Return value:  Size  Location     Type
  3016 ;;                  1    wreg      void 
  3017 ;; Registers used:
  3018 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3019 ;; Tracked objects:
  3020 ;;		On entry : 0/0
  3021 ;;		On exit  : 0/0
  3022 ;;		Unchanged: 0/0
  3023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3024 ;;      Params:         0       0       0       0       0       0       0
  3025 ;;      Locals:         6       0       0       0       0       0       0
  3026 ;;      Temps:          6       0       0       0       0       0       0
  3027 ;;      Totals:        12       0       0       0       0       0       0
  3028 ;;Total ram usage:       12 bytes
  3029 ;; Hardware stack levels used: 1
  3030 ;; Hardware stack levels required when called: 1
  3031 ;; This function calls:
  3032 ;;		i2_noRepeat
  3033 ;;		i2_sort
  3034 ;; This function is called by:
  3035 ;;		Interrupt level 2
  3036 ;; This function uses a non-reentrant model
  3037 ;;
  3038                           
  3039                           	psect	intcode
  3040  000008                     __pintcode:
  3041                           	callstack 0
  3042  000008                     _ISR:
  3043                           	callstack 0
  3044  000008  FFFF               	dw	65535	; assembler added errata NOP
  3045                           
  3046                           ;incstack = 0
  3047  00000A  8261               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
  3048  00000C  CFE1 F015          	movff	fsr1l,??_ISR+2
  3049  000010  CFE2 F016          	movff	fsr1h,??_ISR+3
  3050  000014  CFD9 F017          	movff	fsr2l,??_ISR+4
  3051  000018  CFDA F018          	movff	fsr2h,??_ISR+5
  3052  00001C                     
  3053                           ;main.c: 573:     switch (PORTB) {
  3054  00001C  EF4D  F001         	goto	i2l1933
  3055  000020                     i2l1865:
  3056  000020  FFFF               	dw	65535	; assembler added errata NOP
  3057                           
  3058                           ;main.c: 575:             if (modeUp_F){
  3059  000022  504F               	movf	_modeUp_F^0,w,c
  3060  000024  1050               	iorwf	(_modeUp_F+1)^0,w,c
  3061  000026  B4D8               	btfsc	status,2,c
  3062  000028  EF18  F000         	goto	i2u112_41
  3063  00002C  EF1B  F000         	goto	i2u112_40
  3064  000030                     i2u112_41:
  3065  000030  FFFF               	dw	65535	; assembler added errata NOP
  3066  000032  EF7C  F001         	goto	i2l245
  3067  000036                     i2u112_40:
  3068  000036  FFFF               	dw	65535	; assembler added errata NOP
  3069  000038                     
  3070                           ;main.c: 576:                     if (nowFL < 1){
  3071  000038  BE52               	btfsc	(_nowFL+1)^0,7,c
  3072  00003A  EF2A  F000         	goto	i2u113_40
  3073  00003E  5052               	movf	(_nowFL+1)^0,w,c
  3074  000040  E106               	bnz	i2u113_41
  3075  000042  0451               	decf	_nowFL^0,w,c
  3076  000044  B0D8               	btfsc	status,0,c
  3077  000046  EF27  F000         	goto	i2u113_41
  3078  00004A  EF2A  F000         	goto	i2u113_40
  3079  00004E                     i2u113_41:
  3080  00004E  FFFF               	dw	65535	; assembler added errata NOP
  3081  000050  EF7C  F001         	goto	i2l245
  3082  000054                     i2u113_40:
  3083  000054  FFFF               	dw	65535	; assembler added errata NOP
  3084  000056                     
  3085                           ;main.c: 577:                         queueUp[tasksUp] = 1;
  3086  000056  90D8               	bcf	status,0,c
  3087  000058  345B               	rlcf	_tasksUp^0,w,c
  3088  00005A  6ED9               	movwf	fsr2l,c
  3089  00005C  345C               	rlcf	(_tasksUp+1)^0,w,c
  3090  00005E  6EDA               	movwf	fsr2h,c
  3091  000060  0E00               	movlw	low _queueUp
  3092  000062  26D9               	addwf	fsr2l,f,c
  3093  000064  0E03               	movlw	high _queueUp
  3094  000066  22DA               	addwfc	fsr2h,f,c
  3095  000068  0E01               	movlw	1
  3096  00006A  6EDE               	movwf	postinc2,c
  3097  00006C  0E00               	movlw	0
  3098  00006E  6EDD               	movwf	postdec2,c
  3099  000070                     
  3100                           ;main.c: 578:                         tasksUp++;
  3101  000070  4A5B               	infsnz	_tasksUp^0,f,c
  3102  000072  2A5C               	incf	(_tasksUp+1)^0,f,c
  3103  000074                     
  3104                           ;main.c: 579:                         sort(&queueUp[0], tasksUp);
  3105  000074  0E00               	movlw	low _queueUp
  3106  000076  6E01               	movwf	i2sort@p^0,c
  3107  000078  0E03               	movlw	high _queueUp
  3108  00007A  6E02               	movwf	(i2sort@p+1)^0,c
  3109  00007C  C05B  F003         	movff	_tasksUp,i2sort@sizes
  3110  000080  C05C  F004         	movff	_tasksUp+1,i2sort@sizes+1
  3111  000084  EC2D  F004         	call	i2_sort	;wreg free
  3112  000088                     
  3113                           ;main.c: 580:                         int si = noRepeat(UpTasks, tasksUp);
  3114  000088  C05F  F001         	movff	_UpTasks,i2noRepeat@po
  3115  00008C  C060  F002         	movff	_UpTasks+1,i2noRepeat@po+1
  3116  000090  C05B  F003         	movff	_tasksUp,i2noRepeat@sixes
  3117  000094  C05C  F004         	movff	_tasksUp+1,i2noRepeat@sixes+1
  3118  000098  EC23  F007         	call	i2_noRepeat	;wreg free
  3119  00009C  C001  F019         	movff	?i2_noRepeat,ISR@si
  3120  0000A0  C002  F01A         	movff	?i2_noRepeat+1,ISR@si+1
  3121  0000A4                     
  3122                           ;main.c: 581:                         tasksUp = si;
  3123  0000A4  C019  F05B         	movff	ISR@si,_tasksUp
  3124  0000A8  C01A  F05C         	movff	ISR@si+1,_tasksUp+1
  3125  0000AC  EF7C  F001         	goto	i2l245
  3126  0000B0                     i2l1879:
  3127  0000B0  FFFF               	dw	65535	; assembler added errata NOP
  3128                           
  3129                           ;main.c: 588:             if (modeUp_F){
  3130  0000B2  504F               	movf	_modeUp_F^0,w,c
  3131  0000B4  1050               	iorwf	(_modeUp_F+1)^0,w,c
  3132  0000B6  B4D8               	btfsc	status,2,c
  3133  0000B8  EF60  F000         	goto	i2u114_41
  3134  0000BC  EF63  F000         	goto	i2u114_40
  3135  0000C0                     i2u114_41:
  3136  0000C0  FFFF               	dw	65535	; assembler added errata NOP
  3137  0000C2  EF7C  F001         	goto	i2l245
  3138  0000C6                     i2u114_40:
  3139  0000C6  FFFF               	dw	65535	; assembler added errata NOP
  3140  0000C8                     
  3141                           ;main.c: 589:                     if (nowFL < 2){
  3142  0000C8  BE52               	btfsc	(_nowFL+1)^0,7,c
  3143  0000CA  EF73  F000         	goto	i2u115_40
  3144  0000CE  5052               	movf	(_nowFL+1)^0,w,c
  3145  0000D0  E107               	bnz	i2u115_41
  3146  0000D2  0E02               	movlw	2
  3147  0000D4  5C51               	subwf	_nowFL^0,w,c
  3148  0000D6  B0D8               	btfsc	status,0,c
  3149  0000D8  EF70  F000         	goto	i2u115_41
  3150  0000DC  EF73  F000         	goto	i2u115_40
  3151  0000E0                     i2u115_41:
  3152  0000E0  FFFF               	dw	65535	; assembler added errata NOP
  3153  0000E2  EF7C  F001         	goto	i2l245
  3154  0000E6                     i2u115_40:
  3155  0000E6  FFFF               	dw	65535	; assembler added errata NOP
  3156  0000E8                     
  3157                           ;main.c: 590:                         queueUp[tasksUp] = 2;
  3158  0000E8  90D8               	bcf	status,0,c
  3159  0000EA  345B               	rlcf	_tasksUp^0,w,c
  3160  0000EC  6ED9               	movwf	fsr2l,c
  3161  0000EE  345C               	rlcf	(_tasksUp+1)^0,w,c
  3162  0000F0  6EDA               	movwf	fsr2h,c
  3163  0000F2  0E00               	movlw	low _queueUp
  3164  0000F4  26D9               	addwf	fsr2l,f,c
  3165  0000F6  0E03               	movlw	high _queueUp
  3166  0000F8  22DA               	addwfc	fsr2h,f,c
  3167  0000FA  0E02               	movlw	2
  3168  0000FC  6EDE               	movwf	postinc2,c
  3169  0000FE  0E00               	movlw	0
  3170  000100  6EDD               	movwf	postdec2,c
  3171  000102                     
  3172                           ;main.c: 591:                         tasksUp++;
  3173  000102  4A5B               	infsnz	_tasksUp^0,f,c
  3174  000104  2A5C               	incf	(_tasksUp+1)^0,f,c
  3175  000106                     
  3176                           ;main.c: 593:                         sort(&queueUp[0], tasksUp);
  3177  000106  0E00               	movlw	low _queueUp
  3178  000108  6E01               	movwf	i2sort@p^0,c
  3179  00010A  0E03               	movlw	high _queueUp
  3180  00010C  6E02               	movwf	(i2sort@p+1)^0,c
  3181  00010E  C05B  F003         	movff	_tasksUp,i2sort@sizes
  3182  000112  C05C  F004         	movff	_tasksUp+1,i2sort@sizes+1
  3183  000116  EC2D  F004         	call	i2_sort	;wreg free
  3184  00011A                     
  3185                           ;main.c: 594:                         int si = noRepeat(&queueUp[0], tasksUp);
  3186  00011A  0E00               	movlw	low _queueUp
  3187  00011C  6E01               	movwf	i2noRepeat@po^0,c
  3188  00011E  0E03               	movlw	high _queueUp
  3189  000120  6E02               	movwf	(i2noRepeat@po+1)^0,c
  3190  000122  C05B  F003         	movff	_tasksUp,i2noRepeat@sixes
  3191  000126  C05C  F004         	movff	_tasksUp+1,i2noRepeat@sixes+1
  3192  00012A  EC23  F007         	call	i2_noRepeat	;wreg free
  3193  00012E  C001  F01B         	movff	?i2_noRepeat,ISR@si_544
  3194  000132  C002  F01C         	movff	?i2_noRepeat+1,ISR@si_544+1
  3195  000136                     
  3196                           ;main.c: 595:                         tasksUp = si;
  3197  000136  C01B  F05B         	movff	ISR@si_544,_tasksUp
  3198  00013A  C01C  F05C         	movff	ISR@si_544+1,_tasksUp+1
  3199  00013E  EF7C  F001         	goto	i2l245
  3200  000142                     i2l1893:
  3201  000142  FFFF               	dw	65535	; assembler added errata NOP
  3202                           
  3203                           ;main.c: 601:             if (modeUp_F){
  3204  000144  504F               	movf	_modeUp_F^0,w,c
  3205  000146  1050               	iorwf	(_modeUp_F+1)^0,w,c
  3206  000148  B4D8               	btfsc	status,2,c
  3207  00014A  EFA9  F000         	goto	i2u116_41
  3208  00014E  EFAC  F000         	goto	i2u116_40
  3209  000152                     i2u116_41:
  3210  000152  FFFF               	dw	65535	; assembler added errata NOP
  3211  000154  EF7C  F001         	goto	i2l245
  3212  000158                     i2u116_40:
  3213  000158  FFFF               	dw	65535	; assembler added errata NOP
  3214  00015A                     
  3215                           ;main.c: 602:                     callsInUp[callsD] = 2;
  3216  00015A  90D8               	bcf	status,0,c
  3217  00015C  3457               	rlcf	_callsD^0,w,c
  3218  00015E  6ED9               	movwf	fsr2l,c
  3219  000160  3458               	rlcf	(_callsD+1)^0,w,c
  3220  000162  6EDA               	movwf	fsr2h,c
  3221  000164  0E00               	movlw	low _callsInUp
  3222  000166  26D9               	addwf	fsr2l,f,c
  3223  000168  0E05               	movlw	high _callsInUp
  3224  00016A  22DA               	addwfc	fsr2h,f,c
  3225  00016C  0E02               	movlw	2
  3226  00016E  6EDE               	movwf	postinc2,c
  3227  000170  0E00               	movlw	0
  3228  000172  6EDD               	movwf	postdec2,c
  3229  000174                     
  3230                           ;main.c: 603:                     callsD++;
  3231  000174  4A57               	infsnz	_callsD^0,f,c
  3232  000176  2A58               	incf	(_callsD+1)^0,f,c
  3233  000178                     
  3234                           ;main.c: 604:                     down2_f = 1;
  3235  000178  0E00               	movlw	0
  3236  00017A  6E3C               	movwf	(_down2_f+1)^0,c
  3237  00017C  0E01               	movlw	1
  3238  00017E  6E3B               	movwf	_down2_f^0,c
  3239  000180  EF7C  F001         	goto	i2l245
  3240  000184                     i2l1901:
  3241  000184  FFFF               	dw	65535	; assembler added errata NOP
  3242                           
  3243                           ;main.c: 613:             if (modeUp_F){
  3244  000186  504F               	movf	_modeUp_F^0,w,c
  3245  000188  1050               	iorwf	(_modeUp_F+1)^0,w,c
  3246  00018A  B4D8               	btfsc	status,2,c
  3247  00018C  EFCA  F000         	goto	i2u117_41
  3248  000190  EFCD  F000         	goto	i2u117_40
  3249  000194                     i2u117_41:
  3250  000194  FFFF               	dw	65535	; assembler added errata NOP
  3251  000196  EF7C  F001         	goto	i2l245
  3252  00019A                     i2u117_40:
  3253  00019A  FFFF               	dw	65535	; assembler added errata NOP
  3254  00019C                     
  3255                           ;main.c: 614:                     if (nowFL < 3){
  3256  00019C  BE52               	btfsc	(_nowFL+1)^0,7,c
  3257  00019E  EFDD  F000         	goto	i2u118_40
  3258  0001A2  5052               	movf	(_nowFL+1)^0,w,c
  3259  0001A4  E107               	bnz	i2u118_41
  3260  0001A6  0E03               	movlw	3
  3261  0001A8  5C51               	subwf	_nowFL^0,w,c
  3262  0001AA  B0D8               	btfsc	status,0,c
  3263  0001AC  EFDA  F000         	goto	i2u118_41
  3264  0001B0  EFDD  F000         	goto	i2u118_40
  3265  0001B4                     i2u118_41:
  3266  0001B4  FFFF               	dw	65535	; assembler added errata NOP
  3267  0001B6  EF7C  F001         	goto	i2l245
  3268  0001BA                     i2u118_40:
  3269  0001BA  FFFF               	dw	65535	; assembler added errata NOP
  3270  0001BC                     
  3271                           ;main.c: 615:                         queueUp[tasksUp] = 3;
  3272  0001BC  90D8               	bcf	status,0,c
  3273  0001BE  345B               	rlcf	_tasksUp^0,w,c
  3274  0001C0  6ED9               	movwf	fsr2l,c
  3275  0001C2  345C               	rlcf	(_tasksUp+1)^0,w,c
  3276  0001C4  6EDA               	movwf	fsr2h,c
  3277  0001C6  0E00               	movlw	low _queueUp
  3278  0001C8  26D9               	addwf	fsr2l,f,c
  3279  0001CA  0E03               	movlw	high _queueUp
  3280  0001CC  22DA               	addwfc	fsr2h,f,c
  3281  0001CE  0E03               	movlw	3
  3282  0001D0  6EDE               	movwf	postinc2,c
  3283  0001D2  0E00               	movlw	0
  3284  0001D4  6EDD               	movwf	postdec2,c
  3285  0001D6                     
  3286                           ;main.c: 616:                         tasksUp++;
  3287  0001D6  4A5B               	infsnz	_tasksUp^0,f,c
  3288  0001D8  2A5C               	incf	(_tasksUp+1)^0,f,c
  3289  0001DA                     
  3290                           ;main.c: 617:                         sort(&queueUp[0], tasksUp);
  3291  0001DA  0E00               	movlw	low _queueUp
  3292  0001DC  6E01               	movwf	i2sort@p^0,c
  3293  0001DE  0E03               	movlw	high _queueUp
  3294  0001E0  6E02               	movwf	(i2sort@p+1)^0,c
  3295  0001E2  C05B  F003         	movff	_tasksUp,i2sort@sizes
  3296  0001E6  C05C  F004         	movff	_tasksUp+1,i2sort@sizes+1
  3297  0001EA  EC2D  F004         	call	i2_sort	;wreg free
  3298  0001EE                     
  3299                           ;main.c: 618:                         int si = noRepeat(&queueUp[0], tasksUp);
  3300  0001EE  0E00               	movlw	low _queueUp
  3301  0001F0  6E01               	movwf	i2noRepeat@po^0,c
  3302  0001F2  0E03               	movlw	high _queueUp
  3303  0001F4  6E02               	movwf	(i2noRepeat@po+1)^0,c
  3304  0001F6  C05B  F003         	movff	_tasksUp,i2noRepeat@sixes
  3305  0001FA  C05C  F004         	movff	_tasksUp+1,i2noRepeat@sixes+1
  3306  0001FE  EC23  F007         	call	i2_noRepeat	;wreg free
  3307  000202  C001  F01D         	movff	?i2_noRepeat,ISR@si_545
  3308  000206  C002  F01E         	movff	?i2_noRepeat+1,ISR@si_545+1
  3309  00020A                     
  3310                           ;main.c: 619:                         tasksUp = si;
  3311  00020A  C01D  F05B         	movff	ISR@si_545,_tasksUp
  3312  00020E  C01E  F05C         	movff	ISR@si_545+1,_tasksUp+1
  3313  000212  EF7C  F001         	goto	i2l245
  3314  000216                     i2l1915:
  3315  000216  FFFF               	dw	65535	; assembler added errata NOP
  3316                           
  3317                           ;main.c: 625:             if (modeUp_F){
  3318  000218  504F               	movf	_modeUp_F^0,w,c
  3319  00021A  1050               	iorwf	(_modeUp_F+1)^0,w,c
  3320  00021C  B4D8               	btfsc	status,2,c
  3321  00021E  EF13  F001         	goto	i2u119_41
  3322  000222  EF16  F001         	goto	i2u119_40
  3323  000226                     i2u119_41:
  3324  000226  FFFF               	dw	65535	; assembler added errata NOP
  3325  000228  EF7C  F001         	goto	i2l245
  3326  00022C                     i2u119_40:
  3327  00022C  FFFF               	dw	65535	; assembler added errata NOP
  3328  00022E                     
  3329                           ;main.c: 626:                     callsInUp[callsD] = 3;
  3330  00022E  90D8               	bcf	status,0,c
  3331  000230  3457               	rlcf	_callsD^0,w,c
  3332  000232  6ED9               	movwf	fsr2l,c
  3333  000234  3458               	rlcf	(_callsD+1)^0,w,c
  3334  000236  6EDA               	movwf	fsr2h,c
  3335  000238  0E00               	movlw	low _callsInUp
  3336  00023A  26D9               	addwf	fsr2l,f,c
  3337  00023C  0E05               	movlw	high _callsInUp
  3338  00023E  22DA               	addwfc	fsr2h,f,c
  3339  000240  0E03               	movlw	3
  3340  000242  6EDE               	movwf	postinc2,c
  3341  000244  0E00               	movlw	0
  3342  000246  6EDD               	movwf	postdec2,c
  3343  000248                     
  3344                           ;main.c: 627:                     callsD++;
  3345  000248  4A57               	infsnz	_callsD^0,f,c
  3346  00024A  2A58               	incf	(_callsD+1)^0,f,c
  3347  00024C                     
  3348                           ;main.c: 628:                     down3_f = 1;
  3349  00024C  0E00               	movlw	0
  3350  00024E  6E38               	movwf	(_down3_f+1)^0,c
  3351  000250  0E01               	movlw	1
  3352  000252  6E37               	movwf	_down3_f^0,c
  3353  000254  EF7C  F001         	goto	i2l245
  3354  000258                     i2l1923:
  3355  000258  FFFF               	dw	65535	; assembler added errata NOP
  3356                           
  3357                           ;main.c: 633:             if (modeUp_F){
  3358  00025A  504F               	movf	_modeUp_F^0,w,c
  3359  00025C  1050               	iorwf	(_modeUp_F+1)^0,w,c
  3360  00025E  B4D8               	btfsc	status,2,c
  3361  000260  EF34  F001         	goto	i2u120_41
  3362  000264  EF37  F001         	goto	i2u120_40
  3363  000268                     i2u120_41:
  3364  000268  FFFF               	dw	65535	; assembler added errata NOP
  3365  00026A  EF7C  F001         	goto	i2l245
  3366  00026E                     i2u120_40:
  3367  00026E  FFFF               	dw	65535	; assembler added errata NOP
  3368  000270                     
  3369                           ;main.c: 634:                     callsInUp[callsD] = 4;
  3370  000270  90D8               	bcf	status,0,c
  3371  000272  3457               	rlcf	_callsD^0,w,c
  3372  000274  6ED9               	movwf	fsr2l,c
  3373  000276  3458               	rlcf	(_callsD+1)^0,w,c
  3374  000278  6EDA               	movwf	fsr2h,c
  3375  00027A  0E00               	movlw	low _callsInUp
  3376  00027C  26D9               	addwf	fsr2l,f,c
  3377  00027E  0E05               	movlw	high _callsInUp
  3378  000280  22DA               	addwfc	fsr2h,f,c
  3379  000282  0E04               	movlw	4
  3380  000284  6EDE               	movwf	postinc2,c
  3381  000286  0E00               	movlw	0
  3382  000288  6EDD               	movwf	postdec2,c
  3383  00028A                     
  3384                           ;main.c: 635:                     callsD++;
  3385  00028A  4A57               	infsnz	_callsD^0,f,c
  3386  00028C  2A58               	incf	(_callsD+1)^0,f,c
  3387  00028E                     
  3388                           ;main.c: 636:                     down4_f = 1;
  3389  00028E  0E00               	movlw	0
  3390  000290  6E36               	movwf	(_down4_f+1)^0,c
  3391  000292  0E01               	movlw	1
  3392  000294  6E35               	movwf	_down4_f^0,c
  3393  000296  EF7C  F001         	goto	i2l245
  3394  00029A                     i2l1933:
  3395  00029A  FFFF               	dw	65535	; assembler added errata NOP
  3396  00029C  5081               	movf	129,w,c	;volatile
  3397  00029E  6E13               	movwf	??_ISR^0,c
  3398  0002A0  6A14               	clrf	(??_ISR+1)^0,c
  3399                           
  3400                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3401                           ; Switch size 1, requested type "simple"
  3402                           ; Number of cases is 1, Range of values is 0 to 0
  3403                           ; switch strategies available:
  3404                           ; Name         Instructions Cycles
  3405                           ; simple_byte            4     3 (average)
  3406                           ;	Chosen strategy is simple_byte
  3407  0002A2  5014               	movf	(??_ISR+1)^0,w,c
  3408  0002A4  0A00               	xorlw	0	; case 0
  3409  0002A6  B4D8               	btfsc	status,2,c
  3410  0002A8  EF58  F001         	goto	i2l2403
  3411  0002AC  EF7C  F001         	goto	i2l245
  3412  0002B0                     i2l2403:
  3413  0002B0  FFFF               	dw	65535	; assembler added errata NOP
  3414                           
  3415                           ; Switch size 1, requested type "simple"
  3416                           ; Number of cases is 8, Range of values is 1 to 128
  3417                           ; switch strategies available:
  3418                           ; Name         Instructions Cycles
  3419                           ; simple_byte           25    13 (average)
  3420                           ;	Chosen strategy is simple_byte
  3421  0002B2  5013               	movf	??_ISR^0,w,c
  3422  0002B4  0A01               	xorlw	1	; case 1
  3423  0002B6  B4D8               	btfsc	status,2,c
  3424  0002B8  EF10  F000         	goto	i2l1865
  3425  0002BC  0A03               	xorlw	3	; case 2
  3426  0002BE  B4D8               	btfsc	status,2,c
  3427  0002C0  EF58  F000         	goto	i2l1879
  3428  0002C4  0A06               	xorlw	6	; case 4
  3429  0002C6  B4D8               	btfsc	status,2,c
  3430  0002C8  EFA1  F000         	goto	i2l1893
  3431  0002CC  0A0C               	xorlw	12	; case 8
  3432  0002CE  B4D8               	btfsc	status,2,c
  3433  0002D0  EF7C  F001         	goto	i2l245
  3434  0002D4  0A18               	xorlw	24	; case 16
  3435  0002D6  B4D8               	btfsc	status,2,c
  3436  0002D8  EFC2  F000         	goto	i2l1901
  3437  0002DC  0A30               	xorlw	48	; case 32
  3438  0002DE  B4D8               	btfsc	status,2,c
  3439  0002E0  EF0B  F001         	goto	i2l1915
  3440  0002E4  0A60               	xorlw	96	; case 64
  3441  0002E6  B4D8               	btfsc	status,2,c
  3442  0002E8  EF2C  F001         	goto	i2l1923
  3443  0002EC  0AC0               	xorlw	192	; case 128
  3444  0002EE  B4D8               	btfsc	status,2,c
  3445  0002F0  EF7C  F001         	goto	i2l245
  3446  0002F4  EF7C  F001         	goto	i2l245
  3447  0002F8                     i2l245:
  3448  0002F8  FFFF               	dw	65535	; assembler added errata NOP
  3449  0002FA  C018  FFDA         	movff	??_ISR+5,fsr2h
  3450  0002FE  C017  FFD9         	movff	??_ISR+4,fsr2l
  3451  000302  C016  FFE2         	movff	??_ISR+3,fsr1h
  3452  000306  C015  FFE1         	movff	??_ISR+2,fsr1l
  3453  00030A  9261               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3454  00030C  0011               	retfie		f
  3455  00030E  FFFF               	dw	65535	; errata NOP
  3456  000310                     __end_of_ISR:
  3457                           	callstack 0
  3458                           
  3459 ;; *************** function i2_sort *****************
  3460 ;; Defined at:
  3461 ;;		line 235 in file "main.c"
  3462 ;; Parameters:    Size  Location     Type
  3463 ;;  p               2    0[COMRAM] PTR int 
  3464 ;;		 -> queueDown(200), queueUp(200), 
  3465 ;;  sizes           2    2[COMRAM] int 
  3466 ;; Auto vars:     Size  Location     Type
  3467 ;;  result        200    0[BANK1 ] int [100]
  3468 ;;  h               2  212[BANK1 ] int 
  3469 ;;  temp            2  210[BANK1 ] int 
  3470 ;;  j               2  208[BANK1 ] int 
  3471 ;;  k               2  206[BANK1 ] int 
  3472 ;;  sizesMod        2  204[BANK1 ] int 
  3473 ;;  nums            2  202[BANK1 ] int 
  3474 ;;  pos             2  200[BANK1 ] int 
  3475 ;; Return value:  Size  Location     Type
  3476 ;;                  1    wreg      void 
  3477 ;; Registers used:
  3478 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3479 ;; Tracked objects:
  3480 ;;		On entry : 0/0
  3481 ;;		On exit  : 0/0
  3482 ;;		Unchanged: 0/0
  3483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3484 ;;      Params:         4       0       0       0       0       0       0
  3485 ;;      Locals:         0       0     214       0       0       0       0
  3486 ;;      Temps:          5       0       0       0       0       0       0
  3487 ;;      Totals:         9       0     214       0       0       0       0
  3488 ;;Total ram usage:      223 bytes
  3489 ;; Hardware stack levels used: 1
  3490 ;; This function calls:
  3491 ;;		Nothing
  3492 ;; This function is called by:
  3493 ;;		_ISR
  3494 ;; This function uses a non-reentrant model
  3495 ;;
  3496                           
  3497                           	psect	text12
  3498  00085A                     __ptext12:
  3499                           	callstack 0
  3500  00085A                     i2_sort:
  3501                           	callstack 0
  3502  00085A  FFFF               	dw	65535	; assembler added errata NOP
  3503  00085C                     
  3504                           ;main.c: 236:     int temp, nums = 0, pos = 0, sizesMod = sizes;
  3505  00085C  0E00               	movlw	0
  3506  00085E  0101               	movlb	1	; () banked
  3507  000860  6FCB               	movwf	(i2sort@nums+1)& (0+255),b
  3508  000862  0E00               	movlw	0
  3509  000864  6FCA               	movwf	i2sort@nums& (0+255),b
  3510  000866  0E00               	movlw	0
  3511  000868  6FC9               	movwf	(i2sort@pos+1)& (0+255),b
  3512  00086A  0E00               	movlw	0
  3513  00086C  6FC8               	movwf	i2sort@pos& (0+255),b
  3514  00086E                     
  3515                           ; BSR set to: 1
  3516  00086E  C003  F1CC         	movff	i2sort@sizes,i2sort@sizesMod
  3517  000872  C004  F1CD         	movff	i2sort@sizes+1,i2sort@sizesMod+1
  3518  000876                     i2l1799:
  3519  000876  FFFF               	dw	65535	; assembler added errata NOP
  3520                           
  3521                           ; BSR set to: 1
  3522                           ;main.c: 243:         temp = *(p + 0);
  3523  000878  C001  FFD9         	movff	i2sort@p,fsr2l
  3524  00087C  C002  FFDA         	movff	i2sort@p+1,fsr2h
  3525  000880  CFDE F1D2          	movff	postinc2,i2sort@temp
  3526  000884  CFDD F1D3          	movff	postdec2,i2sort@temp+1
  3527  000888                     
  3528                           ; BSR set to: 1
  3529                           ;main.c: 245:         for (int h = 0; h < sizesMod; h++) {
  3530  000888  0E00               	movlw	0
  3531  00088A  6FD5               	movwf	(i2sort@h+1)& (0+255),b
  3532  00088C  0E00               	movlw	0
  3533  00088E  6FD4               	movwf	i2sort@h& (0+255),b
  3534  000890  EF95  F004         	goto	i2l1817
  3535  000894                     i2l1803:
  3536  000894  FFFF               	dw	65535	; assembler added errata NOP
  3537                           
  3538                           ; BSR set to: 1
  3539                           ;main.c: 247:             if (*(p + h) == temp) {
  3540  000896  90D8               	bcf	status,0,c
  3541  000898  35D4               	rlcf	i2sort@h& (0+255),w,b
  3542  00089A  6ED9               	movwf	fsr2l,c
  3543  00089C  35D5               	rlcf	(i2sort@h+1)& (0+255),w,b
  3544  00089E  6EDA               	movwf	fsr2h,c
  3545  0008A0  5001               	movf	i2sort@p^0,w,c
  3546  0008A2  26D9               	addwf	fsr2l,f,c
  3547  0008A4  5002               	movf	(i2sort@p+1)^0,w,c
  3548  0008A6  22DA               	addwfc	fsr2h,f,c
  3549  0008A8  51D2               	movf	i2sort@temp& (0+255),w,b
  3550  0008AA  18DE               	xorwf	postinc2,w,c
  3551  0008AC  E107               	bnz	i2u103_41
  3552  0008AE  51D3               	movf	(i2sort@temp+1)& (0+255),w,b
  3553  0008B0  18DE               	xorwf	postinc2,w,c
  3554  0008B2  A4D8               	btfss	status,2,c
  3555  0008B4  EF5E  F004         	goto	i2u103_41
  3556  0008B8  EF61  F004         	goto	i2u103_40
  3557  0008BC                     i2u103_41:
  3558  0008BC  FFFF               	dw	65535	; assembler added errata NOP
  3559  0008BE  EF66  F004         	goto	i2l1809
  3560  0008C2                     i2u103_40:
  3561  0008C2  FFFF               	dw	65535	; assembler added errata NOP
  3562  0008C4                     
  3563                           ; BSR set to: 1
  3564                           ;main.c: 249:                 pos = h;
  3565  0008C4  C1D4  F1C8         	movff	i2sort@h,i2sort@pos
  3566  0008C8  C1D5  F1C9         	movff	i2sort@h+1,i2sort@pos+1
  3567  0008CC                     i2l1809:
  3568  0008CC  FFFF               	dw	65535	; assembler added errata NOP
  3569                           
  3570                           ; BSR set to: 1
  3571                           ;main.c: 256:             if (*(p + h) < temp) {
  3572  0008CE  90D8               	bcf	status,0,c
  3573  0008D0  35D4               	rlcf	i2sort@h& (0+255),w,b
  3574  0008D2  6ED9               	movwf	fsr2l,c
  3575  0008D4  35D5               	rlcf	(i2sort@h+1)& (0+255),w,b
  3576  0008D6  6EDA               	movwf	fsr2h,c
  3577  0008D8  5001               	movf	i2sort@p^0,w,c
  3578  0008DA  26D9               	addwf	fsr2l,f,c
  3579  0008DC  5002               	movf	(i2sort@p+1)^0,w,c
  3580  0008DE  22DA               	addwfc	fsr2h,f,c
  3581  0008E0  51D2               	movf	i2sort@temp& (0+255),w,b
  3582  0008E2  5CDE               	subwf	postinc2,w,c
  3583  0008E4  50DE               	movf	postinc2,w,c
  3584  0008E6  0A80               	xorlw	128
  3585  0008E8  6E07               	movwf	(??i2_sort+2)^0,c
  3586  0008EA  51D3               	movf	(i2sort@temp+1)& (0+255),w,b
  3587  0008EC  0A80               	xorlw	128
  3588  0008EE  5807               	subwfb	(??i2_sort+2)^0,w,c
  3589  0008F0  B0D8               	btfsc	status,0,c
  3590  0008F2  EF7D  F004         	goto	i2u104_41
  3591  0008F6  EF80  F004         	goto	i2u104_40
  3592  0008FA                     i2u104_41:
  3593  0008FA  FFFF               	dw	65535	; assembler added errata NOP
  3594  0008FC  EF92  F004         	goto	i2l1815
  3595  000900                     i2u104_40:
  3596  000900  FFFF               	dw	65535	; assembler added errata NOP
  3597  000902                     
  3598                           ; BSR set to: 1
  3599                           ;main.c: 257:                 temp = *(p + h);
  3600  000902  90D8               	bcf	status,0,c
  3601  000904  35D4               	rlcf	i2sort@h& (0+255),w,b
  3602  000906  6ED9               	movwf	fsr2l,c
  3603  000908  35D5               	rlcf	(i2sort@h+1)& (0+255),w,b
  3604  00090A  6EDA               	movwf	fsr2h,c
  3605  00090C  5001               	movf	i2sort@p^0,w,c
  3606  00090E  26D9               	addwf	fsr2l,f,c
  3607  000910  5002               	movf	(i2sort@p+1)^0,w,c
  3608  000912  22DA               	addwfc	fsr2h,f,c
  3609  000914  CFDE F1D2          	movff	postinc2,i2sort@temp
  3610  000918  CFDD F1D3          	movff	postdec2,i2sort@temp+1
  3611  00091C                     
  3612                           ; BSR set to: 1
  3613                           ;main.c: 258:                 pos = h;
  3614  00091C  C1D4  F1C8         	movff	i2sort@h,i2sort@pos
  3615  000920  C1D5  F1C9         	movff	i2sort@h+1,i2sort@pos+1
  3616  000924                     i2l1815:
  3617  000924  FFFF               	dw	65535	; assembler added errata NOP
  3618                           
  3619                           ; BSR set to: 1
  3620                           ;main.c: 260:         }
  3621  000926  4BD4               	infsnz	i2sort@h& (0+255),f,b
  3622  000928  2BD5               	incf	(i2sort@h+1)& (0+255),f,b
  3623  00092A                     i2l1817:
  3624  00092A  FFFF               	dw	65535	; assembler added errata NOP
  3625                           
  3626                           ; BSR set to: 1
  3627  00092C  51CC               	movf	i2sort@sizesMod& (0+255),w,b
  3628  00092E  5DD4               	subwf	i2sort@h& (0+255),w,b
  3629  000930  51D5               	movf	(i2sort@h+1)& (0+255),w,b
  3630  000932  0A80               	xorlw	128
  3631  000934  6E05               	movwf	??i2_sort^0,c
  3632  000936  51CD               	movf	(i2sort@sizesMod+1)& (0+255),w,b
  3633  000938  0A80               	xorlw	128
  3634  00093A  5805               	subwfb	??i2_sort^0,w,c
  3635  00093C  A0D8               	btfss	status,0,c
  3636  00093E  EFA3  F004         	goto	i2u105_41
  3637  000942  EFA6  F004         	goto	i2u105_40
  3638  000946                     i2u105_41:
  3639  000946  FFFF               	dw	65535	; assembler added errata NOP
  3640  000948  EF4A  F004         	goto	i2l1803
  3641  00094C                     i2u105_40:
  3642  00094C  FFFF               	dw	65535	; assembler added errata NOP
  3643  00094E                     
  3644                           ; BSR set to: 1
  3645                           ;main.c: 263:         for (int k = pos; k < sizesMod; k++) {
  3646  00094E  C1C8  F1CE         	movff	i2sort@pos,i2sort@k
  3647  000952  C1C9  F1CF         	movff	i2sort@pos+1,i2sort@k+1
  3648  000956  EFD2  F004         	goto	i2l1823
  3649  00095A                     i2l1819:
  3650  00095A  FFFF               	dw	65535	; assembler added errata NOP
  3651                           
  3652                           ; BSR set to: 1
  3653                           ;main.c: 264:             *(p + k) = *(p + (k + 1));
  3654  00095C  C1CE  F005         	movff	i2sort@k,??i2_sort
  3655  000960  C1CF  F006         	movff	i2sort@k+1,??i2_sort+1
  3656  000964  90D8               	bcf	status,0,c
  3657  000966  3605               	rlcf	??i2_sort^0,f,c
  3658  000968  3606               	rlcf	(??i2_sort+1)^0,f,c
  3659  00096A  C001  F007         	movff	i2sort@p,??i2_sort+2
  3660  00096E  C002  F008         	movff	i2sort@p+1,??i2_sort+3
  3661  000972  5005               	movf	??i2_sort^0,w,c
  3662  000974  2607               	addwf	(??i2_sort+2)^0,f,c
  3663  000976  5006               	movf	(??i2_sort+1)^0,w,c
  3664  000978  2208               	addwfc	(??i2_sort+3)^0,f,c
  3665  00097A  0E02               	movlw	2
  3666  00097C  2407               	addwf	(??i2_sort+2)^0,w,c
  3667  00097E  6ED9               	movwf	fsr2l,c
  3668  000980  0E00               	movlw	0
  3669  000982  2008               	addwfc	(??i2_sort+3)^0,w,c
  3670  000984  6EDA               	movwf	fsr2h,c
  3671  000986  90D8               	bcf	status,0,c
  3672  000988  35CE               	rlcf	i2sort@k& (0+255),w,b
  3673  00098A  6EE1               	movwf	fsr1l,c
  3674  00098C  35CF               	rlcf	(i2sort@k+1)& (0+255),w,b
  3675  00098E  6EE2               	movwf	fsr1h,c
  3676  000990  5001               	movf	i2sort@p^0,w,c
  3677  000992  26E1               	addwf	fsr1l,f,c
  3678  000994  5002               	movf	(i2sort@p+1)^0,w,c
  3679  000996  22E2               	addwfc	fsr1h,f,c
  3680  000998  CFDE FFE6          	movff	postinc2,postinc1
  3681  00099C  CFDD FFE5          	movff	postdec2,postdec1
  3682  0009A0                     
  3683                           ; BSR set to: 1
  3684                           ;main.c: 265:         }
  3685  0009A0  4BCE               	infsnz	i2sort@k& (0+255),f,b
  3686  0009A2  2BCF               	incf	(i2sort@k+1)& (0+255),f,b
  3687  0009A4                     i2l1823:
  3688  0009A4  FFFF               	dw	65535	; assembler added errata NOP
  3689                           
  3690                           ; BSR set to: 1
  3691  0009A6  51CC               	movf	i2sort@sizesMod& (0+255),w,b
  3692  0009A8  5DCE               	subwf	i2sort@k& (0+255),w,b
  3693  0009AA  51CF               	movf	(i2sort@k+1)& (0+255),w,b
  3694  0009AC  0A80               	xorlw	128
  3695  0009AE  6E05               	movwf	??i2_sort^0,c
  3696  0009B0  51CD               	movf	(i2sort@sizesMod+1)& (0+255),w,b
  3697  0009B2  0A80               	xorlw	128
  3698  0009B4  5805               	subwfb	??i2_sort^0,w,c
  3699  0009B6  A0D8               	btfss	status,0,c
  3700  0009B8  EFE0  F004         	goto	i2u106_41
  3701  0009BC  EFE3  F004         	goto	i2u106_40
  3702  0009C0                     i2u106_41:
  3703  0009C0  FFFF               	dw	65535	; assembler added errata NOP
  3704  0009C2  EFAD  F004         	goto	i2l1819
  3705  0009C6                     i2u106_40:
  3706  0009C6  FFFF               	dw	65535	; assembler added errata NOP
  3707  0009C8                     
  3708                           ; BSR set to: 1
  3709                           ;main.c: 266:         result[nums] = temp;
  3710  0009C8  90D8               	bcf	status,0,c
  3711  0009CA  35CA               	rlcf	i2sort@nums& (0+255),w,b
  3712  0009CC  6ED9               	movwf	fsr2l,c
  3713  0009CE  35CB               	rlcf	(i2sort@nums+1)& (0+255),w,b
  3714  0009D0  6EDA               	movwf	fsr2h,c
  3715  0009D2  0E00               	movlw	low i2sort@result
  3716  0009D4  26D9               	addwf	fsr2l,f,c
  3717  0009D6  0E01               	movlw	high i2sort@result
  3718  0009D8  22DA               	addwfc	fsr2h,f,c
  3719  0009DA  C1D2  FFDE         	movff	i2sort@temp,postinc2
  3720  0009DE  C1D3  FFDD         	movff	i2sort@temp+1,postdec2
  3721  0009E2                     
  3722                           ; BSR set to: 1
  3723                           ;main.c: 267:         sizesMod--;
  3724  0009E2  07CC               	decf	i2sort@sizesMod& (0+255),f,b
  3725  0009E4  A0D8               	btfss	status,0,c
  3726  0009E6  07CD               	decf	(i2sort@sizesMod+1)& (0+255),f,b
  3727  0009E8                     
  3728                           ; BSR set to: 1
  3729                           ;main.c: 268:         nums++;
  3730  0009E8  4BCA               	infsnz	i2sort@nums& (0+255),f,b
  3731  0009EA  2BCB               	incf	(i2sort@nums+1)& (0+255),f,b
  3732  0009EC                     
  3733                           ; BSR set to: 1
  3734                           ;main.c: 269:     } while (nums <= sizes - 1);
  3735  0009EC  0EFF               	movlw	255
  3736  0009EE  6E05               	movwf	??i2_sort^0,c
  3737  0009F0  0EFF               	movlw	255
  3738  0009F2  6E06               	movwf	(??i2_sort+1)^0,c
  3739  0009F4  C003  F007         	movff	i2sort@sizes,??i2_sort+2
  3740  0009F8  C004  F008         	movff	i2sort@sizes+1,??i2_sort+3
  3741  0009FC  5005               	movf	??i2_sort^0,w,c
  3742  0009FE  2607               	addwf	(??i2_sort+2)^0,f,c
  3743  000A00  5006               	movf	(??i2_sort+1)^0,w,c
  3744  000A02  2208               	addwfc	(??i2_sort+3)^0,f,c
  3745  000A04  51CA               	movf	i2sort@nums& (0+255),w,b
  3746  000A06  5C07               	subwf	(??i2_sort+2)^0,w,c
  3747  000A08  5008               	movf	(??i2_sort+3)^0,w,c
  3748  000A0A  0A80               	xorlw	128
  3749  000A0C  6E09               	movwf	(??i2_sort+4)^0,c
  3750  000A0E  51CB               	movf	(i2sort@nums+1)& (0+255),w,b
  3751  000A10  0A80               	xorlw	128
  3752  000A12  5809               	subwfb	(??i2_sort+4)^0,w,c
  3753  000A14  B0D8               	btfsc	status,0,c
  3754  000A16  EF0F  F005         	goto	i2u107_41
  3755  000A1A  EF12  F005         	goto	i2u107_40
  3756  000A1E                     i2u107_41:
  3757  000A1E  FFFF               	dw	65535	; assembler added errata NOP
  3758  000A20  EF3B  F004         	goto	i2l1799
  3759  000A24                     i2u107_40:
  3760  000A24  FFFF               	dw	65535	; assembler added errata NOP
  3761  000A26                     
  3762                           ; BSR set to: 1
  3763                           ;main.c: 272:     for (int j = 0; j < sizes; j++) {
  3764  000A26  0E00               	movlw	0
  3765  000A28  6FD1               	movwf	(i2sort@j+1)& (0+255),b
  3766  000A2A  0E00               	movlw	0
  3767  000A2C  6FD0               	movwf	i2sort@j& (0+255),b
  3768  000A2E  EF32  F005         	goto	i2l1839
  3769  000A32                     i2l1835:
  3770  000A32  FFFF               	dw	65535	; assembler added errata NOP
  3771                           
  3772                           ; BSR set to: 1
  3773                           ;main.c: 273:         *(p + j) = result[j];
  3774  000A34  90D8               	bcf	status,0,c
  3775  000A36  35D0               	rlcf	i2sort@j& (0+255),w,b
  3776  000A38  6ED9               	movwf	fsr2l,c
  3777  000A3A  35D1               	rlcf	(i2sort@j+1)& (0+255),w,b
  3778  000A3C  6EDA               	movwf	fsr2h,c
  3779  000A3E  0E00               	movlw	low i2sort@result
  3780  000A40  26D9               	addwf	fsr2l,f,c
  3781  000A42  0E01               	movlw	high i2sort@result
  3782  000A44  22DA               	addwfc	fsr2h,f,c
  3783  000A46  90D8               	bcf	status,0,c
  3784  000A48  35D0               	rlcf	i2sort@j& (0+255),w,b
  3785  000A4A  6EE1               	movwf	fsr1l,c
  3786  000A4C  35D1               	rlcf	(i2sort@j+1)& (0+255),w,b
  3787  000A4E  6EE2               	movwf	fsr1h,c
  3788  000A50  5001               	movf	i2sort@p^0,w,c
  3789  000A52  26E1               	addwf	fsr1l,f,c
  3790  000A54  5002               	movf	(i2sort@p+1)^0,w,c
  3791  000A56  22E2               	addwfc	fsr1h,f,c
  3792  000A58  CFDE FFE6          	movff	postinc2,postinc1
  3793  000A5C  CFDD FFE5          	movff	postdec2,postdec1
  3794  000A60                     
  3795                           ; BSR set to: 1
  3796                           ;main.c: 274:     }
  3797  000A60  4BD0               	infsnz	i2sort@j& (0+255),f,b
  3798  000A62  2BD1               	incf	(i2sort@j+1)& (0+255),f,b
  3799  000A64                     i2l1839:
  3800  000A64  FFFF               	dw	65535	; assembler added errata NOP
  3801                           
  3802                           ; BSR set to: 1
  3803  000A66  5003               	movf	i2sort@sizes^0,w,c
  3804  000A68  5DD0               	subwf	i2sort@j& (0+255),w,b
  3805  000A6A  51D1               	movf	(i2sort@j+1)& (0+255),w,b
  3806  000A6C  0A80               	xorlw	128
  3807  000A6E  6E05               	movwf	??i2_sort^0,c
  3808  000A70  5004               	movf	(i2sort@sizes+1)^0,w,c
  3809  000A72  0A80               	xorlw	128
  3810  000A74  5805               	subwfb	??i2_sort^0,w,c
  3811  000A76  A0D8               	btfss	status,0,c
  3812  000A78  EF40  F005         	goto	i2u108_41
  3813  000A7C  EF43  F005         	goto	i2u108_40
  3814  000A80                     i2u108_41:
  3815  000A80  FFFF               	dw	65535	; assembler added errata NOP
  3816  000A82  EF19  F005         	goto	i2l1835
  3817  000A86                     i2u108_40:
  3818  000A86  FFFF               	dw	65535	; assembler added errata NOP
  3819  000A88                     
  3820                           ; BSR set to: 1
  3821  000A88  0012               	return		;funcret
  3822  000A8A  FFFF               	dw	65535	; errata NOP
  3823  000A8C                     __end_ofi2_sort:
  3824                           	callstack 0
  3825                           
  3826 ;; *************** function i2_noRepeat *****************
  3827 ;; Defined at:
  3828 ;;		line 204 in file "main.c"
  3829 ;; Parameters:    Size  Location     Type
  3830 ;;  po              2    0[COMRAM] PTR int 
  3831 ;;		 -> NULL(0), queueDown(200), queueUp(200), 
  3832 ;;  sixes           2    2[COMRAM] int 
  3833 ;; Auto vars:     Size  Location     Type
  3834 ;;  comp            2   16[COMRAM] int 
  3835 ;;  size            2   14[COMRAM] int 
  3836 ;;  temp            2   12[COMRAM] int 
  3837 ;;  shift           2   10[COMRAM] int 
  3838 ;;  t               2    8[COMRAM] int 
  3839 ;; Return value:  Size  Location     Type
  3840 ;;                  2    0[COMRAM] int 
  3841 ;; Registers used:
  3842 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  3843 ;; Tracked objects:
  3844 ;;		On entry : 0/0
  3845 ;;		On exit  : 0/0
  3846 ;;		Unchanged: 0/0
  3847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3848 ;;      Params:         4       0       0       0       0       0       0
  3849 ;;      Locals:        10       0       0       0       0       0       0
  3850 ;;      Temps:          4       0       0       0       0       0       0
  3851 ;;      Totals:        18       0       0       0       0       0       0
  3852 ;;Total ram usage:       18 bytes
  3853 ;; Hardware stack levels used: 1
  3854 ;; This function calls:
  3855 ;;		Nothing
  3856 ;; This function is called by:
  3857 ;;		_ISR
  3858 ;; This function uses a non-reentrant model
  3859 ;;
  3860                           
  3861                           	psect	text13
  3862  000E46                     __ptext13:
  3863                           	callstack 0
  3864  000E46                     i2_noRepeat:
  3865                           	callstack 0
  3866  000E46  FFFF               	dw	65535	; assembler added errata NOP
  3867  000E48                     
  3868                           ;main.c: 205:     int size = sixes;
  3869  000E48  C003  F00F         	movff	i2noRepeat@sixes,i2noRepeat@size
  3870  000E4C  C004  F010         	movff	i2noRepeat@sixes+1,i2noRepeat@size+1
  3871  000E50                     
  3872                           ;main.c: 213:     for (int temp = 0; temp < size; temp++){
  3873  000E50  0E00               	movlw	0
  3874  000E52  6E0E               	movwf	(i2noRepeat@temp+1)^0,c
  3875  000E54  0E00               	movlw	0
  3876  000E56  6E0D               	movwf	i2noRepeat@temp^0,c
  3877  000E58  EFB8  F007         	goto	i2l1793
  3878  000E5C                     i2l1773:
  3879  000E5C  FFFF               	dw	65535	; assembler added errata NOP
  3880                           
  3881                           ;main.c: 215:         for(int comp = temp + 1; comp < size; comp++){
  3882  000E5E  0E01               	movlw	1
  3883  000E60  240D               	addwf	i2noRepeat@temp^0,w,c
  3884  000E62  6E11               	movwf	i2noRepeat@comp^0,c
  3885  000E64  0E00               	movlw	0
  3886  000E66  200E               	addwfc	(i2noRepeat@temp+1)^0,w,c
  3887  000E68  6E12               	movwf	(i2noRepeat@comp+1)^0,c
  3888  000E6A  EFA4  F007         	goto	i2l1789
  3889  000E6E                     i2l1775:
  3890  000E6E  FFFF               	dw	65535	; assembler added errata NOP
  3891                           
  3892                           ;main.c: 217:             if (*(po + temp) == *(po + comp)){
  3893  000E70  90D8               	bcf	status,0,c
  3894  000E72  3411               	rlcf	i2noRepeat@comp^0,w,c
  3895  000E74  6ED9               	movwf	fsr2l,c
  3896  000E76  3412               	rlcf	(i2noRepeat@comp+1)^0,w,c
  3897  000E78  6EDA               	movwf	fsr2h,c
  3898  000E7A  5001               	movf	i2noRepeat@po^0,w,c
  3899  000E7C  26D9               	addwf	fsr2l,f,c
  3900  000E7E  5002               	movf	(i2noRepeat@po+1)^0,w,c
  3901  000E80  22DA               	addwfc	fsr2h,f,c
  3902  000E82  90D8               	bcf	status,0,c
  3903  000E84  340D               	rlcf	i2noRepeat@temp^0,w,c
  3904  000E86  6EE1               	movwf	fsr1l,c
  3905  000E88  340E               	rlcf	(i2noRepeat@temp+1)^0,w,c
  3906  000E8A  6EE2               	movwf	fsr1h,c
  3907  000E8C  5001               	movf	i2noRepeat@po^0,w,c
  3908  000E8E  26E1               	addwf	fsr1l,f,c
  3909  000E90  5002               	movf	(i2noRepeat@po+1)^0,w,c
  3910  000E92  22E2               	addwfc	fsr1h,f,c
  3911  000E94  50DE               	movf	postinc2,w,c
  3912  000E96  18E6               	xorwf	postinc1,w,c
  3913  000E98  E107               	bnz	i2u99_41
  3914  000E9A  50DE               	movf	postinc2,w,c
  3915  000E9C  18E6               	xorwf	postinc1,w,c
  3916  000E9E  A4D8               	btfss	status,2,c
  3917  000EA0  EF54  F007         	goto	i2u99_41
  3918  000EA4  EF57  F007         	goto	i2u99_40
  3919  000EA8                     i2u99_41:
  3920  000EA8  FFFF               	dw	65535	; assembler added errata NOP
  3921  000EAA  EFA1  F007         	goto	i2l101
  3922  000EAE                     i2u99_40:
  3923  000EAE  FFFF               	dw	65535	; assembler added errata NOP
  3924  000EB0                     
  3925                           ;main.c: 218:                 int t = comp;
  3926  000EB0  C011  F009         	movff	i2noRepeat@comp,i2noRepeat@t
  3927  000EB4  C012  F00A         	movff	i2noRepeat@comp+1,i2noRepeat@t+1
  3928                           
  3929                           ;main.c: 220:                 for (int shift = comp; shift < size; shift++){
  3930  000EB8  C011  F00B         	movff	i2noRepeat@comp,i2noRepeat@shift
  3931  000EBC  C012  F00C         	movff	i2noRepeat@comp+1,i2noRepeat@shift+1
  3932  000EC0  EF89  F007         	goto	i2l1785
  3933  000EC4                     i2l1779:
  3934  000EC4  FFFF               	dw	65535	; assembler added errata NOP
  3935                           
  3936                           ;main.c: 221:                     *(po + t) = *(po + (shift + 1));
  3937  000EC6  C00B  F005         	movff	i2noRepeat@shift,??i2_noRepeat
  3938  000ECA  C00C  F006         	movff	i2noRepeat@shift+1,??i2_noRepeat+1
  3939  000ECE  90D8               	bcf	status,0,c
  3940  000ED0  3605               	rlcf	??i2_noRepeat^0,f,c
  3941  000ED2  3606               	rlcf	(??i2_noRepeat+1)^0,f,c
  3942  000ED4  C001  F007         	movff	i2noRepeat@po,??i2_noRepeat+2
  3943  000ED8  C002  F008         	movff	i2noRepeat@po+1,??i2_noRepeat+3
  3944  000EDC  5005               	movf	??i2_noRepeat^0,w,c
  3945  000EDE  2607               	addwf	(??i2_noRepeat+2)^0,f,c
  3946  000EE0  5006               	movf	(??i2_noRepeat+1)^0,w,c
  3947  000EE2  2208               	addwfc	(??i2_noRepeat+3)^0,f,c
  3948  000EE4  0E02               	movlw	2
  3949  000EE6  2407               	addwf	(??i2_noRepeat+2)^0,w,c
  3950  000EE8  6ED9               	movwf	fsr2l,c
  3951  000EEA  0E00               	movlw	0
  3952  000EEC  2008               	addwfc	(??i2_noRepeat+3)^0,w,c
  3953  000EEE  6EDA               	movwf	fsr2h,c
  3954  000EF0  90D8               	bcf	status,0,c
  3955  000EF2  3409               	rlcf	i2noRepeat@t^0,w,c
  3956  000EF4  6EE1               	movwf	fsr1l,c
  3957  000EF6  340A               	rlcf	(i2noRepeat@t+1)^0,w,c
  3958  000EF8  6EE2               	movwf	fsr1h,c
  3959  000EFA  5001               	movf	i2noRepeat@po^0,w,c
  3960  000EFC  26E1               	addwf	fsr1l,f,c
  3961  000EFE  5002               	movf	(i2noRepeat@po+1)^0,w,c
  3962  000F00  22E2               	addwfc	fsr1h,f,c
  3963  000F02  CFDE FFE6          	movff	postinc2,postinc1
  3964  000F06  CFDD FFE5          	movff	postdec2,postdec1
  3965  000F0A                     
  3966                           ;main.c: 222:                     t++;
  3967  000F0A  4A09               	infsnz	i2noRepeat@t^0,f,c
  3968  000F0C  2A0A               	incf	(i2noRepeat@t+1)^0,f,c
  3969  000F0E                     
  3970                           ;main.c: 223:                 }
  3971  000F0E  4A0B               	infsnz	i2noRepeat@shift^0,f,c
  3972  000F10  2A0C               	incf	(i2noRepeat@shift+1)^0,f,c
  3973  000F12                     i2l1785:
  3974  000F12  FFFF               	dw	65535	; assembler added errata NOP
  3975  000F14  500F               	movf	i2noRepeat@size^0,w,c
  3976  000F16  5C0B               	subwf	i2noRepeat@shift^0,w,c
  3977  000F18  500C               	movf	(i2noRepeat@shift+1)^0,w,c
  3978  000F1A  0A80               	xorlw	128
  3979  000F1C  6E05               	movwf	??i2_noRepeat^0,c
  3980  000F1E  5010               	movf	(i2noRepeat@size+1)^0,w,c
  3981  000F20  0A80               	xorlw	128
  3982  000F22  5805               	subwfb	??i2_noRepeat^0,w,c
  3983  000F24  A0D8               	btfss	status,0,c
  3984  000F26  EF97  F007         	goto	i2u100_41
  3985  000F2A  EF9A  F007         	goto	i2u100_40
  3986  000F2E                     i2u100_41:
  3987  000F2E  FFFF               	dw	65535	; assembler added errata NOP
  3988  000F30  EF62  F007         	goto	i2l1779
  3989  000F34                     i2u100_40:
  3990  000F34  FFFF               	dw	65535	; assembler added errata NOP
  3991  000F36                     
  3992                           ;main.c: 224:                 size--;
  3993  000F36  060F               	decf	i2noRepeat@size^0,f,c
  3994  000F38  A0D8               	btfss	status,0,c
  3995  000F3A  0610               	decf	(i2noRepeat@size+1)^0,f,c
  3996                           
  3997                           ;main.c: 225:                 comp--;
  3998  000F3C  0611               	decf	i2noRepeat@comp^0,f,c
  3999  000F3E  A0D8               	btfss	status,0,c
  4000  000F40  0612               	decf	(i2noRepeat@comp+1)^0,f,c
  4001  000F42                     i2l101:
  4002  000F42  FFFF               	dw	65535	; assembler added errata NOP
  4003                           
  4004                           ;main.c: 229:         }
  4005  000F44  4A11               	infsnz	i2noRepeat@comp^0,f,c
  4006  000F46  2A12               	incf	(i2noRepeat@comp+1)^0,f,c
  4007  000F48                     i2l1789:
  4008  000F48  FFFF               	dw	65535	; assembler added errata NOP
  4009  000F4A  500F               	movf	i2noRepeat@size^0,w,c
  4010  000F4C  5C11               	subwf	i2noRepeat@comp^0,w,c
  4011  000F4E  5012               	movf	(i2noRepeat@comp+1)^0,w,c
  4012  000F50  0A80               	xorlw	128
  4013  000F52  6E05               	movwf	??i2_noRepeat^0,c
  4014  000F54  5010               	movf	(i2noRepeat@size+1)^0,w,c
  4015  000F56  0A80               	xorlw	128
  4016  000F58  5805               	subwfb	??i2_noRepeat^0,w,c
  4017  000F5A  A0D8               	btfss	status,0,c
  4018  000F5C  EFB2  F007         	goto	i2u101_41
  4019  000F60  EFB5  F007         	goto	i2u101_40
  4020  000F64                     i2u101_41:
  4021  000F64  FFFF               	dw	65535	; assembler added errata NOP
  4022  000F66  EF37  F007         	goto	i2l1775
  4023  000F6A                     i2u101_40:
  4024  000F6A  FFFF               	dw	65535	; assembler added errata NOP
  4025  000F6C                     
  4026                           ;main.c: 230:     }
  4027  000F6C  4A0D               	infsnz	i2noRepeat@temp^0,f,c
  4028  000F6E  2A0E               	incf	(i2noRepeat@temp+1)^0,f,c
  4029  000F70                     i2l1793:
  4030  000F70  FFFF               	dw	65535	; assembler added errata NOP
  4031  000F72  500F               	movf	i2noRepeat@size^0,w,c
  4032  000F74  5C0D               	subwf	i2noRepeat@temp^0,w,c
  4033  000F76  500E               	movf	(i2noRepeat@temp+1)^0,w,c
  4034  000F78  0A80               	xorlw	128
  4035  000F7A  6E05               	movwf	??i2_noRepeat^0,c
  4036  000F7C  5010               	movf	(i2noRepeat@size+1)^0,w,c
  4037  000F7E  0A80               	xorlw	128
  4038  000F80  5805               	subwfb	??i2_noRepeat^0,w,c
  4039  000F82  A0D8               	btfss	status,0,c
  4040  000F84  EFC6  F007         	goto	i2u102_41
  4041  000F88  EFC9  F007         	goto	i2u102_40
  4042  000F8C                     i2u102_41:
  4043  000F8C  FFFF               	dw	65535	; assembler added errata NOP
  4044  000F8E  EF2E  F007         	goto	i2l1773
  4045  000F92                     i2u102_40:
  4046  000F92  FFFF               	dw	65535	; assembler added errata NOP
  4047  000F94                     
  4048                           ;main.c: 231:     return size;
  4049  000F94  C00F  F001         	movff	i2noRepeat@size,?i2_noRepeat
  4050  000F98  C010  F002         	movff	i2noRepeat@size+1,?i2_noRepeat+1
  4051  000F9C  0012               	return		;funcret
  4052  000F9E  FFFF               	dw	65535	; errata NOP
  4053  000FA0                     __end_ofi2_noRepeat:
  4054                           	callstack 0
  4055  000FA0  FFFF               	dw	65535	; assembler added errata NOP
  4056                           
  4057                           	psect	rparam
  4058  0000                     
  4059                           	psect	temp
  4060  000061                     btemp:
  4061                           	callstack 0
  4062  000061                     	ds	1
  4063  0000                     int$flags	set	btemp
  4064  0000                     wtemp8	set	btemp+1
  4065  0000                     ttemp5	set	btemp+1
  4066  0000                     ttemp6	set	btemp+4
  4067  0000                     ttemp7	set	btemp+8
  4068                           
  4069                           	psect	idloc
  4070                           
  4071                           ;Config register IDLOC0 @ 0x200000
  4072                           ;	unspecified, using default values
  4073  200000                     	org	2097152
  4074  200000  FF                 	db	255
  4075                           
  4076                           ;Config register IDLOC1 @ 0x200001
  4077                           ;	unspecified, using default values
  4078  200001                     	org	2097153
  4079  200001  FF                 	db	255
  4080                           
  4081                           ;Config register IDLOC2 @ 0x200002
  4082                           ;	unspecified, using default values
  4083  200002                     	org	2097154
  4084  200002  FF                 	db	255
  4085                           
  4086                           ;Config register IDLOC3 @ 0x200003
  4087                           ;	unspecified, using default values
  4088  200003                     	org	2097155
  4089  200003  FF                 	db	255
  4090                           
  4091                           ;Config register IDLOC4 @ 0x200004
  4092                           ;	unspecified, using default values
  4093  200004                     	org	2097156
  4094  200004  FF                 	db	255
  4095                           
  4096                           ;Config register IDLOC5 @ 0x200005
  4097                           ;	unspecified, using default values
  4098  200005                     	org	2097157
  4099  200005  FF                 	db	255
  4100                           
  4101                           ;Config register IDLOC6 @ 0x200006
  4102                           ;	unspecified, using default values
  4103  200006                     	org	2097158
  4104  200006  FF                 	db	255
  4105                           
  4106                           ;Config register IDLOC7 @ 0x200007
  4107                           ;	unspecified, using default values
  4108  200007                     	org	2097159
  4109  200007  FF                 	db	255
  4110                           
  4111                           	psect	config
  4112                           
  4113                           ; Padding undefined space
  4114  300000                     	org	3145728
  4115  300000  FF                 	db	255
  4116                           
  4117                           ;Config register CONFIG1H @ 0x300001
  4118                           ;	Oscillator Selection bits
  4119                           ;	OSC = HS, HS oscillator
  4120                           ;	Oscillator System Clock Switch Enable bit
  4121                           ;	OSCS = OFF, Oscillator system clock switch option is disabled (main oscillator is sour
      +                          ce)
  4122  300001                     	org	3145729
  4123  300001  22                 	db	34
  4124                           
  4125                           ;Config register CONFIG2L @ 0x300002
  4126                           ;	Power-up Timer Enable bit
  4127                           ;	PWRT = OFF, PWRT disabled
  4128                           ;	Brown-out Reset Enable bit
  4129                           ;	BOR = OFF, Brown-out Reset disabled
  4130                           ;	Brown-out Reset Voltage bits
  4131                           ;	BORV = 20, VBOR set to 2.0V
  4132  300002                     	org	3145730
  4133  300002  0D                 	db	13
  4134                           
  4135                           ;Config register CONFIG2H @ 0x300003
  4136                           ;	Watchdog Timer Enable bit
  4137                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
  4138                           ;	Watchdog Timer Postscale Select bits
  4139                           ;	WDTPS = 128, 1:128
  4140  300003                     	org	3145731
  4141  300003  0E                 	db	14
  4142                           
  4143                           ; Padding undefined space
  4144  300004                     	org	3145732
  4145  300004  FF                 	db	255
  4146                           
  4147                           ;Config register CONFIG3H @ 0x300005
  4148                           ;	CCP2 Mux bit
  4149                           ;	CCP2MUX = OFF, CCP2 input/output is multiplexed with RB3
  4150  300005                     	org	3145733
  4151  300005  00                 	db	0
  4152                           
  4153                           ;Config register CONFIG4L @ 0x300006
  4154                           ;	Stack Full/Underflow Reset Enable bit
  4155                           ;	STVR = OFF, Stack Full/Underflow will not cause RESET
  4156                           ;	Low Voltage ICSP Enable bit
  4157                           ;	LVP = OFF, Low Voltage ICSP disabled
  4158                           ;	Background Debugger Enable bit
  4159                           ;	DEBUG = 0x1, unprogrammed default
  4160  300006                     	org	3145734
  4161  300006  80                 	db	128
  4162                           
  4163                           ; Padding undefined space
  4164  300007                     	org	3145735
  4165  300007  FF                 	db	255
  4166                           
  4167                           ;Config register CONFIG5L @ 0x300008
  4168                           ;	Code Protection bit
  4169                           ;	CP0 = ON, Block 0 (000200-001FFFh) code protected
  4170                           ;	Code Protection bit
  4171                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code protected
  4172                           ;	Code Protection bit
  4173                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code protected
  4174                           ;	Code Protection bit
  4175                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code protected
  4176  300008                     	org	3145736
  4177  300008  0E                 	db	14
  4178                           
  4179                           ;Config register CONFIG5H @ 0x300009
  4180                           ;	Boot Block Code Protection bit
  4181                           ;	CPB = OFF, Boot Block (000000-0001FFh) not code protected
  4182                           ;	Data EEPROM Code Protection bit
  4183                           ;	CPD = OFF, Data EEPROM not code protected
  4184  300009                     	org	3145737
  4185  300009  C0                 	db	192
  4186                           
  4187                           ;Config register CONFIG6L @ 0x30000A
  4188                           ;	Write Protection bit
  4189                           ;	WRT0 = OFF, Block 0 (000200-001FFFh) not write protected
  4190                           ;	Write Protection bit
  4191                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write protected
  4192                           ;	Write Protection bit
  4193                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write protected
  4194                           ;	Write Protection bit
  4195                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write protected
  4196  30000A                     	org	3145738
  4197  30000A  0F                 	db	15
  4198                           
  4199                           ;Config register CONFIG6H @ 0x30000B
  4200                           ;	Configuration Register Write Protection bit
  4201                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write protected
  4202                           ;	Boot Block Write Protection bit
  4203                           ;	WRTB = OFF, Boot Block (000000-0001FFh) not write protected
  4204                           ;	Data EEPROM Write Protection bit
  4205                           ;	WRTD = OFF, Data EEPROM not write protected
  4206  30000B                     	org	3145739
  4207  30000B  E0                 	db	224
  4208                           
  4209                           ;Config register CONFIG7L @ 0x30000C
  4210                           ;	Table Read Protection bit
  4211                           ;	EBTR0 = OFF, Block 0 (000200-001FFFh) not protected from Table Reads executed in other
      +                           blocks
  4212                           ;	Table Read Protection bit
  4213                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from Table Reads executed in other
      +                           blocks
  4214                           ;	Table Read Protection bit
  4215                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from Table Reads executed in other
      +                           blocks
  4216                           ;	Table Read Protection bit
  4217                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from Table Reads executed in other
      +                           blocks
  4218  30000C                     	org	3145740
  4219  30000C  0F                 	db	15
  4220                           
  4221                           ;Config register CONFIG7H @ 0x30000D
  4222                           ;	Boot Block Table Read Protection bit
  4223                           ;	EBTRB = OFF, Boot Block (000000-0001FFh) not protected from Table Reads executed in ot
      +                          her blocks
  4224  30000D                     	org	3145741
  4225  30000D  40                 	db	64
  4226                           tosu	equ	0xFFF
  4227                           tosh	equ	0xFFE
  4228                           tosl	equ	0xFFD
  4229                           stkptr	equ	0xFFC
  4230                           pclatu	equ	0xFFB
  4231                           pclath	equ	0xFFA
  4232                           pcl	equ	0xFF9
  4233                           tblptru	equ	0xFF8
  4234                           tblptrh	equ	0xFF7
  4235                           tblptrl	equ	0xFF6
  4236                           tablat	equ	0xFF5
  4237                           prodh	equ	0xFF4
  4238                           prodl	equ	0xFF3
  4239                           indf0	equ	0xFEF
  4240                           postinc0	equ	0xFEE
  4241                           postdec0	equ	0xFED
  4242                           preinc0	equ	0xFEC
  4243                           plusw0	equ	0xFEB
  4244                           fsr0h	equ	0xFEA
  4245                           fsr0l	equ	0xFE9
  4246                           wreg	equ	0xFE8
  4247                           indf1	equ	0xFE7
  4248                           postinc1	equ	0xFE6
  4249                           postdec1	equ	0xFE5
  4250                           preinc1	equ	0xFE4
  4251                           plusw1	equ	0xFE3
  4252                           fsr1h	equ	0xFE2
  4253                           fsr1l	equ	0xFE1
  4254                           bsr	equ	0xFE0
  4255                           indf2	equ	0xFDF
  4256                           postinc2	equ	0xFDE
  4257                           postdec2	equ	0xFDD
  4258                           preinc2	equ	0xFDC
  4259                           plusw2	equ	0xFDB
  4260                           fsr2h	equ	0xFDA
  4261                           fsr2l	equ	0xFD9
  4262                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         644
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     50      96
    BANK0           128     18      18
    BANK1           256    214     214
    BANK2           256    214     214
    BANK3           256      0     200
    BANK4           256      0     200
    BANK5           256      0     200

Pointer List with Targets:

    sort@p	PTR int  size(2) Largest target is 200
		 -> queueDown(BANK4[200]), queueUp(BANK3[200]), 

    noRepeat@po	PTR int  size(2) Largest target is 200
		 -> NULL(NULL[0]), queueDown(BANK4[200]), queueUp(BANK3[200]), 

    UpTasks	PTR int  size(2) Largest target is 200
		 -> NULL(NULL[0]), queueUp(BANK3[200]), 


Critical Paths under _main in COMRAM

    _modeUp->_dataPanelUp
    _modeUpControl->_dataPanelUp
    _dataPanelUp->_noRepeat

Critical Paths under _ISR in COMRAM

    _ISR->i2_noRepeat

Critical Paths under _main in BANK0

    _main->_modeUp
    _modeUp->_rutine_up
    _rutine_up->_modeUpControl

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    _ISR->i2_sort

Critical Paths under _main in BANK2

    _rutine_up->_sort
    _dataPanelUp->_sort

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   10088
                               _boot
                       _bootAscensor
                     _interruptsInit
                             _modeUp
 ---------------------------------------------------------------------------------
 (1) _modeUp                                               4     4      0   10088
                                             16 BANK0      2     2      0
                        _dataPanelUp
                          _rutine_up
 ---------------------------------------------------------------------------------
 (2) _rutine_up                                            6     6      0    6910
                                             10 BANK0      6     6      0
                           _modeDown
                      _modeUpControl
                           _noRepeat
                               _sort
 ---------------------------------------------------------------------------------
 (3) _modeUpControl                                       10    10      0    3571
                                              0 BANK0     10    10      0
                        _dataPanelUp
 ---------------------------------------------------------------------------------
 (4) _dataPanelUp                                          2     2      0    3175
                                             48 COMRAM     2     2      0
                           _noRepeat
                               _sort
 ---------------------------------------------------------------------------------
 (3) _sort                                               223   219      4    1829
                                             30 COMRAM     9     5      4
                                              0 BANK2    214   214      0
 ---------------------------------------------------------------------------------
 (3) _noRepeat                                            18    14      4    1312
                                             30 COMRAM    18    14      4
 ---------------------------------------------------------------------------------
 (3) _modeDown                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _interruptsInit                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _bootAscensor                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _boot                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (6) _ISR                                                 12    12      0    1598
                                             18 COMRAM    12    12      0
                         i2_noRepeat
                             i2_sort
 ---------------------------------------------------------------------------------
 (7) i2_sort                                             223   219      4     944
                                              0 COMRAM     9     5      4
                                              0 BANK1    214   214      0
 ---------------------------------------------------------------------------------
 (7) i2_noRepeat                                          18    14      4     585
                                              0 COMRAM    18    14      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _boot
   _bootAscensor
   _interruptsInit
   _modeUp
     _dataPanelUp
       _noRepeat
       _sort
     _rutine_up
       _modeDown
       _modeUpControl
         _dataPanelUp
       _noRepeat
       _sort

 _ISR (ROOT)
   i2_noRepeat
   i2_sort

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0      C8      14       78.1%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0      C8      13       78.1%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C8      11       78.1%
BITBANK2           100      0       0       8        0.0%
BANK2              100     D6      D6       9       83.6%
BITBANK1           100      0       0       6        0.0%
BANK1              100     D6      D6       7       83.6%
BITBANK0            80      0       0       4        0.0%
BANK0               80     12      12       5       14.1%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     32      60       1       76.2%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     476      15        0.0%
DATA                 0      0     476       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Nov 12 02:34:49 2021

                                                                     l90 1378  
                                                                     l83 1330  
                                                                     l92 135E  
                                                                     l94 1372  
                                                                     l86 13EA  
                                                                     l89 135A  
                                                                    l101 11F8  
                                                                    l106 124A  
                                                                    l107 1252  
                                                                    l124 0856  
                                                                    l116 071C  
                                                                    l204 10A8  
                                                                    l141 0CB0  
                                                                    l205 10BE  
                                                                    l213 128A  
                                                                    l127 0A8E  
                                                                    l207 10F6  
                                                                    l215 12AA  
                                                 __end_of_interruptsInit 13EE  
                                                                    l153 03CC  
                                                         ??_bootAscensor 001F  
                                                                    l163 0530  
                                                                    l147 031A  
                                                                    l158 047E  
                                                                    l182 0E40  
                                                                    l168 0622  
                                                                    l185 13DE  
                                                                    l195 101A  
                                                                    l196 1030  
                                                                    u330 134A  
                                                                    u331 1344  
                                                                    u340 1370  
                                                                    u341 136A  
                                                                    _ISR 0008  
                                                                    wreg 000FE8  
                                                                   ?_ISR 0001  
                                                                   l2001 1106  
                                                                   l2011 11C0  
                                                                   l2003 1112  
                                                                   l2021 1222  
                                                                   l2013 11C4  
                                                                   l2005 1124  
                                                                   l2101 0BCE  
                                                                   l2015 11C8  
                                                                   l2007 1166  
                                                                   l2023 1226  
                                                                   l2031 0656  
                                                                   l2111 0C3C  
                                                                   l2103 0BEA  
                                                                   l2017 11EC  
                                                                   l2009 117A  
                                                                   l2041 06D0  
                                                                   l2033 0662  
                                                                   l2025 062A  
                                                                   l2121 0CA8  
                                                                   l2113 0C44  
                                                                   l2105 0BEE  
                                                                   l2201 05B8  
                                                                   l2019 11FE  
                                                                   l2051 076E  
                                                                   l2043 06EA  
                                                                   l2035 0692  
                                                                   l2027 063C  
                                                                   l2115 0C60  
                                                                   l2107 0C02  
                                                                   l2203 05BC  
                                                                   l2131 036A  
                                                                   l2123 0316  
                                                                   l1181 13E4  
                                                                   l2061 07BA  
                                                                   l2053 0772  
                                                                   l2045 06F2  
                                                                   l2029 0644  
                                                                   l2109 0C22  
                                                                   l2117 0C64  
                                                                   l2205 05BE  
                                                                   l2141 03A2  
                                                                   l2133 036E  
                                                                   l2125 032E  
                                                                   l2221 0CBA  
                                                                   l2301 1260  
                                                                   l1183 1336  
                                                                   l2063 07F4  
                                                                   l2055 0796  
                                                                   l2039 069A  
                                                                   l2047 06F8  
                                                                   l2119 0C78  
                                                                   l2071 0AA2  
                                                                   l2151 03E4  
                                                                   l2143 03A6  
                                                                   l2135 0392  
                                                                   l2127 0330  
                                                                   l2231 0D54  
                                                                   l2223 0CD0  
                                                                   l2303 1264  
                                                                   l1185 134C  
                                                                   l2217 13BE  
                                                                   l2065 0800  
                                                                   l2057 07B0  
                                                                   l2049 0728  
                                                                   l2073 0AC0  
                                                                   l2081 0B02  
                                                                   l2401 05FA  
                                                                   l2161 0454  
                                                                   l2153 03F8  
                                                                   l2145 03A8  
                                                                   l2137 0398  
                                                                   l2129 033C  
                                                                   l2209 05E0  
                                                                   l2241 0DCA  
                                                                   l2233 0D58  
                                                                   l2225 0CEE  
                                                                   l2313 12BE  
                                                                   l2305 1278  
                                                                   l2067 082E  
                                                                   l2059 07B6  
                                                                   l2091 0B74  
                                                                   l2083 0B16  
                                                                   l2075 0ADA  
                                                                   l2171 0496  
                                                                   l2163 0458  
                                                                   l2155 0426  
                                                                   l2147 03C6  
                                                                   l2139 039A  
                                                                   l2243 0DF8  
                                                                   l2235 0D7C  
                                                                   l2251 0E2E  
                                                                   l2227 0D0A  
                                                                   l2219 0CB6  
                                                                   l2307 1280  
                                                                   l2069 0832  
                                                                   l2085 0B36  
                                                                   l2093 0B78  
                                                                   l2077 0AE2  
                                                                   l2181 0506  
                                                                   l2173 04AA  
                                                                   l2165 045A  
                                                                   l2157 042A  
                                                                   l2149 03E0  
                                                                   l2245 0DFC  
                                                                   l2237 0DB4  
                                                                   l2229 0D1A  
                                                                   l2261 0FEE  
                                                                   l2253 0FA4  
                                                                   l2309 129E  
                                                                   l2317 12CA  
                                                                   l2095 0B8C  
                                                                   l2087 0B50  
                                                                   l2079 0AFE  
                                                                   l2191 0548  
                                                                   l2183 050A  
                                                                   l2175 04D8  
                                                                   l2167 0478  
                                                                   l2159 044E  
                                                                   l2247 0E20  
                                                                   l2239 0DBC  
                                                                   l2271 1038  
                                                                   l2263 0FF0  
                                                                   l2255 0FD0  
                                                                   l1721 12DC  
                                                                   l2097 0BAC  
                                                                   l2089 0B58  
                                                                   l2193 055C  
                                                                   l2185 050C  
                                                                   l2177 04DC  
                                                                   l2169 0492  
                                                                   l2249 0E26  
                                                                   l2281 105C  
                                                                   l2273 103A  
                                                                   l2265 100E  
                                                                   l2257 0FE8  
                                                                   l1723 12E2  
                                                                   l2099 0BC6  
                                                                   l2195 058A  
                                                                   l2187 052A  
                                                                   l2179 0500  
                                                                   l2283 107A  
                                                                   l2275 1054  
                                                                   l2267 1010  
                                                                   l2259 0FEA  
                                                                   l1725 1328  
                                                                   l2197 058E  
                                                                   l2189 0544  
                                                                   l2285 107C  
                                                                   l2277 1056  
                                                                   l2269 1034  
                                                                   l1719 12D8  
                                                                   l2199 05B2  
                                                                   l2279 105A  
                                                                   l2287 1086  
                                                                   l2289 10C4  
                                                                   l2297 1256  
                                                                   l2299 125C  
                                                                   l2399 10DE  
                                                                   l1999 10FE  
                                                                   u1210 1164  
                                                                   u1211 115E  
                                                                   u1220 11EA  
                                                                   u1300 0854  
                                                                   u1221 11E4  
                                                                   u1301 084E  
                                                                   u1230 1220  
                                                                   u1310 0AA0  
                                                                   u1231 121A  
                                                                   u1311 0A9A  
                                                                   u1240 1248  
                                                                   u1320 0ABE  
                                                                   u1400 032C  
                                                                   u1241 1242  
                                                                   u1321 0AB8  
                                                                   u1401 0326  
                                                                   u1250 0690  
                                                                   u1330 0B14  
                                                                   u1410 0390  
                                                                   u1251 068A  
                                                                   u1331 0B0E  
                                                                   u1411 038A  
                                                                   u1260 06CE  
                                                                   u1340 0B34  
                                                                   u1420 03DE  
                                                                   u1500 0D0A  
                                                                   u1261 06C8  
                                                                   u1341 0B2E  
                                                                   u1421 03D8  
                                                                   u1501 0D04  
                                                                   u1270 071A  
                                                                   u1350 0B8A  
                                                                   u1430 044C  
                                                                   u1510 0D7A  
                                                                   u1271 0714  
                                                                   u1351 0B84  
                                                                   u1431 0446  
                                                                   u1511 0D74  
                                                                   u1280 0794  
                                                                   u1360 0BAA  
                                                                   u1440 0490  
                                                                   u1520 0E1E  
                                                                   u1600 12BC  
                                                                   u1281 078E  
                                                                   u1361 0BA4  
                                                                   u1441 048A  
                                                                   u1521 0E18  
                                                                   u1601 12B6  
                                                                   u1290 07F2  
                                                                   u1370 0C00  
                                                                   u1450 04FE  
                                                                   u1530 0FE6  
                                                                   u1291 07EC  
                                                                   u1371 0BFA  
                                                                   u1451 04F8  
                                                                   u1531 0FE0  
                                                                   u1380 0C20  
                                                                   u1460 0542  
                                                                   u1540 102E  
                                                                   u1381 0C1A  
                                                                   u1461 053C  
                                                                   u1541 1028  
                                                                   u1390 0C76  
                                                                   u1470 05B0  
                                                                   u1550 1052  
                                                                   u1391 0C70  
                                                                   u1471 05AA  
                                                                   u1551 104C  
                                                                   u1480 0CCE  
                                                                   u1560 10A6  
                                                                   u1481 0CC8  
                                                                   u1561 10A0  
                                                                   u1617 0FFC  
                                                                   u1490 0CEC  
                                                                   u1570 10BC  
                                                                   u1491 0CE6  
                                                                   u1571 10B6  
                                                                   u1627 1068  
                                                                   u1580 1276  
                                                                   u1637 03B4  
                                                                   u1581 1270  
                                                                   u1590 129C  
                                                                   u1647 0466  
                                                                   u1591 1296  
                                                                   u1657 0518  
                                                                   u1667 05CA  
                                                             i2_noRepeat 0E46  
                                                                   _boot 12D6  
                                                                   _main 1256  
                                                                   fsr1h 000FE2  
                                                                   fsr2h 000FDA  
                                                                   fsr1l 000FE1  
                                                                   fsr2l 000FD9  
                                                                   _sort 0628  
                                                                   btemp 0061  
                                                                   start 0310  
                                                           ___param_bank 000000  
                                                                  ??_ISR 0013  
                                                      modeUpControl@cont 0033  
                                                                  ISR@si 0019  
                                                                  ?_boot 0001  
                                                                  ?_main 0001  
                                                                  ?_sort 001F  
                                                        ?_interruptsInit 0001  
                                                                  i2l101 0F42  
                                                                  i2l106 0F94  
                                                                  i2l107 0F9C  
                                                                  i2l124 0A88  
                                                                  i2l116 094E  
                                                                  i2l245 02F8  
                                                                  _PORTB 000F81  
                                                   __size_of_dataPanelUp 0228  
                                                                  _TRISA 000F92  
                                                                  _TRISB 000F93  
                                                                  _TRISC 000F94  
                                                                  _TRISD 000F95  
                                                                  _calls 0059  
                                                                  _up1_f 003F  
                                                                  _up2_f 003D  
                                                                  _up3_f 0039  
                                                                  _nowFL 0051  
                                                        i2noRepeat@shift 000B  
                                                        i2noRepeat@sixes 0003  
                                                                  sort@h 02D4  
                                                                  sort@j 02D0  
                                                                  sort@k 02CE  
                                                                  sort@p 001F  
                                                                  ttemp5 0062  
                                                                  ttemp6 0065  
                                                                  ttemp7 0069  
                                                                  status 000FD8  
                                                                  wtemp8 0062  
                                                        __initialization 137E  
                                                           __end_of_boot 1334  
                                                           __end_of_main 12D6  
                                                           __end_of_sort 085A  
                                                     modeUpControl@i_510 0084  
                                                     modeUpControl@i_511 0086  
                                                     modeUpControl@i_512 0088  
                                                             i2sort@temp 01D2  
                                                             i2sort@nums 01CA  
                                                                 ??_boot 001F  
                                                                 ??_main 0033  
                                                                 ??_sort 0023  
                                                          __activetblptr 000002  
                                                                 _ADCON1 000FC1  
                                                                 i2l2403 02B0  
                                                                 i2l1801 0888  
                                                                 i2l1811 0902  
                                                                 i2l1803 0894  
                                                                 i2l1821 09A0  
                                                                 i2l1813 091C  
                                                                 i2l1805 08C4  
                                                                 i2l1901 0184  
                                                                 i2l1831 09EC  
                                                                 i2l1823 09A4  
                                                                 i2l1815 0924  
                                                                 i2l1911 01EE  
                                                                 i2l1903 019C  
                                                                 i2l1833 0A26  
                                                                 i2l1825 09C8  
                                                                 i2l1809 08CC  
                                                                 i2l1817 092A  
                                                                 i2l1921 024C  
                                                                 i2l1913 020A  
                                                                 i2l1905 01BC  
                                                                 i2l1771 0E50  
                                                                 i2l1835 0A32  
                                                                 i2l1827 09E2  
                                                                 i2l1819 095A  
                                                                 i2l1923 0258  
                                                                 i2l1915 0216  
                                                                 i2l1907 01D6  
                                                                 i2l1781 0F0A  
                                                                 i2l1773 0E5C  
                                                                 i2l1837 0A60  
                                                                 i2l1829 09E8  
                                                                 i2l1925 0270  
                                                                 i2l1917 022E  
                                                                 i2l1909 01DA  
                                                                 i2l1933 029A  
                                                                 i2l1791 0F6C  
                                                                 i2l1783 0F0E  
                                                                 i2l1775 0E6E  
                                                                 i2l1839 0A64  
                                                                 i2l1927 028A  
                                                                 i2l1919 0248  
                                                                 i2l1871 0070  
                                                                 i2l1863 001C  
                                                                 i2l1785 0F12  
                                                                 i2l1777 0EB0  
                                                                 i2l1793 0F70  
                                                                 i2l1769 0E48  
                                                                 i2l1929 028E  
                                                                 i2l1881 00C8  
                                                                 i2l1873 0074  
                                                                 i2l1865 0020  
                                                                 i2l1787 0F36  
                                                                 i2l1779 0EC4  
                                                                 i2l1795 085C  
                                                                 i2l1891 0136  
                                                                 i2l1883 00E8  
                                                                 i2l1875 0088  
                                                                 i2l1867 0038  
                                                                 i2l1789 0F48  
                                                                 i2l1797 086E  
                                                                 i2l1893 0142  
                                                                 i2l1885 0102  
                                                                 i2l1877 00A4  
                                                                 i2l1869 0056  
                                                                 i2l1799 0876  
                                                                 i2l1895 015A  
                                                                 i2l1887 0106  
                                                                 i2l1879 00B0  
                                                                 i2l1897 0174  
                                                                 i2l1889 011A  
                                                                 i2l1899 0178  
                                                            ?i2_noRepeat 0001  
                                                   __end_of_bootAscensor 137E  
                                                                 i2_sort 085A  
                                                            i2noRepeat@t 0009  
                                                           sort@sizesMod 02CC  
                                                                 _callsD 0057  
                                                                 _btn1_f 004B  
                                                                 _btn2_f 0049  
                                                                 _btn3_f 0047  
                                                                 _btn4_f 0045  
                                                       __end_of_noRepeat 1256  
                                                       __end_of_modeDown 13E2  
                                                                 _modeUp 0FA2  
                                                                 clear_0 1384  
                                                                 clear_1 1390  
                                                                 clear_2 139C  
                                                                 clear_3 13A8  
                                                                 isa$std 000001  
                                                                 tblptru 000FF8  
                                                 __size_of_modeUpControl 0314  
                                                             __accesstop 0080  
                                                __end_of__initialization 13AE  
                                                          ___rparam_used 000001  
                                                         __pcstackCOMRAM 0001  
                                                    __size_ofi2_noRepeat 015A  
                                                            i2sort@sizes 0003  
                                                             __pbssBANK3 0300  
                                                             __pbssBANK4 0400  
                                                             __pbssBANK5 0500  
                                                              ISR@si_544 001B  
                                                              ISR@si_545 001D  
                                                             __pnvCOMRAM 005F  
                                                                ?i2_sort 0001  
                                                          _modeUpControl 0314  
                                                       ??_interruptsInit 001F  
                                                           noRepeat@comp 002F  
                                                           noRepeat@temp 002B  
                                                                ?_modeUp 0001  
                                                           noRepeat@size 002D  
                                                                i2u99_40 0EAE  
                                                                i2u99_41 0EA8  
                                                  __size_of_bootAscensor 004A  
                                                              ?_noRepeat 001F  
                                                              ?_modeDown 0001  
                                                     __size_of_rutine_up 0192  
                                                           i2noRepeat@po 0001  
                                                                i2sort@h 01D4  
                                                                i2sort@j 01D0  
                                                                i2sort@k 01CE  
                                                                i2sort@p 0001  
                                                        __size_ofi2_sort 0232  
                                                                __Hparam 0000  
                                                                __Lparam 0000  
                                                         ?_modeUpControl 0001  
                                                                _UpTasks 005F  
                                                         i2sort@sizesMod 01CC  
                                                             _modeDown_F 004D  
                                                                _btnCD_f 0043  
                                                                __pcinit 137E  
                                                          ??_dataPanelUp 0031  
                                                        __size_of_modeUp 015A  
                                                                _btnOD_f 0041  
                                                                __ramtop 0600  
                                                                __ptext0 1256  
                                                                __ptext1 0FA2  
                                                                __ptext2 0CB4  
                                                                __ptext3 0314  
                                                                __ptext4 0A8C  
                                                                __ptext5 0628  
                                                                __ptext6 10FC  
                                                                __ptext7 13BC  
                                                                __ptext8 13E2  
                                                                __ptext9 1334  
                                                                _down2_f 003B  
                                                                _down3_f 0037  
                                                                _down4_f 0035  
                                                           __size_of_ISR 0308  
                                                           _bootAscensor 1334  
                                                                _tasksUp 005B  
                                                                _queueUp 0300  
                                                   end_of_initialization 13AE  
                                                           ??i2_noRepeat 0005  
                                                             ??_noRepeat 0023  
                                                          __Lmediumconst 0000  
                                                             ??_modeDown 001F  
                                                                postdec1 000FE5  
                                                                postdec2 000FDD  
                                                                postinc0 000FEE  
                                                                postinc1 000FE6  
                                                                postinc2 000FDE  
                                                                sort@pos 02C8  
                                                              _PORTAbits 000F80  
                                                              _PORTBbits 000F81  
                                                              _PORTDbits 000F83  
                                                      __end_of_rutine_up 0E46  
                                                     __end_ofi2_noRepeat 0FA0  
                                                    __end_of_dataPanelUp 0CB4  
                                                        ??_modeUpControl 0080  
                                                         __end_ofi2_sort 0A8C  
                                                         __end_of_modeUp 10FC  
                                                         i2noRepeat@comp 0011  
                                                         i2noRepeat@temp 000D  
                                                         i2noRepeat@size 000F  
                                                    start_initialization 137E  
                                                            __end_of_ISR 0310  
                                                            _callFL_down 0053  
                                                              i2sort@pos 01C8  
                                                    dataPanelUp@new_size 0031  
                                                             noRepeat@po 001F  
                                                               ??i2_sort 0005  
                                                           i2sort@result 0100  
                                                               ??_modeUp 0090  
                                                            _dataPanelUp 0A8C  
                                                            __pbssCOMRAM 0033  
                                                          __pcstackBANK0 0080  
                                                          __pcstackBANK1 0100  
                                                          __pcstackBANK2 0200  
                                                              _callFL_up 0055  
                                                              _callsInUp 0500  
                                                      __size_of_noRepeat 015A  
                                                      __size_of_modeDown 0026  
                                                              __pintcode 0008  
                                                          noRepeat@shift 0029  
                                                          noRepeat@sixes 0021  
                                                            rutine_up@re 008E  
                                                               _LATCbits 000F8B  
                                                               _LATDbits 000F8C  
                                                               i2u100_40 0F34  
                                                               i2u100_41 0F2E  
                                                               i2u101_40 0F6A  
                                                               i2u101_41 0F64  
                                                               i2u102_40 0F92  
                                                               i2u102_41 0F8C  
                                                               i2u103_40 08C2  
                                                               i2u103_41 08BC  
                                                               i2u104_40 0900  
                                                               i2u120_40 026E  
                                                               i2u112_40 0036  
                                                               i2u104_41 08FA  
                                                               i2u120_41 0268  
                                                               i2u112_41 0030  
                                                               i2u105_40 094C  
                                                               i2u113_40 0054  
                                                               i2u105_41 0946  
                                                               i2u113_41 004E  
                                                               i2u106_40 09C6  
                                                               i2u114_40 00C6  
                                                               i2u106_41 09C0  
                                                               i2u114_41 00C0  
                                                               i2u107_40 0A24  
                                                               i2u115_40 00E6  
                                                               i2u107_41 0A1E  
                                                               i2u115_41 00E0  
                                                               i2u108_40 0A86  
                                                               i2u116_40 0158  
                                                               i2u108_41 0A80  
                                                               i2u116_41 0152  
                                                               i2u117_40 019A  
                                                               i2u117_41 0194  
                                                               i2u118_40 01BA  
                                                               i2u118_41 01B4  
                                                               i2u119_40 022C  
                                                               i2u119_41 0226  
                                                              _tasksDown 005D  
                                                               _RCONbits 000FD0  
                                                              _queueDown 0400  
                                                __size_of_interruptsInit 000C  
                                                              _rutine_up 0CB4  
                                                              noRepeat@t 0027  
                                                               __Hrparam 0000  
                                                             sort@result 0200  
                                                               __Lrparam 0000  
                                                             ?_rutine_up 0001  
                                                               __ptext10 12D6  
                                                               __ptext12 085A  
                                                               __ptext13 0E46  
                                                               _noRepeat 10FC  
                                                          __size_of_boot 005E  
                                                               _modeDown 13BC  
                                                          __size_of_main 0080  
                                                               _modeUp_F 004F  
                                                          __size_of_sort 0232  
                                                             rutine_up@i 008C  
                                                  __end_of_modeUpControl 0628  
                                                               isa$xinst 000000  
                                                               int$flags 0061  
                                                           ?_dataPanelUp 0001  
                                                         modeUpControl@i 0082  
                                                             _INTCONbits 000FF2  
                                                              sort@sizes 0021  
                                                               intlevel2 13EE  
                                                               sort@temp 02D2  
                                                               sort@nums 02CA  
                                                          ?_bootAscensor 0001  
                                                         _interruptsInit 13E2  
                                                            ??_rutine_up 008A  
